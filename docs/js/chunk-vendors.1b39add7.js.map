{"version":3,"sources":["webpack:///./node_modules/core-js/modules/_iter-define.js","webpack:///./node_modules/core-js/modules/es7.promise.finally.js","webpack:///./node_modules/core-js/modules/_object-keys.js","webpack:///./node_modules/marked/lib/marked.js","webpack:///./node_modules/core-js/modules/_object-dps.js","webpack:///./node_modules/core-js/modules/_task.js","webpack:///./node_modules/core-js/modules/_iter-call.js","webpack:///./node_modules/core-js/modules/_dom-create.js","webpack:///./node_modules/core-js/modules/_classof.js","webpack:///./node_modules/core-js/modules/core.get-iterator-method.js","webpack:///./node_modules/vue-loader/lib/runtime/componentNormalizer.js","webpack:///./node_modules/core-js/modules/_redefine.js","webpack:///./node_modules/core-js/modules/_object-create.js","webpack:///./node_modules/vue/dist/vue.runtime.esm.js","webpack:///./node_modules/core-js/modules/_wks.js","webpack:///./node_modules/core-js/modules/_library.js","webpack:///./node_modules/core-js/modules/_cof.js","webpack:///./node_modules/core-js/modules/_invoke.js","webpack:///./node_modules/core-js/modules/_hide.js","webpack:///./node_modules/core-js/modules/_is-array-iter.js","webpack:///./node_modules/core-js/modules/_object-gpo.js","webpack:///./node_modules/core-js/modules/_iter-create.js","webpack:///./node_modules/core-js/modules/_to-integer.js","webpack:///./node_modules/core-js/modules/_property-desc.js","webpack:///./node_modules/core-js/modules/_for-of.js","webpack:///./node_modules/core-js/modules/_to-object.js","webpack:///./node_modules/core-js/modules/es6.promise.js","webpack:///./node_modules/core-js/modules/_shared.js","webpack:///./node_modules/core-js/modules/_export.js","webpack:///./node_modules/core-js/modules/_iter-detect.js","webpack:///./node_modules/core-js/modules/_shared-key.js","webpack:///./node_modules/core-js/modules/_iobject.js","webpack:///./node_modules/core-js/modules/_to-iobject.js","webpack:///./node_modules/core-js/modules/_has.js","webpack:///./node_modules/core-js/modules/_to-primitive.js","webpack:///./node_modules/core-js/modules/_global.js","webpack:///./node_modules/core-js/modules/_to-absolute-index.js","webpack:///./node_modules/core-js/modules/_fails.js","webpack:///./node_modules/core-js/modules/_set-species.js","webpack:///./node_modules/core-js/modules/_set-to-string-tag.js","webpack:///./node_modules/core-js/modules/_microtask.js","webpack:///./node_modules/core-js/modules/_core.js","webpack:///./node_modules/core-js/modules/_iterators.js","webpack:///./node_modules/core-js/modules/_object-dp.js","webpack:///./node_modules/core-js/modules/_ctx.js","webpack:///./node_modules/core-js/modules/_add-to-unscopables.js","webpack:///./node_modules/core-js/modules/_perform.js","webpack:///./node_modules/core-js/modules/_to-length.js","webpack:///./node_modules/core-js/modules/_descriptors.js","webpack:///./node_modules/core-js/modules/_user-agent.js","webpack:///./node_modules/core-js/modules/_new-promise-capability.js","webpack:///./node_modules/core-js/modules/_promise-resolve.js","webpack:///./node_modules/core-js/modules/_defined.js","webpack:///./node_modules/vue-3d-model/dist/vue-3d-model.esm.js","webpack:///./node_modules/core-js/modules/_array-includes.js","webpack:///./node_modules/core-js/modules/_ie8-dom-define.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/core-js/modules/_uid.js","webpack:///./node_modules/core-js/modules/es6.array.iterator.js","webpack:///./node_modules/core-js/modules/_an-object.js","webpack:///./node_modules/core-js/modules/_object-keys-internal.js","webpack:///./node_modules/core-js/modules/_is-object.js","webpack:///./node_modules/core-js/modules/_iter-step.js","webpack:///./node_modules/core-js/modules/_a-function.js","webpack:///./node_modules/core-js/modules/_redefine-all.js","webpack:///./node_modules/core-js/modules/_enum-bug-keys.js","webpack:///./node_modules/core-js/modules/_species-constructor.js","webpack:///./node_modules/core-js/modules/_an-instance.js","webpack:///./node_modules/vue-youtube-embed/lib/vue-youtube-embed.js","webpack:///./node_modules/core-js/modules/_html.js"],"names":["LIBRARY","__webpack_require__","$export","redefine","hide","Iterators","$iterCreate","setToStringTag","getPrototypeOf","ITERATOR","BUGGY","keys","FF_ITERATOR","KEYS","VALUES","returnThis","this","module","exports","Base","NAME","Constructor","next","DEFAULT","IS_SET","FORCED","methods","key","IteratorPrototype","getMethod","kind","proto","TAG","DEF_VALUES","VALUES_BUG","prototype","$native","$default","$entries","undefined","$anyNative","entries","call","Object","name","values","P","F","core","global","speciesConstructor","promiseResolve","R","finally","onFinally","C","Promise","isFunction","then","x","e","$keys","enumBugKeys","O","root","block","newline","code","fences","noop","hr","heading","nptable","blockquote","list","html","def","table","lheading","paragraph","text","Lexer","options","tokens","links","create","marked","defaults","rules","normal","pedantic","gfm","tables","_label","_title","edit","replace","getRegex","bullet","item","source","_tag","_comment","merge","lex","src","lexer","token","top","loose","cap","bull","b","listStart","listItems","t","space","i","tag","l","isordered","istask","ischecked","exec","substring","length","push","type","rtrim","lang","depth","header","splitCells","align","split","cells","test","ordered","start","match","indexOf","RegExp","smartLists","slice","join","charAt","task","checked","sanitize","pre","sanitizer","toLowerCase","href","title","Error","charCodeAt","inline","escape","autolink","url","link","reflink","nolink","strong","em","br","del","InlineLexer","renderer","Renderer","breaks","TextRenderer","Parser","encode","unescape","_","n","String","fromCharCode","parseInt","regex","opt","val","resolveUrl","base","baseUrls","_escapes","_scheme","_email","_attribute","_href","_backpedal","output","prevCapZero","out","mangle","inLink","trim","outputLink","escapes","codespan","smartypants","image","ch","Math","random","toString","escaped","highlight","langPrefix","quote","level","raw","headerIds","headerPrefix","xhtml","body","startatt","listitem","checkbox","tablerow","content","tablecell","flags","prot","decodeURIComponent","baseUrl","originIndependentUrl","encodeURI","parse","parser","inlineText","reverse","tok","pop","peek","parseText","row","cell","j","obj","target","arguments","hasOwnProperty","tableRow","count","offset","str","curr","splice","c","invert","suffLen","currChar","substr","callback","pending","done","err","message","silent","setOptions","getDefaults","inlineLexer","window","dP","anObject","getKeys","defineProperties","Properties","f","defer","channel","port","ctx","invoke","cel","process","setTask","setImmediate","clearTask","clearImmediate","MessageChannel","Dispatch","counter","queue","ONREADYSTATECHANGE","run","id","fn","listener","event","data","args","Function","nextTick","now","port2","port1","onmessage","postMessage","addEventListener","importScripts","appendChild","removeChild","setTimeout","set","clear","iterator","value","ret","isObject","document","is","createElement","it","cof","ARG","tryGet","T","B","callee","classof","getIteratorMethod","normalizeComponent","scriptExports","render","staticRenderFns","functionalTemplate","injectStyles","scopeId","moduleIdentifier","shadowMode","hook","_compiled","functional","_scopeId","context","$vnode","ssrContext","parent","__VUE_SSR_CONTEXT__","_registeredComponents","add","_ssrRegister","$root","$options","shadowRoot","_injectStyles","originalRender","h","existing","beforeCreate","concat","d","__webpack_exports__","has","SRC","TO_STRING","$toString","TPL","inspectSource","safe","dPs","IE_PROTO","Empty","PROTOTYPE","createDict","iframeDocument","iframe","lt","gt","style","display","contentWindow","open","write","close","result","emptyObject","freeze","isUndef","v","isDef","isTrue","isFalse","isPrimitive","_toString","isPlainObject","isRegExp","isValidArrayIndex","parseFloat","floor","isFinite","JSON","stringify","toNumber","isNaN","makeMap","expectsLowerCase","map","isReservedAttribute","remove","arr","index","hasOwn","cached","cache","hit","camelizeRE","camelize","toUpperCase","capitalize","hyphenateRE","hyphenate","polyfillBind","boundFn","a","apply","_length","nativeBind","bind","toArray","Array","extend","to","_from","toObject","res","no","identity","looseEqual","isObjectA","isObjectB","isArrayA","isArray","isArrayB","every","keysA","keysB","looseIndexOf","once","called","SSR_ATTR","ASSET_TYPES","LIFECYCLE_HOOKS","config","optionMergeStrategies","productionTip","devtools","performance","errorHandler","warnHandler","ignoredElements","keyCodes","isReservedTag","isReservedAttr","isUnknownElement","getTagNamespace","parsePlatformTagName","mustUseProp","_lifecycleHooks","isReserved","enumerable","defineProperty","writable","configurable","bailRE","parsePath","path","segments","_isServer","hasProto","inBrowser","inWeex","WXEnvironment","platform","weexPlatform","UA","navigator","userAgent","isIE","isIE9","isEdge","isIOS","nativeWatch","watch","supportsPassive","opts","get","isServerRendering","env","VUE_ENV","__VUE_DEVTOOLS_GLOBAL_HOOK__","isNative","Ctor","_Set","hasSymbol","Symbol","Reflect","ownKeys","Set","warn","uid","Dep","subs","addSub","sub","removeSub","depend","addDep","notify","update","targetStack","pushTarget","_target","popTarget","VNode","children","elm","componentOptions","asyncFactory","ns","fnContext","fnOptions","fnScopeId","componentInstance","isStatic","isRootInsert","isComment","isCloned","isOnce","asyncMeta","isAsyncPlaceholder","prototypeAccessors","child","createEmptyVNode","node","createTextVNode","cloneVNode","vnode","cloned","arrayProto","arrayMethods","methodsToPatch","forEach","method","original","len","inserted","ob","__ob__","observeArray","dep","arrayKeys","getOwnPropertyNames","shouldObserve","toggleObserving","Observer","vmCount","augment","protoAugment","copyAugment","walk","__proto__","observe","asRootData","isExtensible","_isVue","defineReactive","customSetter","shallow","property","getOwnPropertyDescriptor","getter","setter","childOb","dependArray","newVal","max","items","strats","mergeData","from","toVal","fromVal","mergeDataOrFn","parentVal","childVal","vm","instanceData","defaultData","mergeHook","mergeAssets","key$1","props","inject","computed","provide","defaultStrat","normalizeProps","normalizeInject","normalized","normalizeDirectives","dirs","directives","mergeOptions","extendsFrom","extends","mixins","mergeField","strat","resolveAsset","warnMissing","assets","camelizedId","PascalCaseId","validateProp","propOptions","propsData","prop","absent","booleanIndex","getTypeIndex","Boolean","stringIndex","getPropDefaultValue","prevShouldObserve","default","_props","getType","isSameType","expectedTypes","handleError","info","cur","$parent","hooks","errorCaptured","capture","globalHandleError","logError","console","error","microTimerFunc","macroTimerFunc","callbacks","flushCallbacks","copies","useMacroTask","p","resolve","withMacroTask","_withTask","cb","_resolve","seenObjects","traverse","_traverse","seen","isA","isFrozen","depId","normalizeEvent","passive","once$$1","createFnInvoker","fns","invoker","arguments$1","updateListeners","on","oldOn","remove$$1","old","params","mergeVNodeHook","hookKey","oldHook","wrappedHook","merged","extractPropsFromVNodeData","attrs","altKey","checkProp","hash","preserve","simpleNormalizeChildren","normalizeChildren","normalizeArrayChildren","isTextNode","nestedIndex","lastIndex","last","shift","_isVList","ensureCtor","comp","__esModule","toStringTag","createAsyncPlaceholder","factory","resolveAsyncComponent","baseCtor","errorComp","resolved","loading","loadingComp","contexts","sync","forceRender","$forceUpdate","reject","reason","component","delay","timeout","getFirstComponentChild","initEvents","_events","_hasHookEvent","listeners","_parentListeners","updateComponentListeners","$once","$on","remove$1","$off","oldListeners","eventsMixin","Vue","hookRE","this$1","cbs","i$1","$emit","resolveSlots","slots","slot","name$1","isWhitespace","resolveScopedSlots","activeInstance","initLifecycle","abstract","$children","$refs","_watcher","_inactive","_directInactive","_isMounted","_isDestroyed","_isBeingDestroyed","lifecycleMixin","_update","hydrating","callHook","prevEl","$el","prevVnode","_vnode","prevActiveInstance","__patch__","_parentElm","_refElm","__vue__","$destroy","teardown","_watchers","_data","mountComponent","el","updateComponent","_render","Watcher","updateChildComponent","parentVnode","renderChildren","hasChildren","_renderChildren","scopedSlots","$scopedSlots","_parentVnode","$attrs","$listeners","propKeys","_propKeys","$slots","isInInactiveTree","activateChildComponent","direct","deactivateChildComponent","handlers","activatedChildren","waiting","flushing","resetSchedulerState","flushSchedulerQueue","watcher","sort","activatedQueue","updatedQueue","callActivatedHooks","callUpdatedHooks","emit","queueActivatedComponent","queueWatcher","uid$1","expOrFn","isRenderWatcher","deep","user","lazy","active","dirty","deps","newDeps","depIds","newDepIds","expression","cleanupDeps","tmp","oldValue","evaluate","sharedPropertyDefinition","proxy","sourceKey","initState","initProps","initMethods","initData","initComputed","initWatch","propsOptions","isRoot","loop","getData","computedWatcherOptions","watchers","_computedWatchers","isSSR","userDef","defineComputed","shouldCache","createComputedGetter","handler","createWatcher","$watch","stateMixin","dataDef","propsDef","$set","$delete","immediate","initProvide","_provided","initInjections","resolveInject","filter","provideKey","provideDefault","renderList","renderSlot","fallback","bindObject","nodes","scopedSlotFn","slotNodes","_rendered","$createElement","resolveFilter","isKeyNotMatch","expect","actual","checkKeyCodes","eventKeyCode","builtInKeyCode","eventKeyName","builtInKeyName","mappedKeyCode","bindObjectProps","asProp","isSync","domProps","$event","renderStatic","isInFor","_staticTrees","tree","_renderProxy","markStatic","markOnce","markStaticNode","bindObjectListeners","ours","installRenderHelpers","_o","_n","_s","_l","_t","_q","_i","_m","_f","_k","_b","_v","_e","_u","_g","FunctionalRenderContext","contextVm","_original","isCompiled","needNormalization","injections","_c","createFunctionalComponent","mergeProps","renderContext","cloneAndMarkFunctionalResult","vnodes","clone","componentVNodeHooks","init","parentElm","refElm","keepAlive","mountedNode","prepatch","createComponentInstanceForVnode","$mount","oldVnode","insert","destroy","hooksToMerge","createComponent","_base","cid","resolveConstructorOptions","model","transformModel","nativeOn","installComponentHooks","_isComponent","inlineTemplate","SIMPLE_NORMALIZE","ALWAYS_NORMALIZE","normalizationType","alwaysNormalize","_createElement","applyNS","registerDeepBindings","force","class","initRender","parentData","renderMixin","$nextTick","ref","uid$3","initMixin","_init","_uid","initInternalComponent","constructor","_self","vnodeComponentOptions","_componentTag","super","superOptions","cachedSuperOptions","modifiedOptions","resolveModifiedOptions","extendOptions","components","modified","latest","extended","sealed","sealedOptions","dedupe","initUse","use","plugin","installedPlugins","_installedPlugins","unshift","install","initMixin$1","mixin","initExtend","Super","SuperId","cachedCtors","_Ctor","Sub","initProps$1","initComputed$1","Comp","initAssetRegisters","definition","getComponentName","matches","pattern","pruneCache","keepAliveInstance","cachedNode","pruneCacheEntry","current","cached$$1","patternTypes","KeepAlive","include","exclude","Number","created","destroyed","mounted","ref$1","builtInComponents","initGlobalAPI","configDef","util","delete","version","acceptValue","attr","isEnumeratedAttr","isBooleanAttr","xlinkNS","isXlink","getXlinkProp","isFalsyAttrValue","genClassForVnode","parentNode","childNode","mergeClassData","renderClass","staticClass","dynamicClass","stringifyClass","stringifyArray","stringifyObject","stringified","namespaceMap","svg","math","isHTMLTag","isSVG","unknownElementCache","HTMLUnknownElement","HTMLElement","isTextInputType","query","selected","querySelector","createElement$1","tagName","multiple","setAttribute","createElementNS","namespace","createTextNode","createComment","insertBefore","newNode","referenceNode","nextSibling","setTextContent","textContent","setStyleScope","nodeOps","registerRef","isRemoval","refs","refInFor","emptyNode","sameVnode","sameInputType","typeA","typeB","createKeyToOldIdx","beginIdx","endIdx","createPatchFunction","backend","modules","emptyNodeAt","createRmCb","childElm","removeNode","createElm","insertedVnodeQueue","nested","ownerArray","setScope","createChildren","invokeCreateHooks","isReactivated","initComponent","reactivateComponent","pendingInsert","isPatchable","innerNode","transition","activate","ref$$1","ancestor","addVnodes","startIdx","invokeDestroyHook","removeVnodes","removeAndInvokeRemoveHook","rm","updateChildren","oldCh","newCh","removeOnly","oldKeyToIdx","idxInOld","vnodeToMove","oldStartIdx","newStartIdx","oldEndIdx","oldStartVnode","oldEndVnode","newEndIdx","newStartVnode","newEndVnode","canMove","patchVnode","findIdxInOld","end","hydrate","postpatch","invokeInsertHook","initial","isRenderedModule","inVPre","hasChildNodes","innerHTML","childrenMatch","firstChild","fullInvoke","isInitialPatch","isRealElement","nodeType","hasAttribute","removeAttribute","oldElm","parentElm$1","_leaveCb","patchable","i$2","updateDirectives","oldDir","dir","isCreate","isDestroy","oldDirs","normalizeDirectives$1","newDirs","dirsWithInsert","dirsWithPostpatch","callHook$1","componentUpdated","callInsert","emptyModifiers","modifiers","getRawDirName","rawName","baseModules","updateAttrs","inheritAttrs","oldAttrs","setAttr","removeAttributeNS","baseSetAttr","setAttributeNS","__ieph","blocker","stopImmediatePropagation","removeEventListener","updateClass","oldData","cls","transitionClass","_transitionClasses","_prevClass","target$1","klass","RANGE_TOKEN","CHECKBOX_RADIO_TOKEN","normalizeEvents","change","createOnceHandler","onceHandler","remove$2","add$1","updateDOMListeners","events","updateDOMProps","oldProps","childNodes","_value","strCur","shouldUpdateValue","checkVal","composing","isNotInFocusAndDirty","isDirtyWithModifiers","notInFocus","activeElement","_vModifiers","number","parseStyleText","cssText","listDelimiter","propertyDelimiter","normalizeStyleData","normalizeStyleBinding","staticStyle","bindingStyle","getStyle","checkChild","styleData","emptyStyle","cssVarRE","importantRE","setProp","setProperty","normalizedName","normalize","vendorNames","capName","updateStyle","oldStaticStyle","oldStyleBinding","normalizedStyle","oldStyle","newStyle","addClass","classList","getAttribute","removeClass","tar","resolveTransition","css","autoCssTransition","enterClass","enterToClass","enterActiveClass","leaveClass","leaveToClass","leaveActiveClass","hasTransition","TRANSITION","ANIMATION","transitionProp","transitionEndEvent","animationProp","animationEndEvent","ontransitionend","onwebkittransitionend","onanimationend","onwebkitanimationend","raf","requestAnimationFrame","nextFrame","addTransitionClass","transitionClasses","removeTransitionClass","whenTransitionEnds","expectedType","getTransitionInfo","propCount","ended","onEnd","transformRE","styles","getComputedStyle","transitionDelays","transitionDurations","transitionTimeout","getTimeout","animationDelays","animationDurations","animationTimeout","hasTransform","delays","durations","toMs","s","enter","toggleDisplay","cancelled","_enterCb","appearClass","appearToClass","appearActiveClass","beforeEnter","afterEnter","enterCancelled","beforeAppear","appear","afterAppear","appearCancelled","duration","transitionNode","isAppear","startClass","activeClass","toClass","beforeEnterHook","enterHook","afterEnterHook","enterCancelledHook","explicitEnterDuration","expectsCSS","userWantsControl","getHookArgumentsLength","show","pendingNode","_pending","isValidDuration","leave","beforeLeave","afterLeave","leaveCancelled","delayLeave","explicitLeaveDuration","performLeave","invokerFns","_enter","platformModules","patch","vmodel","trigger","directive","binding","_vOptions","setSelected","getValue","onCompositionStart","onCompositionEnd","prevOptions","curOptions","some","o","needReset","hasNoMatchingOption","actuallySetSelected","isMultiple","option","selectedIndex","createEvent","initEvent","dispatchEvent","locateNode","transition$$1","originalDisplay","__vOriginalDisplay","unbind","platformDirectives","transitionProps","mode","getRealChild","compOptions","extractTransitionData","placeholder","rawChild","hasParentTransition","isSameChild","oldChild","Transition","_leaving","oldRawChild","delayedLeave","moveClass","TransitionGroup","prevChildren","rawChildren","transitionData","kept","removed","c$1","pos","getBoundingClientRect","beforeUpdate","updated","hasMove","callPendingCbs","recordPosition","applyTranslation","_reflow","offsetHeight","moved","transform","WebkitTransform","transitionDuration","_moveCb","propertyName","_hasMove","cloneNode","newPos","oldPos","dx","left","dy","platformComponents","store","USE_SYMBOL","$exports","that","un","createDesc","object","ArrayProto","ObjectProto","descriptor","ceil","bitmap","isArrayIter","toLength","getIterFn","BREAK","RETURN","iterable","step","iterFn","TypeError","defined","Internal","newGenericPromiseCapability","OwnPromiseCapability","Wrapper","aFunction","anInstance","forOf","microtask","newPromiseCapabilityModule","perform","PROMISE","versions","v8","$Promise","isNode","empty","newPromiseCapability","USE_NATIVE","promise","FakePromise","PromiseRejectionEvent","isThenable","isReject","chain","ok","reaction","exited","fail","domain","_h","onHandleUnhandled","exit","onUnhandled","unhandled","isUnhandled","onunhandledrejection","_a","onrejectionhandled","$reject","_d","_w","$resolve","wrapper","executor","onFulfilled","onRejected","catch","G","W","S","r","capability","$$reject","iter","all","remaining","$index","alreadyCalled","race","SHARED","copyright","own","exp","IS_FORCED","IS_GLOBAL","IS_STATIC","IS_PROTO","IS_BIND","expProto","U","SAFE_CLOSING","riter","skipClosing","shared","propertyIsEnumerable","IObject","valueOf","self","__g","toInteger","min","DESCRIPTORS","SPECIES","KEY","stat","macrotask","MutationObserver","WebKitMutationObserver","head","flush","standalone","toggle","characterData","__e","IE8_DOM_DEFINE","toPrimitive","Attributes","UNSCOPABLES","PromiseCapability","$$resolve","promiseCapability","ModelObj","vue__WEBPACK_IMPORTED_MODULE_0__","EventDispatcher","EPSILON","pow","isInteger","sign","assign","nextKey","_listeners","hasEventListener","listenerArray","array","REVISION","MOUSE","LEFT","MIDDLE","RIGHT","CullFaceNone","CullFaceBack","CullFaceFront","FrontFaceDirectionCW","PCFShadowMap","PCFSoftShadowMap","FrontSide","BackSide","DoubleSide","FlatShading","NoColors","FaceColors","VertexColors","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","NoToneMapping","LinearToneMapping","ReinhardToneMapping","Uncharted2ToneMapping","CineonToneMapping","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","SphericalReflectionMapping","CubeUVReflectionMapping","CubeUVRefractionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipMapNearestFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipMapNearestFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedShort565Type","UnsignedInt248Type","AlphaFormat","RGBFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","DepthFormat","DepthStencilFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","RGB_ETC1_Format","LoopOnce","LoopRepeat","LoopPingPong","InterpolateDiscrete","InterpolateLinear","InterpolateSmooth","ZeroCurvatureEnding","ZeroSlopeEnding","WrapAroundEnding","TrianglesDrawMode","TriangleStripDrawMode","TriangleFanDrawMode","LinearEncoding","sRGBEncoding","GammaEncoding","RGBEEncoding","RGBM7Encoding","RGBM16Encoding","RGBDEncoding","BasicDepthPacking","RGBADepthPacking","_Math","DEG2RAD","PI","RAD2DEG","generateUUID","chars","rnd","uuid","clamp","euclideanModulo","m","mapLinear","a1","a2","b1","b2","lerp","y","smoothstep","smootherstep","randInt","low","high","randFloat","randFloatSpread","range","degToRad","degrees","radToDeg","radians","isPowerOfTwo","ceilPowerOfTwo","log","LN2","floorPowerOfTwo","Vector2","Matrix4","elements","Quaternion","z","w","_x","_y","_z","Vector3","Matrix3","width","height","isVector2","setScalar","scalar","setX","setY","setComponent","getComponent","copy","addVectors","addScalar","addScaledVector","subVectors","subScalar","multiply","multiplyScalar","divide","divideScalar","applyMatrix3","clampScalar","minVal","maxVal","clampLength","round","roundToZero","negate","dot","lengthSq","sqrt","manhattanLength","abs","angle","atan2","distanceTo","distanceToSquared","manhattanDistanceTo","setLength","alpha","lerpVectors","v1","v2","equals","fromArray","fromBufferAttribute","attribute","getX","getY","rotateAround","center","cos","sin","isMatrix4","n11","n12","n13","n14","n21","n22","n23","n24","n31","n32","n33","n34","n41","n42","n43","n44","te","me","copyPosition","extractBasis","xAxis","yAxis","zAxis","setFromMatrixColumn","makeBasis","extractRotation","scaleX","scaleY","scaleZ","makeRotationFromEuler","euler","isEuler","order","ae","af","be","bf","ce","cf","de","df","ac","ad","bc","bd","makeRotationFromQuaternion","q","x2","y2","z2","xx","xy","xz","yy","yz","zz","wx","wy","wz","lookAt","eye","up","crossVectors","multiplyMatrices","premultiply","a11","a12","a13","a14","a21","a22","a23","a24","a31","a32","a33","a34","a41","a42","a43","a44","b11","b12","b13","b14","b21","b22","b23","b24","b31","b32","b33","b34","b41","b42","b43","b44","applyToBufferAttribute","getZ","applyMatrix4","setXYZ","determinant","transpose","setPosition","getInverse","throwOnDegenerate","t11","t12","t13","t14","det","msg","detInv","scale","getMaxScaleOnAxis","scaleXSq","scaleYSq","scaleZSq","makeTranslation","makeRotationX","theta","makeRotationY","makeRotationZ","makeRotationAxis","axis","tx","ty","makeScale","makeShear","compose","position","quaternion","decompose","vector","matrix","sx","sy","sz","invSX","invSY","invSZ","setFromRotationMatrix","makePerspective","right","bottom","near","far","makeOrthographic","slerp","qa","qb","qm","slerpFlat","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","w0","x1","y1","z1","w1","sqrSin","tDir","onChangeCallback","setFromEuler","c1","c2","c3","s1","s2","s3","setFromAxisAngle","halfAngle","m11","m12","m13","m21","m22","m23","m31","m32","m33","trace","setFromUnitVectors","EPS","vFrom","vTo","inverse","conjugate","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","cosHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","onChange","isVector3","setZ","multiplyVectors","applyEuler","applyQuaternion","applyAxisAngle","qx","qy","qz","qw","ix","iy","iz","iw","project","camera","projectionMatrix","matrixWorld","unproject","transformDirection","cross","ax","ay","az","bx","by","bz","projectOnVector","projectOnPlane","planeNormal","reflect","angleTo","acos","dz","setFromSpherical","sinPhiRadius","phi","radius","setFromCylindrical","setFromMatrixPosition","setFromMatrixScale","isMatrix3","setFromMatrix4","g","getNormalMatrix","matrix4","transposeIntoArray","setUvTransform","rotation","cx","cy","rotate","translate","textureId","Texture","mapping","wrapS","wrapT","magFilter","minFilter","format","anisotropy","encoding","DEFAULT_IMAGE","mipmaps","DEFAULT_MAPPING","repeat","matrixAutoUpdate","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","onUpdate","Vector4","WebGLRenderTarget","scissor","scissorTest","viewport","texture","depthBuffer","stencilBuffer","depthTexture","WebGLRenderTargetCube","activeCubeFace","activeMipMapLevel","DataTexture","CubeTexture","images","isTexture","toJSON","meta","isRootObject","textures","getDataURL","canvas","HTMLCanvasElement","getContext","ImageData","putImageData","drawImage","toDataURL","metadata","generator","wrap","dispose","transformUv","uv","isVector4","setW","setAxisAngleFromQuaternion","setAxisAngleFromRotationMatrix","epsilon","epsilon2","getW","isWebGLRenderTarget","setSize","isWebGLRenderTargetCube","isDataTexture","isCubeTexture","emptyTexture","emptyCubeTexture","UniformContainer","seq","arrayCacheF32","arrayCacheI32","mat4array","Float32Array","mat3array","flatten","nBlocks","blockSize","firstElem","allocTexUnits","Int32Array","allocTextureUnit","setValue1f","gl","uniform1f","addr","setValue1i","uniform1i","setValue2fv","uniform2fv","uniform2f","setValue3fv","uniform3f","uniform3fv","setValue4fv","uniform4fv","uniform4f","setValue2fm","uniformMatrix2fv","setValue3fm","uniformMatrix3fv","setValue4fm","uniformMatrix4fv","setValueT1","unit","setTexture2D","setValueT6","setTextureCube","setValue2iv","uniform2iv","setValue3iv","uniform3iv","setValue4iv","uniform4iv","getSingularSetter","setValue1fv","uniform1fv","setValue1iv","uniform1iv","setValueV2a","size","setValueV3a","setValueV4a","setValueM2a","setValueM3a","setValueM4a","setValueT1a","units","setValueT6a","getPureArraySetter","SingleUniform","activeInfo","setValue","PureArrayUniform","StructuredUniform","u","RePathPart","addUniform","container","uniformObject","parseUniform","pathLength","matchEnd","idIsIndex","subscript","WebGLUniforms","program","getProgramParameter","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","setOptional","upload","needsUpdate","seqWithValue","ColorKeywords","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","Color","setRGB","isColor","setHex","setStyle","hex","setHSL","hue2rgb","handleAlpha","string","color","copyGammaToLinear","gammaFactor","copyLinearToGamma","safeInverse","convertGammaToLinear","convertLinearToGamma","getHex","getHexString","getHSL","optionalTarget","hue","saturation","hsl","lightness","delta","offsetHSL","addColors","color1","color2","UniformsLib","common","diffuse","opacity","uvTransform","alphaMap","specularmap","specularMap","envmap","envMap","flipEnvMap","reflectivity","refractionRatio","aomap","aoMap","aoMapIntensity","lightmap","lightMap","lightMapIntensity","emissivemap","emissiveMap","bumpmap","bumpMap","bumpScale","normalmap","normalMap","normalScale","displacementmap","displacementMap","displacementScale","displacementBias","roughnessmap","roughnessMap","metalnessmap","metalnessMap","gradientmap","gradientMap","fog","fogDensity","fogNear","fogFar","fogColor","lights","ambientLightColor","directionalLights","properties","direction","shadow","shadowBias","shadowRadius","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","distance","coneCos","penumbraCos","decay","spotShadowMap","spotShadowMatrix","pointLights","shadowCameraNear","shadowCameraFar","pointShadowMap","pointShadowMatrix","hemisphereLights","skyColor","groundColor","rectAreaLights","points","UniformsUtils","uniforms","uniforms_src","uniforms_dst","parameter_src","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","aomap_fragment","aomap_pars_fragment","begin_vertex","beginnormal_vertex","bsdfs","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","encodings_fragment","encodings_pars_fragment","envmap_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_vertex","fog_vertex","fog_pars_vertex","fog_fragment","fog_pars_fragment","gradientmap_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_vertex","lights_pars","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_template","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_fragment","normalmap_pars_fragment","packing","premultiplied_alpha_fragment","project_vertex","dithering_fragment","dithering_pars_fragment","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","uv2_pars_fragment","uv2_pars_vertex","uv2_vertex","worldpos_vertex","cube_frag","cube_vert","depth_frag","depth_vert","distanceRGBA_frag","distanceRGBA_vert","equirect_frag","equirect_vert","linedashed_frag","linedashed_vert","meshbasic_frag","meshbasic_vert","meshlambert_frag","meshlambert_vert","meshphong_frag","meshphong_vert","meshphysical_frag","meshphysical_vert","normal_frag","normal_vert","points_frag","points_vert","shadow_frag","shadow_vert","ShaderChunk","ShaderLib","basic","vertexShader","fragmentShader","lambert","emissive","phong","specular","shininess","standard","roughness","metalness","envMapIntensity","dashed","dashSize","totalSize","cube","tCube","tFlip","equirect","tEquirect","distanceRGBA","referencePosition","nearDistance","farDistance","Box2","Infinity","WebGLFlareRenderer","state","capabilities","vertexBuffer","elementBuffer","shader","attributes","tempTexture","occlusionTexture","vertices","faces","Uint16Array","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","ELEMENT_ARRAY_BUFFER","createTexture","bindTexture","TEXTURE_2D","texImage2D","RGB","UNSIGNED_BYTE","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","RGBA","createProgram","vertex","getAttribLocation","renderType","occlusionMap","screenPosition","createShader","FRAGMENT_SHADER","VERTEX_SHADER","prefix","precision","shaderSource","compileShader","attachShader","linkProgram","flares","scene","tempPosition","invAspect","halfViewportWidth","halfViewportHeight","screenPositionPixels","validArea","useProgram","initAttributes","enableAttribute","disableUnusedAttributes","vertexAttribPointer","FLOAT","disable","CULL_FACE","buffers","setMask","flare","matrixWorldInverse","containsPoint","activeTexture","TEXTURE0","TEXTURE1","copyTexImage2D","BLEND","enable","DEPTH_TEST","drawElements","TRIANGLES","UNSIGNED_SHORT","positionScreen","customUpdateCallback","updateLensFlares","jl","lensFlares","sprite","setBlending","blending","blendEquation","blendSrc","blendDst","reset","CanvasTexture","WebGLSpriteRenderer","spritePosition","spriteRotation","spriteScale","uvOffset","uvScale","modelViewMatrix","fogType","fogDepth","alphaTest","fillStyle","fillRect","painterSortStable","renderOrder","sprites","oldFogType","sceneFogType","isFog","isFogExp2","density","material","visible","onBeforeRender","blendEquationAlpha","blendSrcAlpha","blendDstAlpha","premultipliedAlpha","setTest","depthTest","depthWrite","colorWrite","onAfterRender","physical","clearCoat","clearCoatRoughness","setFromPoints","makeEmpty","il","expandByPoint","setFromCenterAndSize","halfSize","box","isEmpty","getCenter","getSize","point","expandByVector","expandByScalar","containsBox","getParameter","intersectsBox","clampPoint","distanceToPoint","clampedPoint","intersect","union","materialId","Material","side","flatShading","vertexColors","transparent","depthFunc","clippingPlanes","clipIntersection","clipShadows","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","overdraw","userData","MeshDepthMaterial","parameters","depthPacking","skinning","morphTargets","wireframe","wireframeLinewidth","setValues","MeshDistanceMaterial","Box3","Sphere","Plane","constant","Frustum","p0","p1","p2","p3","p4","p5","planes","WebGLShadowMap","_renderer","_objects","maxTextureSize","_frustum","_projScreenMatrix","_shadowMapSize","_maxShadowMapSize","_lookTarget","_lightPositionWorld","_MorphingFlag","_SkinningFlag","_NumberOfMaterialVariants","_depthMaterials","_distanceMaterials","_materialCache","cubeDirections","cubeUps","cube2DViewPorts","useMorphing","useSkinning","depthMaterial","distanceMaterial","scope","getDepthMaterial","isPointLight","lightPositionWorld","geometry","materialVariants","customMaterial","customDepthMaterial","customDistanceMaterial","isBufferGeometry","morphAttributes","isGeometry","isSkinnedMesh","variantIndex","localClippingEnabled","keyA","keyB","materialsForVariant","cachedMaterial","renderSingleSided","renderReverseSided","linewidth","isMeshDistanceMaterial","renderObject","shadowCamera","layers","isMesh","isLine","isPoints","castShadow","frustumCulled","intersectsObject","groups","k","kl","group","groupMaterial","materialIndex","renderBufferDirect","enabled","autoUpdate","faceCount","_gl","_state","setClear","setScissorTest","light","mapSize","vpWidth","vpHeight","pars","updateProjectionMatrix","isSpotLightShadow","shadowMap","shadowMatrix","updateMatrixWorld","setRenderTarget","face","vpDimensions","setFromMatrix","WebGLAttributes","bufferType","usage","dynamic","DYNAMIC_DRAW","buffer","onUploadCallback","Float64Array","Int16Array","SHORT","Uint32Array","UNSIGNED_INT","INT","Int8Array","BYTE","Uint8Array","bytesPerElement","BYTES_PER_ELEMENT","updateBuffer","updateRange","bufferSubData","subarray","isInterleavedBufferAttribute","deleteBuffer","Euler","_order","DefaultOrder","Layers","mask","isMaterial","onBeforeCompile","newValue","currentValue","extractFromCache","emissiveIntensity","sizeAttenuation","gapSize","wireframeLinecap","wireframeLinejoin","srcPlanes","dstPlanes","isMeshDepthMaterial","isBox3","setFromArray","minX","minY","minZ","maxX","maxY","maxZ","setFromBufferAttribute","setFromObject","expandByObject","intersectsSphere","closestPoint","sphere","intersectsPlane","plane","getBoundingSphere","optionalCenter","maxRadiusSq","radiusSum","deltaLengthSq","getBoundingBox","setComponents","setFromNormalAndCoplanarPoint","setFromCoplanarPoints","inverseNormalLength","distanceToSphere","projectPoint","intersectLine","line","denominator","intersectsLine","startSign","endSign","coplanarPoint","m1","optionalNormalMatrix","normalMatrix","referencePoint","frustum","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","boundingSphere","computeBoundingSphere","intersectsSprite","negRadius","d1","d2","RotationOrders","asin","setFromQuaternion","setFromVector3","reorder","newOrder","toVector3","optionalResult","object3DId","Object3D","DefaultUp","onRotationChange","onQuaternionChange","DefaultMatrixAutoUpdate","matrixWorldNeedsUpdate","receiveShadow","Camera","OrthographicCamera","zoom","view","Face3","vertexNormals","isObject3D","applyMatrix","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","setRotationFromQuaternion","rotateOnAxis","q1","rotateOnWorldAxis","rotateX","rotateY","rotateZ","translateOnAxis","translateX","translateY","translateZ","localToWorld","worldToLocal","isCamera","getObjectById","getObjectByProperty","getObjectByName","getWorldPosition","getWorldQuaternion","getWorldRotation","getWorldScale","getWorldDirection","raycast","traverseVisible","traverseAncestors","updateMatrix","geometries","materials","serialize","library","element","uuids","recursive","isOrthographicCamera","setViewOffset","fullWidth","fullHeight","offsetX","offsetY","clearViewOffset","zoomW","zoomH","scaleW","scaleH","geometryId","Geometry","colors","faceVertexUvs","morphNormals","skinWeights","skinIndices","lineDistances","boundingBox","elementsNeedUpdate","verticesNeedUpdate","uvsNeedUpdate","normalsNeedUpdate","colorsNeedUpdate","lineDistancesNeedUpdate","groupsNeedUpdate","BufferAttribute","itemSize","Int8BufferAttribute","Uint8BufferAttribute","Uint8ClampedBufferAttribute","Uint8ClampedArray","Int16BufferAttribute","Uint16BufferAttribute","Int32BufferAttribute","Uint32BufferAttribute","Float32BufferAttribute","Float64BufferAttribute","DirectGeometry","indices","normals","uvs","uvs2","arrayMax","computeBoundingBox","fromBufferGeometry","positions","uv2","tempNormals","tempUVs","tempUVs2","addFace","computeFaceNormals","ab","fl","vA","vB","vC","computeVertexNormals","areaWeighted","vl","computeFlatVertexNormals","computeMorphNormals","__originalFaceNormal","__originalVertexNormals","tmpGeo","faceNormals","dstNormalsFace","dstNormalsVertex","faceNormal","computeLineDistances","materialIndexOffset","vertexOffset","vertices1","vertices2","faces1","faces2","uvs1","colors1","colors2","vertexCopy","faceCopy","faceVertexNormals","faceVertexColors","uvCopy","mergeMesh","mesh","mergeVertices","verticesMap","unique","changes","precisionPoints","faceIndicesToRemove","idx","diff","sortFacesByMaterialIndex","_id","materialIndexSort","newUvs1","newUvs2","normalsHash","colorsHash","uvsHash","hasMaterial","hasFaceUv","hasFaceVertexUv","hasFaceNormal","hasFaceVertexNormal","hasFaceColor","hasFaceVertexColor","faceType","setBit","getUvIndex","getNormalIndex","getColorIndex","uvsCopy","morphTarget","morphNormal","srcVertexNormal","destVertexNormal","isBufferAttribute","setArray","setDynamic","copyAt","index1","index2","copyArray","copyColorsArray","copyIndicesArray","copyVector2sArray","vectors","copyVector3sArray","copyVector4sArray","setXY","setXYZW","onUpload","computeGroups","fromGeometry","morphTargetsPosition","hasFaceVertexUv2","morphTargetsLength","morphTargetsNormal","morphNormalsLength","hasSkinIndices","hasSkinWeights","vertexUvs","bufferGeometryId","BufferGeometry","drawRange","BoxGeometry","widthSegments","heightSegments","depthSegments","BoxBufferGeometry","numberOfVertices","groupStart","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","addGroup","setIndex","addAttribute","PlaneGeometry","PlaneBufferGeometry","width_half","height_half","segment_width","segment_height","MeshBasicMaterial","combine","ShaderMaterial","defines","clipping","extensions","derivatives","fragDepth","drawBuffers","shaderTextureLOD","defaultAttributeValues","index0AttributeName","Ray","origin","Line3","Triangle","Mesh","drawMode","updateMorphTargets","WebGLBackground","planeCamera","planeMesh","boxMesh","clearColor","clearAlpha","forceClear","background","autoClear","autoClearColor","autoClearDepth","autoClearStencil","getClearColor","setClearColor","getClearAlpha","setClearAlpha","reversePainterSortStable","WebGLRenderList","renderItems","renderItemsIndex","opaque","renderItem","WebGLRenderLists","lists","absNumericalSort","WebGLMorphtargets","influencesList","morphInfluences","objectInfluences","morphTargetInfluences","influences","influence","getUniforms","WebGLIndexedBufferRenderer","infoRender","setMode","calls","POINTS","renderInstances","extension","drawElementsInstancedANGLE","maxInstancedCount","WebGLBufferRenderer","drawArrays","drawArraysInstancedANGLE","WebGLGeometries","infoMemory","wireframeAttributes","onGeometryDispose","buffergeometry","_bufferGeometry","geometryAttributes","getWireframeAttribute","geometryIndex","UniformsCache","halfWidth","halfHeight","WebGLLights","ambient","directional","spot","rectArea","hemi","vector3","matrix42","setup","shadows","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","viewMatrix","intensity","isAmbientLight","isDirectionalLight","bias","isSpotLight","penumbra","isRectAreaLight","isHemisphereLight","WebGLObjects","updateList","frame","updateFromObject","addLineNumbers","lines","WebGLShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","getIndex","clearGroups","setDrawRange","__directGeometry","lineDistance","fromDirectGeometry","TypeArray","pA","pB","pC","normalizeNormals","attribute1","attributeArray1","attribute2","attributeArray2","attributeSize","toNonIndexed","geometry2","array2","morphAttribute","isMeshBasicMaterial","isShaderMaterial","ray","at","recast","closestPointToPoint","directionDistance","distanceSqToPoint","distanceSqToSegment","segCenter","segDir","v0","optionalPointOnRay","optionalPointOnSegment","s0","sqrDist","extDet","segExtent","a01","b0","invDet","intersectSphere","tca","radius2","thc","t0","t1","distanceToPlane","intersectPlane","distToPoint","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectTriangle","edge1","edge2","backfaceCulling","DdN","DdQxE2","DdE1xQ","QdN","distanceSq","closestPointToPointParameter","startP","startEnd","clampToLine","startEnd2","startEnd_startP","resultLengthSq","barycoordFromPoint","dot00","dot01","dot02","dot11","dot12","denom","invDenom","setFromPointsAndIndices","i0","i1","i2","triangle","area","midpoint","edgeList","projectedPoint","minDistance","setDrawMode","morphTargetDictionary","ml","inverseMatrix","tempA","tempB","tempC","uvA","uvB","uvC","barycoord","intersectionPoint","intersectionPointWorld","uvIntersection","uv1","uv3","checkIntersection","raycaster","checkBufferGeometryIntersection","intersection","faceIndex","intersects","fvA","fvB","fvC","isMultiMaterial","faceMaterial","tl","targets","uvs_f","programIdCount","getEncodingComponents","getTexelDecodingFunction","functionName","getTexelEncodingFunction","getToneMappingFunction","toneMapping","toneMappingName","generateExtensions","rendererExtensions","chunks","envMapCubeUV","logarithmicDepthBuffer","filterEmptyLine","generateDefines","fetchAttributeLocations","ACTIVE_ATTRIBUTES","getActiveAttrib","replaceLightNums","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","parseIncludes","unrollLoops","snippet","unroll","WebGLProgram","shadowMapTypeDefine","shadowMapType","envMapTypeDefine","envMapModeDefine","envMapBlendingDefine","prefixVertex","prefixFragment","gammaFactorDefine","customExtensions","customDefines","isRawShaderMaterial","supportsVertexTextures","maxBones","useFog","fogExp","useVertexTexture","doubleSided","flipSided","numClippingPlanes","shadowMapEnabled","numClipIntersection","physicallyCorrectLights","outputEncoding","mapEncoding","envMapEncoding","emissiveMapEncoding","vertexGlsl","fragmentGlsl","glVertexShader","glFragmentShader","bindAttribLocation","cachedUniforms","cachedAttributes","programLog","getProgramInfoLog","vertexLog","fragmentLog","runnable","haveDiagnostics","LINK_STATUS","getError","VALIDATE_STATUS","diagnostics","deleteShader","getAttributes","deleteProgram","usedTimes","WebGLPrograms","programs","shaderIDs","MeshNormalMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshToonMaterial","MeshStandardMaterial","MeshPhysicalMaterial","LineBasicMaterial","LineDashedMaterial","PointsMaterial","ShadowMaterial","parameterNames","allocateBones","skeleton","bones","floatVertexTextures","nVertexUniforms","maxVertexUniforms","nVertexMatrices","getTextureEncodingFromMap","gammaOverrideLinear","getParameters","nClipPlanes","nClipIntersection","shaderID","getMaxPrecision","currentRenderTarget","getRenderTarget","vertexTextures","gammaOutput","gammaInput","envMapMode","maxMorphTargets","maxMorphNormals","getProgramCode","acquireProgram","pl","programInfo","releaseProgram","WebGLTextures","utils","_isWebGL2","WebGL2RenderingContext","clampToMaxSize","maxSize","makePowerOfTwo","HTMLImageElement","ImageBitmap","textureNeedsPowerOfTwo","textureNeedsGenerateMipmaps","filterFallback","LINEAR","onTextureDispose","deallocateTexture","onRenderTargetDispose","renderTarget","deallocateRenderTarget","textureProperties","__image__webglTextureCube","deleteTexture","__webglInit","__webglTexture","renderTargetProperties","deleteFramebuffer","__webglFramebuffer","__webglDepthbuffer","deleteRenderbuffer","__version","complete","uploadTexture","TEXTURE_CUBE_MAP","pixelStorei","UNPACK_FLIP_Y_WEBGL","isCompressed","isCompressedTexture","cubeImage","maxCubemapSize","isPowerOfTwoImage","glFormat","convert","glType","setTextureParameters","mipmap","getCompressedTextureFormats","compressedTexImage2D","TEXTURE_CUBE_MAP_POSITIVE_X","generateMipmap","setTextureCubeDynamic","textureType","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","getMaxAnisotropy","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","isDepthTexture","internalFormat","DEPTH_COMPONENT","DEPTH_COMPONENT32F","DEPTH_COMPONENT16","DEPTH_STENCIL","setupFrameBufferTexture","framebuffer","attachment","textureTarget","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","bindRenderbuffer","RENDERBUFFER","renderbufferStorage","framebufferRenderbuffer","DEPTH_ATTACHMENT","DEPTH_STENCIL_ATTACHMENT","RGBA4","setupDepthTexture","isCube","webglDepthTexture","setupDepthRenderbuffer","createRenderbuffer","setupRenderTarget","isTargetPowerOfTwo","createFramebuffer","COLOR_ATTACHMENT0","updateRenderTargetMipmap","webglTexture","WebGLProperties","WebGLState","ColorBuffer","locked","currentColorMask","currentColorClear","colorMask","setLocked","lock","DepthBuffer","currentDepthMask","currentDepthFunc","currentDepthClear","depthMask","setFunc","NEVER","ALWAYS","LESS","LEQUAL","EQUAL","GEQUAL","GREATER","NOTEQUAL","clearDepth","StencilBuffer","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","STENCIL_TEST","stencilMask","stencilFunc","stencilRef","setOp","stencilFail","stencilZFail","stencilZPass","stencilOp","stencil","clearStencil","colorBuffer","maxVertexAttributes","MAX_VERTEX_ATTRIBS","newAttributes","enabledAttributes","attributeDivisors","compressedTextureFormats","currentProgram","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","maxTextures","MAX_COMBINED_TEXTURE_IMAGE_UNITS","VERSION","lineWidthAvailable","currentTextureSlot","currentBoundTextures","currentScissor","currentViewport","emptyTextures","enableVertexAttribArray","vertexAttribDivisorANGLE","enableAttributeAndDivisor","meshPerAttribute","disableVertexAttribArray","formats","COMPRESSED_TEXTURE_FORMATS","blendEquationSeparate","FUNC_ADD","blendFuncSeparate","ONE","blendFunc","SRC_ALPHA","ZERO","ONE_MINUS_SRC_COLOR","ONE_MINUS_SRC_ALPHA","SRC_COLOR","setMaterial","setFlipSided","setPolygonOffset","frontFace","CW","CCW","setCullFace","cullFace","BACK","FRONT","FRONT_AND_BACK","setLineWidth","lineWidth","factor","POLYGON_OFFSET_FILL","SCISSOR_TEST","webglSlot","webglType","boundTexture","WebGLCapabilities","maxAnisotropy","MAX_TEXTURE_MAX_ANISOTROPY_EXT","getShaderPrecisionFormat","HIGH_FLOAT","MEDIUM_FLOAT","maxPrecision","MAX_TEXTURE_IMAGE_UNITS","maxVertexTextures","MAX_VERTEX_TEXTURE_IMAGE_UNITS","MAX_TEXTURE_SIZE","MAX_CUBE_MAP_TEXTURE_SIZE","maxAttributes","MAX_VERTEX_UNIFORM_VECTORS","maxVaryings","MAX_VARYING_VECTORS","maxFragmentUniforms","MAX_FRAGMENT_UNIFORM_VECTORS","floatFragmentTextures","PerspectiveCamera","fov","aspect","focus","filmGauge","filmOffset","ArrayCamera","cameras","WebVRManager","device","frameData","VRFrameData","standingMatrix","standingMatrixInverse","cameraL","bounds","cameraR","currentSize","currentPixelRatio","cameraVR","onVRDisplayPresentChange","isPresenting","eyeParameters","getEyeParameters","renderWidth","renderHeight","getPixelRatio","setDrawingBufferSize","standing","getDevice","setDevice","getCamera","depthNear","depthFar","getFrameData","pose","orientation","stageParameters","sittingToStandingTransform","leftViewMatrix","rightViewMatrix","leftProjectionMatrix","rightProjectionMatrix","getLayers","layer","leftBounds","rightBounds","getStandingMatrix","submitFrame","WebGLExtensions","getExtension","WebGLClipping","globalState","numGlobalPlanes","renderingShadows","viewNormalMatrix","uniform","resetGlobalState","numPlanes","numIntersection","projectPlanes","skipTransform","nPlanes","dstArray","flatSize","i4","enableLocalClipping","beginShadows","endShadows","setState","fromCache","nGlobal","lGlobal","clippingState","WebGLUtils","REPEAT","MIRRORED_REPEAT","NEAREST_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR_MIPMAP_NEAREST","LINEAR_MIPMAP_LINEAR","UNSIGNED_SHORT_4_4_4_4","UNSIGNED_SHORT_5_5_5_1","UNSIGNED_SHORT_5_6_5","HALF_FLOAT_OES","ALPHA","LUMINANCE","LUMINANCE_ALPHA","FUNC_SUBTRACT","FUNC_REVERSE_SUBTRACT","DST_ALPHA","ONE_MINUS_DST_ALPHA","DST_COLOR","ONE_MINUS_DST_COLOR","SRC_ALPHA_SATURATE","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","MIN_EXT","MAX_EXT","UNSIGNED_INT_24_8_WEBGL","WebGLRenderer","_canvas","_context","_alpha","_depth","_stencil","_antialias","antialias","_premultipliedAlpha","_preserveDrawingBuffer","preserveDrawingBuffer","lightsArray","shadowsArray","currentRenderList","spritesArray","flaresArray","domElement","sortObjects","toneMappingExposure","toneMappingWhitePoint","objects","programCache","renderLists","morphtargets","bufferRenderer","indexedBufferRenderer","flareRenderer","spriteRenderer","_this","_isContextLost","_currentRenderTarget","_currentFramebuffer","_currentMaterialId","_currentGeometryProgram","_currentCamera","_currentArrayCamera","_currentViewport","_currentScissor","_currentScissorTest","_usedTextureUnits","_width","_height","_pixelRatio","_viewport","_scissor","_scissorTest","_clipping","_clippingEnabled","_localClippingEnabled","_vector3","_infoMemory","_infoRender","getTargetPixelRatio","memory","contextAttributes","rangeMin","rangeMax","onContextLost","onContextRestore","initGLContext","vr","preventDefault","onMaterialDispose","deallocateMaterial","releaseMaterialProgramReference","renderObjectImmediate","renderBufferImmediate","setupVertexAttributes","startIndex","isInstancedBufferGeometry","programAttributes","materialDefaultAttributeValues","programAttribute","geometryAttribute","stride","isInstancedInterleavedBuffer","isInstancedBufferAttribute","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","getContextAttributes","forceContextLoss","loseContext","forceContextRestore","restoreContext","setPixelRatio","setViewport","getDrawingBufferSize","pixelRatio","setScissor","boolean","bits","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","clearTarget","hasPositions","hasNormals","hasUvs","hasColors","positionArray","isMeshPhongMaterial","isMeshStandardMaterial","isMeshNormalMaterial","normalArray","nx","ny","nz","uvArray","colorArray","setProgram","geometryProgram","updateBuffers","rangeFactor","dataCount","rangeStart","rangeCount","drawStart","drawEnd","drawCount","LINES","TRIANGLE_STRIP","TRIANGLE_FAN","isLineSegments","isLineLoop","LINE_LOOP","LINE_STRIP","compile","isLight","initMaterial","isAnimating","onAnimationFrame","time","projectObject","isSprite","isLensFlare","isImmediateRenderObject","renderObjects","overrideMaterial","isArrayCamera","camera2","materialProperties","programChange","numSupportedMorphTargets","numSupportedMorphNormals","lightsHash","progUniforms","uniformsList","useCache","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","uCamPos","cameraPosition","isMeshLambertMaterial","boneTexture","boneMatrices","boneTextureSize","markUniformsLightsNeedsUpdate","refreshUniformsFog","refreshUniformsCommon","refreshUniformsLambert","isMeshToonMaterial","refreshUniformsToon","refreshUniformsPhong","isMeshPhysicalMaterial","refreshUniformsPhysical","refreshUniformsStandard","refreshUniformsDepth","refreshUniformsDistance","refreshUniformsNormal","isLineBasicMaterial","refreshUniformsLine","isLineDashedMaterial","refreshUniformsDash","isPointsMaterial","refreshUniformsPoints","isShadowMaterial","ltcMat","LTC_MAT_TEXTURE","ltcMag","LTC_MAG_TEXTURE","uvScaleMap","textureUnit","animate","opaqueObjects","transparentObjects","setFaceCulling","frontFaceDirection","warned","setTexture","readRenderTargetPixels","restore","textureFormat","IMPLEMENTATION_COLOR_READ_FORMAT","IMPLEMENTATION_COLOR_READ_TYPE","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","readPixels","FogExp2","Fog","Scene","LensFlare","SpriteMaterial","Sprite","LOD","levels","Skeleton","boneInverses","calculateInverses","Bone","SkinnedMesh","bindMode","bindMatrix","bindMatrixInverse","initBones","normalizeSkinWeights","linecap","linejoin","Line","LineSegments","LineLoop","Points","Group","VideoTexture","video","readyState","HAVE_CURRENT_DATA","CompressedTexture","DepthTexture","WireframeGeometry","ol","edge","edges","ParametricGeometry","func","slices","stacks","ParametricBufferGeometry","pu","pv","sliceCount","PolyhedronGeometry","detail","PolyhedronBufferGeometry","uvBuffer","subdivide","getVertexByIndex","subdivideFace","cols","aj","bj","rows","pushVertex","appplyRadius","generateUVs","azimuth","inclination","correctUVs","correctSeam","centroid","azi","correctUV","TetrahedronGeometry","TetrahedronBufferGeometry","OctahedronGeometry","OctahedronBufferGeometry","IcosahedronGeometry","IcosahedronBufferGeometry","DodecahedronGeometry","DodecahedronBufferGeometry","TubeGeometry","tubularSegments","radialSegments","closed","taper","bufferGeometry","TubeBufferGeometry","tangents","binormals","frames","computeFrenetFrames","generateBufferData","generateSegment","generateIndices","getPointAt","N","TorusKnotGeometry","tube","heightScale","TorusKnotBufferGeometry","P1","P2","calculatePositionOnCurve","cu","su","quOverP","cs","TorusGeometry","arc","TorusBufferGeometry","isPerspectiveCamera","setFocalLength","focalLength","vExtentSlope","getFilmHeight","atan","getFocalLength","getEffectiveFOV","getFilmWidth","skew","vecX","vecY","wantedRotation","isSpriteMaterial","intersectPoint","worldPosition","worldScale","guessSizeSq","addLevel","getObjectForDistance","matrixPosition","bone","isBone","offsetMatrix","identityMatrix","gbone","rotq","scl","sw","vec","skinWeight","linePrecision","precisionSq","vStart","vEnd","interSegment","interRay","distSq","nbVertices","threshold","localThreshold","localThresholdSq","testPoint","rayPointDistanceSq","distanceToRay","ShapeUtils","contour","triangulate","snip","verts","px","py","aX","aY","bX","bY","cX","cY","apx","apy","bpx","bpy","cpx","cpy","cCROSSap","bCROSScp","aCROSSbp","vertIndices","nv","triangulateShape","holes","removeDupEndPts","point_in_segment_2D_colin","inSegPt1","inSegPt2","inOtherPt","intersect_segments_2D","inSeg1Pt1","inSeg1Pt2","inSeg2Pt1","inSeg2Pt2","inExcludeAdjacentSegs","seg1dx","seg1dy","seg2dx","seg2dy","seg1seg2dx","seg1seg2dy","limit","perpSeg1","perpSeg2","factorSeg1","seg1min","seg1max","seg1minVal","seg1maxVal","seg2min","seg2max","seg2minVal","seg2maxVal","seg1Pt","seg2Pt","isPointInsideAngle","inVertex","inLegFromPt","inLegToPt","legFromPtX","legFromPtY","legToPtX","legToPtY","otherPtX","otherPtY","from2toAngle","from2otherAngle","other2toAngle","removeHoles","hole","shape","isCutLineInsideAngles","inShapeIdx","inHoleIdx","lastShapeIdx","prevShapeIdx","nextShapeIdx","insideAngle","lastHoleIdx","prevHoleIdx","nextHoleIdx","intersectsShapeEdge","inShapePt","inHolePt","sIdx","nextIdx","indepHoles","intersectsHoleEdge","ihIdx","chkHole","hIdx","holeIndex","shapeIndex","shapePt","holePt","holeIdx","cutKey","tmpShape1","tmpShape2","tmpHole1","tmpHole2","failedCuts","hl","minShapeIndex","h2","allPointsMap","allpoints","shapeWithoutHoles","triangles","isClockWise","pts","ExtrudeGeometry","shapes","ExtrudeBufferGeometry","addShapeList","TextGeometry","TextBufferGeometry","font","isFont","generateShapes","curveSegments","amount","bevelThickness","bevelSize","bevelEnabled","SphereGeometry","phiStart","phiLength","thetaStart","thetaLength","SphereBufferGeometry","thetaEnd","grid","verticesRow","RingGeometry","innerRadius","outerRadius","thetaSegments","phiSegments","RingBufferGeometry","segment","radiusStep","thetaSegmentLevel","LatheGeometry","LatheBufferGeometry","inverseSegments","n1","n2","ShapeGeometry","ShapeBufferGeometry","addShape","shapeHole","indexOffset","extractPoints","shapeVertices","shapeHoles","EdgesGeometry","thresholdAngle","thresholdDot","sourceVertices","face1","face2","CylinderGeometry","radiusTop","radiusBottom","openEnded","CylinderBufferGeometry","indexArray","generateTorso","slope","indexRow","sinTheta","cosTheta","generateCap","centerIndexStart","centerIndexEnd","ConeGeometry","ConeBufferGeometry","CircleGeometry","CircleBufferGeometry","getArrays","positionAttribute","verticesArray","uvAttribute","IndexAttribute","indicesArray","sl","arrays","extrudePts","splineTube","binormal","position2","ahole","bevelSegments","steps","extrudePath","extrudeByPath","uvgen","UVGenerator","WorldUVGenerator","getSpacedPoints","shapePoints","scalePt2","pt","bs","vert","vlen","flen","getBevelVec","inPt","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","ptNextShift_x","ptNextShift_y","sf","v_trans_lensq","direction_eq","contourMovements","oneHoleMovements","holesMovements","verticesMovements","buildLidFaces","f3","buildSideFaces","layeroffset","sidewalls","extrudeMaterial","slen1","slen2","f4","addVertex","nextIndex","generateTopUV","addUV","generateSideWallUV","vector2","indexA","indexB","indexC","a_x","a_y","b_x","b_y","c_x","c_y","indexD","a_z","b_z","c_z","d_x","d_y","d_z","Geometries","RawShaderMaterial","STANDARD","PHYSICAL","TOON","Materials","Cache","files","file","LoadingManager","onLoad","onProgress","onError","isLoading","itemsLoaded","itemsTotal","urlModifier","onStart","itemStart","itemEnd","itemError","resolveURL","setURLModifier","DefaultLoadingManager","FileLoader","manager","CompressedTextureLoader","_parser","DataTextureLoader","ImageLoader","CubeTextureLoader","TextureLoader","Light","HemisphereLight","LightShadow","SpotLightShadow","SpotLight","power","PointLight","DirectionalLightShadow","DirectionalLight","AmbientLight","RectAreaLight","load","dataUriRegex","dataUriRegexResult","mimeType","isBase64","atob","response","responseType","Blob","DOMParser","parseFromString","request","XMLHttpRequest","status","withCredentials","overrideMimeType","requestHeader","setRequestHeader","send","setPath","setResponseType","setWithCredentials","setMimeType","loader","loadTexture","texDatas","loaded","mipmapCount","isCubemap","texData","crossOrigin","setCrossOrigin","urls","isJPEG","search","KeyframeTrackPrototype","AnimationUtils","arraySlice","isTypedArray","convertArray","forceClone","ArrayBuffer","isView","DataView","getKeyframeOrder","times","compareTime","sortedArray","nValues","srcOffset","flattenJSON","jsonKeys","valuePropertyName","Interpolant","parameterPositions","sampleValues","sampleSize","resultBuffer","_cachedIndex","valueSize","CubicInterpolant","_weightPrev","_offsetPrev","_weightNext","_offsetNext","LinearInterpolant","DiscreteInterpolant","KeyframeTrackConstructor","interpolation","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","validate","optimize","VectorKeyframeTrack","QuaternionLinearInterpolant","QuaternionKeyframeTrack","NumberKeyframeTrack","StringKeyframeTrack","BooleanKeyframeTrack","ColorKeyframeTrack","KeyframeTrack","AnimationClip","tracks","resetDuration","MaterialLoader","BufferGeometryLoader","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","afterEnd_","t1global","beforeStart_","mid","intervalChanged_","interpolate_","settings","DefaultSettings_","getSettings_","copySampleValue_","endingStart","endingEnd","iPrev","iNext","tPrev","tNext","halfDt","o1","o0","oP","oN","wP","wN","ppp","sP","sN","offset1","offset0","weight1","weight0","InterpolantFactoryMethodDiscrete","getValueSize","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","factoryMethod","createInterpolant","ValueTypeName","getInterpolation","timeOffset","timeScale","startTime","endTime","nKeys","valid","prevTime","currTime","smoothInterpolation","writeIndex","keep","timeNext","offsetP","offsetN","readOffset","writeOffset","json","trackType","_getTrackTypeForValueTypeName","track","typeName","jsonTracks","frameTime","fps","clip","clipTracks","CreateFromMorphTargetSequence","morphTargetSequence","noLoop","numMorphTargets","findByName","objectOrClipArray","clipArray","animations","CreateClipsFromMorphTargetSequences","animationToMorphTargets","parts","animationMorphTargets","clips","parseAnimation","animation","addNonemptyTrack","trackName","animationKeys","destTracks","clipName","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","animationKey","boneName","setTextures","getTexture","shading","typedArray","TYPED_ARRAYS","drawcalls","offsets","Loader","onLoadStart","onLoadProgress","onLoadComplete","JSONLoader","ObjectLoader","texturePath","Handlers","extractUrlBase","initMaterials","createMaterial","BlendingMode","textureLoader","materialLoader","fullPath","mapDiffuseRepeat","mapDiffuseOffset","mapDiffuseWrap","mapDiffuseAnisotropy","mapEmissiveRepeat","mapEmissiveOffset","mapEmissiveWrap","mapEmissiveAnisotropy","mapLightRepeat","mapLightOffset","mapLightWrap","mapLightAnisotropy","mapAORepeat","mapAOOffset","mapAOWrap","mapAOAnisotropy","mapBumpRepeat","mapBumpOffset","mapBumpWrap","mapBumpAnisotropy","mapNormalRepeat","mapNormalOffset","mapNormalWrap","mapNormalAnisotropy","mapSpecularRepeat","mapSpecularOffset","mapSpecularWrap","mapSpecularAnisotropy","mapMetalnessRepeat","mapMetalnessOffset","mapMetalnessWrap","mapMetalnessAnisotropy","mapRoughnessRepeat","mapRoughnessOffset","mapRoughnessWrap","mapRoughnessAnisotropy","mapAlphaRepeat","mapAlphaOffset","mapAlphaWrap","mapAlphaAnisotropy","setTexturePath","parseModel","isBitSet","fi","zLength","colorIndex","normalIndex","uvIndex","isQuad","faceA","faceB","uvLayer","nUvLayers","parseSkin","influencesPerVertex","parseMorphing","dstVertices","srcVertices","morphColors","parseAnimations","outputAnimations","morphAnimationClips","lastIndexOf","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","geometryLoader","bufferGeometryLoader","details","loadImage","parseConstant","TEXTURE_MAPPING","TEXTURE_WRAPPING","TEXTURE_FILTER","getGeometry","getMaterial","CatmullRom","t2","t3","QuadraticBezierP0","QuadraticBezierP1","QuadraticBezierP2","QuadraticBezier","CubicBezierP0","CubicBezierP1","CubicBezierP2","CubicBezierP3","CubicBezier","Curve","arcLengthDivisions","LineCurve","CurvePath","curves","autoClose","EllipseCurve","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","SplineCurve","CubicBezierCurve","v3","QuadraticBezierCurve","getPoint","getUtoTmapping","getPoints","divisions","getLength","lengths","getLengths","cacheArcLengths","sum","updateArcLengths","targetArcLength","arcLengths","comparison","lengthBefore","lengthAfter","segmentLength","segmentFraction","getTangent","pt1","pt2","getTangentAt","mat","MAX_VALUE","tz","isLineCurve","tangent","curve","closePath","startPoint","endPoint","curveLengths","getCurveLengths","lens","cacheLengths","sums","resolution","isEllipseCurve","isSplineCurve","twoPi","deltaAngle","samePoints","intPoint","weight","isCubicBezierCurve","isQuadraticBezierCurve","PathPrototype","moveTo","lineTo","currentPoint","quadraticCurveTo","aCPx","aCPy","bezierCurveTo","aCP1x","aCP1y","aCP2x","aCP2y","splineThru","npts","aRadius","absarc","absellipse","ellipse","firstPoint","lastPoint","Path","Shape","ShapePath","subPaths","currentPath","Font","FontLoader","getPointsHoles","holesPts","toShapes","isCCW","noHoles","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","isPointInsidePolygon","inPolygon","polyLen","inside","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","tmpPoints","tmpHoles","betterShapeHoles","newShapes","newShapeHoles","mainIdx","ambiguous","toChange","sLen","sho","ho","hole_unassigned","s2Idx","froms","tos","createPaths","line_height","yMax","yMin","underlineThickness","paths","char","createPath","glyph","glyphs","cpx1","cpy1","cpx2","cpy2","laste","outline","_cachedOutline","action","ha","lineGeometry","coneGeometry","AudioContext","webkitAudioContext","setContext","AudioLoader","StereoCamera","eyeSep","CubeCamera","cubeResolution","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","AudioListener","gain","createGain","connect","destination","Audio","getInput","autoplay","playbackRate","isPlaying","hasPlaybackControl","sourceType","filters","PositionalAudio","panner","createPanner","AudioAnalyser","audio","fftSize","analyser","createAnalyser","frequencyBinCount","getOutput","PropertyMixer","mixFunction","_slerp","_select","_lerp","_mixBufferRegion","cumulativeWeight","useCount","referenceCount","Composite","targetGroup","optionalParsedPath","parsedPath","PropertyBinding","parseTrackName","_targetGroup","_bindings","subscribe_","rootNode","findNode","nodeName","AnimationObjectGroup","nCachedObjects_","_indicesByUUID","_paths","_parsedPaths","_bindingsIndicesByPath","stats","total","inUse","bindingsPerObject","AnimationAction","mixer","localRoot","_mixer","_clip","_localRoot","nTracks","interpolants","interpolantSettings","interpolant","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","_loopCount","_startTime","_effectiveTimeScale","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","AnimationMixer","_root","_initMemoryManager","_accuIndex","Uniform","InstancedBufferGeometry","InterleavedBufferAttribute","interleavedBuffer","InterleavedBuffer","InstancedInterleavedBuffer","InstancedBufferAttribute","Raycaster","PointCloud","ascSort","intersectObject","Clock","autoStart","oldTime","elapsedTime","running","Spherical","Cylindrical","ImmediateRenderObject","VertexNormalsHelper","nNormals","objGeometry","SpotLightHelper","cone","getBoneList","boneList","SkeletonHelper","PointLightHelper","sphereSize","RectAreaLightHelper","HemisphereLightHelper","GridHelper","PolarGridHelper","radials","circles","FaceNormalsHelper","DirectionalLightHelper","lightPlane","targetLine","CameraHelper","pointMap","colorFrustum","colorCone","colorUp","colorTarget","colorCross","addLine","addPoint","BoxHelper","Box3Helper","PlaneHelper","positions2","ArrowHelper","headLength","headWidth","setDirection","AxesHelper","CubicPoly","c0","initCatmullRom","x3","tension","initNonuniformCatmullRom","dt0","dt1","dt2","calc","decodeAudioData","audioBuffer","instance","eyeRight","eyeLeft","xmin","xmax","eyeSepOnProjection","ymax","removeFilter","disconnect","getFilter","setFilter","getMasterVolume","setMasterVolume","positionX","setValueAtTime","currentTime","positionY","positionZ","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","setNodeSource","audioNode","setBuffer","play","createBufferSource","onended","onEnded","pause","stop","getFilters","setFilters","setPlaybackRate","getPlaybackRate","getLoop","setLoop","getVolume","setVolume","getRefDistance","refDistance","setRefDistance","getRolloffFactor","rolloffFactor","setRolloffFactor","getDistanceModel","distanceModel","setDistanceModel","getMaxDistance","maxDistance","setMaxDistance","getFrequencyData","getByteFrequencyData","getAverageFrequency","accumulate","accuIndex","currentWeight","mix","originalValueOffset","saveOriginalState","restoreOriginalState","firstValidIndex","bindings","isAnimationObjectGroup","sanitizeNodeName","directoryRe","nodeRe","objectRe","propertyRe","trackRe","supportedObjectNames","results","objectName","objectIndex","propertyIndex","lastDot","searchSkeleton","searchNodeSubtree","subTreeNode","_getValue_unavailable","_setValue_unavailable","BindingType","Direct","EntireArray","ArrayElement","HasFromToArray","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","GetterByBindingType","resolvedProperty","SetterByBindingTypeAndVersioning","targetObject","dest","targetArray","sourceArray","nodeProperty","versioning","bindingType","_getValue_unbound","_setValue_unbound","nObjects","nCachedObjects","indicesByUUID","parsedPaths","nBindings","knownObject","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","uncache","lastObject","indicesByPath","unsubscribe_","lastBindingsIndex","lastBindings","lastBindingsPath","_activateAction","_deactivateAction","stopFading","stopWarping","isRunning","_isActiveAction","isScheduled","startAt","setEffectiveWeight","getEffectiveWeight","fadeIn","_scheduleFading","fadeOut","crossFadeFrom","fadeOutAction","warp","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","crossFadeTo","fadeInAction","weightInterpolant","_takeBackControlInterpolant","setEffectiveTimeScale","getEffectiveTimeScale","setDuration","syncWith","halt","startTimeScale","endTimeScale","_lendControlInterpolant","timeScaleInterpolant","getMixer","getClip","getRoot","deltaTime","timeDirection","timeRunning","_updateTimeScale","clipTime","_updateTime","_updateWeight","propertyMixers","interpolantValue","loopCount","_setEndings","handle_stop","pingPong","loopDelta","atStart","atEnd","weightNow","weightThen","_bindAction","prototypeAction","rootUuid","bindingsByRoot","_bindingsByRootAndName","bindingsByName","_addInactiveBinding","clipUuid","actionsForClip","_actionsByClip","knownActions","_addInactiveAction","_lendBinding","_lendAction","_takeBackBinding","_takeBackAction","_actions","_nActiveActions","_nActiveBindings","_controlInterpolants","_nActiveControlInterpolants","actions","controlInterpolants","actionsByClip","actionByRoot","_removeInactiveAction","lastInactiveAction","cacheIndex","knownActionsForClip","lastKnownAction","byClipCacheIndex","_removeInactiveBindingsForAction","_removeInactiveBinding","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","bindingByName","propBinding","lastInactiveBinding","remove_empty_map","firstInactiveBinding","lastActiveBinding","_controlInterpolantsResultBuffer","__cacheIndex","lastActiveInterpolant","clipAction","optionalRoot","clipObject","existingAction","newAction","stopAllAction","nActions","uncacheClip","actionsToRemove","uncacheRoot","uncacheAction","isInterleavedBuffer","setFromCamera","coords","intersectObjects","Date","getElapsedTime","getDelta","newTime","other","makeSafe","vec3","objPos","objNorm","coneLength","coneWidth","boneMatrix","matrixWorldInv","hx","hy","setPoint","setColor","pz","CatmullRomCurve3","curveType","CubicBezierCurve3","QuadraticBezierCurve3","LineCurve3","ArcCurve","Spline","isCatmullRomCurve3","isCubicBezierCurve3","isQuadraticBezierCurve3","isLineCurve3","isArcCurve","construct","createPointsGeometry","createGeometry","createSpacedPointsGeometry","fromPoints","initFromArray","getControlPointsArray","reparametrizeByArcLength","setColors","isIntersectionBox","isIntersectionSphere","random16","nearestPowerOfTwo","nextPowerOfTwo","flattenToArrayOffset","multiplyVector3","multiplyVector3Array","applyToBuffer","applyToVector3Array","extractPosition","getPosition","multiplyToArray","multiplyVector4","rotateAxis","crossVector","rotateByAxis","makeFrustum","isIntersectionLine","isIntersectionPlane","extractAllPoints","extrude","makeGeometry","fromAttribute","distanceToManhattan","lengthManhattan","setEulerFromRotationMatrix","setEulerFromQuaternion","getPositionFromMatrix","getScaleFromMatrix","getColumnFromMatrix","applyProjection","computeTangents","getChildByName","renderDepth","eulerOrder","useQuaternion","setLens","onlyShadow","shadowCameraFov","shadowCameraLeft","shadowCameraRight","shadowCameraTop","shadowCameraBottom","shadowCameraVisible","shadowDarkness","shadowMapWidth","shadowMapHeight","addIndex","addDrawCall","clearDrawCalls","computeOffsets","wrapAround","wrapRGB","metal","getCurrentRenderTarget","getPrecision","resetGLState","supportsFloatTextures","supportsHalfFloatTextures","supportsStandardDerivatives","supportsCompressedTextureS3TC","supportsCompressedTexturePVRTC","supportsBlendMinMax","supportsInstancedArrays","enableScissorTest","addPrePlugin","addPostPlugin","updateShadowMap","shadowMapCullFace","audioLoader","updateCubeMap","object_pattern","material_library_pattern","material_use_pattern","ParserState","materialLibraries","startObject","fromDeclaration","previousMaterial","currentMaterial","_finalize","smooth","startMaterial","libraries","previous","inherited","mtllib","groupEnd","lastMultiMaterial","mi","declared","finalize","parseVertexIndex","parseNormalIndex","parseUVIndex","addVertexLine","addNormal","addColor","addUVLine","ua","ub","uc","na","nb","nc","vLen","ia","ib","ic","uvLen","nLen","addLineGeometry","vi","uvi","OBJLoader","setMaterials","lineFirstChar","lineLength","trimLeft","lineData","vertexData","faceVertices","vertexParts","lineParts","lineVertices","lineUVs","li","llen","createdMaterials","miLen","sourceMaterial","materialLine","timeEnd","DDSLoader","loadMipmaps","dds","DDS_MAGIC","DDSD_MIPMAPCOUNT","DDSCAPS2_CUBEMAP","DDSCAPS2_CUBEMAP_POSITIVEX","DDSCAPS2_CUBEMAP_NEGATIVEX","DDSCAPS2_CUBEMAP_POSITIVEY","DDSCAPS2_CUBEMAP_NEGATIVEY","DDSCAPS2_CUBEMAP_POSITIVEZ","DDSCAPS2_CUBEMAP_NEGATIVEZ","DDPF_FOURCC","fourCCToInt32","int32ToFourCC","loadARGBMip","dataOffset","dataLength","srcBuffer","byteArray","blockBytes","FOURCC_DXT1","FOURCC_DXT3","FOURCC_DXT5","FOURCC_ETC1","headerLengthInt","off_magic","off_size","off_flags","off_height","off_width","off_mipmapCount","off_pfFlags","off_pfFourCC","off_RGBBitCount","off_RBitMask","off_GBitMask","off_BBitMask","off_ABitMask","off_caps2","fourCC","isRGBAUncompressed","caps2","LoaderHandlers","MTLLoader","setBaseUrl","setMaterialOptions","materialOptions","delimiter_pattern","materialsInfo","ss","materialCreator","MaterialCreator","setManager","materialsArray","nameLookup","converted","mn","covmat","save","lprop","normalizeRGB","ignoreZeroRGBs","preload","materialName","getAsArray","createMaterial_","setMapForType","mapType","texParams","getTextureParams","matParams","toIndexed","rawPositions","rawUvs","hasUV","rawNormals","hasNormal","faceNormalss","faceUvs","tmpIndices","n0","uv0","exists","positionBuffer","normalBuffer","i3","_i2","OrbitControls","minZoom","maxZoom","minPolarAngle","maxPolarAngle","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","keyPanSpeed","autoRotate","autoRotateSpeed","enableKeys","UP","BOTTOM","mouseButtons","ORBIT","ZOOM","PAN","target0","position0","zoom0","getPolarAngle","spherical","getAzimuthalAngle","saveState","changeEvent","STATE","NONE","quat","quatInverse","lastPosition","lastQuaternion","rotateLeft","getAutoRotationAngle","sphericalDelta","panOffset","zoomChanged","onContextMenu","onMouseDown","onMouseWheel","onTouchStart","onTouchEnd","onTouchMove","onMouseMove","onMouseUp","onKeyDown","startEvent","endEvent","ROTATE","DOLLY","TOUCH_ROTATE","TOUCH_DOLLY","TOUCH_PAN","rotateStart","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","getZoomScale","rotateUp","panLeft","objectMatrix","panUp","pan","deltaX","deltaY","targetDistance","clientHeight","clientWidth","dollyIn","dollyScale","dollyOut","handleMouseDownRotate","clientX","clientY","handleMouseDownDolly","handleMouseDownPan","handleMouseMoveRotate","handleMouseMoveDolly","handleMouseMovePan","handleMouseWheel","handleKeyDown","keyCode","handleTouchStartRotate","touches","pageX","pageY","handleTouchStartDolly","handleTouchStartPan","handleTouchMoveRotate","handleTouchMoveDolly","handleTouchMovePan","button","stopPropagation","suportWebGL","WebGLRenderingContext","_vm","margin","border","padding","cameraRotation","cameraUp","cameraLookAt","backgroundColor","backgroundAlpha","controllable","mouse","controls","allLights","clock","reqId","hasListener","offsetWidth","onClick","onResize","beforeDestroy","cancelAnimationFrame","oldVal","updateLights","updateCamera","updateRenderer","updateControls","intersected","pick","rect","updateModel","devicePixelRatio","_this2","_color","_intensity","_color2","_intensity2","_intensity3","_this3","getObject","addObject","xhr","smoothing","mtlPath","mtl","objLoader","mtlLoader","mtlSrc","ModelThree","STLLoader","isBinary","face_size","n_faces","reader","binData","getUint32","byteLength","getUint8","ensureBinary","parseBinary","parseASCII","ensureString","defaultR","defaultG","defaultB","faceLength","normalX","getFloat32","normalY","normalZ","packedColor","getUint16","vertexstart","patternFace","patternNormal","patternVertex","buf","array_buffer","strArray","ModelStl","PLYLoader","propertyNameMapping","setPropertyNameMapping","bin2str","TextDecoder","decode","parseHeader","patternHeader","headerText","headerLength","currentElement","lineType","lineValues","comments","make_ply_element_property","propertValues","countType","itemType","parseASCIINumber","parseASCIIElement","patternBody","currentElementCount","handleElement","postProcess","elementName","vertex_indices","vertex_index","binaryRead","dataview","little_endian","getInt8","getInt16","getInt32","getFloat64","binaryReadElement","read","loc","ModelPly","ColladaLoader","convertUpAxis","getElementsByTagName","xml","parseStrings","parseFloats","parseInts","parseId","parseAsset","parseAssetUnit","upAxis","parseAssetUpAxis","parseLibrary","libraryName","buildLibrary","builder","build","getBuild","sources","samplers","channels","parseSource","parseAnimationSampler","parseAnimationChannel","inputs","semantic","sid","arraySyntax","memberSyntax","member","sampler","buildAnimation","inputId","INPUT","outputId","OUTPUT","inputSource","outputSource","buildAnimationChannel","createKeyframeTracks","getAnimation","object3D","getNode","transforms","defaultMatrix","keyframes","prepareAnimationData","ascending","transformAnimationData","positionData","quaternionData","scaleData","keyframe","defaultValue","createMissingKeyframes","prev","getPrev","getNext","interpolate","parseAnimationClip","buildAnimationClip","animationTracks","getAnimationClip","parseController","skin","controllers","bindShapeMatrix","joints","parseJoints","vertexWeights","parseVertexWeights","vcount","buildController","buildSkin","weights","BONE_LIMIT","jointOffset","JOINT","weightOffset","WEIGHT","jointSource","inverseSource","INV_BIND_MATRIX","jointCount","vertexSkinData","skinIndex","weightId","descending","boneInverse","getController","parseImage","init_from","buildImage","getImage","parseEffect","profile","parseEffectProfileCOMMON","effects","surfaces","parseEffectNewparam","technique","parseEffectTechnique","parseEffectSurface","parseEffectSampler","parseEffectParameters","parseEffectParameter","extra","parseEffectParameterTexture","parseEffectParameterTextureExtra","parseEffectParameterTextureExtraTechnique","buildEffect","getEffect","parseMaterial","buildMaterial","effect","textureObject","surface","wrapU","wrapV","offsetU","offsetV","repeatU","repeatV","parameter","float","parseCamera","optics","parseCameraOptics","parseCameraTechnique","parseCameraParameters","buildCamera","yfov","aspect_ratio","znear","zfar","ymag","xmag","aspectRatio","parseLight","parseLightTechnique","parseLightParameters","falloffAngle","buildLight","getLight","parseGeometry","primitives","parseGeometryVertices","parseGeometryPrimitive","accessor","primitive","groupPrimitives","buildGeometry","groupedPrimitives","buildGeometryType","materialKeys","triangleCount","input","buildGeometryData","pushVector","sourceStride","maxcount","parseKinematicsModel","parseKinematicsTechniqueCommon","kinematicsModels","buildKinematicsModel","getKinematicsModel","parseKinematicsJoint","parseKinematicsLink","parseKinematicsJointParameter","limits","static","zeroPosition","middlePosition","attachments","parseKinematicsAttachment","parseKinematicsTransform","joint","parseKinematicsScene","bindJointAxis","parseKinematicsBindJointAxis","kinematicsScenes","param","tmpJointIndex","jointIndex","buildKinematicsScene","getKinematicsScene","setupKinematics","kinematicsModelId","kinematicsSceneId","visualSceneId","visualScenes","kinematicsModel","kinematicsScene","visualScene","getVisualScene","jointMap","targetElement","collada","parentVisualElement","parentElement","m0","kinematics","getJointValue","jointData","setJointValue","visualElement","visualElementName","buildTransformList","parseNode","instanceCameras","instanceControllers","instanceLights","instanceGeometries","instanceNodes","parseNodeInstance","skeletons","instances","symbol","buildSkeleton","boneData","sortedBoneData","buildBoneHierarchy","processed","buildNode","controller","newObjects","buildObjects","resolveMaterialBinding","instanceMaterials","parseVisualScene","buildVisualScene","parseScene","setupAnimations","asset","ModelCollada","LoaderUtils","decodeText","GLTFLoader","GLTFRegistry","removeAll","magic","BINARY_EXTENSION_HEADER_MAGIC","EXTENSIONS","KHR_BINARY_GLTF","GLTFBinaryExtension","extensionsUsed","KHR_LIGHTS","GLTFLightsExtension","KHR_MATERIALS_COMMON","GLTFMaterialsCommonExtension","KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS","GLTFMaterialsPbrSpecularGlossinessExtension","GLTFParser","scenes","glTF","lightId","lightNode","constantAttenuation","linearAttenuation","quadraticAttenuation","fallOffAngle","fallOffExponent","getMaterialType","khrMaterial","extendParams","materialParams","materialValues","diffuseFactor","diffuseTexture","assignTexture","specularFactor","specularTexture","shininessFactor","BINARY_EXTENSION_HEADER_LENGTH","BINARY_EXTENSION_CHUNK_TYPES","BIN","headerView","chunkView","chunkIndex","chunkLength","chunkType","contentArray","byteOffset","specularGlossinessParams","pbrSpecularGlossiness","specularMapParsFragmentChunk","glossinessMapParsFragmentChunk","specularMapFragmentChunk","glossinessMapFragmentChunk","lightPhysicalFragmentChunk","glossiness","glossinessMap","glossinessFactor","specularGlossinessTexture","specGlossIndex","isGLTFSpecularGlossinessMaterial","cloneMaterial","refreshUniforms","offsetRepeat","USE_GLOSSINESSMAP","USE_ROUGHNESSMAP","WEBGL_CONSTANTS","FLOAT_MAT3","FLOAT_MAT4","FLOAT_VEC2","FLOAT_VEC3","FLOAT_VEC4","SAMPLER_2D","WEBGL_COMPONENT_TYPES","5120","5121","5122","5123","5125","5126","WEBGL_FILTERS","9728","9729","9984","9985","9986","9987","WEBGL_WRAPPINGS","33071","33648","10497","WEBGL_TEXTURE_FORMATS","6406","6407","6408","6409","6410","WEBGL_TEXTURE_DATATYPES","32819","32820","33635","WEBGL_TYPE_SIZES","SCALAR","VEC2","VEC3","VEC4","MAT2","MAT3","MAT4","PATH_PROPERTIES","translation","INTERPOLATION","CUBICSPLINE","STEP","ALPHA_MODES","OPAQUE","MASK","createDefaultMaterial","addMorphTargets","meshDef","primitiveDef","accessors","normalAttribute","attributeName","POSITION","NORMAL","isPrimitiveEqual","attribA","attribB","getCachedGeometry","newPrimitive","primitiveCache","fileLoader","markDefs","getMultiDependencies","dependencies","nodeDefs","skinDefs","skins","meshDefs","meshes","meshReferences","meshUses","skinLength","nodeIndex","nodeLength","nodeDef","getDependency","cacheKey","dependency","fnName","getDependencies","defs","types","pendings","loadBuffer","bufferIndex","bufferDef","uri","loadBufferView","bufferViewIndex","bufferViewDef","bufferViews","loadAccessor","accessorIndex","accessorDef","pendingBufferViews","bufferView","sparse","bufferAttribute","TypedArray","componentType","elementBytes","itemBytes","byteStride","itemSizeIndices","TypedArrayIndices","byteOffsetIndices","byteOffsetValues","sparseIndices","sparseValues","textureIndex","URL","webkitURL","textureDef","sourceURI","isObjectURL","blob","createObjectURL","revokeObjectURL","textureName","loadMaterial","materialType","materialDef","materialExtensions","khcExtension","sgExtension","pbrMetallicRoughness","metallicRoughness","baseColorFactor","baseColorTexture","metallicFactor","roughnessFactor","metallicRoughnessTexture","alphaMode","alphaCutoff","normalTexture","strength","emissiveFactor","emissiveTexture","extras","loadGeometries","attributeId","attributeEntry","loadMesh","meshIndex","useVertexColors","useFlatShading","useMorphTargets","specGlossExtension","loadCamera","cameraIndex","cameraDef","xfov","loadSkin","skinDef","skinEntry","inverseBindMatrices","loadAnimation","animationIndex","animationDef","inputAccessor","outputAccessor","TypedKeyframeTrack","targetName","outputAccessorValues","targetNames","loadNode","isGroup","loadScene","buildNodeHierachy","nodeId","parentObject","allNodes","jointId","jointNode","sceneIndex","sceneDef","nodeIds","ModelGltf","ModelJson","ModelDae","Vue$$1","toIObject","toAbsoluteIndex","IS_INCLUDES","$this","fromIndex","eval","addToUnscopables","iterated","Arguments","arrayIndexOf","names","D","forbiddenField","includes","youtubeRegexp","timeRegexp","getIdFromURL","pieces","uriComponent","getTimeFromURL","full","minutes","seconds","scripts","YT","register","pid","YouTubePlayer","playerHeight","playerWidth","playerVars","videoId","mute","elementId","template","player","setMute","unMute","YouTube","Player","onReady","onStateChange","ready","componentId","$youtube","firstScriptTag","onYouTubeIframeAPIReady","PlayerState","ENDED","PLAYING","PAUSED","BUFFERING","CUED","documentElement"],"mappings":"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CAC,gBACA1F,UACA2F,+BACAC,wBACAC,+BACAC,0BACAC,wBACAC,6BACAC,sBACAC,2BACAC,mBACAC,wBACAC,sBACAC,iBACAC,cACAC,mBACAC,gBACAC,qBACAC,6BACAC,qBACAC,0BACAC,yBACAC,eACAC,yBACAC,8BACAC,4BACAC,iCACAC,mBACAC,wBACAC,6BACAC,2BACAC,sBACAC,gBACAC,qBACAC,yBACAC,8BACAC,yBACAC,8BACAC,sBACAC,2BACAC,sBACAC,mBACAC,2BACAC,WACAC,gCACAC,kBACAC,sBACAC,2BACAC,yBACAC,8BACAC,2BACAC,yBACAC,oBACAC,4BACAC,mBACAC,wBACAC,mBACAC,qBACAC,wBACAC,6BACAC,wBACAC,6BACAC,oBACAC,kBACAC,aACAC,qBACAC,mBACAC,cACAC,mBAEAC,aACAC,aACAC,cACAC,cACAC,qBACAC,qBACAC,iBACAC,iBACAC,mBACAC,mBACAC,kBACAC,kBACAC,oBACAC,oBACAC,kBACAC,kBACAC,qBACAC,qBACAC,eACAC,eACAC,eACAC,eACAC,eACAC,gBASAE,IAEAC,OAEAlH,SAAAD,GAAA7xE,OACAutE,GAAAC,OACAD,GAAAM,YACAN,GAAAQ,OACAR,GAAAa,MACAb,GAAAgB,SACAhB,GAAAqC,MAGAqJ,aAAAH,GAAAb,eACAiB,eAAAJ,GAAAd,gBAIAmB,SAEArH,SAAAD,GAAA7xE,OACAutE,GAAAC,OACAD,GAAAM,YACAN,GAAAQ,OACAR,GAAAa,MACAb,GAAAgB,SACAhB,GAAAmB,YACAnB,GAAAqC,IACArC,GAAA0C,QAEAmJ,UAAetsE,MAAA,IAAA2+D,GAAA,OAIfwN,aAAAH,GAAAX,iBACAe,eAAAJ,GAAAZ,kBAIAmB,OAEAvH,SAAAD,GAAA7xE,OACAutE,GAAAC,OACAD,GAAAM,YACAN,GAAAQ,OACAR,GAAAa,MACAb,GAAAgB,SACAhB,GAAAmB,YACAnB,GAAAqB,QACArB,GAAAwB,UACAxB,GAAA2B,gBACA3B,GAAAmC,YACAnC,GAAAqC,IACArC,GAAA0C,QAEAmJ,UAAetsE,MAAA,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","file":"js/chunk-vendors.1b39add7.js","sourcesContent":["'use strict';\nvar LIBRARY = require('./_library');\nvar $export = require('./_export');\nvar redefine = require('./_redefine');\nvar hide = require('./_hide');\nvar Iterators = require('./_iterators');\nvar $iterCreate = require('./_iter-create');\nvar setToStringTag = require('./_set-to-string-tag');\nvar getPrototypeOf = require('./_object-gpo');\nvar ITERATOR = require('./_wks')('iterator');\nvar BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`\nvar FF_ITERATOR = '@@iterator';\nvar KEYS = 'keys';\nvar VALUES = 'values';\n\nvar returnThis = function () { return this; };\n\nmodule.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function (kind) {\n    if (!BUGGY && kind in proto) return proto[kind];\n    switch (kind) {\n      case KEYS: return function keys() { return new Constructor(this, kind); };\n      case VALUES: return function values() { return new Constructor(this, kind); };\n    } return function entries() { return new Constructor(this, kind); };\n  };\n  var TAG = NAME + ' Iterator';\n  var DEF_VALUES = DEFAULT == VALUES;\n  var VALUES_BUG = false;\n  var proto = Base.prototype;\n  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\n  var $default = $native || getMethod(DEFAULT);\n  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\n  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\n  var methods, key, IteratorPrototype;\n  // Fix native\n  if ($anyNative) {\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));\n    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\n      // Set @@toStringTag to native iterators\n      setToStringTag(IteratorPrototype, TAG, true);\n      // fix for some old engines\n      if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  // fix Array#{values, @@iterator}.name in V8 / FF\n  if (DEF_VALUES && $native && $native.name !== VALUES) {\n    VALUES_BUG = true;\n    $default = function values() { return $native.call(this); };\n  }\n  // Define iterator\n  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\n    hide(proto, ITERATOR, $default);\n  }\n  // Plug for library\n  Iterators[NAME] = $default;\n  Iterators[TAG] = returnThis;\n  if (DEFAULT) {\n    methods = {\n      values: DEF_VALUES ? $default : getMethod(VALUES),\n      keys: IS_SET ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if (FORCED) for (key in methods) {\n      if (!(key in proto)) redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n","// https://github.com/tc39/proposal-promise-finally\n'use strict';\nvar $export = require('./_export');\nvar core = require('./_core');\nvar global = require('./_global');\nvar speciesConstructor = require('./_species-constructor');\nvar promiseResolve = require('./_promise-resolve');\n\n$export($export.P + $export.R, 'Promise', { 'finally': function (onFinally) {\n  var C = speciesConstructor(this, core.Promise || global.Promise);\n  var isFunction = typeof onFinally == 'function';\n  return this.then(\n    isFunction ? function (x) {\n      return promiseResolve(C, onFinally()).then(function () { return x; });\n    } : onFinally,\n    isFunction ? function (e) {\n      return promiseResolve(C, onFinally()).then(function () { throw e; });\n    } : onFinally\n  );\n} });\n","// 19.1.2.14 / 15.2.3.14 Object.keys(O)\nvar $keys = require('./_object-keys-internal');\nvar enumBugKeys = require('./_enum-bug-keys');\n\nmodule.exports = Object.keys || function keys(O) {\n  return $keys(O, enumBugKeys);\n};\n","/**\n * marked - a markdown parser\n * Copyright (c) 2011-2014, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n;(function(root) {\n'use strict';\n\n/**\n * Block-Level Grammar\n */\n\nvar block = {\n  newline: /^\\n+/,\n  code: /^( {4}[^\\n]+\\n*)+/,\n  fences: noop,\n  hr: /^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)/,\n  heading: /^ *(#{1,6}) *([^\\n]+?) *(?:#+ *)?(?:\\n+|$)/,\n  nptable: noop,\n  blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n  list: /^( *)(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?!\\1bull )\\n*|\\s*$)/,\n  html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?\\\\?>\\\\n*' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?>\\\\n*' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>\\\\n*' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (6)\n    + '|<(?!script|pre|style)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=\\\\h*\\\\n)[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) open tag\n    + '|</(?!script|pre|style)[a-z][\\\\w-]*\\\\s*>(?=\\\\h*\\\\n)[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) closing tag\n    + ')',\n  def: /^ {0,3}\\[(label)\\]: *\\n? *<?([^\\s>]+)>?(?:(?: +\\n? *| *\\n *)(title))? *(?:\\n+|$)/,\n  table: noop,\n  lheading: /^([^\\n]+)\\n *(=|-){2,} *(?:\\n+|$)/,\n  paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading| {0,3}>|<\\/?(?:tag)(?: +|\\n|\\/?>)|<(?:script|pre|style|!--))[^\\n]+)*)/,\n  text: /^[^\\n]+/\n};\n\nblock._label = /(?!\\s*\\])(?:\\\\[\\[\\]]|[^\\[\\]])+/;\nblock._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\nblock.def = edit(block.def)\n  .replace('label', block._label)\n  .replace('title', block._title)\n  .getRegex();\n\nblock.bullet = /(?:[*+-]|\\d+\\.)/;\nblock.item = /^( *)(bull) [^\\n]*(?:\\n(?!\\1bull )[^\\n]*)*/;\nblock.item = edit(block.item, 'gm')\n  .replace(/bull/g, block.bullet)\n  .getRegex();\n\nblock.list = edit(block.list)\n  .replace(/bull/g, block.bullet)\n  .replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))')\n  .replace('def', '\\\\n+(?=' + block.def.source + ')')\n  .getRegex();\n\nblock._tag = 'address|article|aside|base|basefont|blockquote|body|caption'\n  + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption'\n  + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe'\n  + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option'\n  + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr'\n  + '|track|ul';\nblock._comment = /<!--(?!-?>)[\\s\\S]*?-->/;\nblock.html = edit(block.html, 'i')\n  .replace('comment', block._comment)\n  .replace('tag', block._tag)\n  .replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/)\n  .getRegex();\n\nblock.paragraph = edit(block.paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', block.heading)\n  .replace('lheading', block.lheading)\n  .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.blockquote = edit(block.blockquote)\n  .replace('paragraph', block.paragraph)\n  .getRegex();\n\n/**\n * Normal Block Grammar\n */\n\nblock.normal = merge({}, block);\n\n/**\n * GFM Block Grammar\n */\n\nblock.gfm = merge({}, block.normal, {\n  fences: /^ *(`{3,}|~{3,})[ \\.]*(\\S+)? *\\n([\\s\\S]*?)\\n? *\\1 *(?:\\n+|$)/,\n  paragraph: /^/,\n  heading: /^ *(#{1,6}) +([^\\n]+?) *#* *(?:\\n+|$)/\n});\n\nblock.gfm.paragraph = edit(block.paragraph)\n  .replace('(?!', '(?!'\n    + block.gfm.fences.source.replace('\\\\1', '\\\\2') + '|'\n    + block.list.source.replace('\\\\1', '\\\\3') + '|')\n  .getRegex();\n\n/**\n * GFM + Tables Block Grammar\n */\n\nblock.tables = merge({}, block.gfm, {\n  nptable: /^ *([^|\\n ].*\\|.*)\\n *([-:]+ *\\|[-| :]*)(?:\\n((?:.*[^>\\n ].*(?:\\n|$))*)\\n*|$)/,\n  table: /^ *\\|(.+)\\n *\\|?( *[-:]+[-| :]*)(?:\\n((?: *[^>\\n ].*(?:\\n|$))*)\\n*|$)/\n});\n\n/**\n * Pedantic grammar\n */\n\nblock.pedantic = merge({}, block.normal, {\n  html: edit(\n    '^ *(?:comment *(?:\\\\n|\\\\s*$)'\n    + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))')\n    .replace('comment', block._comment)\n    .replace(/tag/g, '(?!(?:'\n      + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub'\n      + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)'\n      + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b')\n    .getRegex(),\n  def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/\n});\n\n/**\n * Block Lexer\n */\n\nfunction Lexer(options) {\n  this.tokens = [];\n  this.tokens.links = Object.create(null);\n  this.options = options || marked.defaults;\n  this.rules = block.normal;\n\n  if (this.options.pedantic) {\n    this.rules = block.pedantic;\n  } else if (this.options.gfm) {\n    if (this.options.tables) {\n      this.rules = block.tables;\n    } else {\n      this.rules = block.gfm;\n    }\n  }\n}\n\n/**\n * Expose Block Rules\n */\n\nLexer.rules = block;\n\n/**\n * Static Lex Method\n */\n\nLexer.lex = function(src, options) {\n  var lexer = new Lexer(options);\n  return lexer.lex(src);\n};\n\n/**\n * Preprocessing\n */\n\nLexer.prototype.lex = function(src) {\n  src = src\n    .replace(/\\r\\n|\\r/g, '\\n')\n    .replace(/\\t/g, '    ')\n    .replace(/\\u00a0/g, ' ')\n    .replace(/\\u2424/g, '\\n');\n\n  return this.token(src, true);\n};\n\n/**\n * Lexing\n */\n\nLexer.prototype.token = function(src, top) {\n  src = src.replace(/^ +$/gm, '');\n  var next,\n      loose,\n      cap,\n      bull,\n      b,\n      item,\n      listStart,\n      listItems,\n      t,\n      space,\n      i,\n      tag,\n      l,\n      isordered,\n      istask,\n      ischecked;\n\n  while (src) {\n    // newline\n    if (cap = this.rules.newline.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (cap[0].length > 1) {\n        this.tokens.push({\n          type: 'space'\n        });\n      }\n    }\n\n    // code\n    if (cap = this.rules.code.exec(src)) {\n      src = src.substring(cap[0].length);\n      cap = cap[0].replace(/^ {4}/gm, '');\n      this.tokens.push({\n        type: 'code',\n        text: !this.options.pedantic\n          ? rtrim(cap, '\\n')\n          : cap\n      });\n      continue;\n    }\n\n    // fences (gfm)\n    if (cap = this.rules.fences.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'code',\n        lang: cap[2],\n        text: cap[3] || ''\n      });\n      continue;\n    }\n\n    // heading\n    if (cap = this.rules.heading.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'heading',\n        depth: cap[1].length,\n        text: cap[2]\n      });\n      continue;\n    }\n\n    // table no leading pipe (gfm)\n    if (top && (cap = this.rules.nptable.exec(src))) {\n      item = {\n        type: 'table',\n        header: splitCells(cap[1].replace(/^ *| *\\| *$/g, '')),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : []\n      };\n\n      if (item.header.length === item.align.length) {\n        src = src.substring(cap[0].length);\n\n        for (i = 0; i < item.align.length; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n\n        for (i = 0; i < item.cells.length; i++) {\n          item.cells[i] = splitCells(item.cells[i], item.header.length);\n        }\n\n        this.tokens.push(item);\n\n        continue;\n      }\n    }\n\n    // hr\n    if (cap = this.rules.hr.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'hr'\n      });\n      continue;\n    }\n\n    // blockquote\n    if (cap = this.rules.blockquote.exec(src)) {\n      src = src.substring(cap[0].length);\n\n      this.tokens.push({\n        type: 'blockquote_start'\n      });\n\n      cap = cap[0].replace(/^ *> ?/gm, '');\n\n      // Pass `top` to keep the current\n      // \"toplevel\" state. This is exactly\n      // how markdown.pl works.\n      this.token(cap, top);\n\n      this.tokens.push({\n        type: 'blockquote_end'\n      });\n\n      continue;\n    }\n\n    // list\n    if (cap = this.rules.list.exec(src)) {\n      src = src.substring(cap[0].length);\n      bull = cap[2];\n      isordered = bull.length > 1;\n\n      listStart = {\n        type: 'list_start',\n        ordered: isordered,\n        start: isordered ? +bull : '',\n        loose: false\n      };\n\n      this.tokens.push(listStart);\n\n      // Get each top-level item.\n      cap = cap[0].match(this.rules.item);\n\n      listItems = [];\n      next = false;\n      l = cap.length;\n      i = 0;\n\n      for (; i < l; i++) {\n        item = cap[i];\n\n        // Remove the list item's bullet\n        // so it is seen as the next token.\n        space = item.length;\n        item = item.replace(/^ *([*+-]|\\d+\\.) +/, '');\n\n        // Outdent whatever the\n        // list item contains. Hacky.\n        if (~item.indexOf('\\n ')) {\n          space -= item.length;\n          item = !this.options.pedantic\n            ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '')\n            : item.replace(/^ {1,4}/gm, '');\n        }\n\n        // Determine whether the next list item belongs here.\n        // Backpedal if it does not belong in this list.\n        if (this.options.smartLists && i !== l - 1) {\n          b = block.bullet.exec(cap[i + 1])[0];\n          if (bull !== b && !(bull.length > 1 && b.length > 1)) {\n            src = cap.slice(i + 1).join('\\n') + src;\n            i = l - 1;\n          }\n        }\n\n        // Determine whether item is loose or not.\n        // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\n        // for discount behavior.\n        loose = next || /\\n\\n(?!\\s*$)/.test(item);\n        if (i !== l - 1) {\n          next = item.charAt(item.length - 1) === '\\n';\n          if (!loose) loose = next;\n        }\n\n        if (loose) {\n          listStart.loose = true;\n        }\n\n        // Check for task list items\n        istask = /^\\[[ xX]\\] /.test(item);\n        ischecked = undefined;\n        if (istask) {\n          ischecked = item[1] !== ' ';\n          item = item.replace(/^\\[[ xX]\\] +/, '');\n        }\n\n        t = {\n          type: 'list_item_start',\n          task: istask,\n          checked: ischecked,\n          loose: loose\n        };\n\n        listItems.push(t);\n        this.tokens.push(t);\n\n        // Recurse.\n        this.token(item, false);\n\n        this.tokens.push({\n          type: 'list_item_end'\n        });\n      }\n\n      if (listStart.loose) {\n        l = listItems.length;\n        i = 0;\n        for (; i < l; i++) {\n          listItems[i].loose = true;\n        }\n      }\n\n      this.tokens.push({\n        type: 'list_end'\n      });\n\n      continue;\n    }\n\n    // html\n    if (cap = this.rules.html.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: this.options.sanitize\n          ? 'paragraph'\n          : 'html',\n        pre: !this.options.sanitizer\n          && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n        text: cap[0]\n      });\n      continue;\n    }\n\n    // def\n    if (top && (cap = this.rules.def.exec(src))) {\n      src = src.substring(cap[0].length);\n      if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\n      tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n      if (!this.tokens.links[tag]) {\n        this.tokens.links[tag] = {\n          href: cap[2],\n          title: cap[3]\n        };\n      }\n      continue;\n    }\n\n    // table (gfm)\n    if (top && (cap = this.rules.table.exec(src))) {\n      item = {\n        type: 'table',\n        header: splitCells(cap[1].replace(/^ *| *\\| *$/g, '')),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3] ? cap[3].replace(/(?: *\\| *)?\\n$/, '').split('\\n') : []\n      };\n\n      if (item.header.length === item.align.length) {\n        src = src.substring(cap[0].length);\n\n        for (i = 0; i < item.align.length; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n\n        for (i = 0; i < item.cells.length; i++) {\n          item.cells[i] = splitCells(\n            item.cells[i].replace(/^ *\\| *| *\\| *$/g, ''),\n            item.header.length);\n        }\n\n        this.tokens.push(item);\n\n        continue;\n      }\n    }\n\n    // lheading\n    if (cap = this.rules.lheading.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'heading',\n        depth: cap[2] === '=' ? 1 : 2,\n        text: cap[1]\n      });\n      continue;\n    }\n\n    // top-level paragraph\n    if (top && (cap = this.rules.paragraph.exec(src))) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'paragraph',\n        text: cap[1].charAt(cap[1].length - 1) === '\\n'\n          ? cap[1].slice(0, -1)\n          : cap[1]\n      });\n      continue;\n    }\n\n    // text\n    if (cap = this.rules.text.exec(src)) {\n      // Top-level should never reach here.\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'text',\n        text: cap[0]\n      });\n      continue;\n    }\n\n    if (src) {\n      throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n    }\n  }\n\n  return this.tokens;\n};\n\n/**\n * Inline-Level Grammar\n */\n\nvar inline = {\n  escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n  autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n  url: noop,\n  tag: '^comment'\n    + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>', // CDATA section\n  link: /^!?\\[(label)\\]\\(href(?:\\s+(title))?\\s*\\)/,\n  reflink: /^!?\\[(label)\\]\\[(?!\\s*\\])((?:\\\\[\\[\\]]?|[^\\[\\]\\\\])+)\\]/,\n  nolink: /^!?\\[(?!\\s*\\])((?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]|[^\\[\\]])*)\\](?:\\[\\])?/,\n  strong: /^__([^\\s])__(?!_)|^\\*\\*([^\\s])\\*\\*(?!\\*)|^__([^\\s][\\s\\S]*?[^\\s])__(?!_)|^\\*\\*([^\\s][\\s\\S]*?[^\\s])\\*\\*(?!\\*)/,\n  em: /^_([^\\s_])_(?!_)|^\\*([^\\s*\"<\\[])\\*(?!\\*)|^_([^\\s][\\s\\S]*?[^\\s_])_(?!_)|^_([^\\s_][\\s\\S]*?[^\\s])_(?!_)|^\\*([^\\s\"<\\[][\\s\\S]*?[^\\s*])\\*(?!\\*)|^\\*([^\\s*\"<\\[][\\s\\S]*?[^\\s])\\*(?!\\*)/,\n  code: /^(`+)\\s*([\\s\\S]*?[^`]?)\\s*\\1(?!`)/,\n  br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n  del: noop,\n  text: /^[\\s\\S]+?(?=[\\\\<!\\[`*]|\\b_| {2,}\\n|$)/\n};\n\ninline._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n\ninline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\ninline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\ninline.autolink = edit(inline.autolink)\n  .replace('scheme', inline._scheme)\n  .replace('email', inline._email)\n  .getRegex();\n\ninline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n\ninline.tag = edit(inline.tag)\n  .replace('comment', block._comment)\n  .replace('attribute', inline._attribute)\n  .getRegex();\n\ninline._label = /(?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]?|`[^`]*`|[^\\[\\]\\\\])*?/;\ninline._href = /\\s*(<(?:\\\\[<>]?|[^\\s<>\\\\])*>|(?:\\\\[()]?|\\([^\\s\\x00-\\x1f\\\\]*\\)|[^\\s\\x00-\\x1f()\\\\])*?)/;\ninline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n\ninline.link = edit(inline.link)\n  .replace('label', inline._label)\n  .replace('href', inline._href)\n  .replace('title', inline._title)\n  .getRegex();\n\ninline.reflink = edit(inline.reflink)\n  .replace('label', inline._label)\n  .getRegex();\n\n/**\n * Normal Inline Grammar\n */\n\ninline.normal = merge({}, inline);\n\n/**\n * Pedantic Inline Grammar\n */\n\ninline.pedantic = merge({}, inline.normal, {\n  strong: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n  em: /^_(?=\\S)([\\s\\S]*?\\S)_(?!_)|^\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)/,\n  link: edit(/^!?\\[(label)\\]\\((.*?)\\)/)\n    .replace('label', inline._label)\n    .getRegex(),\n  reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/)\n    .replace('label', inline._label)\n    .getRegex()\n});\n\n/**\n * GFM Inline Grammar\n */\n\ninline.gfm = merge({}, inline.normal, {\n  escape: edit(inline.escape).replace('])', '~|])').getRegex(),\n  url: edit(/^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/)\n    .replace('email', inline._email)\n    .getRegex(),\n  _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n  del: /^~+(?=\\S)([\\s\\S]*?\\S)~+/,\n  text: edit(inline.text)\n    .replace(']|', '~]|')\n    .replace('|', '|https?://|ftp://|www\\\\.|[a-zA-Z0-9.!#$%&\\'*+/=?^_`{\\\\|}~-]+@|')\n    .getRegex()\n});\n\n/**\n * GFM + Line Breaks Inline Grammar\n */\n\ninline.breaks = merge({}, inline.gfm, {\n  br: edit(inline.br).replace('{2,}', '*').getRegex(),\n  text: edit(inline.gfm.text).replace('{2,}', '*').getRegex()\n});\n\n/**\n * Inline Lexer & Compiler\n */\n\nfunction InlineLexer(links, options) {\n  this.options = options || marked.defaults;\n  this.links = links;\n  this.rules = inline.normal;\n  this.renderer = this.options.renderer || new Renderer();\n  this.renderer.options = this.options;\n\n  if (!this.links) {\n    throw new Error('Tokens array requires a `links` property.');\n  }\n\n  if (this.options.pedantic) {\n    this.rules = inline.pedantic;\n  } else if (this.options.gfm) {\n    if (this.options.breaks) {\n      this.rules = inline.breaks;\n    } else {\n      this.rules = inline.gfm;\n    }\n  }\n}\n\n/**\n * Expose Inline Rules\n */\n\nInlineLexer.rules = inline;\n\n/**\n * Static Lexing/Compiling Method\n */\n\nInlineLexer.output = function(src, links, options) {\n  var inline = new InlineLexer(links, options);\n  return inline.output(src);\n};\n\n/**\n * Lexing/Compiling\n */\n\nInlineLexer.prototype.output = function(src) {\n  var out = '',\n      link,\n      text,\n      href,\n      title,\n      cap,\n      prevCapZero;\n\n  while (src) {\n    // escape\n    if (cap = this.rules.escape.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += cap[1];\n      continue;\n    }\n\n    // autolink\n    if (cap = this.rules.autolink.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (cap[2] === '@') {\n        text = escape(this.mangle(cap[1]));\n        href = 'mailto:' + text;\n      } else {\n        text = escape(cap[1]);\n        href = text;\n      }\n      out += this.renderer.link(href, null, text);\n      continue;\n    }\n\n    // url (gfm)\n    if (!this.inLink && (cap = this.rules.url.exec(src))) {\n      do {\n        prevCapZero = cap[0];\n        cap[0] = this.rules._backpedal.exec(cap[0])[0];\n      } while (prevCapZero !== cap[0]);\n      src = src.substring(cap[0].length);\n      if (cap[2] === '@') {\n        text = escape(cap[0]);\n        href = 'mailto:' + text;\n      } else {\n        text = escape(cap[0]);\n        if (cap[1] === 'www.') {\n          href = 'http://' + text;\n        } else {\n          href = text;\n        }\n      }\n      out += this.renderer.link(href, null, text);\n      continue;\n    }\n\n    // tag\n    if (cap = this.rules.tag.exec(src)) {\n      if (!this.inLink && /^<a /i.test(cap[0])) {\n        this.inLink = true;\n      } else if (this.inLink && /^<\\/a>/i.test(cap[0])) {\n        this.inLink = false;\n      }\n      src = src.substring(cap[0].length);\n      out += this.options.sanitize\n        ? this.options.sanitizer\n          ? this.options.sanitizer(cap[0])\n          : escape(cap[0])\n        : cap[0]\n      continue;\n    }\n\n    // link\n    if (cap = this.rules.link.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.inLink = true;\n      href = cap[2];\n      if (this.options.pedantic) {\n        link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n        if (link) {\n          href = link[1];\n          title = link[3];\n        } else {\n          title = '';\n        }\n      } else {\n        title = cap[3] ? cap[3].slice(1, -1) : '';\n      }\n      href = href.trim().replace(/^<([\\s\\S]*)>$/, '$1');\n      out += this.outputLink(cap, {\n        href: InlineLexer.escapes(href),\n        title: InlineLexer.escapes(title)\n      });\n      this.inLink = false;\n      continue;\n    }\n\n    // reflink, nolink\n    if ((cap = this.rules.reflink.exec(src))\n        || (cap = this.rules.nolink.exec(src))) {\n      src = src.substring(cap[0].length);\n      link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n      link = this.links[link.toLowerCase()];\n      if (!link || !link.href) {\n        out += cap[0].charAt(0);\n        src = cap[0].substring(1) + src;\n        continue;\n      }\n      this.inLink = true;\n      out += this.outputLink(cap, link);\n      this.inLink = false;\n      continue;\n    }\n\n    // strong\n    if (cap = this.rules.strong.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.strong(this.output(cap[4] || cap[3] || cap[2] || cap[1]));\n      continue;\n    }\n\n    // em\n    if (cap = this.rules.em.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.em(this.output(cap[6] || cap[5] || cap[4] || cap[3] || cap[2] || cap[1]));\n      continue;\n    }\n\n    // code\n    if (cap = this.rules.code.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.codespan(escape(cap[2].trim(), true));\n      continue;\n    }\n\n    // br\n    if (cap = this.rules.br.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.br();\n      continue;\n    }\n\n    // del (gfm)\n    if (cap = this.rules.del.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.del(this.output(cap[1]));\n      continue;\n    }\n\n    // text\n    if (cap = this.rules.text.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.text(escape(this.smartypants(cap[0])));\n      continue;\n    }\n\n    if (src) {\n      throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n    }\n  }\n\n  return out;\n};\n\nInlineLexer.escapes = function(text) {\n  return text ? text.replace(InlineLexer.rules._escapes, '$1') : text;\n}\n\n/**\n * Compile Link\n */\n\nInlineLexer.prototype.outputLink = function(cap, link) {\n  var href = link.href,\n      title = link.title ? escape(link.title) : null;\n\n  return cap[0].charAt(0) !== '!'\n    ? this.renderer.link(href, title, this.output(cap[1]))\n    : this.renderer.image(href, title, escape(cap[1]));\n};\n\n/**\n * Smartypants Transformations\n */\n\nInlineLexer.prototype.smartypants = function(text) {\n  if (!this.options.smartypants) return text;\n  return text\n    // em-dashes\n    .replace(/---/g, '\\u2014')\n    // en-dashes\n    .replace(/--/g, '\\u2013')\n    // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n    // closing singles & apostrophes\n    .replace(/'/g, '\\u2019')\n    // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\n    // closing doubles\n    .replace(/\"/g, '\\u201d')\n    // ellipses\n    .replace(/\\.{3}/g, '\\u2026');\n};\n\n/**\n * Mangle Links\n */\n\nInlineLexer.prototype.mangle = function(text) {\n  if (!this.options.mangle) return text;\n  var out = '',\n      l = text.length,\n      i = 0,\n      ch;\n\n  for (; i < l; i++) {\n    ch = text.charCodeAt(i);\n    if (Math.random() > 0.5) {\n      ch = 'x' + ch.toString(16);\n    }\n    out += '&#' + ch + ';';\n  }\n\n  return out;\n};\n\n/**\n * Renderer\n */\n\nfunction Renderer(options) {\n  this.options = options || marked.defaults;\n}\n\nRenderer.prototype.code = function(code, lang, escaped) {\n  if (this.options.highlight) {\n    var out = this.options.highlight(code, lang);\n    if (out != null && out !== code) {\n      escaped = true;\n      code = out;\n    }\n  }\n\n  if (!lang) {\n    return '<pre><code>'\n      + (escaped ? code : escape(code, true))\n      + '</code></pre>';\n  }\n\n  return '<pre><code class=\"'\n    + this.options.langPrefix\n    + escape(lang, true)\n    + '\">'\n    + (escaped ? code : escape(code, true))\n    + '</code></pre>\\n';\n};\n\nRenderer.prototype.blockquote = function(quote) {\n  return '<blockquote>\\n' + quote + '</blockquote>\\n';\n};\n\nRenderer.prototype.html = function(html) {\n  return html;\n};\n\nRenderer.prototype.heading = function(text, level, raw) {\n  if (this.options.headerIds) {\n    return '<h'\n      + level\n      + ' id=\"'\n      + this.options.headerPrefix\n      + raw.toLowerCase().replace(/[^\\w]+/g, '-')\n      + '\">'\n      + text\n      + '</h'\n      + level\n      + '>\\n';\n  }\n  // ignore IDs\n  return '<h' + level + '>' + text + '</h' + level + '>\\n';\n};\n\nRenderer.prototype.hr = function() {\n  return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n};\n\nRenderer.prototype.list = function(body, ordered, start) {\n  var type = ordered ? 'ol' : 'ul',\n      startatt = (ordered && start !== 1) ? (' start=\"' + start + '\"') : '';\n  return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n};\n\nRenderer.prototype.listitem = function(text) {\n  return '<li>' + text + '</li>\\n';\n};\n\nRenderer.prototype.checkbox = function(checked) {\n  return '<input '\n    + (checked ? 'checked=\"\" ' : '')\n    + 'disabled=\"\" type=\"checkbox\"'\n    + (this.options.xhtml ? ' /' : '')\n    + '> ';\n}\n\nRenderer.prototype.paragraph = function(text) {\n  return '<p>' + text + '</p>\\n';\n};\n\nRenderer.prototype.table = function(header, body) {\n  if (body) body = '<tbody>' + body + '</tbody>';\n\n  return '<table>\\n'\n    + '<thead>\\n'\n    + header\n    + '</thead>\\n'\n    + body\n    + '</table>\\n';\n};\n\nRenderer.prototype.tablerow = function(content) {\n  return '<tr>\\n' + content + '</tr>\\n';\n};\n\nRenderer.prototype.tablecell = function(content, flags) {\n  var type = flags.header ? 'th' : 'td';\n  var tag = flags.align\n    ? '<' + type + ' align=\"' + flags.align + '\">'\n    : '<' + type + '>';\n  return tag + content + '</' + type + '>\\n';\n};\n\n// span level renderer\nRenderer.prototype.strong = function(text) {\n  return '<strong>' + text + '</strong>';\n};\n\nRenderer.prototype.em = function(text) {\n  return '<em>' + text + '</em>';\n};\n\nRenderer.prototype.codespan = function(text) {\n  return '<code>' + text + '</code>';\n};\n\nRenderer.prototype.br = function() {\n  return this.options.xhtml ? '<br/>' : '<br>';\n};\n\nRenderer.prototype.del = function(text) {\n  return '<del>' + text + '</del>';\n};\n\nRenderer.prototype.link = function(href, title, text) {\n  if (this.options.sanitize) {\n    try {\n      var prot = decodeURIComponent(unescape(href))\n        .replace(/[^\\w:]/g, '')\n        .toLowerCase();\n    } catch (e) {\n      return text;\n    }\n    if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n      return text;\n    }\n  }\n  if (this.options.baseUrl && !originIndependentUrl.test(href)) {\n    href = resolveUrl(this.options.baseUrl, href);\n  }\n  try {\n    href = encodeURI(href).replace(/%25/g, '%');\n  } catch (e) {\n    return text;\n  }\n  var out = '<a href=\"' + escape(href) + '\"';\n  if (title) {\n    out += ' title=\"' + title + '\"';\n  }\n  out += '>' + text + '</a>';\n  return out;\n};\n\nRenderer.prototype.image = function(href, title, text) {\n  if (this.options.baseUrl && !originIndependentUrl.test(href)) {\n    href = resolveUrl(this.options.baseUrl, href);\n  }\n  var out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n  if (title) {\n    out += ' title=\"' + title + '\"';\n  }\n  out += this.options.xhtml ? '/>' : '>';\n  return out;\n};\n\nRenderer.prototype.text = function(text) {\n  return text;\n};\n\n/**\n * TextRenderer\n * returns only the textual part of the token\n */\n\nfunction TextRenderer() {}\n\n// no need for block level renderers\n\nTextRenderer.prototype.strong =\nTextRenderer.prototype.em =\nTextRenderer.prototype.codespan =\nTextRenderer.prototype.del =\nTextRenderer.prototype.text = function (text) {\n  return text;\n}\n\nTextRenderer.prototype.link =\nTextRenderer.prototype.image = function(href, title, text) {\n  return '' + text;\n}\n\nTextRenderer.prototype.br = function() {\n  return '';\n}\n\n/**\n * Parsing & Compiling\n */\n\nfunction Parser(options) {\n  this.tokens = [];\n  this.token = null;\n  this.options = options || marked.defaults;\n  this.options.renderer = this.options.renderer || new Renderer();\n  this.renderer = this.options.renderer;\n  this.renderer.options = this.options;\n}\n\n/**\n * Static Parse Method\n */\n\nParser.parse = function(src, options) {\n  var parser = new Parser(options);\n  return parser.parse(src);\n};\n\n/**\n * Parse Loop\n */\n\nParser.prototype.parse = function(src) {\n  this.inline = new InlineLexer(src.links, this.options);\n  // use an InlineLexer with a TextRenderer to extract pure text\n  this.inlineText = new InlineLexer(\n    src.links,\n    merge({}, this.options, {renderer: new TextRenderer()})\n  );\n  this.tokens = src.reverse();\n\n  var out = '';\n  while (this.next()) {\n    out += this.tok();\n  }\n\n  return out;\n};\n\n/**\n * Next Token\n */\n\nParser.prototype.next = function() {\n  return this.token = this.tokens.pop();\n};\n\n/**\n * Preview Next Token\n */\n\nParser.prototype.peek = function() {\n  return this.tokens[this.tokens.length - 1] || 0;\n};\n\n/**\n * Parse Text Tokens\n */\n\nParser.prototype.parseText = function() {\n  var body = this.token.text;\n\n  while (this.peek().type === 'text') {\n    body += '\\n' + this.next().text;\n  }\n\n  return this.inline.output(body);\n};\n\n/**\n * Parse Current Token\n */\n\nParser.prototype.tok = function() {\n  switch (this.token.type) {\n    case 'space': {\n      return '';\n    }\n    case 'hr': {\n      return this.renderer.hr();\n    }\n    case 'heading': {\n      return this.renderer.heading(\n        this.inline.output(this.token.text),\n        this.token.depth,\n        unescape(this.inlineText.output(this.token.text)));\n    }\n    case 'code': {\n      return this.renderer.code(this.token.text,\n        this.token.lang,\n        this.token.escaped);\n    }\n    case 'table': {\n      var header = '',\n          body = '',\n          i,\n          row,\n          cell,\n          j;\n\n      // header\n      cell = '';\n      for (i = 0; i < this.token.header.length; i++) {\n        cell += this.renderer.tablecell(\n          this.inline.output(this.token.header[i]),\n          { header: true, align: this.token.align[i] }\n        );\n      }\n      header += this.renderer.tablerow(cell);\n\n      for (i = 0; i < this.token.cells.length; i++) {\n        row = this.token.cells[i];\n\n        cell = '';\n        for (j = 0; j < row.length; j++) {\n          cell += this.renderer.tablecell(\n            this.inline.output(row[j]),\n            { header: false, align: this.token.align[j] }\n          );\n        }\n\n        body += this.renderer.tablerow(cell);\n      }\n      return this.renderer.table(header, body);\n    }\n    case 'blockquote_start': {\n      body = '';\n\n      while (this.next().type !== 'blockquote_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.blockquote(body);\n    }\n    case 'list_start': {\n      body = '';\n      var ordered = this.token.ordered,\n          start = this.token.start;\n\n      while (this.next().type !== 'list_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.list(body, ordered, start);\n    }\n    case 'list_item_start': {\n      body = '';\n      var loose = this.token.loose;\n\n      if (this.token.task) {\n        body += this.renderer.checkbox(this.token.checked);\n      }\n\n      while (this.next().type !== 'list_item_end') {\n        body += !loose && this.token.type === 'text'\n          ? this.parseText()\n          : this.tok();\n      }\n\n      return this.renderer.listitem(body);\n    }\n    case 'html': {\n      // TODO parse inline content if parameter markdown=1\n      return this.renderer.html(this.token.text);\n    }\n    case 'paragraph': {\n      return this.renderer.paragraph(this.inline.output(this.token.text));\n    }\n    case 'text': {\n      return this.renderer.paragraph(this.parseText());\n    }\n  }\n};\n\n/**\n * Helpers\n */\n\nfunction escape(html, encode) {\n  return html\n    .replace(!encode ? /&(?!#?\\w+;)/g : /&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&#39;');\n}\n\nfunction unescape(html) {\n  // explicitly match decimal, hex, and named HTML entities\n  return html.replace(/&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig, function(_, n) {\n    n = n.toLowerCase();\n    if (n === 'colon') return ':';\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x'\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\n        : String.fromCharCode(+n.substring(1));\n    }\n    return '';\n  });\n}\n\nfunction edit(regex, opt) {\n  regex = regex.source || regex;\n  opt = opt || '';\n  return {\n    replace: function(name, val) {\n      val = val.source || val;\n      val = val.replace(/(^|[^\\[])\\^/g, '$1');\n      regex = regex.replace(name, val);\n      return this;\n    },\n    getRegex: function() {\n      return new RegExp(regex, opt);\n    }\n  };\n}\n\nfunction resolveUrl(base, href) {\n  if (!baseUrls[' ' + base]) {\n    // we can ignore everything in base after the last slash of its path component,\n    // but we might need to add _that_\n    // https://tools.ietf.org/html/rfc3986#section-3\n    if (/^[^:]+:\\/*[^/]*$/.test(base)) {\n      baseUrls[' ' + base] = base + '/';\n    } else {\n      baseUrls[' ' + base] = rtrim(base, '/', true);\n    }\n  }\n  base = baseUrls[' ' + base];\n\n  if (href.slice(0, 2) === '//') {\n    return base.replace(/:[\\s\\S]*/, ':') + href;\n  } else if (href.charAt(0) === '/') {\n    return base.replace(/(:\\/*[^/]*)[\\s\\S]*/, '$1') + href;\n  } else {\n    return base + href;\n  }\n}\nvar baseUrls = {};\nvar originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n\nfunction noop() {}\nnoop.exec = noop;\n\nfunction merge(obj) {\n  var i = 1,\n      target,\n      key;\n\n  for (; i < arguments.length; i++) {\n    target = arguments[i];\n    for (key in target) {\n      if (Object.prototype.hasOwnProperty.call(target, key)) {\n        obj[key] = target[key];\n      }\n    }\n  }\n\n  return obj;\n}\n\nfunction splitCells(tableRow, count) {\n  // ensure that every cell-delimiting pipe has a space\n  // before it to distinguish it from an escaped pipe\n  var row = tableRow.replace(/\\|/g, function (match, offset, str) {\n        var escaped = false,\n            curr = offset;\n        while (--curr >= 0 && str[curr] === '\\\\') escaped = !escaped;\n        if (escaped) {\n          // odd number of slashes means | is escaped\n          // so we leave it alone\n          return '|';\n        } else {\n          // add space before unescaped |\n          return ' |';\n        }\n      }),\n      cells = row.split(/ \\|/),\n      i = 0;\n\n  if (cells.length > count) {\n    cells.splice(count);\n  } else {\n    while (cells.length < count) cells.push('');\n  }\n\n  for (; i < cells.length; i++) {\n    // leading or trailing whitespace is ignored per the gfm spec\n    cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n  }\n  return cells;\n}\n\n// Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n// /c*$/ is vulnerable to REDOS.\n// invert: Remove suffix of non-c chars instead. Default falsey.\nfunction rtrim(str, c, invert) {\n  if (str.length === 0) {\n    return '';\n  }\n\n  // Length of suffix matching the invert condition.\n  var suffLen = 0;\n\n  // Step left until we fail to match the invert condition.\n  while (suffLen < str.length) {\n    var currChar = str.charAt(str.length - suffLen - 1);\n    if (currChar === c && !invert) {\n      suffLen++;\n    } else if (currChar !== c && invert) {\n      suffLen++;\n    } else {\n      break;\n    }\n  }\n\n  return str.substr(0, str.length - suffLen);\n}\n\n/**\n * Marked\n */\n\nfunction marked(src, opt, callback) {\n  // throw error in case of non string input\n  if (typeof src === 'undefined' || src === null) {\n    throw new Error('marked(): input parameter is undefined or null');\n  }\n  if (typeof src !== 'string') {\n    throw new Error('marked(): input parameter is of type '\n      + Object.prototype.toString.call(src) + ', string expected');\n  }\n\n  if (callback || typeof opt === 'function') {\n    if (!callback) {\n      callback = opt;\n      opt = null;\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n\n    var highlight = opt.highlight,\n        tokens,\n        pending,\n        i = 0;\n\n    try {\n      tokens = Lexer.lex(src, opt)\n    } catch (e) {\n      return callback(e);\n    }\n\n    pending = tokens.length;\n\n    var done = function(err) {\n      if (err) {\n        opt.highlight = highlight;\n        return callback(err);\n      }\n\n      var out;\n\n      try {\n        out = Parser.parse(tokens, opt);\n      } catch (e) {\n        err = e;\n      }\n\n      opt.highlight = highlight;\n\n      return err\n        ? callback(err)\n        : callback(null, out);\n    };\n\n    if (!highlight || highlight.length < 3) {\n      return done();\n    }\n\n    delete opt.highlight;\n\n    if (!pending) return done();\n\n    for (; i < tokens.length; i++) {\n      (function(token) {\n        if (token.type !== 'code') {\n          return --pending || done();\n        }\n        return highlight(token.text, token.lang, function(err, code) {\n          if (err) return done(err);\n          if (code == null || code === token.text) {\n            return --pending || done();\n          }\n          token.text = code;\n          token.escaped = true;\n          --pending || done();\n        });\n      })(tokens[i]);\n    }\n\n    return;\n  }\n  try {\n    if (opt) opt = merge({}, marked.defaults, opt);\n    return Parser.parse(Lexer.lex(src, opt), opt);\n  } catch (e) {\n    e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n    if ((opt || marked.defaults).silent) {\n      return '<p>An error occurred:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n}\n\n/**\n * Options\n */\n\nmarked.options =\nmarked.setOptions = function(opt) {\n  merge(marked.defaults, opt);\n  return marked;\n};\n\nmarked.getDefaults = function () {\n  return {\n    baseUrl: null,\n    breaks: false,\n    gfm: true,\n    headerIds: true,\n    headerPrefix: '',\n    highlight: null,\n    langPrefix: 'language-',\n    mangle: true,\n    pedantic: false,\n    renderer: new Renderer(),\n    sanitize: false,\n    sanitizer: null,\n    silent: false,\n    smartLists: false,\n    smartypants: false,\n    tables: true,\n    xhtml: false\n  };\n}\n\nmarked.defaults = marked.getDefaults();\n\n/**\n * Expose\n */\n\nmarked.Parser = Parser;\nmarked.parser = Parser.parse;\n\nmarked.Renderer = Renderer;\nmarked.TextRenderer = TextRenderer;\n\nmarked.Lexer = Lexer;\nmarked.lexer = Lexer.lex;\n\nmarked.InlineLexer = InlineLexer;\nmarked.inlineLexer = InlineLexer.output;\n\nmarked.parse = marked;\n\nif (typeof module !== 'undefined' && typeof exports === 'object') {\n  module.exports = marked;\n} else if (typeof define === 'function' && define.amd) {\n  define(function() { return marked; });\n} else {\n  root.marked = marked;\n}\n})(this || (typeof window !== 'undefined' ? window : global));\n","var dP = require('./_object-dp');\nvar anObject = require('./_an-object');\nvar getKeys = require('./_object-keys');\n\nmodule.exports = require('./_descriptors') ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = getKeys(Properties);\n  var length = keys.length;\n  var i = 0;\n  var P;\n  while (length > i) dP.f(O, P = keys[i++], Properties[P]);\n  return O;\n};\n","var ctx = require('./_ctx');\nvar invoke = require('./_invoke');\nvar html = require('./_html');\nvar cel = require('./_dom-create');\nvar global = require('./_global');\nvar process = global.process;\nvar setTask = global.setImmediate;\nvar clearTask = global.clearImmediate;\nvar MessageChannel = global.MessageChannel;\nvar Dispatch = global.Dispatch;\nvar counter = 0;\nvar queue = {};\nvar ONREADYSTATECHANGE = 'onreadystatechange';\nvar defer, channel, port;\nvar run = function () {\n  var id = +this;\n  // eslint-disable-next-line no-prototype-builtins\n  if (queue.hasOwnProperty(id)) {\n    var fn = queue[id];\n    delete queue[id];\n    fn();\n  }\n};\nvar listener = function (event) {\n  run.call(event.data);\n};\n// Node.js 0.9+ & IE10+ has setImmediate, otherwise:\nif (!setTask || !clearTask) {\n  setTask = function setImmediate(fn) {\n    var args = [];\n    var i = 1;\n    while (arguments.length > i) args.push(arguments[i++]);\n    queue[++counter] = function () {\n      // eslint-disable-next-line no-new-func\n      invoke(typeof fn == 'function' ? fn : Function(fn), args);\n    };\n    defer(counter);\n    return counter;\n  };\n  clearTask = function clearImmediate(id) {\n    delete queue[id];\n  };\n  // Node.js 0.8-\n  if (require('./_cof')(process) == 'process') {\n    defer = function (id) {\n      process.nextTick(ctx(run, id, 1));\n    };\n  // Sphere (JS game engine) Dispatch API\n  } else if (Dispatch && Dispatch.now) {\n    defer = function (id) {\n      Dispatch.now(ctx(run, id, 1));\n    };\n  // Browsers with MessageChannel, includes WebWorkers\n  } else if (MessageChannel) {\n    channel = new MessageChannel();\n    port = channel.port2;\n    channel.port1.onmessage = listener;\n    defer = ctx(port.postMessage, port, 1);\n  // Browsers with postMessage, skip WebWorkers\n  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'\n  } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts) {\n    defer = function (id) {\n      global.postMessage(id + '', '*');\n    };\n    global.addEventListener('message', listener, false);\n  // IE8-\n  } else if (ONREADYSTATECHANGE in cel('script')) {\n    defer = function (id) {\n      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function () {\n        html.removeChild(this);\n        run.call(id);\n      };\n    };\n  // Rest old browsers\n  } else {\n    defer = function (id) {\n      setTimeout(ctx(run, id, 1), 0);\n    };\n  }\n}\nmodule.exports = {\n  set: setTask,\n  clear: clearTask\n};\n","// call something on iterator step with safe closing on error\nvar anObject = require('./_an-object');\nmodule.exports = function (iterator, fn, value, entries) {\n  try {\n    return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n  // 7.4.6 IteratorClose(iterator, completion)\n  } catch (e) {\n    var ret = iterator['return'];\n    if (ret !== undefined) anObject(ret.call(iterator));\n    throw e;\n  }\n};\n","var isObject = require('./_is-object');\nvar document = require('./_global').document;\n// typeof document.createElement is 'object' in old IE\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n","// getting tag from 19.1.3.6 Object.prototype.toString()\nvar cof = require('./_cof');\nvar TAG = require('./_wks')('toStringTag');\n// ES3 wrong here\nvar ARG = cof(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (e) { /* empty */ }\n};\n\nmodule.exports = function (it) {\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T\n    // builtinTag case\n    : ARG ? cof(O)\n    // ES3 arguments fallback\n    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n","var classof = require('./_classof');\nvar ITERATOR = require('./_wks')('iterator');\nvar Iterators = require('./_iterators');\nmodule.exports = require('./_core').getIteratorMethod = function (it) {\n  if (it != undefined) return it[ITERATOR]\n    || it['@@iterator']\n    || Iterators[classof(it)];\n};\n","/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nexport default function normalizeComponent (\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier, /* server only */\n  shadowMode /* vue-cli only */\n) {\n  // Vue.extend constructor export interop\n  var options = typeof scriptExports === 'function'\n    ? scriptExports.options\n    : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = 'data-v-' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) { // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () { injectStyles.call(this, this.$root.$options.shadowRoot) }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functioal component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection (h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing\n        ? [].concat(existing, hook)\n        : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n","var global = require('./_global');\nvar hide = require('./_hide');\nvar has = require('./_has');\nvar SRC = require('./_uid')('src');\nvar TO_STRING = 'toString';\nvar $toString = Function[TO_STRING];\nvar TPL = ('' + $toString).split(TO_STRING);\n\nrequire('./_core').inspectSource = function (it) {\n  return $toString.call(it);\n};\n\n(module.exports = function (O, key, val, safe) {\n  var isFunction = typeof val == 'function';\n  if (isFunction) has(val, 'name') || hide(val, 'name', key);\n  if (O[key] === val) return;\n  if (isFunction) has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));\n  if (O === global) {\n    O[key] = val;\n  } else if (!safe) {\n    delete O[key];\n    hide(O, key, val);\n  } else if (O[key]) {\n    O[key] = val;\n  } else {\n    hide(O, key, val);\n  }\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n})(Function.prototype, TO_STRING, function toString() {\n  return typeof this == 'function' && this[SRC] || $toString.call(this);\n});\n","// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])\nvar anObject = require('./_an-object');\nvar dPs = require('./_object-dps');\nvar enumBugKeys = require('./_enum-bug-keys');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar Empty = function () { /* empty */ };\nvar PROTOTYPE = 'prototype';\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar createDict = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = require('./_dom-create')('iframe');\n  var i = enumBugKeys.length;\n  var lt = '<';\n  var gt = '>';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  require('./_html').appendChild(iframe);\n  iframe.src = 'javascript:'; // eslint-disable-line no-script-url\n  // createDict = iframe.contentWindow.Object;\n  // html.removeChild(iframe);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  createDict = iframeDocument.F;\n  while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];\n  return createDict();\n};\n\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty();\n    Empty[PROTOTYPE] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO] = O;\n  } else result = createDict();\n  return Properties === undefined ? result : dPs(result, Properties);\n};\n","/*!\n * Vue.js v2.5.17\n * (c) 2014-2018 Evan You\n * Released under the MIT License.\n */\n/*  */\n\nvar emptyObject = Object.freeze({});\n\n// these helpers produces better vm code in JS engines due to their\n// explicitness and function inlining\nfunction isUndef (v) {\n  return v === undefined || v === null\n}\n\nfunction isDef (v) {\n  return v !== undefined && v !== null\n}\n\nfunction isTrue (v) {\n  return v === true\n}\n\nfunction isFalse (v) {\n  return v === false\n}\n\n/**\n * Check if value is primitive\n */\nfunction isPrimitive (value) {\n  return (\n    typeof value === 'string' ||\n    typeof value === 'number' ||\n    // $flow-disable-line\n    typeof value === 'symbol' ||\n    typeof value === 'boolean'\n  )\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n */\nfunction isObject (obj) {\n  return obj !== null && typeof obj === 'object'\n}\n\n/**\n * Get the raw type string of a value e.g. [object Object]\n */\nvar _toString = Object.prototype.toString;\n\nfunction toRawType (value) {\n  return _toString.call(value).slice(8, -1)\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n */\nfunction isPlainObject (obj) {\n  return _toString.call(obj) === '[object Object]'\n}\n\nfunction isRegExp (v) {\n  return _toString.call(v) === '[object RegExp]'\n}\n\n/**\n * Check if val is a valid array index.\n */\nfunction isValidArrayIndex (val) {\n  var n = parseFloat(String(val));\n  return n >= 0 && Math.floor(n) === n && isFinite(val)\n}\n\n/**\n * Convert a value to a string that is actually rendered.\n */\nfunction toString (val) {\n  return val == null\n    ? ''\n    : typeof val === 'object'\n      ? JSON.stringify(val, null, 2)\n      : String(val)\n}\n\n/**\n * Convert a input value to a number for persistence.\n * If the conversion fails, return original string.\n */\nfunction toNumber (val) {\n  var n = parseFloat(val);\n  return isNaN(n) ? val : n\n}\n\n/**\n * Make a map and return a function for checking if a key\n * is in that map.\n */\nfunction makeMap (\n  str,\n  expectsLowerCase\n) {\n  var map = Object.create(null);\n  var list = str.split(',');\n  for (var i = 0; i < list.length; i++) {\n    map[list[i]] = true;\n  }\n  return expectsLowerCase\n    ? function (val) { return map[val.toLowerCase()]; }\n    : function (val) { return map[val]; }\n}\n\n/**\n * Check if a tag is a built-in tag.\n */\nvar isBuiltInTag = makeMap('slot,component', true);\n\n/**\n * Check if a attribute is a reserved attribute.\n */\nvar isReservedAttribute = makeMap('key,ref,slot,slot-scope,is');\n\n/**\n * Remove an item from an array\n */\nfunction remove (arr, item) {\n  if (arr.length) {\n    var index = arr.indexOf(item);\n    if (index > -1) {\n      return arr.splice(index, 1)\n    }\n  }\n}\n\n/**\n * Check whether the object has the property.\n */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nfunction hasOwn (obj, key) {\n  return hasOwnProperty.call(obj, key)\n}\n\n/**\n * Create a cached version of a pure function.\n */\nfunction cached (fn) {\n  var cache = Object.create(null);\n  return (function cachedFn (str) {\n    var hit = cache[str];\n    return hit || (cache[str] = fn(str))\n  })\n}\n\n/**\n * Camelize a hyphen-delimited string.\n */\nvar camelizeRE = /-(\\w)/g;\nvar camelize = cached(function (str) {\n  return str.replace(camelizeRE, function (_, c) { return c ? c.toUpperCase() : ''; })\n});\n\n/**\n * Capitalize a string.\n */\nvar capitalize = cached(function (str) {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n});\n\n/**\n * Hyphenate a camelCase string.\n */\nvar hyphenateRE = /\\B([A-Z])/g;\nvar hyphenate = cached(function (str) {\n  return str.replace(hyphenateRE, '-$1').toLowerCase()\n});\n\n/**\n * Simple bind polyfill for environments that do not support it... e.g.\n * PhantomJS 1.x. Technically we don't need this anymore since native bind is\n * now more performant in most browsers, but removing it would be breaking for\n * code that was able to run in PhantomJS 1.x, so this must be kept for\n * backwards compatibility.\n */\n\n/* istanbul ignore next */\nfunction polyfillBind (fn, ctx) {\n  function boundFn (a) {\n    var l = arguments.length;\n    return l\n      ? l > 1\n        ? fn.apply(ctx, arguments)\n        : fn.call(ctx, a)\n      : fn.call(ctx)\n  }\n\n  boundFn._length = fn.length;\n  return boundFn\n}\n\nfunction nativeBind (fn, ctx) {\n  return fn.bind(ctx)\n}\n\nvar bind = Function.prototype.bind\n  ? nativeBind\n  : polyfillBind;\n\n/**\n * Convert an Array-like object to a real Array.\n */\nfunction toArray (list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret\n}\n\n/**\n * Mix properties into target object.\n */\nfunction extend (to, _from) {\n  for (var key in _from) {\n    to[key] = _from[key];\n  }\n  return to\n}\n\n/**\n * Merge an Array of Objects into a single Object.\n */\nfunction toObject (arr) {\n  var res = {};\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i]) {\n      extend(res, arr[i]);\n    }\n  }\n  return res\n}\n\n/**\n * Perform no operation.\n * Stubbing args to make Flow happy without leaving useless transpiled code\n * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/)\n */\nfunction noop (a, b, c) {}\n\n/**\n * Always return false.\n */\nvar no = function (a, b, c) { return false; };\n\n/**\n * Return same value\n */\nvar identity = function (_) { return _; };\n\n/**\n * Generate a static keys string from compiler modules.\n */\n\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n */\nfunction looseEqual (a, b) {\n  if (a === b) { return true }\n  var isObjectA = isObject(a);\n  var isObjectB = isObject(b);\n  if (isObjectA && isObjectB) {\n    try {\n      var isArrayA = Array.isArray(a);\n      var isArrayB = Array.isArray(b);\n      if (isArrayA && isArrayB) {\n        return a.length === b.length && a.every(function (e, i) {\n          return looseEqual(e, b[i])\n        })\n      } else if (!isArrayA && !isArrayB) {\n        var keysA = Object.keys(a);\n        var keysB = Object.keys(b);\n        return keysA.length === keysB.length && keysA.every(function (key) {\n          return looseEqual(a[key], b[key])\n        })\n      } else {\n        /* istanbul ignore next */\n        return false\n      }\n    } catch (e) {\n      /* istanbul ignore next */\n      return false\n    }\n  } else if (!isObjectA && !isObjectB) {\n    return String(a) === String(b)\n  } else {\n    return false\n  }\n}\n\nfunction looseIndexOf (arr, val) {\n  for (var i = 0; i < arr.length; i++) {\n    if (looseEqual(arr[i], val)) { return i }\n  }\n  return -1\n}\n\n/**\n * Ensure a function is called only once.\n */\nfunction once (fn) {\n  var called = false;\n  return function () {\n    if (!called) {\n      called = true;\n      fn.apply(this, arguments);\n    }\n  }\n}\n\nvar SSR_ATTR = 'data-server-rendered';\n\nvar ASSET_TYPES = [\n  'component',\n  'directive',\n  'filter'\n];\n\nvar LIFECYCLE_HOOKS = [\n  'beforeCreate',\n  'created',\n  'beforeMount',\n  'mounted',\n  'beforeUpdate',\n  'updated',\n  'beforeDestroy',\n  'destroyed',\n  'activated',\n  'deactivated',\n  'errorCaptured'\n];\n\n/*  */\n\nvar config = ({\n  /**\n   * Option merge strategies (used in core/util/options)\n   */\n  // $flow-disable-line\n  optionMergeStrategies: Object.create(null),\n\n  /**\n   * Whether to suppress warnings.\n   */\n  silent: false,\n\n  /**\n   * Show production mode tip message on boot?\n   */\n  productionTip: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Whether to enable devtools\n   */\n  devtools: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Whether to record perf\n   */\n  performance: false,\n\n  /**\n   * Error handler for watcher errors\n   */\n  errorHandler: null,\n\n  /**\n   * Warn handler for watcher warns\n   */\n  warnHandler: null,\n\n  /**\n   * Ignore certain custom elements\n   */\n  ignoredElements: [],\n\n  /**\n   * Custom user key aliases for v-on\n   */\n  // $flow-disable-line\n  keyCodes: Object.create(null),\n\n  /**\n   * Check if a tag is reserved so that it cannot be registered as a\n   * component. This is platform-dependent and may be overwritten.\n   */\n  isReservedTag: no,\n\n  /**\n   * Check if an attribute is reserved so that it cannot be used as a component\n   * prop. This is platform-dependent and may be overwritten.\n   */\n  isReservedAttr: no,\n\n  /**\n   * Check if a tag is an unknown element.\n   * Platform-dependent.\n   */\n  isUnknownElement: no,\n\n  /**\n   * Get the namespace of an element\n   */\n  getTagNamespace: noop,\n\n  /**\n   * Parse the real tag name for the specific platform.\n   */\n  parsePlatformTagName: identity,\n\n  /**\n   * Check if an attribute must be bound using property, e.g. value\n   * Platform-dependent.\n   */\n  mustUseProp: no,\n\n  /**\n   * Exposed for legacy reasons\n   */\n  _lifecycleHooks: LIFECYCLE_HOOKS\n})\n\n/*  */\n\n/**\n * Check if a string starts with $ or _\n */\nfunction isReserved (str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F\n}\n\n/**\n * Define a property.\n */\nfunction def (obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Parse simple path.\n */\nvar bailRE = /[^\\w.$]/;\nfunction parsePath (path) {\n  if (bailRE.test(path)) {\n    return\n  }\n  var segments = path.split('.');\n  return function (obj) {\n    for (var i = 0; i < segments.length; i++) {\n      if (!obj) { return }\n      obj = obj[segments[i]];\n    }\n    return obj\n  }\n}\n\n/*  */\n\n// can we use __proto__?\nvar hasProto = '__proto__' in {};\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined';\nvar inWeex = typeof WXEnvironment !== 'undefined' && !!WXEnvironment.platform;\nvar weexPlatform = inWeex && WXEnvironment.platform.toLowerCase();\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && /msie|trident/.test(UA);\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isEdge = UA && UA.indexOf('edge/') > 0;\nvar isAndroid = (UA && UA.indexOf('android') > 0) || (weexPlatform === 'android');\nvar isIOS = (UA && /iphone|ipad|ipod|ios/.test(UA)) || (weexPlatform === 'ios');\nvar isChrome = UA && /chrome\\/\\d+/.test(UA) && !isEdge;\n\n// Firefox has a \"watch\" function on Object.prototype...\nvar nativeWatch = ({}).watch;\n\nvar supportsPassive = false;\nif (inBrowser) {\n  try {\n    var opts = {};\n    Object.defineProperty(opts, 'passive', ({\n      get: function get () {\n        /* istanbul ignore next */\n        supportsPassive = true;\n      }\n    })); // https://github.com/facebook/flow/issues/285\n    window.addEventListener('test-passive', null, opts);\n  } catch (e) {}\n}\n\n// this needs to be lazy-evaled because vue may be required before\n// vue-server-renderer can set VUE_ENV\nvar _isServer;\nvar isServerRendering = function () {\n  if (_isServer === undefined) {\n    /* istanbul ignore if */\n    if (!inBrowser && !inWeex && typeof global !== 'undefined') {\n      // detect presence of vue-server-renderer and avoid\n      // Webpack shimming the process\n      _isServer = global['process'].env.VUE_ENV === 'server';\n    } else {\n      _isServer = false;\n    }\n  }\n  return _isServer\n};\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n/* istanbul ignore next */\nfunction isNative (Ctor) {\n  return typeof Ctor === 'function' && /native code/.test(Ctor.toString())\n}\n\nvar hasSymbol =\n  typeof Symbol !== 'undefined' && isNative(Symbol) &&\n  typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);\n\nvar _Set;\n/* istanbul ignore if */ // $flow-disable-line\nif (typeof Set !== 'undefined' && isNative(Set)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = (function () {\n    function Set () {\n      this.set = Object.create(null);\n    }\n    Set.prototype.has = function has (key) {\n      return this.set[key] === true\n    };\n    Set.prototype.add = function add (key) {\n      this.set[key] = true;\n    };\n    Set.prototype.clear = function clear () {\n      this.set = Object.create(null);\n    };\n\n    return Set;\n  }());\n}\n\n/*  */\n\nvar warn = noop;\nvar tip = noop;\nvar generateComponentTrace = (noop); // work around flow check\nvar formatComponentName = (noop);\n\nif (process.env.NODE_ENV !== 'production') {\n  var hasConsole = typeof console !== 'undefined';\n  var classifyRE = /(?:^|[-_])(\\w)/g;\n  var classify = function (str) { return str\n    .replace(classifyRE, function (c) { return c.toUpperCase(); })\n    .replace(/[-_]/g, ''); };\n\n  warn = function (msg, vm) {\n    var trace = vm ? generateComponentTrace(vm) : '';\n\n    if (config.warnHandler) {\n      config.warnHandler.call(null, msg, vm, trace);\n    } else if (hasConsole && (!config.silent)) {\n      console.error((\"[Vue warn]: \" + msg + trace));\n    }\n  };\n\n  tip = function (msg, vm) {\n    if (hasConsole && (!config.silent)) {\n      console.warn(\"[Vue tip]: \" + msg + (\n        vm ? generateComponentTrace(vm) : ''\n      ));\n    }\n  };\n\n  formatComponentName = function (vm, includeFile) {\n    if (vm.$root === vm) {\n      return '<Root>'\n    }\n    var options = typeof vm === 'function' && vm.cid != null\n      ? vm.options\n      : vm._isVue\n        ? vm.$options || vm.constructor.options\n        : vm || {};\n    var name = options.name || options._componentTag;\n    var file = options.__file;\n    if (!name && file) {\n      var match = file.match(/([^/\\\\]+)\\.vue$/);\n      name = match && match[1];\n    }\n\n    return (\n      (name ? (\"<\" + (classify(name)) + \">\") : \"<Anonymous>\") +\n      (file && includeFile !== false ? (\" at \" + file) : '')\n    )\n  };\n\n  var repeat = function (str, n) {\n    var res = '';\n    while (n) {\n      if (n % 2 === 1) { res += str; }\n      if (n > 1) { str += str; }\n      n >>= 1;\n    }\n    return res\n  };\n\n  generateComponentTrace = function (vm) {\n    if (vm._isVue && vm.$parent) {\n      var tree = [];\n      var currentRecursiveSequence = 0;\n      while (vm) {\n        if (tree.length > 0) {\n          var last = tree[tree.length - 1];\n          if (last.constructor === vm.constructor) {\n            currentRecursiveSequence++;\n            vm = vm.$parent;\n            continue\n          } else if (currentRecursiveSequence > 0) {\n            tree[tree.length - 1] = [last, currentRecursiveSequence];\n            currentRecursiveSequence = 0;\n          }\n        }\n        tree.push(vm);\n        vm = vm.$parent;\n      }\n      return '\\n\\nfound in\\n\\n' + tree\n        .map(function (vm, i) { return (\"\" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm)\n            ? ((formatComponentName(vm[0])) + \"... (\" + (vm[1]) + \" recursive calls)\")\n            : formatComponentName(vm))); })\n        .join('\\n')\n    } else {\n      return (\"\\n\\n(found in \" + (formatComponentName(vm)) + \")\")\n    }\n  };\n}\n\n/*  */\n\n\nvar uid = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n */\nvar Dep = function Dep () {\n  this.id = uid++;\n  this.subs = [];\n};\n\nDep.prototype.addSub = function addSub (sub) {\n  this.subs.push(sub);\n};\n\nDep.prototype.removeSub = function removeSub (sub) {\n  remove(this.subs, sub);\n};\n\nDep.prototype.depend = function depend () {\n  if (Dep.target) {\n    Dep.target.addDep(this);\n  }\n};\n\nDep.prototype.notify = function notify () {\n  // stabilize the subscriber list first\n  var subs = this.subs.slice();\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\nvar targetStack = [];\n\nfunction pushTarget (_target) {\n  if (Dep.target) { targetStack.push(Dep.target); }\n  Dep.target = _target;\n}\n\nfunction popTarget () {\n  Dep.target = targetStack.pop();\n}\n\n/*  */\n\nvar VNode = function VNode (\n  tag,\n  data,\n  children,\n  text,\n  elm,\n  context,\n  componentOptions,\n  asyncFactory\n) {\n  this.tag = tag;\n  this.data = data;\n  this.children = children;\n  this.text = text;\n  this.elm = elm;\n  this.ns = undefined;\n  this.context = context;\n  this.fnContext = undefined;\n  this.fnOptions = undefined;\n  this.fnScopeId = undefined;\n  this.key = data && data.key;\n  this.componentOptions = componentOptions;\n  this.componentInstance = undefined;\n  this.parent = undefined;\n  this.raw = false;\n  this.isStatic = false;\n  this.isRootInsert = true;\n  this.isComment = false;\n  this.isCloned = false;\n  this.isOnce = false;\n  this.asyncFactory = asyncFactory;\n  this.asyncMeta = undefined;\n  this.isAsyncPlaceholder = false;\n};\n\nvar prototypeAccessors = { child: { configurable: true } };\n\n// DEPRECATED: alias for componentInstance for backwards compat.\n/* istanbul ignore next */\nprototypeAccessors.child.get = function () {\n  return this.componentInstance\n};\n\nObject.defineProperties( VNode.prototype, prototypeAccessors );\n\nvar createEmptyVNode = function (text) {\n  if ( text === void 0 ) text = '';\n\n  var node = new VNode();\n  node.text = text;\n  node.isComment = true;\n  return node\n};\n\nfunction createTextVNode (val) {\n  return new VNode(undefined, undefined, undefined, String(val))\n}\n\n// optimized shallow clone\n// used for static nodes and slot nodes because they may be reused across\n// multiple renders, cloning them avoids errors when DOM manipulations rely\n// on their elm reference.\nfunction cloneVNode (vnode) {\n  var cloned = new VNode(\n    vnode.tag,\n    vnode.data,\n    vnode.children,\n    vnode.text,\n    vnode.elm,\n    vnode.context,\n    vnode.componentOptions,\n    vnode.asyncFactory\n  );\n  cloned.ns = vnode.ns;\n  cloned.isStatic = vnode.isStatic;\n  cloned.key = vnode.key;\n  cloned.isComment = vnode.isComment;\n  cloned.fnContext = vnode.fnContext;\n  cloned.fnOptions = vnode.fnOptions;\n  cloned.fnScopeId = vnode.fnScopeId;\n  cloned.isCloned = true;\n  return cloned\n}\n\n/*\n * not type checking this file because flow doesn't play well with\n * dynamically accessing methods on Array prototype\n */\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto);\n\nvar methodsToPatch = [\n  'push',\n  'pop',\n  'shift',\n  'unshift',\n  'splice',\n  'sort',\n  'reverse'\n];\n\n/**\n * Intercept mutating methods and emit events\n */\nmethodsToPatch.forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator () {\n    var args = [], len = arguments.length;\n    while ( len-- ) args[ len ] = arguments[ len ];\n\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n      case 'unshift':\n        inserted = args;\n        break\n      case 'splice':\n        inserted = args.slice(2);\n        break\n    }\n    if (inserted) { ob.observeArray(inserted); }\n    // notify change\n    ob.dep.notify();\n    return result\n  });\n});\n\n/*  */\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * In some cases we may want to disable observation inside a component's\n * update computation.\n */\nvar shouldObserve = true;\n\nfunction toggleObserving (value) {\n  shouldObserve = value;\n}\n\n/**\n * Observer class that is attached to each observed\n * object. Once attached, the observer converts the target\n * object's property keys into getter/setters that\n * collect dependencies and dispatch updates.\n */\nvar Observer = function Observer (value) {\n  this.value = value;\n  this.dep = new Dep();\n  this.vmCount = 0;\n  def(value, '__ob__', this);\n  if (Array.isArray(value)) {\n    var augment = hasProto\n      ? protoAugment\n      : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n};\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n */\nObserver.prototype.walk = function walk (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0; i < keys.length; i++) {\n    defineReactive(obj, keys[i]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n */\nObserver.prototype.observeArray = function observeArray (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n */\nfunction protoAugment (target, src, keys) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n */\n/* istanbul ignore next */\nfunction copyAugment (target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n */\nfunction observe (value, asRootData) {\n  if (!isObject(value) || value instanceof VNode) {\n    return\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (\n    shouldObserve &&\n    !isServerRendering() &&\n    (Array.isArray(value) || isPlainObject(value)) &&\n    Object.isExtensible(value) &&\n    !value._isVue\n  ) {\n    ob = new Observer(value);\n  }\n  if (asRootData && ob) {\n    ob.vmCount++;\n  }\n  return ob\n}\n\n/**\n * Define a reactive property on an Object.\n */\nfunction defineReactive (\n  obj,\n  key,\n  val,\n  customSetter,\n  shallow\n) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  if (!getter && arguments.length === 2) {\n    val = obj[key];\n  }\n  var setter = property && property.set;\n\n  var childOb = !shallow && observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter () {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n          if (Array.isArray(value)) {\n            dependArray(value);\n          }\n        }\n      }\n      return value\n    },\n    set: function reactiveSetter (newVal) {\n      var value = getter ? getter.call(obj) : val;\n      /* eslint-disable no-self-compare */\n      if (newVal === value || (newVal !== newVal && value !== value)) {\n        return\n      }\n      /* eslint-enable no-self-compare */\n      if (process.env.NODE_ENV !== 'production' && customSetter) {\n        customSetter();\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = !shallow && observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n/**\n * Set a property on an object. Adds the new property and\n * triggers change notification if the property doesn't\n * already exist.\n */\nfunction set (target, key, val) {\n  if (process.env.NODE_ENV !== 'production' &&\n    (isUndef(target) || isPrimitive(target))\n  ) {\n    warn((\"Cannot set reactive property on undefined, null, or primitive value: \" + ((target))));\n  }\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.length = Math.max(target.length, key);\n    target.splice(key, 1, val);\n    return val\n  }\n  if (key in target && !(key in Object.prototype)) {\n    target[key] = val;\n    return val\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid adding reactive properties to a Vue instance or its root $data ' +\n      'at runtime - declare it upfront in the data option.'\n    );\n    return val\n  }\n  if (!ob) {\n    target[key] = val;\n    return val\n  }\n  defineReactive(ob.value, key, val);\n  ob.dep.notify();\n  return val\n}\n\n/**\n * Delete a property and trigger change if necessary.\n */\nfunction del (target, key) {\n  if (process.env.NODE_ENV !== 'production' &&\n    (isUndef(target) || isPrimitive(target))\n  ) {\n    warn((\"Cannot delete reactive property on undefined, null, or primitive value: \" + ((target))));\n  }\n  if (Array.isArray(target) && isValidArrayIndex(key)) {\n    target.splice(key, 1);\n    return\n  }\n  var ob = (target).__ob__;\n  if (target._isVue || (ob && ob.vmCount)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      'Avoid deleting properties on a Vue instance or its root $data ' +\n      '- just set it to null.'\n    );\n    return\n  }\n  if (!hasOwn(target, key)) {\n    return\n  }\n  delete target[key];\n  if (!ob) {\n    return\n  }\n  ob.dep.notify();\n}\n\n/**\n * Collect dependencies on array elements when the array is touched, since\n * we cannot intercept array element access like property getters.\n */\nfunction dependArray (value) {\n  for (var e = (void 0), i = 0, l = value.length; i < l; i++) {\n    e = value[i];\n    e && e.__ob__ && e.__ob__.dep.depend();\n    if (Array.isArray(e)) {\n      dependArray(e);\n    }\n  }\n}\n\n/*  */\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n */\nvar strats = config.optionMergeStrategies;\n\n/**\n * Options with restrictions\n */\nif (process.env.NODE_ENV !== 'production') {\n  strats.el = strats.propsData = function (parent, child, vm, key) {\n    if (!vm) {\n      warn(\n        \"option \\\"\" + key + \"\\\" can only be used during instance \" +\n        'creation with the `new` keyword.'\n      );\n    }\n    return defaultStrat(parent, child)\n  };\n}\n\n/**\n * Helper that recursively merges two data objects together.\n */\nfunction mergeData (to, from) {\n  if (!from) { return to }\n  var key, toVal, fromVal;\n  var keys = Object.keys(from);\n  for (var i = 0; i < keys.length; i++) {\n    key = keys[i];\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isPlainObject(toVal) && isPlainObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to\n}\n\n/**\n * Data\n */\nfunction mergeDataOrFn (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal\n    }\n    if (!parentVal) {\n      return childVal\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn () {\n      return mergeData(\n        typeof childVal === 'function' ? childVal.call(this, this) : childVal,\n        typeof parentVal === 'function' ? parentVal.call(this, this) : parentVal\n      )\n    }\n  } else {\n    return function mergedInstanceDataFn () {\n      // instance merge\n      var instanceData = typeof childVal === 'function'\n        ? childVal.call(vm, vm)\n        : childVal;\n      var defaultData = typeof parentVal === 'function'\n        ? parentVal.call(vm, vm)\n        : parentVal;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData)\n      } else {\n        return defaultData\n      }\n    }\n  }\n}\n\nstrats.data = function (\n  parentVal,\n  childVal,\n  vm\n) {\n  if (!vm) {\n    if (childVal && typeof childVal !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn(\n        'The \"data\" option should be a function ' +\n        'that returns a per-instance value in component ' +\n        'definitions.',\n        vm\n      );\n\n      return parentVal\n    }\n    return mergeDataOrFn(parentVal, childVal)\n  }\n\n  return mergeDataOrFn(parentVal, childVal, vm)\n};\n\n/**\n * Hooks and props are merged as arrays.\n */\nfunction mergeHook (\n  parentVal,\n  childVal\n) {\n  return childVal\n    ? parentVal\n      ? parentVal.concat(childVal)\n      : Array.isArray(childVal)\n        ? childVal\n        : [childVal]\n    : parentVal\n}\n\nLIFECYCLE_HOOKS.forEach(function (hook) {\n  strats[hook] = mergeHook;\n});\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\nfunction mergeAssets (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  var res = Object.create(parentVal || null);\n  if (childVal) {\n    process.env.NODE_ENV !== 'production' && assertObjectType(key, childVal, vm);\n    return extend(res, childVal)\n  } else {\n    return res\n  }\n}\n\nASSET_TYPES.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Watchers.\n *\n * Watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\nstrats.watch = function (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  // work around Firefox's Object.prototype.watch...\n  if (parentVal === nativeWatch) { parentVal = undefined; }\n  if (childVal === nativeWatch) { childVal = undefined; }\n  /* istanbul ignore if */\n  if (!childVal) { return Object.create(parentVal || null) }\n  if (process.env.NODE_ENV !== 'production') {\n    assertObjectType(key, childVal, vm);\n  }\n  if (!parentVal) { return childVal }\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key$1 in childVal) {\n    var parent = ret[key$1];\n    var child = childVal[key$1];\n    if (parent && !Array.isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key$1] = parent\n      ? parent.concat(child)\n      : Array.isArray(child) ? child : [child];\n  }\n  return ret\n};\n\n/**\n * Other object hashes.\n */\nstrats.props =\nstrats.methods =\nstrats.inject =\nstrats.computed = function (\n  parentVal,\n  childVal,\n  vm,\n  key\n) {\n  if (childVal && process.env.NODE_ENV !== 'production') {\n    assertObjectType(key, childVal, vm);\n  }\n  if (!parentVal) { return childVal }\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  if (childVal) { extend(ret, childVal); }\n  return ret\n};\nstrats.provide = mergeDataOrFn;\n\n/**\n * Default strategy.\n */\nvar defaultStrat = function (parentVal, childVal) {\n  return childVal === undefined\n    ? parentVal\n    : childVal\n};\n\n/**\n * Validate component names\n */\nfunction checkComponents (options) {\n  for (var key in options.components) {\n    validateComponentName(key);\n  }\n}\n\nfunction validateComponentName (name) {\n  if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n    warn(\n      'Invalid component name: \"' + name + '\". Component names ' +\n      'can only contain alphanumeric characters and the hyphen, ' +\n      'and must start with a letter.'\n    );\n  }\n  if (isBuiltInTag(name) || config.isReservedTag(name)) {\n    warn(\n      'Do not use built-in or reserved HTML elements as component ' +\n      'id: ' + name\n    );\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n */\nfunction normalizeProps (options, vm) {\n  var props = options.props;\n  if (!props) { return }\n  var res = {};\n  var i, val, name;\n  if (Array.isArray(props)) {\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        name = camelize(val);\n        res[name] = { type: null };\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('props must be strings when using array syntax.');\n      }\n    }\n  } else if (isPlainObject(props)) {\n    for (var key in props) {\n      val = props[key];\n      name = camelize(key);\n      res[name] = isPlainObject(val)\n        ? val\n        : { type: val };\n    }\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn(\n      \"Invalid value for option \\\"props\\\": expected an Array or an Object, \" +\n      \"but got \" + (toRawType(props)) + \".\",\n      vm\n    );\n  }\n  options.props = res;\n}\n\n/**\n * Normalize all injections into Object-based format\n */\nfunction normalizeInject (options, vm) {\n  var inject = options.inject;\n  if (!inject) { return }\n  var normalized = options.inject = {};\n  if (Array.isArray(inject)) {\n    for (var i = 0; i < inject.length; i++) {\n      normalized[inject[i]] = { from: inject[i] };\n    }\n  } else if (isPlainObject(inject)) {\n    for (var key in inject) {\n      var val = inject[key];\n      normalized[key] = isPlainObject(val)\n        ? extend({ from: key }, val)\n        : { from: val };\n    }\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn(\n      \"Invalid value for option \\\"inject\\\": expected an Array or an Object, \" +\n      \"but got \" + (toRawType(inject)) + \".\",\n      vm\n    );\n  }\n}\n\n/**\n * Normalize raw function directives into object format.\n */\nfunction normalizeDirectives (options) {\n  var dirs = options.directives;\n  if (dirs) {\n    for (var key in dirs) {\n      var def = dirs[key];\n      if (typeof def === 'function') {\n        dirs[key] = { bind: def, update: def };\n      }\n    }\n  }\n}\n\nfunction assertObjectType (name, value, vm) {\n  if (!isPlainObject(value)) {\n    warn(\n      \"Invalid value for option \\\"\" + name + \"\\\": expected an Object, \" +\n      \"but got \" + (toRawType(value)) + \".\",\n      vm\n    );\n  }\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n */\nfunction mergeOptions (\n  parent,\n  child,\n  vm\n) {\n  if (process.env.NODE_ENV !== 'production') {\n    checkComponents(child);\n  }\n\n  if (typeof child === 'function') {\n    child = child.options;\n  }\n\n  normalizeProps(child, vm);\n  normalizeInject(child, vm);\n  normalizeDirectives(child);\n  var extendsFrom = child.extends;\n  if (extendsFrom) {\n    parent = mergeOptions(parent, extendsFrom, vm);\n  }\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      parent = mergeOptions(parent, child.mixins[i], vm);\n    }\n  }\n  var options = {};\n  var key;\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField (key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n */\nfunction resolveAsset (\n  options,\n  type,\n  id,\n  warnMissing\n) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return\n  }\n  var assets = options[type];\n  // check local registration variations first\n  if (hasOwn(assets, id)) { return assets[id] }\n  var camelizedId = camelize(id);\n  if (hasOwn(assets, camelizedId)) { return assets[camelizedId] }\n  var PascalCaseId = capitalize(camelizedId);\n  if (hasOwn(assets, PascalCaseId)) { return assets[PascalCaseId] }\n  // fallback to prototype chain\n  var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];\n  if (process.env.NODE_ENV !== 'production' && warnMissing && !res) {\n    warn(\n      'Failed to resolve ' + type.slice(0, -1) + ': ' + id,\n      options\n    );\n  }\n  return res\n}\n\n/*  */\n\nfunction validateProp (\n  key,\n  propOptions,\n  propsData,\n  vm\n) {\n  var prop = propOptions[key];\n  var absent = !hasOwn(propsData, key);\n  var value = propsData[key];\n  // boolean casting\n  var booleanIndex = getTypeIndex(Boolean, prop.type);\n  if (booleanIndex > -1) {\n    if (absent && !hasOwn(prop, 'default')) {\n      value = false;\n    } else if (value === '' || value === hyphenate(key)) {\n      // only cast empty string / same name to boolean if\n      // boolean has higher priority\n      var stringIndex = getTypeIndex(String, prop.type);\n      if (stringIndex < 0 || booleanIndex < stringIndex) {\n        value = true;\n      }\n    }\n  }\n  // check default value\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop, key);\n    // since the default value is a fresh copy,\n    // make sure to observe it.\n    var prevShouldObserve = shouldObserve;\n    toggleObserving(true);\n    observe(value);\n    toggleObserving(prevShouldObserve);\n  }\n  if (\n    process.env.NODE_ENV !== 'production' &&\n    // skip validation for weex recycle-list child component props\n    !(false && isObject(value) && ('@binding' in value))\n  ) {\n    assertProp(prop, key, value, vm, absent);\n  }\n  return value\n}\n\n/**\n * Get the default value of a prop.\n */\nfunction getPropDefaultValue (vm, prop, key) {\n  // no default, return undefined\n  if (!hasOwn(prop, 'default')) {\n    return undefined\n  }\n  var def = prop.default;\n  // warn against non-factory defaults for Object & Array\n  if (process.env.NODE_ENV !== 'production' && isObject(def)) {\n    warn(\n      'Invalid default value for prop \"' + key + '\": ' +\n      'Props with type Object/Array must use a factory function ' +\n      'to return the default value.',\n      vm\n    );\n  }\n  // the raw prop value was also undefined from previous render,\n  // return previous default value to avoid unnecessary watcher trigger\n  if (vm && vm.$options.propsData &&\n    vm.$options.propsData[key] === undefined &&\n    vm._props[key] !== undefined\n  ) {\n    return vm._props[key]\n  }\n  // call factory function for non-Function types\n  // a value is Function if its prototype is function even across different execution context\n  return typeof def === 'function' && getType(prop.type) !== 'Function'\n    ? def.call(vm)\n    : def\n}\n\n/**\n * Assert whether a prop is valid.\n */\nfunction assertProp (\n  prop,\n  name,\n  value,\n  vm,\n  absent\n) {\n  if (prop.required && absent) {\n    warn(\n      'Missing required prop: \"' + name + '\"',\n      vm\n    );\n    return\n  }\n  if (value == null && !prop.required) {\n    return\n  }\n  var type = prop.type;\n  var valid = !type || type === true;\n  var expectedTypes = [];\n  if (type) {\n    if (!Array.isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType || '');\n      valid = assertedType.valid;\n    }\n  }\n  if (!valid) {\n    warn(\n      \"Invalid prop: type check failed for prop \\\"\" + name + \"\\\".\" +\n      \" Expected \" + (expectedTypes.map(capitalize).join(', ')) +\n      \", got \" + (toRawType(value)) + \".\",\n      vm\n    );\n    return\n  }\n  var validator = prop.validator;\n  if (validator) {\n    if (!validator(value)) {\n      warn(\n        'Invalid prop: custom validator check failed for prop \"' + name + '\".',\n        vm\n      );\n    }\n  }\n}\n\nvar simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/;\n\nfunction assertType (value, type) {\n  var valid;\n  var expectedType = getType(type);\n  if (simpleCheckRE.test(expectedType)) {\n    var t = typeof value;\n    valid = t === expectedType.toLowerCase();\n    // for primitive wrapper objects\n    if (!valid && t === 'object') {\n      valid = value instanceof type;\n    }\n  } else if (expectedType === 'Object') {\n    valid = isPlainObject(value);\n  } else if (expectedType === 'Array') {\n    valid = Array.isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  }\n}\n\n/**\n * Use function string name to check built-in types,\n * because a simple equality check will fail when running\n * across different vms / iframes.\n */\nfunction getType (fn) {\n  var match = fn && fn.toString().match(/^\\s*function (\\w+)/);\n  return match ? match[1] : ''\n}\n\nfunction isSameType (a, b) {\n  return getType(a) === getType(b)\n}\n\nfunction getTypeIndex (type, expectedTypes) {\n  if (!Array.isArray(expectedTypes)) {\n    return isSameType(expectedTypes, type) ? 0 : -1\n  }\n  for (var i = 0, len = expectedTypes.length; i < len; i++) {\n    if (isSameType(expectedTypes[i], type)) {\n      return i\n    }\n  }\n  return -1\n}\n\n/*  */\n\nfunction handleError (err, vm, info) {\n  if (vm) {\n    var cur = vm;\n    while ((cur = cur.$parent)) {\n      var hooks = cur.$options.errorCaptured;\n      if (hooks) {\n        for (var i = 0; i < hooks.length; i++) {\n          try {\n            var capture = hooks[i].call(cur, err, vm, info) === false;\n            if (capture) { return }\n          } catch (e) {\n            globalHandleError(e, cur, 'errorCaptured hook');\n          }\n        }\n      }\n    }\n  }\n  globalHandleError(err, vm, info);\n}\n\nfunction globalHandleError (err, vm, info) {\n  if (config.errorHandler) {\n    try {\n      return config.errorHandler.call(null, err, vm, info)\n    } catch (e) {\n      logError(e, null, 'config.errorHandler');\n    }\n  }\n  logError(err, vm, info);\n}\n\nfunction logError (err, vm, info) {\n  if (process.env.NODE_ENV !== 'production') {\n    warn((\"Error in \" + info + \": \\\"\" + (err.toString()) + \"\\\"\"), vm);\n  }\n  /* istanbul ignore else */\n  if ((inBrowser || inWeex) && typeof console !== 'undefined') {\n    console.error(err);\n  } else {\n    throw err\n  }\n}\n\n/*  */\n/* globals MessageChannel */\n\nvar callbacks = [];\nvar pending = false;\n\nfunction flushCallbacks () {\n  pending = false;\n  var copies = callbacks.slice(0);\n  callbacks.length = 0;\n  for (var i = 0; i < copies.length; i++) {\n    copies[i]();\n  }\n}\n\n// Here we have async deferring wrappers using both microtasks and (macro) tasks.\n// In < 2.4 we used microtasks everywhere, but there are some scenarios where\n// microtasks have too high a priority and fire in between supposedly\n// sequential events (e.g. #4521, #6690) or even between bubbling of the same\n// event (#6566). However, using (macro) tasks everywhere also has subtle problems\n// when state is changed right before repaint (e.g. #6813, out-in transitions).\n// Here we use microtask by default, but expose a way to force (macro) task when\n// needed (e.g. in event handlers attached by v-on).\nvar microTimerFunc;\nvar macroTimerFunc;\nvar useMacroTask = false;\n\n// Determine (macro) task defer implementation.\n// Technically setImmediate should be the ideal choice, but it's only available\n// in IE. The only polyfill that consistently queues the callback after all DOM\n// events triggered in the same loop is by using MessageChannel.\n/* istanbul ignore if */\nif (typeof setImmediate !== 'undefined' && isNative(setImmediate)) {\n  macroTimerFunc = function () {\n    setImmediate(flushCallbacks);\n  };\n} else if (typeof MessageChannel !== 'undefined' && (\n  isNative(MessageChannel) ||\n  // PhantomJS\n  MessageChannel.toString() === '[object MessageChannelConstructor]'\n)) {\n  var channel = new MessageChannel();\n  var port = channel.port2;\n  channel.port1.onmessage = flushCallbacks;\n  macroTimerFunc = function () {\n    port.postMessage(1);\n  };\n} else {\n  /* istanbul ignore next */\n  macroTimerFunc = function () {\n    setTimeout(flushCallbacks, 0);\n  };\n}\n\n// Determine microtask defer implementation.\n/* istanbul ignore next, $flow-disable-line */\nif (typeof Promise !== 'undefined' && isNative(Promise)) {\n  var p = Promise.resolve();\n  microTimerFunc = function () {\n    p.then(flushCallbacks);\n    // in problematic UIWebViews, Promise.then doesn't completely break, but\n    // it can get stuck in a weird state where callbacks are pushed into the\n    // microtask queue but the queue isn't being flushed, until the browser\n    // needs to do some other work, e.g. handle a timer. Therefore we can\n    // \"force\" the microtask queue to be flushed by adding an empty timer.\n    if (isIOS) { setTimeout(noop); }\n  };\n} else {\n  // fallback to macro\n  microTimerFunc = macroTimerFunc;\n}\n\n/**\n * Wrap a function so that if any code inside triggers state change,\n * the changes are queued using a (macro) task instead of a microtask.\n */\nfunction withMacroTask (fn) {\n  return fn._withTask || (fn._withTask = function () {\n    useMacroTask = true;\n    var res = fn.apply(null, arguments);\n    useMacroTask = false;\n    return res\n  })\n}\n\nfunction nextTick (cb, ctx) {\n  var _resolve;\n  callbacks.push(function () {\n    if (cb) {\n      try {\n        cb.call(ctx);\n      } catch (e) {\n        handleError(e, ctx, 'nextTick');\n      }\n    } else if (_resolve) {\n      _resolve(ctx);\n    }\n  });\n  if (!pending) {\n    pending = true;\n    if (useMacroTask) {\n      macroTimerFunc();\n    } else {\n      microTimerFunc();\n    }\n  }\n  // $flow-disable-line\n  if (!cb && typeof Promise !== 'undefined') {\n    return new Promise(function (resolve) {\n      _resolve = resolve;\n    })\n  }\n}\n\n/*  */\n\n/* not type checking this file because flow doesn't play well with Proxy */\n\nvar initProxy;\n\nif (process.env.NODE_ENV !== 'production') {\n  var allowedGlobals = makeMap(\n    'Infinity,undefined,NaN,isFinite,isNaN,' +\n    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +\n    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +\n    'require' // for Webpack/Browserify\n  );\n\n  var warnNonPresent = function (target, key) {\n    warn(\n      \"Property or method \\\"\" + key + \"\\\" is not defined on the instance but \" +\n      'referenced during render. Make sure that this property is reactive, ' +\n      'either in the data option, or for class-based components, by ' +\n      'initializing the property. ' +\n      'See: https://vuejs.org/v2/guide/reactivity.html#Declaring-Reactive-Properties.',\n      target\n    );\n  };\n\n  var hasProxy =\n    typeof Proxy !== 'undefined' && isNative(Proxy);\n\n  if (hasProxy) {\n    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta,exact');\n    config.keyCodes = new Proxy(config.keyCodes, {\n      set: function set (target, key, value) {\n        if (isBuiltInModifier(key)) {\n          warn((\"Avoid overwriting built-in modifier in config.keyCodes: .\" + key));\n          return false\n        } else {\n          target[key] = value;\n          return true\n        }\n      }\n    });\n  }\n\n  var hasHandler = {\n    has: function has (target, key) {\n      var has = key in target;\n      var isAllowed = allowedGlobals(key) || key.charAt(0) === '_';\n      if (!has && !isAllowed) {\n        warnNonPresent(target, key);\n      }\n      return has || !isAllowed\n    }\n  };\n\n  var getHandler = {\n    get: function get (target, key) {\n      if (typeof key === 'string' && !(key in target)) {\n        warnNonPresent(target, key);\n      }\n      return target[key]\n    }\n  };\n\n  initProxy = function initProxy (vm) {\n    if (hasProxy) {\n      // determine which proxy handler to use\n      var options = vm.$options;\n      var handlers = options.render && options.render._withStripped\n        ? getHandler\n        : hasHandler;\n      vm._renderProxy = new Proxy(vm, handlers);\n    } else {\n      vm._renderProxy = vm;\n    }\n  };\n}\n\n/*  */\n\nvar seenObjects = new _Set();\n\n/**\n * Recursively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n */\nfunction traverse (val) {\n  _traverse(val, seenObjects);\n  seenObjects.clear();\n}\n\nfunction _traverse (val, seen) {\n  var i, keys;\n  var isA = Array.isArray(val);\n  if ((!isA && !isObject(val)) || Object.isFrozen(val) || val instanceof VNode) {\n    return\n  }\n  if (val.__ob__) {\n    var depId = val.__ob__.dep.id;\n    if (seen.has(depId)) {\n      return\n    }\n    seen.add(depId);\n  }\n  if (isA) {\n    i = val.length;\n    while (i--) { _traverse(val[i], seen); }\n  } else {\n    keys = Object.keys(val);\n    i = keys.length;\n    while (i--) { _traverse(val[keys[i]], seen); }\n  }\n}\n\nvar mark;\nvar measure;\n\nif (process.env.NODE_ENV !== 'production') {\n  var perf = inBrowser && window.performance;\n  /* istanbul ignore if */\n  if (\n    perf &&\n    perf.mark &&\n    perf.measure &&\n    perf.clearMarks &&\n    perf.clearMeasures\n  ) {\n    mark = function (tag) { return perf.mark(tag); };\n    measure = function (name, startTag, endTag) {\n      perf.measure(name, startTag, endTag);\n      perf.clearMarks(startTag);\n      perf.clearMarks(endTag);\n      perf.clearMeasures(name);\n    };\n  }\n}\n\n/*  */\n\nvar normalizeEvent = cached(function (name) {\n  var passive = name.charAt(0) === '&';\n  name = passive ? name.slice(1) : name;\n  var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first\n  name = once$$1 ? name.slice(1) : name;\n  var capture = name.charAt(0) === '!';\n  name = capture ? name.slice(1) : name;\n  return {\n    name: name,\n    once: once$$1,\n    capture: capture,\n    passive: passive\n  }\n});\n\nfunction createFnInvoker (fns) {\n  function invoker () {\n    var arguments$1 = arguments;\n\n    var fns = invoker.fns;\n    if (Array.isArray(fns)) {\n      var cloned = fns.slice();\n      for (var i = 0; i < cloned.length; i++) {\n        cloned[i].apply(null, arguments$1);\n      }\n    } else {\n      // return handler return value for single handlers\n      return fns.apply(null, arguments)\n    }\n  }\n  invoker.fns = fns;\n  return invoker\n}\n\nfunction updateListeners (\n  on,\n  oldOn,\n  add,\n  remove$$1,\n  vm\n) {\n  var name, def, cur, old, event;\n  for (name in on) {\n    def = cur = on[name];\n    old = oldOn[name];\n    event = normalizeEvent(name);\n    /* istanbul ignore if */\n    if (isUndef(cur)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Invalid handler for event \\\"\" + (event.name) + \"\\\": got \" + String(cur),\n        vm\n      );\n    } else if (isUndef(old)) {\n      if (isUndef(cur.fns)) {\n        cur = on[name] = createFnInvoker(cur);\n      }\n      add(event.name, cur, event.once, event.capture, event.passive, event.params);\n    } else if (cur !== old) {\n      old.fns = cur;\n      on[name] = old;\n    }\n  }\n  for (name in oldOn) {\n    if (isUndef(on[name])) {\n      event = normalizeEvent(name);\n      remove$$1(event.name, oldOn[name], event.capture);\n    }\n  }\n}\n\n/*  */\n\nfunction mergeVNodeHook (def, hookKey, hook) {\n  if (def instanceof VNode) {\n    def = def.data.hook || (def.data.hook = {});\n  }\n  var invoker;\n  var oldHook = def[hookKey];\n\n  function wrappedHook () {\n    hook.apply(this, arguments);\n    // important: remove merged hook to ensure it's called only once\n    // and prevent memory leak\n    remove(invoker.fns, wrappedHook);\n  }\n\n  if (isUndef(oldHook)) {\n    // no existing hook\n    invoker = createFnInvoker([wrappedHook]);\n  } else {\n    /* istanbul ignore if */\n    if (isDef(oldHook.fns) && isTrue(oldHook.merged)) {\n      // already a merged invoker\n      invoker = oldHook;\n      invoker.fns.push(wrappedHook);\n    } else {\n      // existing plain hook\n      invoker = createFnInvoker([oldHook, wrappedHook]);\n    }\n  }\n\n  invoker.merged = true;\n  def[hookKey] = invoker;\n}\n\n/*  */\n\nfunction extractPropsFromVNodeData (\n  data,\n  Ctor,\n  tag\n) {\n  // we are only extracting raw values here.\n  // validation and default values are handled in the child\n  // component itself.\n  var propOptions = Ctor.options.props;\n  if (isUndef(propOptions)) {\n    return\n  }\n  var res = {};\n  var attrs = data.attrs;\n  var props = data.props;\n  if (isDef(attrs) || isDef(props)) {\n    for (var key in propOptions) {\n      var altKey = hyphenate(key);\n      if (process.env.NODE_ENV !== 'production') {\n        var keyInLowerCase = key.toLowerCase();\n        if (\n          key !== keyInLowerCase &&\n          attrs && hasOwn(attrs, keyInLowerCase)\n        ) {\n          tip(\n            \"Prop \\\"\" + keyInLowerCase + \"\\\" is passed to component \" +\n            (formatComponentName(tag || Ctor)) + \", but the declared prop name is\" +\n            \" \\\"\" + key + \"\\\". \" +\n            \"Note that HTML attributes are case-insensitive and camelCased \" +\n            \"props need to use their kebab-case equivalents when using in-DOM \" +\n            \"templates. You should probably use \\\"\" + altKey + \"\\\" instead of \\\"\" + key + \"\\\".\"\n          );\n        }\n      }\n      checkProp(res, props, key, altKey, true) ||\n      checkProp(res, attrs, key, altKey, false);\n    }\n  }\n  return res\n}\n\nfunction checkProp (\n  res,\n  hash,\n  key,\n  altKey,\n  preserve\n) {\n  if (isDef(hash)) {\n    if (hasOwn(hash, key)) {\n      res[key] = hash[key];\n      if (!preserve) {\n        delete hash[key];\n      }\n      return true\n    } else if (hasOwn(hash, altKey)) {\n      res[key] = hash[altKey];\n      if (!preserve) {\n        delete hash[altKey];\n      }\n      return true\n    }\n  }\n  return false\n}\n\n/*  */\n\n// The template compiler attempts to minimize the need for normalization by\n// statically analyzing the template at compile time.\n//\n// For plain HTML markup, normalization can be completely skipped because the\n// generated render function is guaranteed to return Array<VNode>. There are\n// two cases where extra normalization is needed:\n\n// 1. When the children contains components - because a functional component\n// may return an Array instead of a single root. In this case, just a simple\n// normalization is needed - if any child is an Array, we flatten the whole\n// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep\n// because functional components already normalize their own children.\nfunction simpleNormalizeChildren (children) {\n  for (var i = 0; i < children.length; i++) {\n    if (Array.isArray(children[i])) {\n      return Array.prototype.concat.apply([], children)\n    }\n  }\n  return children\n}\n\n// 2. When the children contains constructs that always generated nested Arrays,\n// e.g. <template>, <slot>, v-for, or when the children is provided by user\n// with hand-written render functions / JSX. In such cases a full normalization\n// is needed to cater to all possible types of children values.\nfunction normalizeChildren (children) {\n  return isPrimitive(children)\n    ? [createTextVNode(children)]\n    : Array.isArray(children)\n      ? normalizeArrayChildren(children)\n      : undefined\n}\n\nfunction isTextNode (node) {\n  return isDef(node) && isDef(node.text) && isFalse(node.isComment)\n}\n\nfunction normalizeArrayChildren (children, nestedIndex) {\n  var res = [];\n  var i, c, lastIndex, last;\n  for (i = 0; i < children.length; i++) {\n    c = children[i];\n    if (isUndef(c) || typeof c === 'boolean') { continue }\n    lastIndex = res.length - 1;\n    last = res[lastIndex];\n    //  nested\n    if (Array.isArray(c)) {\n      if (c.length > 0) {\n        c = normalizeArrayChildren(c, ((nestedIndex || '') + \"_\" + i));\n        // merge adjacent text nodes\n        if (isTextNode(c[0]) && isTextNode(last)) {\n          res[lastIndex] = createTextVNode(last.text + (c[0]).text);\n          c.shift();\n        }\n        res.push.apply(res, c);\n      }\n    } else if (isPrimitive(c)) {\n      if (isTextNode(last)) {\n        // merge adjacent text nodes\n        // this is necessary for SSR hydration because text nodes are\n        // essentially merged when rendered to HTML strings\n        res[lastIndex] = createTextVNode(last.text + c);\n      } else if (c !== '') {\n        // convert primitive to vnode\n        res.push(createTextVNode(c));\n      }\n    } else {\n      if (isTextNode(c) && isTextNode(last)) {\n        // merge adjacent text nodes\n        res[lastIndex] = createTextVNode(last.text + c.text);\n      } else {\n        // default key for nested array children (likely generated by v-for)\n        if (isTrue(children._isVList) &&\n          isDef(c.tag) &&\n          isUndef(c.key) &&\n          isDef(nestedIndex)) {\n          c.key = \"__vlist\" + nestedIndex + \"_\" + i + \"__\";\n        }\n        res.push(c);\n      }\n    }\n  }\n  return res\n}\n\n/*  */\n\nfunction ensureCtor (comp, base) {\n  if (\n    comp.__esModule ||\n    (hasSymbol && comp[Symbol.toStringTag] === 'Module')\n  ) {\n    comp = comp.default;\n  }\n  return isObject(comp)\n    ? base.extend(comp)\n    : comp\n}\n\nfunction createAsyncPlaceholder (\n  factory,\n  data,\n  context,\n  children,\n  tag\n) {\n  var node = createEmptyVNode();\n  node.asyncFactory = factory;\n  node.asyncMeta = { data: data, context: context, children: children, tag: tag };\n  return node\n}\n\nfunction resolveAsyncComponent (\n  factory,\n  baseCtor,\n  context\n) {\n  if (isTrue(factory.error) && isDef(factory.errorComp)) {\n    return factory.errorComp\n  }\n\n  if (isDef(factory.resolved)) {\n    return factory.resolved\n  }\n\n  if (isTrue(factory.loading) && isDef(factory.loadingComp)) {\n    return factory.loadingComp\n  }\n\n  if (isDef(factory.contexts)) {\n    // already pending\n    factory.contexts.push(context);\n  } else {\n    var contexts = factory.contexts = [context];\n    var sync = true;\n\n    var forceRender = function () {\n      for (var i = 0, l = contexts.length; i < l; i++) {\n        contexts[i].$forceUpdate();\n      }\n    };\n\n    var resolve = once(function (res) {\n      // cache resolved\n      factory.resolved = ensureCtor(res, baseCtor);\n      // invoke callbacks only if this is not a synchronous resolve\n      // (async resolves are shimmed as synchronous during SSR)\n      if (!sync) {\n        forceRender();\n      }\n    });\n\n    var reject = once(function (reason) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed to resolve async component: \" + (String(factory)) +\n        (reason ? (\"\\nReason: \" + reason) : '')\n      );\n      if (isDef(factory.errorComp)) {\n        factory.error = true;\n        forceRender();\n      }\n    });\n\n    var res = factory(resolve, reject);\n\n    if (isObject(res)) {\n      if (typeof res.then === 'function') {\n        // () => Promise\n        if (isUndef(factory.resolved)) {\n          res.then(resolve, reject);\n        }\n      } else if (isDef(res.component) && typeof res.component.then === 'function') {\n        res.component.then(resolve, reject);\n\n        if (isDef(res.error)) {\n          factory.errorComp = ensureCtor(res.error, baseCtor);\n        }\n\n        if (isDef(res.loading)) {\n          factory.loadingComp = ensureCtor(res.loading, baseCtor);\n          if (res.delay === 0) {\n            factory.loading = true;\n          } else {\n            setTimeout(function () {\n              if (isUndef(factory.resolved) && isUndef(factory.error)) {\n                factory.loading = true;\n                forceRender();\n              }\n            }, res.delay || 200);\n          }\n        }\n\n        if (isDef(res.timeout)) {\n          setTimeout(function () {\n            if (isUndef(factory.resolved)) {\n              reject(\n                process.env.NODE_ENV !== 'production'\n                  ? (\"timeout (\" + (res.timeout) + \"ms)\")\n                  : null\n              );\n            }\n          }, res.timeout);\n        }\n      }\n    }\n\n    sync = false;\n    // return in case resolved synchronously\n    return factory.loading\n      ? factory.loadingComp\n      : factory.resolved\n  }\n}\n\n/*  */\n\nfunction isAsyncPlaceholder (node) {\n  return node.isComment && node.asyncFactory\n}\n\n/*  */\n\nfunction getFirstComponentChild (children) {\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      var c = children[i];\n      if (isDef(c) && (isDef(c.componentOptions) || isAsyncPlaceholder(c))) {\n        return c\n      }\n    }\n  }\n}\n\n/*  */\n\n/*  */\n\nfunction initEvents (vm) {\n  vm._events = Object.create(null);\n  vm._hasHookEvent = false;\n  // init parent attached events\n  var listeners = vm.$options._parentListeners;\n  if (listeners) {\n    updateComponentListeners(vm, listeners);\n  }\n}\n\nvar target;\n\nfunction add (event, fn, once) {\n  if (once) {\n    target.$once(event, fn);\n  } else {\n    target.$on(event, fn);\n  }\n}\n\nfunction remove$1 (event, fn) {\n  target.$off(event, fn);\n}\n\nfunction updateComponentListeners (\n  vm,\n  listeners,\n  oldListeners\n) {\n  target = vm;\n  updateListeners(listeners, oldListeners || {}, add, remove$1, vm);\n  target = undefined;\n}\n\nfunction eventsMixin (Vue) {\n  var hookRE = /^hook:/;\n  Vue.prototype.$on = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        this$1.$on(event[i], fn);\n      }\n    } else {\n      (vm._events[event] || (vm._events[event] = [])).push(fn);\n      // optimize hook:event cost by using a boolean flag marked at registration\n      // instead of a hash lookup\n      if (hookRE.test(event)) {\n        vm._hasHookEvent = true;\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$once = function (event, fn) {\n    var vm = this;\n    function on () {\n      vm.$off(event, on);\n      fn.apply(vm, arguments);\n    }\n    on.fn = fn;\n    vm.$on(event, on);\n    return vm\n  };\n\n  Vue.prototype.$off = function (event, fn) {\n    var this$1 = this;\n\n    var vm = this;\n    // all\n    if (!arguments.length) {\n      vm._events = Object.create(null);\n      return vm\n    }\n    // array of events\n    if (Array.isArray(event)) {\n      for (var i = 0, l = event.length; i < l; i++) {\n        this$1.$off(event[i], fn);\n      }\n      return vm\n    }\n    // specific event\n    var cbs = vm._events[event];\n    if (!cbs) {\n      return vm\n    }\n    if (!fn) {\n      vm._events[event] = null;\n      return vm\n    }\n    if (fn) {\n      // specific handler\n      var cb;\n      var i$1 = cbs.length;\n      while (i$1--) {\n        cb = cbs[i$1];\n        if (cb === fn || cb.fn === fn) {\n          cbs.splice(i$1, 1);\n          break\n        }\n      }\n    }\n    return vm\n  };\n\n  Vue.prototype.$emit = function (event) {\n    var vm = this;\n    if (process.env.NODE_ENV !== 'production') {\n      var lowerCaseEvent = event.toLowerCase();\n      if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {\n        tip(\n          \"Event \\\"\" + lowerCaseEvent + \"\\\" is emitted in component \" +\n          (formatComponentName(vm)) + \" but the handler is registered for \\\"\" + event + \"\\\". \" +\n          \"Note that HTML attributes are case-insensitive and you cannot use \" +\n          \"v-on to listen to camelCase events when using in-DOM templates. \" +\n          \"You should probably use \\\"\" + (hyphenate(event)) + \"\\\" instead of \\\"\" + event + \"\\\".\"\n        );\n      }\n    }\n    var cbs = vm._events[event];\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        try {\n          cbs[i].apply(vm, args);\n        } catch (e) {\n          handleError(e, vm, (\"event handler for \\\"\" + event + \"\\\"\"));\n        }\n      }\n    }\n    return vm\n  };\n}\n\n/*  */\n\n\n\n/**\n * Runtime helper for resolving raw children VNodes into a slot object.\n */\nfunction resolveSlots (\n  children,\n  context\n) {\n  var slots = {};\n  if (!children) {\n    return slots\n  }\n  for (var i = 0, l = children.length; i < l; i++) {\n    var child = children[i];\n    var data = child.data;\n    // remove slot attribute if the node is resolved as a Vue slot node\n    if (data && data.attrs && data.attrs.slot) {\n      delete data.attrs.slot;\n    }\n    // named slots should only be respected if the vnode was rendered in the\n    // same context.\n    if ((child.context === context || child.fnContext === context) &&\n      data && data.slot != null\n    ) {\n      var name = data.slot;\n      var slot = (slots[name] || (slots[name] = []));\n      if (child.tag === 'template') {\n        slot.push.apply(slot, child.children || []);\n      } else {\n        slot.push(child);\n      }\n    } else {\n      (slots.default || (slots.default = [])).push(child);\n    }\n  }\n  // ignore slots that contains only whitespace\n  for (var name$1 in slots) {\n    if (slots[name$1].every(isWhitespace)) {\n      delete slots[name$1];\n    }\n  }\n  return slots\n}\n\nfunction isWhitespace (node) {\n  return (node.isComment && !node.asyncFactory) || node.text === ' '\n}\n\nfunction resolveScopedSlots (\n  fns, // see flow/vnode\n  res\n) {\n  res = res || {};\n  for (var i = 0; i < fns.length; i++) {\n    if (Array.isArray(fns[i])) {\n      resolveScopedSlots(fns[i], res);\n    } else {\n      res[fns[i].key] = fns[i].fn;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar activeInstance = null;\nvar isUpdatingChildComponent = false;\n\nfunction initLifecycle (vm) {\n  var options = vm.$options;\n\n  // locate first non-abstract parent\n  var parent = options.parent;\n  if (parent && !options.abstract) {\n    while (parent.$options.abstract && parent.$parent) {\n      parent = parent.$parent;\n    }\n    parent.$children.push(vm);\n  }\n\n  vm.$parent = parent;\n  vm.$root = parent ? parent.$root : vm;\n\n  vm.$children = [];\n  vm.$refs = {};\n\n  vm._watcher = null;\n  vm._inactive = null;\n  vm._directInactive = false;\n  vm._isMounted = false;\n  vm._isDestroyed = false;\n  vm._isBeingDestroyed = false;\n}\n\nfunction lifecycleMixin (Vue) {\n  Vue.prototype._update = function (vnode, hydrating) {\n    var vm = this;\n    if (vm._isMounted) {\n      callHook(vm, 'beforeUpdate');\n    }\n    var prevEl = vm.$el;\n    var prevVnode = vm._vnode;\n    var prevActiveInstance = activeInstance;\n    activeInstance = vm;\n    vm._vnode = vnode;\n    // Vue.prototype.__patch__ is injected in entry points\n    // based on the rendering backend used.\n    if (!prevVnode) {\n      // initial render\n      vm.$el = vm.__patch__(\n        vm.$el, vnode, hydrating, false /* removeOnly */,\n        vm.$options._parentElm,\n        vm.$options._refElm\n      );\n      // no need for the ref nodes after initial patch\n      // this prevents keeping a detached DOM tree in memory (#5851)\n      vm.$options._parentElm = vm.$options._refElm = null;\n    } else {\n      // updates\n      vm.$el = vm.__patch__(prevVnode, vnode);\n    }\n    activeInstance = prevActiveInstance;\n    // update __vue__ reference\n    if (prevEl) {\n      prevEl.__vue__ = null;\n    }\n    if (vm.$el) {\n      vm.$el.__vue__ = vm;\n    }\n    // if parent is an HOC, update its $el as well\n    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {\n      vm.$parent.$el = vm.$el;\n    }\n    // updated hook is called by the scheduler to ensure that children are\n    // updated in a parent's updated hook.\n  };\n\n  Vue.prototype.$forceUpdate = function () {\n    var vm = this;\n    if (vm._watcher) {\n      vm._watcher.update();\n    }\n  };\n\n  Vue.prototype.$destroy = function () {\n    var vm = this;\n    if (vm._isBeingDestroyed) {\n      return\n    }\n    callHook(vm, 'beforeDestroy');\n    vm._isBeingDestroyed = true;\n    // remove self from parent\n    var parent = vm.$parent;\n    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {\n      remove(parent.$children, vm);\n    }\n    // teardown watchers\n    if (vm._watcher) {\n      vm._watcher.teardown();\n    }\n    var i = vm._watchers.length;\n    while (i--) {\n      vm._watchers[i].teardown();\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (vm._data.__ob__) {\n      vm._data.__ob__.vmCount--;\n    }\n    // call the last hook...\n    vm._isDestroyed = true;\n    // invoke destroy hooks on current rendered tree\n    vm.__patch__(vm._vnode, null);\n    // fire destroyed hook\n    callHook(vm, 'destroyed');\n    // turn off all instance listeners.\n    vm.$off();\n    // remove __vue__ reference\n    if (vm.$el) {\n      vm.$el.__vue__ = null;\n    }\n    // release circular reference (#6759)\n    if (vm.$vnode) {\n      vm.$vnode.parent = null;\n    }\n  };\n}\n\nfunction mountComponent (\n  vm,\n  el,\n  hydrating\n) {\n  vm.$el = el;\n  if (!vm.$options.render) {\n    vm.$options.render = createEmptyVNode;\n    if (process.env.NODE_ENV !== 'production') {\n      /* istanbul ignore if */\n      if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||\n        vm.$options.el || el) {\n        warn(\n          'You are using the runtime-only build of Vue where the template ' +\n          'compiler is not available. Either pre-compile the templates into ' +\n          'render functions, or use the compiler-included build.',\n          vm\n        );\n      } else {\n        warn(\n          'Failed to mount component: template or render function not defined.',\n          vm\n        );\n      }\n    }\n  }\n  callHook(vm, 'beforeMount');\n\n  var updateComponent;\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n    updateComponent = function () {\n      var name = vm._name;\n      var id = vm._uid;\n      var startTag = \"vue-perf-start:\" + id;\n      var endTag = \"vue-perf-end:\" + id;\n\n      mark(startTag);\n      var vnode = vm._render();\n      mark(endTag);\n      measure((\"vue \" + name + \" render\"), startTag, endTag);\n\n      mark(startTag);\n      vm._update(vnode, hydrating);\n      mark(endTag);\n      measure((\"vue \" + name + \" patch\"), startTag, endTag);\n    };\n  } else {\n    updateComponent = function () {\n      vm._update(vm._render(), hydrating);\n    };\n  }\n\n  // we set this to vm._watcher inside the watcher's constructor\n  // since the watcher's initial patch may call $forceUpdate (e.g. inside child\n  // component's mounted hook), which relies on vm._watcher being already defined\n  new Watcher(vm, updateComponent, noop, null, true /* isRenderWatcher */);\n  hydrating = false;\n\n  // manually mounted instance, call mounted on self\n  // mounted is called for render-created child components in its inserted hook\n  if (vm.$vnode == null) {\n    vm._isMounted = true;\n    callHook(vm, 'mounted');\n  }\n  return vm\n}\n\nfunction updateChildComponent (\n  vm,\n  propsData,\n  listeners,\n  parentVnode,\n  renderChildren\n) {\n  if (process.env.NODE_ENV !== 'production') {\n    isUpdatingChildComponent = true;\n  }\n\n  // determine whether component has slot children\n  // we need to do this before overwriting $options._renderChildren\n  var hasChildren = !!(\n    renderChildren ||               // has new static slots\n    vm.$options._renderChildren ||  // has old static slots\n    parentVnode.data.scopedSlots || // has new scoped slots\n    vm.$scopedSlots !== emptyObject // has old scoped slots\n  );\n\n  vm.$options._parentVnode = parentVnode;\n  vm.$vnode = parentVnode; // update vm's placeholder node without re-render\n\n  if (vm._vnode) { // update child tree's parent\n    vm._vnode.parent = parentVnode;\n  }\n  vm.$options._renderChildren = renderChildren;\n\n  // update $attrs and $listeners hash\n  // these are also reactive so they may trigger child update if the child\n  // used them during render\n  vm.$attrs = parentVnode.data.attrs || emptyObject;\n  vm.$listeners = listeners || emptyObject;\n\n  // update props\n  if (propsData && vm.$options.props) {\n    toggleObserving(false);\n    var props = vm._props;\n    var propKeys = vm.$options._propKeys || [];\n    for (var i = 0; i < propKeys.length; i++) {\n      var key = propKeys[i];\n      var propOptions = vm.$options.props; // wtf flow?\n      props[key] = validateProp(key, propOptions, propsData, vm);\n    }\n    toggleObserving(true);\n    // keep a copy of raw propsData\n    vm.$options.propsData = propsData;\n  }\n\n  // update listeners\n  listeners = listeners || emptyObject;\n  var oldListeners = vm.$options._parentListeners;\n  vm.$options._parentListeners = listeners;\n  updateComponentListeners(vm, listeners, oldListeners);\n\n  // resolve slots + force update if has children\n  if (hasChildren) {\n    vm.$slots = resolveSlots(renderChildren, parentVnode.context);\n    vm.$forceUpdate();\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    isUpdatingChildComponent = false;\n  }\n}\n\nfunction isInInactiveTree (vm) {\n  while (vm && (vm = vm.$parent)) {\n    if (vm._inactive) { return true }\n  }\n  return false\n}\n\nfunction activateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = false;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  } else if (vm._directInactive) {\n    return\n  }\n  if (vm._inactive || vm._inactive === null) {\n    vm._inactive = false;\n    for (var i = 0; i < vm.$children.length; i++) {\n      activateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'activated');\n  }\n}\n\nfunction deactivateChildComponent (vm, direct) {\n  if (direct) {\n    vm._directInactive = true;\n    if (isInInactiveTree(vm)) {\n      return\n    }\n  }\n  if (!vm._inactive) {\n    vm._inactive = true;\n    for (var i = 0; i < vm.$children.length; i++) {\n      deactivateChildComponent(vm.$children[i]);\n    }\n    callHook(vm, 'deactivated');\n  }\n}\n\nfunction callHook (vm, hook) {\n  // #7573 disable dep collection when invoking lifecycle hooks\n  pushTarget();\n  var handlers = vm.$options[hook];\n  if (handlers) {\n    for (var i = 0, j = handlers.length; i < j; i++) {\n      try {\n        handlers[i].call(vm);\n      } catch (e) {\n        handleError(e, vm, (hook + \" hook\"));\n      }\n    }\n  }\n  if (vm._hasHookEvent) {\n    vm.$emit('hook:' + hook);\n  }\n  popTarget();\n}\n\n/*  */\n\n\nvar MAX_UPDATE_COUNT = 100;\n\nvar queue = [];\nvar activatedChildren = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\nvar flushing = false;\nvar index = 0;\n\n/**\n * Reset the scheduler's state.\n */\nfunction resetSchedulerState () {\n  index = queue.length = activatedChildren.length = 0;\n  has = {};\n  if (process.env.NODE_ENV !== 'production') {\n    circular = {};\n  }\n  waiting = flushing = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\nfunction flushSchedulerQueue () {\n  flushing = true;\n  var watcher, id;\n\n  // Sort queue before flush.\n  // This ensures that:\n  // 1. Components are updated from parent to child. (because parent is always\n  //    created before the child)\n  // 2. A component's user watchers are run before its render watcher (because\n  //    user watchers are created before the render watcher)\n  // 3. If a component is destroyed during a parent component's watcher run,\n  //    its watchers can be skipped.\n  queue.sort(function (a, b) { return a.id - b.id; });\n\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (index = 0; index < queue.length; index++) {\n    watcher = queue[index];\n    id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > MAX_UPDATE_COUNT) {\n        warn(\n          'You may have an infinite update loop ' + (\n            watcher.user\n              ? (\"in watcher with expression \\\"\" + (watcher.expression) + \"\\\"\")\n              : \"in a component render function.\"\n          ),\n          watcher.vm\n        );\n        break\n      }\n    }\n  }\n\n  // keep copies of post queues before resetting state\n  var activatedQueue = activatedChildren.slice();\n  var updatedQueue = queue.slice();\n\n  resetSchedulerState();\n\n  // call component updated and activated hooks\n  callActivatedHooks(activatedQueue);\n  callUpdatedHooks(updatedQueue);\n\n  // devtool hook\n  /* istanbul ignore if */\n  if (devtools && config.devtools) {\n    devtools.emit('flush');\n  }\n}\n\nfunction callUpdatedHooks (queue) {\n  var i = queue.length;\n  while (i--) {\n    var watcher = queue[i];\n    var vm = watcher.vm;\n    if (vm._watcher === watcher && vm._isMounted) {\n      callHook(vm, 'updated');\n    }\n  }\n}\n\n/**\n * Queue a kept-alive component that was activated during patch.\n * The queue will be processed after the entire tree has been patched.\n */\nfunction queueActivatedComponent (vm) {\n  // setting _inactive to false here so that a render function can\n  // rely on checking whether it's in an inactive tree (e.g. router-view)\n  vm._inactive = false;\n  activatedChildren.push(vm);\n}\n\nfunction callActivatedHooks (queue) {\n  for (var i = 0; i < queue.length; i++) {\n    queue[i]._inactive = true;\n    activateChildComponent(queue[i], true /* true */);\n  }\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n */\nfunction queueWatcher (watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    has[id] = true;\n    if (!flushing) {\n      queue.push(watcher);\n    } else {\n      // if already flushing, splice the watcher based on its id\n      // if already past its id, it will be run next immediately.\n      var i = queue.length - 1;\n      while (i > index && queue[i].id > watcher.id) {\n        i--;\n      }\n      queue.splice(i + 1, 0, watcher);\n    }\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n      nextTick(flushSchedulerQueue);\n    }\n  }\n}\n\n/*  */\n\nvar uid$1 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n */\nvar Watcher = function Watcher (\n  vm,\n  expOrFn,\n  cb,\n  options,\n  isRenderWatcher\n) {\n  this.vm = vm;\n  if (isRenderWatcher) {\n    vm._watcher = this;\n  }\n  vm._watchers.push(this);\n  // options\n  if (options) {\n    this.deep = !!options.deep;\n    this.user = !!options.user;\n    this.lazy = !!options.lazy;\n    this.sync = !!options.sync;\n  } else {\n    this.deep = this.user = this.lazy = this.sync = false;\n  }\n  this.cb = cb;\n  this.id = ++uid$1; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.expression = process.env.NODE_ENV !== 'production'\n    ? expOrFn.toString()\n    : '';\n  // parse expression for getter\n  if (typeof expOrFn === 'function') {\n    this.getter = expOrFn;\n  } else {\n    this.getter = parsePath(expOrFn);\n    if (!this.getter) {\n      this.getter = function () {};\n      process.env.NODE_ENV !== 'production' && warn(\n        \"Failed watching path: \\\"\" + expOrFn + \"\\\" \" +\n        'Watcher only accepts simple dot-delimited paths. ' +\n        'For full control, use a function instead.',\n        vm\n      );\n    }\n  }\n  this.value = this.lazy\n    ? undefined\n    : this.get();\n};\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\nWatcher.prototype.get = function get () {\n  pushTarget(this);\n  var value;\n  var vm = this.vm;\n  try {\n    value = this.getter.call(vm, vm);\n  } catch (e) {\n    if (this.user) {\n      handleError(e, vm, (\"getter for watcher \\\"\" + (this.expression) + \"\\\"\"));\n    } else {\n      throw e\n    }\n  } finally {\n    // \"touch\" every property so they are all tracked as\n    // dependencies for deep watching\n    if (this.deep) {\n      traverse(value);\n    }\n    popTarget();\n    this.cleanupDeps();\n  }\n  return value\n};\n\n/**\n * Add a dependency to this directive.\n */\nWatcher.prototype.addDep = function addDep (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\nWatcher.prototype.cleanupDeps = function cleanupDeps () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this$1.deps[i];\n    if (!this$1.newDepIds.has(dep.id)) {\n      dep.removeSub(this$1);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n */\nWatcher.prototype.update = function update () {\n  /* istanbul ignore else */\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync) {\n    this.run();\n  } else {\n    queueWatcher(this);\n  }\n};\n\n/**\n * Scheduler job interface.\n * Will be called by the scheduler.\n */\nWatcher.prototype.run = function run () {\n  if (this.active) {\n    var value = this.get();\n    if (\n      value !== this.value ||\n      // Deep watchers and watchers on Object/Arrays should fire even\n      // when the value is the same, because the value may\n      // have mutated.\n      isObject(value) ||\n      this.deep\n    ) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      if (this.user) {\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          handleError(e, this.vm, (\"callback for watcher \\\"\" + (this.expression) + \"\\\"\"));\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\nWatcher.prototype.evaluate = function evaluate () {\n  this.value = this.get();\n  this.dirty = false;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\nWatcher.prototype.depend = function depend () {\n    var this$1 = this;\n\n  var i = this.deps.length;\n  while (i--) {\n    this$1.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subscriber list.\n */\nWatcher.prototype.teardown = function teardown () {\n    var this$1 = this;\n\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed.\n    if (!this.vm._isBeingDestroyed) {\n      remove(this.vm._watchers, this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this$1.deps[i].removeSub(this$1);\n    }\n    this.active = false;\n  }\n};\n\n/*  */\n\nvar sharedPropertyDefinition = {\n  enumerable: true,\n  configurable: true,\n  get: noop,\n  set: noop\n};\n\nfunction proxy (target, sourceKey, key) {\n  sharedPropertyDefinition.get = function proxyGetter () {\n    return this[sourceKey][key]\n  };\n  sharedPropertyDefinition.set = function proxySetter (val) {\n    this[sourceKey][key] = val;\n  };\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction initState (vm) {\n  vm._watchers = [];\n  var opts = vm.$options;\n  if (opts.props) { initProps(vm, opts.props); }\n  if (opts.methods) { initMethods(vm, opts.methods); }\n  if (opts.data) {\n    initData(vm);\n  } else {\n    observe(vm._data = {}, true /* asRootData */);\n  }\n  if (opts.computed) { initComputed(vm, opts.computed); }\n  if (opts.watch && opts.watch !== nativeWatch) {\n    initWatch(vm, opts.watch);\n  }\n}\n\nfunction initProps (vm, propsOptions) {\n  var propsData = vm.$options.propsData || {};\n  var props = vm._props = {};\n  // cache prop keys so that future props updates can iterate using Array\n  // instead of dynamic object key enumeration.\n  var keys = vm.$options._propKeys = [];\n  var isRoot = !vm.$parent;\n  // root instance props should be converted\n  if (!isRoot) {\n    toggleObserving(false);\n  }\n  var loop = function ( key ) {\n    keys.push(key);\n    var value = validateProp(key, propsOptions, propsData, vm);\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      var hyphenatedKey = hyphenate(key);\n      if (isReservedAttribute(hyphenatedKey) ||\n          config.isReservedAttr(hyphenatedKey)) {\n        warn(\n          (\"\\\"\" + hyphenatedKey + \"\\\" is a reserved attribute and cannot be used as component prop.\"),\n          vm\n        );\n      }\n      defineReactive(props, key, value, function () {\n        if (vm.$parent && !isUpdatingChildComponent) {\n          warn(\n            \"Avoid mutating a prop directly since the value will be \" +\n            \"overwritten whenever the parent component re-renders. \" +\n            \"Instead, use a data or computed property based on the prop's \" +\n            \"value. Prop being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        }\n      });\n    } else {\n      defineReactive(props, key, value);\n    }\n    // static props are already proxied on the component's prototype\n    // during Vue.extend(). We only need to proxy props defined at\n    // instantiation here.\n    if (!(key in vm)) {\n      proxy(vm, \"_props\", key);\n    }\n  };\n\n  for (var key in propsOptions) loop( key );\n  toggleObserving(true);\n}\n\nfunction initData (vm) {\n  var data = vm.$options.data;\n  data = vm._data = typeof data === 'function'\n    ? getData(data, vm)\n    : data || {};\n  if (!isPlainObject(data)) {\n    data = {};\n    process.env.NODE_ENV !== 'production' && warn(\n      'data functions should return an object:\\n' +\n      'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',\n      vm\n    );\n  }\n  // proxy data on instance\n  var keys = Object.keys(data);\n  var props = vm.$options.props;\n  var methods = vm.$options.methods;\n  var i = keys.length;\n  while (i--) {\n    var key = keys[i];\n    if (process.env.NODE_ENV !== 'production') {\n      if (methods && hasOwn(methods, key)) {\n        warn(\n          (\"Method \\\"\" + key + \"\\\" has already been defined as a data property.\"),\n          vm\n        );\n      }\n    }\n    if (props && hasOwn(props, key)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        \"The data property \\\"\" + key + \"\\\" is already declared as a prop. \" +\n        \"Use prop default value instead.\",\n        vm\n      );\n    } else if (!isReserved(key)) {\n      proxy(vm, \"_data\", key);\n    }\n  }\n  // observe data\n  observe(data, true /* asRootData */);\n}\n\nfunction getData (data, vm) {\n  // #7573 disable dep collection when invoking data getters\n  pushTarget();\n  try {\n    return data.call(vm, vm)\n  } catch (e) {\n    handleError(e, vm, \"data()\");\n    return {}\n  } finally {\n    popTarget();\n  }\n}\n\nvar computedWatcherOptions = { lazy: true };\n\nfunction initComputed (vm, computed) {\n  // $flow-disable-line\n  var watchers = vm._computedWatchers = Object.create(null);\n  // computed properties are just getters during SSR\n  var isSSR = isServerRendering();\n\n  for (var key in computed) {\n    var userDef = computed[key];\n    var getter = typeof userDef === 'function' ? userDef : userDef.get;\n    if (process.env.NODE_ENV !== 'production' && getter == null) {\n      warn(\n        (\"Getter is missing for computed property \\\"\" + key + \"\\\".\"),\n        vm\n      );\n    }\n\n    if (!isSSR) {\n      // create internal watcher for the computed property.\n      watchers[key] = new Watcher(\n        vm,\n        getter || noop,\n        noop,\n        computedWatcherOptions\n      );\n    }\n\n    // component-defined computed properties are already defined on the\n    // component prototype. We only need to define computed properties defined\n    // at instantiation here.\n    if (!(key in vm)) {\n      defineComputed(vm, key, userDef);\n    } else if (process.env.NODE_ENV !== 'production') {\n      if (key in vm.$data) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined in data.\"), vm);\n      } else if (vm.$options.props && key in vm.$options.props) {\n        warn((\"The computed property \\\"\" + key + \"\\\" is already defined as a prop.\"), vm);\n      }\n    }\n  }\n}\n\nfunction defineComputed (\n  target,\n  key,\n  userDef\n) {\n  var shouldCache = !isServerRendering();\n  if (typeof userDef === 'function') {\n    sharedPropertyDefinition.get = shouldCache\n      ? createComputedGetter(key)\n      : userDef;\n    sharedPropertyDefinition.set = noop;\n  } else {\n    sharedPropertyDefinition.get = userDef.get\n      ? shouldCache && userDef.cache !== false\n        ? createComputedGetter(key)\n        : userDef.get\n      : noop;\n    sharedPropertyDefinition.set = userDef.set\n      ? userDef.set\n      : noop;\n  }\n  if (process.env.NODE_ENV !== 'production' &&\n      sharedPropertyDefinition.set === noop) {\n    sharedPropertyDefinition.set = function () {\n      warn(\n        (\"Computed property \\\"\" + key + \"\\\" was assigned to but it has no setter.\"),\n        this\n      );\n    };\n  }\n  Object.defineProperty(target, key, sharedPropertyDefinition);\n}\n\nfunction createComputedGetter (key) {\n  return function computedGetter () {\n    var watcher = this._computedWatchers && this._computedWatchers[key];\n    if (watcher) {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value\n    }\n  }\n}\n\nfunction initMethods (vm, methods) {\n  var props = vm.$options.props;\n  for (var key in methods) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (methods[key] == null) {\n        warn(\n          \"Method \\\"\" + key + \"\\\" has an undefined value in the component definition. \" +\n          \"Did you reference the function correctly?\",\n          vm\n        );\n      }\n      if (props && hasOwn(props, key)) {\n        warn(\n          (\"Method \\\"\" + key + \"\\\" has already been defined as a prop.\"),\n          vm\n        );\n      }\n      if ((key in vm) && isReserved(key)) {\n        warn(\n          \"Method \\\"\" + key + \"\\\" conflicts with an existing Vue instance method. \" +\n          \"Avoid defining component methods that start with _ or $.\"\n        );\n      }\n    }\n    vm[key] = methods[key] == null ? noop : bind(methods[key], vm);\n  }\n}\n\nfunction initWatch (vm, watch) {\n  for (var key in watch) {\n    var handler = watch[key];\n    if (Array.isArray(handler)) {\n      for (var i = 0; i < handler.length; i++) {\n        createWatcher(vm, key, handler[i]);\n      }\n    } else {\n      createWatcher(vm, key, handler);\n    }\n  }\n}\n\nfunction createWatcher (\n  vm,\n  expOrFn,\n  handler,\n  options\n) {\n  if (isPlainObject(handler)) {\n    options = handler;\n    handler = handler.handler;\n  }\n  if (typeof handler === 'string') {\n    handler = vm[handler];\n  }\n  return vm.$watch(expOrFn, handler, options)\n}\n\nfunction stateMixin (Vue) {\n  // flow somehow has problems with directly declared definition object\n  // when using Object.defineProperty, so we have to procedurally build up\n  // the object here.\n  var dataDef = {};\n  dataDef.get = function () { return this._data };\n  var propsDef = {};\n  propsDef.get = function () { return this._props };\n  if (process.env.NODE_ENV !== 'production') {\n    dataDef.set = function (newData) {\n      warn(\n        'Avoid replacing instance root $data. ' +\n        'Use nested data properties instead.',\n        this\n      );\n    };\n    propsDef.set = function () {\n      warn(\"$props is readonly.\", this);\n    };\n  }\n  Object.defineProperty(Vue.prototype, '$data', dataDef);\n  Object.defineProperty(Vue.prototype, '$props', propsDef);\n\n  Vue.prototype.$set = set;\n  Vue.prototype.$delete = del;\n\n  Vue.prototype.$watch = function (\n    expOrFn,\n    cb,\n    options\n  ) {\n    var vm = this;\n    if (isPlainObject(cb)) {\n      return createWatcher(vm, expOrFn, cb, options)\n    }\n    options = options || {};\n    options.user = true;\n    var watcher = new Watcher(vm, expOrFn, cb, options);\n    if (options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn () {\n      watcher.teardown();\n    }\n  };\n}\n\n/*  */\n\nfunction initProvide (vm) {\n  var provide = vm.$options.provide;\n  if (provide) {\n    vm._provided = typeof provide === 'function'\n      ? provide.call(vm)\n      : provide;\n  }\n}\n\nfunction initInjections (vm) {\n  var result = resolveInject(vm.$options.inject, vm);\n  if (result) {\n    toggleObserving(false);\n    Object.keys(result).forEach(function (key) {\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== 'production') {\n        defineReactive(vm, key, result[key], function () {\n          warn(\n            \"Avoid mutating an injected value directly since the changes will be \" +\n            \"overwritten whenever the provided component re-renders. \" +\n            \"injection being mutated: \\\"\" + key + \"\\\"\",\n            vm\n          );\n        });\n      } else {\n        defineReactive(vm, key, result[key]);\n      }\n    });\n    toggleObserving(true);\n  }\n}\n\nfunction resolveInject (inject, vm) {\n  if (inject) {\n    // inject is :any because flow is not smart enough to figure out cached\n    var result = Object.create(null);\n    var keys = hasSymbol\n      ? Reflect.ownKeys(inject).filter(function (key) {\n        /* istanbul ignore next */\n        return Object.getOwnPropertyDescriptor(inject, key).enumerable\n      })\n      : Object.keys(inject);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      var provideKey = inject[key].from;\n      var source = vm;\n      while (source) {\n        if (source._provided && hasOwn(source._provided, provideKey)) {\n          result[key] = source._provided[provideKey];\n          break\n        }\n        source = source.$parent;\n      }\n      if (!source) {\n        if ('default' in inject[key]) {\n          var provideDefault = inject[key].default;\n          result[key] = typeof provideDefault === 'function'\n            ? provideDefault.call(vm)\n            : provideDefault;\n        } else if (process.env.NODE_ENV !== 'production') {\n          warn((\"Injection \\\"\" + key + \"\\\" not found\"), vm);\n        }\n      }\n    }\n    return result\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering v-for lists.\n */\nfunction renderList (\n  val,\n  render\n) {\n  var ret, i, l, keys, key;\n  if (Array.isArray(val) || typeof val === 'string') {\n    ret = new Array(val.length);\n    for (i = 0, l = val.length; i < l; i++) {\n      ret[i] = render(val[i], i);\n    }\n  } else if (typeof val === 'number') {\n    ret = new Array(val);\n    for (i = 0; i < val; i++) {\n      ret[i] = render(i + 1, i);\n    }\n  } else if (isObject(val)) {\n    keys = Object.keys(val);\n    ret = new Array(keys.length);\n    for (i = 0, l = keys.length; i < l; i++) {\n      key = keys[i];\n      ret[i] = render(val[key], key, i);\n    }\n  }\n  if (isDef(ret)) {\n    (ret)._isVList = true;\n  }\n  return ret\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering <slot>\n */\nfunction renderSlot (\n  name,\n  fallback,\n  props,\n  bindObject\n) {\n  var scopedSlotFn = this.$scopedSlots[name];\n  var nodes;\n  if (scopedSlotFn) { // scoped slot\n    props = props || {};\n    if (bindObject) {\n      if (process.env.NODE_ENV !== 'production' && !isObject(bindObject)) {\n        warn(\n          'slot v-bind without argument expects an Object',\n          this\n        );\n      }\n      props = extend(extend({}, bindObject), props);\n    }\n    nodes = scopedSlotFn(props) || fallback;\n  } else {\n    var slotNodes = this.$slots[name];\n    // warn duplicate slot usage\n    if (slotNodes) {\n      if (process.env.NODE_ENV !== 'production' && slotNodes._rendered) {\n        warn(\n          \"Duplicate presence of slot \\\"\" + name + \"\\\" found in the same render tree \" +\n          \"- this will likely cause render errors.\",\n          this\n        );\n      }\n      slotNodes._rendered = true;\n    }\n    nodes = slotNodes || fallback;\n  }\n\n  var target = props && props.slot;\n  if (target) {\n    return this.$createElement('template', { slot: target }, nodes)\n  } else {\n    return nodes\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for resolving filters\n */\nfunction resolveFilter (id) {\n  return resolveAsset(this.$options, 'filters', id, true) || identity\n}\n\n/*  */\n\nfunction isKeyNotMatch (expect, actual) {\n  if (Array.isArray(expect)) {\n    return expect.indexOf(actual) === -1\n  } else {\n    return expect !== actual\n  }\n}\n\n/**\n * Runtime helper for checking keyCodes from config.\n * exposed as Vue.prototype._k\n * passing in eventKeyName as last argument separately for backwards compat\n */\nfunction checkKeyCodes (\n  eventKeyCode,\n  key,\n  builtInKeyCode,\n  eventKeyName,\n  builtInKeyName\n) {\n  var mappedKeyCode = config.keyCodes[key] || builtInKeyCode;\n  if (builtInKeyName && eventKeyName && !config.keyCodes[key]) {\n    return isKeyNotMatch(builtInKeyName, eventKeyName)\n  } else if (mappedKeyCode) {\n    return isKeyNotMatch(mappedKeyCode, eventKeyCode)\n  } else if (eventKeyName) {\n    return hyphenate(eventKeyName) !== key\n  }\n}\n\n/*  */\n\n/**\n * Runtime helper for merging v-bind=\"object\" into a VNode's data.\n */\nfunction bindObjectProps (\n  data,\n  tag,\n  value,\n  asProp,\n  isSync\n) {\n  if (value) {\n    if (!isObject(value)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'v-bind without argument expects an Object or Array value',\n        this\n      );\n    } else {\n      if (Array.isArray(value)) {\n        value = toObject(value);\n      }\n      var hash;\n      var loop = function ( key ) {\n        if (\n          key === 'class' ||\n          key === 'style' ||\n          isReservedAttribute(key)\n        ) {\n          hash = data;\n        } else {\n          var type = data.attrs && data.attrs.type;\n          hash = asProp || config.mustUseProp(tag, type, key)\n            ? data.domProps || (data.domProps = {})\n            : data.attrs || (data.attrs = {});\n        }\n        if (!(key in hash)) {\n          hash[key] = value[key];\n\n          if (isSync) {\n            var on = data.on || (data.on = {});\n            on[(\"update:\" + key)] = function ($event) {\n              value[key] = $event;\n            };\n          }\n        }\n      };\n\n      for (var key in value) loop( key );\n    }\n  }\n  return data\n}\n\n/*  */\n\n/**\n * Runtime helper for rendering static trees.\n */\nfunction renderStatic (\n  index,\n  isInFor\n) {\n  var cached = this._staticTrees || (this._staticTrees = []);\n  var tree = cached[index];\n  // if has already-rendered static tree and not inside v-for,\n  // we can reuse the same tree.\n  if (tree && !isInFor) {\n    return tree\n  }\n  // otherwise, render a fresh tree.\n  tree = cached[index] = this.$options.staticRenderFns[index].call(\n    this._renderProxy,\n    null,\n    this // for render fns generated for functional component templates\n  );\n  markStatic(tree, (\"__static__\" + index), false);\n  return tree\n}\n\n/**\n * Runtime helper for v-once.\n * Effectively it means marking the node as static with a unique key.\n */\nfunction markOnce (\n  tree,\n  index,\n  key\n) {\n  markStatic(tree, (\"__once__\" + index + (key ? (\"_\" + key) : \"\")), true);\n  return tree\n}\n\nfunction markStatic (\n  tree,\n  key,\n  isOnce\n) {\n  if (Array.isArray(tree)) {\n    for (var i = 0; i < tree.length; i++) {\n      if (tree[i] && typeof tree[i] !== 'string') {\n        markStaticNode(tree[i], (key + \"_\" + i), isOnce);\n      }\n    }\n  } else {\n    markStaticNode(tree, key, isOnce);\n  }\n}\n\nfunction markStaticNode (node, key, isOnce) {\n  node.isStatic = true;\n  node.key = key;\n  node.isOnce = isOnce;\n}\n\n/*  */\n\nfunction bindObjectListeners (data, value) {\n  if (value) {\n    if (!isPlainObject(value)) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'v-on without argument expects an Object value',\n        this\n      );\n    } else {\n      var on = data.on = data.on ? extend({}, data.on) : {};\n      for (var key in value) {\n        var existing = on[key];\n        var ours = value[key];\n        on[key] = existing ? [].concat(existing, ours) : ours;\n      }\n    }\n  }\n  return data\n}\n\n/*  */\n\nfunction installRenderHelpers (target) {\n  target._o = markOnce;\n  target._n = toNumber;\n  target._s = toString;\n  target._l = renderList;\n  target._t = renderSlot;\n  target._q = looseEqual;\n  target._i = looseIndexOf;\n  target._m = renderStatic;\n  target._f = resolveFilter;\n  target._k = checkKeyCodes;\n  target._b = bindObjectProps;\n  target._v = createTextVNode;\n  target._e = createEmptyVNode;\n  target._u = resolveScopedSlots;\n  target._g = bindObjectListeners;\n}\n\n/*  */\n\nfunction FunctionalRenderContext (\n  data,\n  props,\n  children,\n  parent,\n  Ctor\n) {\n  var options = Ctor.options;\n  // ensure the createElement function in functional components\n  // gets a unique context - this is necessary for correct named slot check\n  var contextVm;\n  if (hasOwn(parent, '_uid')) {\n    contextVm = Object.create(parent);\n    // $flow-disable-line\n    contextVm._original = parent;\n  } else {\n    // the context vm passed in is a functional context as well.\n    // in this case we want to make sure we are able to get a hold to the\n    // real context instance.\n    contextVm = parent;\n    // $flow-disable-line\n    parent = parent._original;\n  }\n  var isCompiled = isTrue(options._compiled);\n  var needNormalization = !isCompiled;\n\n  this.data = data;\n  this.props = props;\n  this.children = children;\n  this.parent = parent;\n  this.listeners = data.on || emptyObject;\n  this.injections = resolveInject(options.inject, parent);\n  this.slots = function () { return resolveSlots(children, parent); };\n\n  // support for compiled functional template\n  if (isCompiled) {\n    // exposing $options for renderStatic()\n    this.$options = options;\n    // pre-resolve slots for renderSlot()\n    this.$slots = this.slots();\n    this.$scopedSlots = data.scopedSlots || emptyObject;\n  }\n\n  if (options._scopeId) {\n    this._c = function (a, b, c, d) {\n      var vnode = createElement(contextVm, a, b, c, d, needNormalization);\n      if (vnode && !Array.isArray(vnode)) {\n        vnode.fnScopeId = options._scopeId;\n        vnode.fnContext = parent;\n      }\n      return vnode\n    };\n  } else {\n    this._c = function (a, b, c, d) { return createElement(contextVm, a, b, c, d, needNormalization); };\n  }\n}\n\ninstallRenderHelpers(FunctionalRenderContext.prototype);\n\nfunction createFunctionalComponent (\n  Ctor,\n  propsData,\n  data,\n  contextVm,\n  children\n) {\n  var options = Ctor.options;\n  var props = {};\n  var propOptions = options.props;\n  if (isDef(propOptions)) {\n    for (var key in propOptions) {\n      props[key] = validateProp(key, propOptions, propsData || emptyObject);\n    }\n  } else {\n    if (isDef(data.attrs)) { mergeProps(props, data.attrs); }\n    if (isDef(data.props)) { mergeProps(props, data.props); }\n  }\n\n  var renderContext = new FunctionalRenderContext(\n    data,\n    props,\n    children,\n    contextVm,\n    Ctor\n  );\n\n  var vnode = options.render.call(null, renderContext._c, renderContext);\n\n  if (vnode instanceof VNode) {\n    return cloneAndMarkFunctionalResult(vnode, data, renderContext.parent, options)\n  } else if (Array.isArray(vnode)) {\n    var vnodes = normalizeChildren(vnode) || [];\n    var res = new Array(vnodes.length);\n    for (var i = 0; i < vnodes.length; i++) {\n      res[i] = cloneAndMarkFunctionalResult(vnodes[i], data, renderContext.parent, options);\n    }\n    return res\n  }\n}\n\nfunction cloneAndMarkFunctionalResult (vnode, data, contextVm, options) {\n  // #7817 clone node before setting fnContext, otherwise if the node is reused\n  // (e.g. it was from a cached normal slot) the fnContext causes named slots\n  // that should not be matched to match.\n  var clone = cloneVNode(vnode);\n  clone.fnContext = contextVm;\n  clone.fnOptions = options;\n  if (data.slot) {\n    (clone.data || (clone.data = {})).slot = data.slot;\n  }\n  return clone\n}\n\nfunction mergeProps (to, from) {\n  for (var key in from) {\n    to[camelize(key)] = from[key];\n  }\n}\n\n/*  */\n\n\n\n\n// Register the component hook to weex native render engine.\n// The hook will be triggered by native, not javascript.\n\n\n// Updates the state of the component to weex native render engine.\n\n/*  */\n\n// https://github.com/Hanks10100/weex-native-directive/tree/master/component\n\n// listening on native callback\n\n/*  */\n\n/*  */\n\n// inline hooks to be invoked on component VNodes during patch\nvar componentVNodeHooks = {\n  init: function init (\n    vnode,\n    hydrating,\n    parentElm,\n    refElm\n  ) {\n    if (\n      vnode.componentInstance &&\n      !vnode.componentInstance._isDestroyed &&\n      vnode.data.keepAlive\n    ) {\n      // kept-alive components, treat as a patch\n      var mountedNode = vnode; // work around flow\n      componentVNodeHooks.prepatch(mountedNode, mountedNode);\n    } else {\n      var child = vnode.componentInstance = createComponentInstanceForVnode(\n        vnode,\n        activeInstance,\n        parentElm,\n        refElm\n      );\n      child.$mount(hydrating ? vnode.elm : undefined, hydrating);\n    }\n  },\n\n  prepatch: function prepatch (oldVnode, vnode) {\n    var options = vnode.componentOptions;\n    var child = vnode.componentInstance = oldVnode.componentInstance;\n    updateChildComponent(\n      child,\n      options.propsData, // updated props\n      options.listeners, // updated listeners\n      vnode, // new parent vnode\n      options.children // new children\n    );\n  },\n\n  insert: function insert (vnode) {\n    var context = vnode.context;\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isMounted) {\n      componentInstance._isMounted = true;\n      callHook(componentInstance, 'mounted');\n    }\n    if (vnode.data.keepAlive) {\n      if (context._isMounted) {\n        // vue-router#1212\n        // During updates, a kept-alive component's child components may\n        // change, so directly walking the tree here may call activated hooks\n        // on incorrect children. Instead we push them into a queue which will\n        // be processed after the whole patch process ended.\n        queueActivatedComponent(componentInstance);\n      } else {\n        activateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  },\n\n  destroy: function destroy (vnode) {\n    var componentInstance = vnode.componentInstance;\n    if (!componentInstance._isDestroyed) {\n      if (!vnode.data.keepAlive) {\n        componentInstance.$destroy();\n      } else {\n        deactivateChildComponent(componentInstance, true /* direct */);\n      }\n    }\n  }\n};\n\nvar hooksToMerge = Object.keys(componentVNodeHooks);\n\nfunction createComponent (\n  Ctor,\n  data,\n  context,\n  children,\n  tag\n) {\n  if (isUndef(Ctor)) {\n    return\n  }\n\n  var baseCtor = context.$options._base;\n\n  // plain options object: turn it into a constructor\n  if (isObject(Ctor)) {\n    Ctor = baseCtor.extend(Ctor);\n  }\n\n  // if at this stage it's not a constructor or an async component factory,\n  // reject.\n  if (typeof Ctor !== 'function') {\n    if (process.env.NODE_ENV !== 'production') {\n      warn((\"Invalid Component definition: \" + (String(Ctor))), context);\n    }\n    return\n  }\n\n  // async component\n  var asyncFactory;\n  if (isUndef(Ctor.cid)) {\n    asyncFactory = Ctor;\n    Ctor = resolveAsyncComponent(asyncFactory, baseCtor, context);\n    if (Ctor === undefined) {\n      // return a placeholder node for async component, which is rendered\n      // as a comment node but preserves all the raw information for the node.\n      // the information will be used for async server-rendering and hydration.\n      return createAsyncPlaceholder(\n        asyncFactory,\n        data,\n        context,\n        children,\n        tag\n      )\n    }\n  }\n\n  data = data || {};\n\n  // resolve constructor options in case global mixins are applied after\n  // component constructor creation\n  resolveConstructorOptions(Ctor);\n\n  // transform component v-model data into props & events\n  if (isDef(data.model)) {\n    transformModel(Ctor.options, data);\n  }\n\n  // extract props\n  var propsData = extractPropsFromVNodeData(data, Ctor, tag);\n\n  // functional component\n  if (isTrue(Ctor.options.functional)) {\n    return createFunctionalComponent(Ctor, propsData, data, context, children)\n  }\n\n  // extract listeners, since these needs to be treated as\n  // child component listeners instead of DOM listeners\n  var listeners = data.on;\n  // replace with listeners with .native modifier\n  // so it gets processed during parent component patch.\n  data.on = data.nativeOn;\n\n  if (isTrue(Ctor.options.abstract)) {\n    // abstract components do not keep anything\n    // other than props & listeners & slot\n\n    // work around flow\n    var slot = data.slot;\n    data = {};\n    if (slot) {\n      data.slot = slot;\n    }\n  }\n\n  // install component management hooks onto the placeholder node\n  installComponentHooks(data);\n\n  // return a placeholder vnode\n  var name = Ctor.options.name || tag;\n  var vnode = new VNode(\n    (\"vue-component-\" + (Ctor.cid) + (name ? (\"-\" + name) : '')),\n    data, undefined, undefined, undefined, context,\n    { Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children },\n    asyncFactory\n  );\n\n  // Weex specific: invoke recycle-list optimized @render function for\n  // extracting cell-slot template.\n  // https://github.com/Hanks10100/weex-native-directive/tree/master/component\n  /* istanbul ignore if */\n  return vnode\n}\n\nfunction createComponentInstanceForVnode (\n  vnode, // we know it's MountedComponentVNode but flow doesn't\n  parent, // activeInstance in lifecycle state\n  parentElm,\n  refElm\n) {\n  var options = {\n    _isComponent: true,\n    parent: parent,\n    _parentVnode: vnode,\n    _parentElm: parentElm || null,\n    _refElm: refElm || null\n  };\n  // check inline-template render functions\n  var inlineTemplate = vnode.data.inlineTemplate;\n  if (isDef(inlineTemplate)) {\n    options.render = inlineTemplate.render;\n    options.staticRenderFns = inlineTemplate.staticRenderFns;\n  }\n  return new vnode.componentOptions.Ctor(options)\n}\n\nfunction installComponentHooks (data) {\n  var hooks = data.hook || (data.hook = {});\n  for (var i = 0; i < hooksToMerge.length; i++) {\n    var key = hooksToMerge[i];\n    hooks[key] = componentVNodeHooks[key];\n  }\n}\n\n// transform component v-model info (value and callback) into\n// prop and event handler respectively.\nfunction transformModel (options, data) {\n  var prop = (options.model && options.model.prop) || 'value';\n  var event = (options.model && options.model.event) || 'input';(data.props || (data.props = {}))[prop] = data.model.value;\n  var on = data.on || (data.on = {});\n  if (isDef(on[event])) {\n    on[event] = [data.model.callback].concat(on[event]);\n  } else {\n    on[event] = data.model.callback;\n  }\n}\n\n/*  */\n\nvar SIMPLE_NORMALIZE = 1;\nvar ALWAYS_NORMALIZE = 2;\n\n// wrapper function for providing a more flexible interface\n// without getting yelled at by flow\nfunction createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType,\n  alwaysNormalize\n) {\n  if (Array.isArray(data) || isPrimitive(data)) {\n    normalizationType = children;\n    children = data;\n    data = undefined;\n  }\n  if (isTrue(alwaysNormalize)) {\n    normalizationType = ALWAYS_NORMALIZE;\n  }\n  return _createElement(context, tag, data, children, normalizationType)\n}\n\nfunction _createElement (\n  context,\n  tag,\n  data,\n  children,\n  normalizationType\n) {\n  if (isDef(data) && isDef((data).__ob__)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"Avoid using observed data object as vnode data: \" + (JSON.stringify(data)) + \"\\n\" +\n      'Always create fresh vnode data objects in each render!',\n      context\n    );\n    return createEmptyVNode()\n  }\n  // object syntax in v-bind\n  if (isDef(data) && isDef(data.is)) {\n    tag = data.is;\n  }\n  if (!tag) {\n    // in case of component :is set to falsy value\n    return createEmptyVNode()\n  }\n  // warn against non-primitive key\n  if (process.env.NODE_ENV !== 'production' &&\n    isDef(data) && isDef(data.key) && !isPrimitive(data.key)\n  ) {\n    {\n      warn(\n        'Avoid using non-primitive value as key, ' +\n        'use string/number value instead.',\n        context\n      );\n    }\n  }\n  // support single function children as default scoped slot\n  if (Array.isArray(children) &&\n    typeof children[0] === 'function'\n  ) {\n    data = data || {};\n    data.scopedSlots = { default: children[0] };\n    children.length = 0;\n  }\n  if (normalizationType === ALWAYS_NORMALIZE) {\n    children = normalizeChildren(children);\n  } else if (normalizationType === SIMPLE_NORMALIZE) {\n    children = simpleNormalizeChildren(children);\n  }\n  var vnode, ns;\n  if (typeof tag === 'string') {\n    var Ctor;\n    ns = (context.$vnode && context.$vnode.ns) || config.getTagNamespace(tag);\n    if (config.isReservedTag(tag)) {\n      // platform built-in elements\n      vnode = new VNode(\n        config.parsePlatformTagName(tag), data, children,\n        undefined, undefined, context\n      );\n    } else if (isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {\n      // component\n      vnode = createComponent(Ctor, data, context, children, tag);\n    } else {\n      // unknown or unlisted namespaced elements\n      // check at runtime because it may get assigned a namespace when its\n      // parent normalizes children\n      vnode = new VNode(\n        tag, data, children,\n        undefined, undefined, context\n      );\n    }\n  } else {\n    // direct component options / constructor\n    vnode = createComponent(tag, data, context, children);\n  }\n  if (Array.isArray(vnode)) {\n    return vnode\n  } else if (isDef(vnode)) {\n    if (isDef(ns)) { applyNS(vnode, ns); }\n    if (isDef(data)) { registerDeepBindings(data); }\n    return vnode\n  } else {\n    return createEmptyVNode()\n  }\n}\n\nfunction applyNS (vnode, ns, force) {\n  vnode.ns = ns;\n  if (vnode.tag === 'foreignObject') {\n    // use default namespace inside foreignObject\n    ns = undefined;\n    force = true;\n  }\n  if (isDef(vnode.children)) {\n    for (var i = 0, l = vnode.children.length; i < l; i++) {\n      var child = vnode.children[i];\n      if (isDef(child.tag) && (\n        isUndef(child.ns) || (isTrue(force) && child.tag !== 'svg'))) {\n        applyNS(child, ns, force);\n      }\n    }\n  }\n}\n\n// ref #5318\n// necessary to ensure parent re-render when deep bindings like :style and\n// :class are used on slot nodes\nfunction registerDeepBindings (data) {\n  if (isObject(data.style)) {\n    traverse(data.style);\n  }\n  if (isObject(data.class)) {\n    traverse(data.class);\n  }\n}\n\n/*  */\n\nfunction initRender (vm) {\n  vm._vnode = null; // the root of the child tree\n  vm._staticTrees = null; // v-once cached trees\n  var options = vm.$options;\n  var parentVnode = vm.$vnode = options._parentVnode; // the placeholder node in parent tree\n  var renderContext = parentVnode && parentVnode.context;\n  vm.$slots = resolveSlots(options._renderChildren, renderContext);\n  vm.$scopedSlots = emptyObject;\n  // bind the createElement fn to this instance\n  // so that we get proper render context inside it.\n  // args order: tag, data, children, normalizationType, alwaysNormalize\n  // internal version is used by render functions compiled from templates\n  vm._c = function (a, b, c, d) { return createElement(vm, a, b, c, d, false); };\n  // normalization is always applied for the public version, used in\n  // user-written render functions.\n  vm.$createElement = function (a, b, c, d) { return createElement(vm, a, b, c, d, true); };\n\n  // $attrs & $listeners are exposed for easier HOC creation.\n  // they need to be reactive so that HOCs using them are always updated\n  var parentData = parentVnode && parentVnode.data;\n\n  /* istanbul ignore else */\n  if (process.env.NODE_ENV !== 'production') {\n    defineReactive(vm, '$attrs', parentData && parentData.attrs || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$attrs is readonly.\", vm);\n    }, true);\n    defineReactive(vm, '$listeners', options._parentListeners || emptyObject, function () {\n      !isUpdatingChildComponent && warn(\"$listeners is readonly.\", vm);\n    }, true);\n  } else {\n    defineReactive(vm, '$attrs', parentData && parentData.attrs || emptyObject, null, true);\n    defineReactive(vm, '$listeners', options._parentListeners || emptyObject, null, true);\n  }\n}\n\nfunction renderMixin (Vue) {\n  // install runtime convenience helpers\n  installRenderHelpers(Vue.prototype);\n\n  Vue.prototype.$nextTick = function (fn) {\n    return nextTick(fn, this)\n  };\n\n  Vue.prototype._render = function () {\n    var vm = this;\n    var ref = vm.$options;\n    var render = ref.render;\n    var _parentVnode = ref._parentVnode;\n\n    // reset _rendered flag on slots for duplicate slot check\n    if (process.env.NODE_ENV !== 'production') {\n      for (var key in vm.$slots) {\n        // $flow-disable-line\n        vm.$slots[key]._rendered = false;\n      }\n    }\n\n    if (_parentVnode) {\n      vm.$scopedSlots = _parentVnode.data.scopedSlots || emptyObject;\n    }\n\n    // set parent vnode. this allows render functions to have access\n    // to the data on the placeholder node.\n    vm.$vnode = _parentVnode;\n    // render self\n    var vnode;\n    try {\n      vnode = render.call(vm._renderProxy, vm.$createElement);\n    } catch (e) {\n      handleError(e, vm, \"render\");\n      // return error render result,\n      // or previous vnode to prevent render error causing blank component\n      /* istanbul ignore else */\n      if (process.env.NODE_ENV !== 'production') {\n        if (vm.$options.renderError) {\n          try {\n            vnode = vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e);\n          } catch (e) {\n            handleError(e, vm, \"renderError\");\n            vnode = vm._vnode;\n          }\n        } else {\n          vnode = vm._vnode;\n        }\n      } else {\n        vnode = vm._vnode;\n      }\n    }\n    // return empty vnode in case the render function errored out\n    if (!(vnode instanceof VNode)) {\n      if (process.env.NODE_ENV !== 'production' && Array.isArray(vnode)) {\n        warn(\n          'Multiple root nodes returned from render function. Render function ' +\n          'should return a single root node.',\n          vm\n        );\n      }\n      vnode = createEmptyVNode();\n    }\n    // set parent\n    vnode.parent = _parentVnode;\n    return vnode\n  };\n}\n\n/*  */\n\nvar uid$3 = 0;\n\nfunction initMixin (Vue) {\n  Vue.prototype._init = function (options) {\n    var vm = this;\n    // a uid\n    vm._uid = uid$3++;\n\n    var startTag, endTag;\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n      startTag = \"vue-perf-start:\" + (vm._uid);\n      endTag = \"vue-perf-end:\" + (vm._uid);\n      mark(startTag);\n    }\n\n    // a flag to avoid this being observed\n    vm._isVue = true;\n    // merge options\n    if (options && options._isComponent) {\n      // optimize internal component instantiation\n      // since dynamic options merging is pretty slow, and none of the\n      // internal component options needs special treatment.\n      initInternalComponent(vm, options);\n    } else {\n      vm.$options = mergeOptions(\n        resolveConstructorOptions(vm.constructor),\n        options || {},\n        vm\n      );\n    }\n    /* istanbul ignore else */\n    if (process.env.NODE_ENV !== 'production') {\n      initProxy(vm);\n    } else {\n      vm._renderProxy = vm;\n    }\n    // expose real self\n    vm._self = vm;\n    initLifecycle(vm);\n    initEvents(vm);\n    initRender(vm);\n    callHook(vm, 'beforeCreate');\n    initInjections(vm); // resolve injections before data/props\n    initState(vm);\n    initProvide(vm); // resolve provide after data/props\n    callHook(vm, 'created');\n\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {\n      vm._name = formatComponentName(vm, false);\n      mark(endTag);\n      measure((\"vue \" + (vm._name) + \" init\"), startTag, endTag);\n    }\n\n    if (vm.$options.el) {\n      vm.$mount(vm.$options.el);\n    }\n  };\n}\n\nfunction initInternalComponent (vm, options) {\n  var opts = vm.$options = Object.create(vm.constructor.options);\n  // doing this because it's faster than dynamic enumeration.\n  var parentVnode = options._parentVnode;\n  opts.parent = options.parent;\n  opts._parentVnode = parentVnode;\n  opts._parentElm = options._parentElm;\n  opts._refElm = options._refElm;\n\n  var vnodeComponentOptions = parentVnode.componentOptions;\n  opts.propsData = vnodeComponentOptions.propsData;\n  opts._parentListeners = vnodeComponentOptions.listeners;\n  opts._renderChildren = vnodeComponentOptions.children;\n  opts._componentTag = vnodeComponentOptions.tag;\n\n  if (options.render) {\n    opts.render = options.render;\n    opts.staticRenderFns = options.staticRenderFns;\n  }\n}\n\nfunction resolveConstructorOptions (Ctor) {\n  var options = Ctor.options;\n  if (Ctor.super) {\n    var superOptions = resolveConstructorOptions(Ctor.super);\n    var cachedSuperOptions = Ctor.superOptions;\n    if (superOptions !== cachedSuperOptions) {\n      // super option changed,\n      // need to resolve new options.\n      Ctor.superOptions = superOptions;\n      // check if there are any late-modified/attached options (#4976)\n      var modifiedOptions = resolveModifiedOptions(Ctor);\n      // update base extend options\n      if (modifiedOptions) {\n        extend(Ctor.extendOptions, modifiedOptions);\n      }\n      options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);\n      if (options.name) {\n        options.components[options.name] = Ctor;\n      }\n    }\n  }\n  return options\n}\n\nfunction resolveModifiedOptions (Ctor) {\n  var modified;\n  var latest = Ctor.options;\n  var extended = Ctor.extendOptions;\n  var sealed = Ctor.sealedOptions;\n  for (var key in latest) {\n    if (latest[key] !== sealed[key]) {\n      if (!modified) { modified = {}; }\n      modified[key] = dedupe(latest[key], extended[key], sealed[key]);\n    }\n  }\n  return modified\n}\n\nfunction dedupe (latest, extended, sealed) {\n  // compare latest and sealed to ensure lifecycle hooks won't be duplicated\n  // between merges\n  if (Array.isArray(latest)) {\n    var res = [];\n    sealed = Array.isArray(sealed) ? sealed : [sealed];\n    extended = Array.isArray(extended) ? extended : [extended];\n    for (var i = 0; i < latest.length; i++) {\n      // push original options and not sealed options to exclude duplicated options\n      if (extended.indexOf(latest[i]) >= 0 || sealed.indexOf(latest[i]) < 0) {\n        res.push(latest[i]);\n      }\n    }\n    return res\n  } else {\n    return latest\n  }\n}\n\nfunction Vue (options) {\n  if (process.env.NODE_ENV !== 'production' &&\n    !(this instanceof Vue)\n  ) {\n    warn('Vue is a constructor and should be called with the `new` keyword');\n  }\n  this._init(options);\n}\n\ninitMixin(Vue);\nstateMixin(Vue);\neventsMixin(Vue);\nlifecycleMixin(Vue);\nrenderMixin(Vue);\n\n/*  */\n\nfunction initUse (Vue) {\n  Vue.use = function (plugin) {\n    var installedPlugins = (this._installedPlugins || (this._installedPlugins = []));\n    if (installedPlugins.indexOf(plugin) > -1) {\n      return this\n    }\n\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else if (typeof plugin === 'function') {\n      plugin.apply(null, args);\n    }\n    installedPlugins.push(plugin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initMixin$1 (Vue) {\n  Vue.mixin = function (mixin) {\n    this.options = mergeOptions(this.options, mixin);\n    return this\n  };\n}\n\n/*  */\n\nfunction initExtend (Vue) {\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   */\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var SuperId = Super.cid;\n    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});\n    if (cachedCtors[SuperId]) {\n      return cachedCtors[SuperId]\n    }\n\n    var name = extendOptions.name || Super.options.name;\n    if (process.env.NODE_ENV !== 'production' && name) {\n      validateComponentName(name);\n    }\n\n    var Sub = function VueComponent (options) {\n      this._init(options);\n    };\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(\n      Super.options,\n      extendOptions\n    );\n    Sub['super'] = Super;\n\n    // For props and computed properties, we define the proxy getters on\n    // the Vue instances at extension time, on the extended prototype. This\n    // avoids Object.defineProperty calls for each instance created.\n    if (Sub.options.props) {\n      initProps$1(Sub);\n    }\n    if (Sub.options.computed) {\n      initComputed$1(Sub);\n    }\n\n    // allow further extension/mixin/plugin usage\n    Sub.extend = Super.extend;\n    Sub.mixin = Super.mixin;\n    Sub.use = Super.use;\n\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    ASSET_TYPES.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n\n    // keep a reference to the super options at extension time.\n    // later at instantiation we can check if Super's options have\n    // been updated.\n    Sub.superOptions = Super.options;\n    Sub.extendOptions = extendOptions;\n    Sub.sealedOptions = extend({}, Sub.options);\n\n    // cache constructor\n    cachedCtors[SuperId] = Sub;\n    return Sub\n  };\n}\n\nfunction initProps$1 (Comp) {\n  var props = Comp.options.props;\n  for (var key in props) {\n    proxy(Comp.prototype, \"_props\", key);\n  }\n}\n\nfunction initComputed$1 (Comp) {\n  var computed = Comp.options.computed;\n  for (var key in computed) {\n    defineComputed(Comp.prototype, key, computed[key]);\n  }\n}\n\n/*  */\n\nfunction initAssetRegisters (Vue) {\n  /**\n   * Create asset registration methods.\n   */\n  ASSET_TYPES.forEach(function (type) {\n    Vue[type] = function (\n      id,\n      definition\n    ) {\n      if (!definition) {\n        return this.options[type + 's'][id]\n      } else {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production' && type === 'component') {\n          validateComponentName(id);\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          definition.name = definition.name || id;\n          definition = this.options._base.extend(definition);\n        }\n        if (type === 'directive' && typeof definition === 'function') {\n          definition = { bind: definition, update: definition };\n        }\n        this.options[type + 's'][id] = definition;\n        return definition\n      }\n    };\n  });\n}\n\n/*  */\n\nfunction getComponentName (opts) {\n  return opts && (opts.Ctor.options.name || opts.tag)\n}\n\nfunction matches (pattern, name) {\n  if (Array.isArray(pattern)) {\n    return pattern.indexOf(name) > -1\n  } else if (typeof pattern === 'string') {\n    return pattern.split(',').indexOf(name) > -1\n  } else if (isRegExp(pattern)) {\n    return pattern.test(name)\n  }\n  /* istanbul ignore next */\n  return false\n}\n\nfunction pruneCache (keepAliveInstance, filter) {\n  var cache = keepAliveInstance.cache;\n  var keys = keepAliveInstance.keys;\n  var _vnode = keepAliveInstance._vnode;\n  for (var key in cache) {\n    var cachedNode = cache[key];\n    if (cachedNode) {\n      var name = getComponentName(cachedNode.componentOptions);\n      if (name && !filter(name)) {\n        pruneCacheEntry(cache, key, keys, _vnode);\n      }\n    }\n  }\n}\n\nfunction pruneCacheEntry (\n  cache,\n  key,\n  keys,\n  current\n) {\n  var cached$$1 = cache[key];\n  if (cached$$1 && (!current || cached$$1.tag !== current.tag)) {\n    cached$$1.componentInstance.$destroy();\n  }\n  cache[key] = null;\n  remove(keys, key);\n}\n\nvar patternTypes = [String, RegExp, Array];\n\nvar KeepAlive = {\n  name: 'keep-alive',\n  abstract: true,\n\n  props: {\n    include: patternTypes,\n    exclude: patternTypes,\n    max: [String, Number]\n  },\n\n  created: function created () {\n    this.cache = Object.create(null);\n    this.keys = [];\n  },\n\n  destroyed: function destroyed () {\n    var this$1 = this;\n\n    for (var key in this$1.cache) {\n      pruneCacheEntry(this$1.cache, key, this$1.keys);\n    }\n  },\n\n  mounted: function mounted () {\n    var this$1 = this;\n\n    this.$watch('include', function (val) {\n      pruneCache(this$1, function (name) { return matches(val, name); });\n    });\n    this.$watch('exclude', function (val) {\n      pruneCache(this$1, function (name) { return !matches(val, name); });\n    });\n  },\n\n  render: function render () {\n    var slot = this.$slots.default;\n    var vnode = getFirstComponentChild(slot);\n    var componentOptions = vnode && vnode.componentOptions;\n    if (componentOptions) {\n      // check pattern\n      var name = getComponentName(componentOptions);\n      var ref = this;\n      var include = ref.include;\n      var exclude = ref.exclude;\n      if (\n        // not included\n        (include && (!name || !matches(include, name))) ||\n        // excluded\n        (exclude && name && matches(exclude, name))\n      ) {\n        return vnode\n      }\n\n      var ref$1 = this;\n      var cache = ref$1.cache;\n      var keys = ref$1.keys;\n      var key = vnode.key == null\n        // same constructor may get registered as different local components\n        // so cid alone is not enough (#3269)\n        ? componentOptions.Ctor.cid + (componentOptions.tag ? (\"::\" + (componentOptions.tag)) : '')\n        : vnode.key;\n      if (cache[key]) {\n        vnode.componentInstance = cache[key].componentInstance;\n        // make current key freshest\n        remove(keys, key);\n        keys.push(key);\n      } else {\n        cache[key] = vnode;\n        keys.push(key);\n        // prune oldest entry\n        if (this.max && keys.length > parseInt(this.max)) {\n          pruneCacheEntry(cache, keys[0], keys, this._vnode);\n        }\n      }\n\n      vnode.data.keepAlive = true;\n    }\n    return vnode || (slot && slot[0])\n  }\n}\n\nvar builtInComponents = {\n  KeepAlive: KeepAlive\n}\n\n/*  */\n\nfunction initGlobalAPI (Vue) {\n  // config\n  var configDef = {};\n  configDef.get = function () { return config; };\n  if (process.env.NODE_ENV !== 'production') {\n    configDef.set = function () {\n      warn(\n        'Do not replace the Vue.config object, set individual fields instead.'\n      );\n    };\n  }\n  Object.defineProperty(Vue, 'config', configDef);\n\n  // exposed util methods.\n  // NOTE: these are not considered part of the public API - avoid relying on\n  // them unless you are aware of the risk.\n  Vue.util = {\n    warn: warn,\n    extend: extend,\n    mergeOptions: mergeOptions,\n    defineReactive: defineReactive\n  };\n\n  Vue.set = set;\n  Vue.delete = del;\n  Vue.nextTick = nextTick;\n\n  Vue.options = Object.create(null);\n  ASSET_TYPES.forEach(function (type) {\n    Vue.options[type + 's'] = Object.create(null);\n  });\n\n  // this is used to identify the \"base\" constructor to extend all plain-object\n  // components with in Weex's multi-instance scenarios.\n  Vue.options._base = Vue;\n\n  extend(Vue.options.components, builtInComponents);\n\n  initUse(Vue);\n  initMixin$1(Vue);\n  initExtend(Vue);\n  initAssetRegisters(Vue);\n}\n\ninitGlobalAPI(Vue);\n\nObject.defineProperty(Vue.prototype, '$isServer', {\n  get: isServerRendering\n});\n\nObject.defineProperty(Vue.prototype, '$ssrContext', {\n  get: function get () {\n    /* istanbul ignore next */\n    return this.$vnode && this.$vnode.ssrContext\n  }\n});\n\n// expose FunctionalRenderContext for ssr runtime helper installation\nObject.defineProperty(Vue, 'FunctionalRenderContext', {\n  value: FunctionalRenderContext\n});\n\nVue.version = '2.5.17';\n\n/*  */\n\n// these are reserved for web because they are directly compiled away\n// during template compilation\nvar isReservedAttr = makeMap('style,class');\n\n// attributes that should be using props for binding\nvar acceptValue = makeMap('input,textarea,option,select,progress');\nvar mustUseProp = function (tag, type, attr) {\n  return (\n    (attr === 'value' && acceptValue(tag)) && type !== 'button' ||\n    (attr === 'selected' && tag === 'option') ||\n    (attr === 'checked' && tag === 'input') ||\n    (attr === 'muted' && tag === 'video')\n  )\n};\n\nvar isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');\n\nvar isBooleanAttr = makeMap(\n  'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +\n  'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +\n  'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +\n  'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +\n  'required,reversed,scoped,seamless,selected,sortable,translate,' +\n  'truespeed,typemustmatch,visible'\n);\n\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\nvar isXlink = function (name) {\n  return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'\n};\n\nvar getXlinkProp = function (name) {\n  return isXlink(name) ? name.slice(6, name.length) : ''\n};\n\nvar isFalsyAttrValue = function (val) {\n  return val == null || val === false\n};\n\n/*  */\n\nfunction genClassForVnode (vnode) {\n  var data = vnode.data;\n  var parentNode = vnode;\n  var childNode = vnode;\n  while (isDef(childNode.componentInstance)) {\n    childNode = childNode.componentInstance._vnode;\n    if (childNode && childNode.data) {\n      data = mergeClassData(childNode.data, data);\n    }\n  }\n  while (isDef(parentNode = parentNode.parent)) {\n    if (parentNode && parentNode.data) {\n      data = mergeClassData(data, parentNode.data);\n    }\n  }\n  return renderClass(data.staticClass, data.class)\n}\n\nfunction mergeClassData (child, parent) {\n  return {\n    staticClass: concat(child.staticClass, parent.staticClass),\n    class: isDef(child.class)\n      ? [child.class, parent.class]\n      : parent.class\n  }\n}\n\nfunction renderClass (\n  staticClass,\n  dynamicClass\n) {\n  if (isDef(staticClass) || isDef(dynamicClass)) {\n    return concat(staticClass, stringifyClass(dynamicClass))\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction concat (a, b) {\n  return a ? b ? (a + ' ' + b) : a : (b || '')\n}\n\nfunction stringifyClass (value) {\n  if (Array.isArray(value)) {\n    return stringifyArray(value)\n  }\n  if (isObject(value)) {\n    return stringifyObject(value)\n  }\n  if (typeof value === 'string') {\n    return value\n  }\n  /* istanbul ignore next */\n  return ''\n}\n\nfunction stringifyArray (value) {\n  var res = '';\n  var stringified;\n  for (var i = 0, l = value.length; i < l; i++) {\n    if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {\n      if (res) { res += ' '; }\n      res += stringified;\n    }\n  }\n  return res\n}\n\nfunction stringifyObject (value) {\n  var res = '';\n  for (var key in value) {\n    if (value[key]) {\n      if (res) { res += ' '; }\n      res += key;\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar namespaceMap = {\n  svg: 'http://www.w3.org/2000/svg',\n  math: 'http://www.w3.org/1998/Math/MathML'\n};\n\nvar isHTMLTag = makeMap(\n  'html,body,base,head,link,meta,style,title,' +\n  'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +\n  'div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,' +\n  'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +\n  's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +\n  'embed,object,param,source,canvas,script,noscript,del,ins,' +\n  'caption,col,colgroup,table,thead,tbody,td,th,tr,' +\n  'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +\n  'output,progress,select,textarea,' +\n  'details,dialog,menu,menuitem,summary,' +\n  'content,element,shadow,template,blockquote,iframe,tfoot'\n);\n\n// this map is intentionally selective, only covering SVG elements that may\n// contain child elements.\nvar isSVG = makeMap(\n  'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' +\n  'foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +\n  'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',\n  true\n);\n\n\n\nvar isReservedTag = function (tag) {\n  return isHTMLTag(tag) || isSVG(tag)\n};\n\nfunction getTagNamespace (tag) {\n  if (isSVG(tag)) {\n    return 'svg'\n  }\n  // basic support for MathML\n  // note it doesn't support other MathML elements being component roots\n  if (tag === 'math') {\n    return 'math'\n  }\n}\n\nvar unknownElementCache = Object.create(null);\nfunction isUnknownElement (tag) {\n  /* istanbul ignore if */\n  if (!inBrowser) {\n    return true\n  }\n  if (isReservedTag(tag)) {\n    return false\n  }\n  tag = tag.toLowerCase();\n  /* istanbul ignore if */\n  if (unknownElementCache[tag] != null) {\n    return unknownElementCache[tag]\n  }\n  var el = document.createElement(tag);\n  if (tag.indexOf('-') > -1) {\n    // http://stackoverflow.com/a/28210364/1070244\n    return (unknownElementCache[tag] = (\n      el.constructor === window.HTMLUnknownElement ||\n      el.constructor === window.HTMLElement\n    ))\n  } else {\n    return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))\n  }\n}\n\nvar isTextInputType = makeMap('text,number,password,search,email,tel,url');\n\n/*  */\n\n/**\n * Query an element selector if it's not an element already.\n */\nfunction query (el) {\n  if (typeof el === 'string') {\n    var selected = document.querySelector(el);\n    if (!selected) {\n      process.env.NODE_ENV !== 'production' && warn(\n        'Cannot find element: ' + el\n      );\n      return document.createElement('div')\n    }\n    return selected\n  } else {\n    return el\n  }\n}\n\n/*  */\n\nfunction createElement$1 (tagName, vnode) {\n  var elm = document.createElement(tagName);\n  if (tagName !== 'select') {\n    return elm\n  }\n  // false or null will remove the attribute but undefined will not\n  if (vnode.data && vnode.data.attrs && vnode.data.attrs.multiple !== undefined) {\n    elm.setAttribute('multiple', 'multiple');\n  }\n  return elm\n}\n\nfunction createElementNS (namespace, tagName) {\n  return document.createElementNS(namespaceMap[namespace], tagName)\n}\n\nfunction createTextNode (text) {\n  return document.createTextNode(text)\n}\n\nfunction createComment (text) {\n  return document.createComment(text)\n}\n\nfunction insertBefore (parentNode, newNode, referenceNode) {\n  parentNode.insertBefore(newNode, referenceNode);\n}\n\nfunction removeChild (node, child) {\n  node.removeChild(child);\n}\n\nfunction appendChild (node, child) {\n  node.appendChild(child);\n}\n\nfunction parentNode (node) {\n  return node.parentNode\n}\n\nfunction nextSibling (node) {\n  return node.nextSibling\n}\n\nfunction tagName (node) {\n  return node.tagName\n}\n\nfunction setTextContent (node, text) {\n  node.textContent = text;\n}\n\nfunction setStyleScope (node, scopeId) {\n  node.setAttribute(scopeId, '');\n}\n\n\nvar nodeOps = Object.freeze({\n\tcreateElement: createElement$1,\n\tcreateElementNS: createElementNS,\n\tcreateTextNode: createTextNode,\n\tcreateComment: createComment,\n\tinsertBefore: insertBefore,\n\tremoveChild: removeChild,\n\tappendChild: appendChild,\n\tparentNode: parentNode,\n\tnextSibling: nextSibling,\n\ttagName: tagName,\n\tsetTextContent: setTextContent,\n\tsetStyleScope: setStyleScope\n});\n\n/*  */\n\nvar ref = {\n  create: function create (_, vnode) {\n    registerRef(vnode);\n  },\n  update: function update (oldVnode, vnode) {\n    if (oldVnode.data.ref !== vnode.data.ref) {\n      registerRef(oldVnode, true);\n      registerRef(vnode);\n    }\n  },\n  destroy: function destroy (vnode) {\n    registerRef(vnode, true);\n  }\n}\n\nfunction registerRef (vnode, isRemoval) {\n  var key = vnode.data.ref;\n  if (!isDef(key)) { return }\n\n  var vm = vnode.context;\n  var ref = vnode.componentInstance || vnode.elm;\n  var refs = vm.$refs;\n  if (isRemoval) {\n    if (Array.isArray(refs[key])) {\n      remove(refs[key], ref);\n    } else if (refs[key] === ref) {\n      refs[key] = undefined;\n    }\n  } else {\n    if (vnode.data.refInFor) {\n      if (!Array.isArray(refs[key])) {\n        refs[key] = [ref];\n      } else if (refs[key].indexOf(ref) < 0) {\n        // $flow-disable-line\n        refs[key].push(ref);\n      }\n    } else {\n      refs[key] = ref;\n    }\n  }\n}\n\n/**\n * Virtual DOM patching algorithm based on Snabbdom by\n * Simon Friis Vindum (@paldepind)\n * Licensed under the MIT License\n * https://github.com/paldepind/snabbdom/blob/master/LICENSE\n *\n * modified by Evan You (@yyx990803)\n *\n * Not type-checking this because this file is perf-critical and the cost\n * of making flow understand it is not worth it.\n */\n\nvar emptyNode = new VNode('', {}, []);\n\nvar hooks = ['create', 'activate', 'update', 'remove', 'destroy'];\n\nfunction sameVnode (a, b) {\n  return (\n    a.key === b.key && (\n      (\n        a.tag === b.tag &&\n        a.isComment === b.isComment &&\n        isDef(a.data) === isDef(b.data) &&\n        sameInputType(a, b)\n      ) || (\n        isTrue(a.isAsyncPlaceholder) &&\n        a.asyncFactory === b.asyncFactory &&\n        isUndef(b.asyncFactory.error)\n      )\n    )\n  )\n}\n\nfunction sameInputType (a, b) {\n  if (a.tag !== 'input') { return true }\n  var i;\n  var typeA = isDef(i = a.data) && isDef(i = i.attrs) && i.type;\n  var typeB = isDef(i = b.data) && isDef(i = i.attrs) && i.type;\n  return typeA === typeB || isTextInputType(typeA) && isTextInputType(typeB)\n}\n\nfunction createKeyToOldIdx (children, beginIdx, endIdx) {\n  var i, key;\n  var map = {};\n  for (i = beginIdx; i <= endIdx; ++i) {\n    key = children[i].key;\n    if (isDef(key)) { map[key] = i; }\n  }\n  return map\n}\n\nfunction createPatchFunction (backend) {\n  var i, j;\n  var cbs = {};\n\n  var modules = backend.modules;\n  var nodeOps = backend.nodeOps;\n\n  for (i = 0; i < hooks.length; ++i) {\n    cbs[hooks[i]] = [];\n    for (j = 0; j < modules.length; ++j) {\n      if (isDef(modules[j][hooks[i]])) {\n        cbs[hooks[i]].push(modules[j][hooks[i]]);\n      }\n    }\n  }\n\n  function emptyNodeAt (elm) {\n    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)\n  }\n\n  function createRmCb (childElm, listeners) {\n    function remove () {\n      if (--remove.listeners === 0) {\n        removeNode(childElm);\n      }\n    }\n    remove.listeners = listeners;\n    return remove\n  }\n\n  function removeNode (el) {\n    var parent = nodeOps.parentNode(el);\n    // element may have already been removed due to v-html / v-text\n    if (isDef(parent)) {\n      nodeOps.removeChild(parent, el);\n    }\n  }\n\n  function isUnknownElement$$1 (vnode, inVPre) {\n    return (\n      !inVPre &&\n      !vnode.ns &&\n      !(\n        config.ignoredElements.length &&\n        config.ignoredElements.some(function (ignore) {\n          return isRegExp(ignore)\n            ? ignore.test(vnode.tag)\n            : ignore === vnode.tag\n        })\n      ) &&\n      config.isUnknownElement(vnode.tag)\n    )\n  }\n\n  var creatingElmInVPre = 0;\n\n  function createElm (\n    vnode,\n    insertedVnodeQueue,\n    parentElm,\n    refElm,\n    nested,\n    ownerArray,\n    index\n  ) {\n    if (isDef(vnode.elm) && isDef(ownerArray)) {\n      // This vnode was used in a previous render!\n      // now it's used as a new node, overwriting its elm would cause\n      // potential patch errors down the road when it's used as an insertion\n      // reference node. Instead, we clone the node on-demand before creating\n      // associated DOM element for it.\n      vnode = ownerArray[index] = cloneVNode(vnode);\n    }\n\n    vnode.isRootInsert = !nested; // for transition enter check\n    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {\n      return\n    }\n\n    var data = vnode.data;\n    var children = vnode.children;\n    var tag = vnode.tag;\n    if (isDef(tag)) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (data && data.pre) {\n          creatingElmInVPre++;\n        }\n        if (isUnknownElement$$1(vnode, creatingElmInVPre)) {\n          warn(\n            'Unknown custom element: <' + tag + '> - did you ' +\n            'register the component correctly? For recursive components, ' +\n            'make sure to provide the \"name\" option.',\n            vnode.context\n          );\n        }\n      }\n\n      vnode.elm = vnode.ns\n        ? nodeOps.createElementNS(vnode.ns, tag)\n        : nodeOps.createElement(tag, vnode);\n      setScope(vnode);\n\n      /* istanbul ignore if */\n      {\n        createChildren(vnode, children, insertedVnodeQueue);\n        if (isDef(data)) {\n          invokeCreateHooks(vnode, insertedVnodeQueue);\n        }\n        insert(parentElm, vnode.elm, refElm);\n      }\n\n      if (process.env.NODE_ENV !== 'production' && data && data.pre) {\n        creatingElmInVPre--;\n      }\n    } else if (isTrue(vnode.isComment)) {\n      vnode.elm = nodeOps.createComment(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    } else {\n      vnode.elm = nodeOps.createTextNode(vnode.text);\n      insert(parentElm, vnode.elm, refElm);\n    }\n  }\n\n  function createComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i = vnode.data;\n    if (isDef(i)) {\n      var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;\n      if (isDef(i = i.hook) && isDef(i = i.init)) {\n        i(vnode, false /* hydrating */, parentElm, refElm);\n      }\n      // after calling the init hook, if the vnode is a child component\n      // it should've created a child instance and mounted it. the child\n      // component also has set the placeholder vnode's elm.\n      // in that case we can just return the element and be done.\n      if (isDef(vnode.componentInstance)) {\n        initComponent(vnode, insertedVnodeQueue);\n        if (isTrue(isReactivated)) {\n          reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);\n        }\n        return true\n      }\n    }\n  }\n\n  function initComponent (vnode, insertedVnodeQueue) {\n    if (isDef(vnode.data.pendingInsert)) {\n      insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);\n      vnode.data.pendingInsert = null;\n    }\n    vnode.elm = vnode.componentInstance.$el;\n    if (isPatchable(vnode)) {\n      invokeCreateHooks(vnode, insertedVnodeQueue);\n      setScope(vnode);\n    } else {\n      // empty component root.\n      // skip all element-related modules except for ref (#3455)\n      registerRef(vnode);\n      // make sure to invoke the insert hook\n      insertedVnodeQueue.push(vnode);\n    }\n  }\n\n  function reactivateComponent (vnode, insertedVnodeQueue, parentElm, refElm) {\n    var i;\n    // hack for #4339: a reactivated component with inner transition\n    // does not trigger because the inner node's created hooks are not called\n    // again. It's not ideal to involve module-specific logic in here but\n    // there doesn't seem to be a better way to do it.\n    var innerNode = vnode;\n    while (innerNode.componentInstance) {\n      innerNode = innerNode.componentInstance._vnode;\n      if (isDef(i = innerNode.data) && isDef(i = i.transition)) {\n        for (i = 0; i < cbs.activate.length; ++i) {\n          cbs.activate[i](emptyNode, innerNode);\n        }\n        insertedVnodeQueue.push(innerNode);\n        break\n      }\n    }\n    // unlike a newly created component,\n    // a reactivated keep-alive component doesn't insert itself\n    insert(parentElm, vnode.elm, refElm);\n  }\n\n  function insert (parent, elm, ref$$1) {\n    if (isDef(parent)) {\n      if (isDef(ref$$1)) {\n        if (ref$$1.parentNode === parent) {\n          nodeOps.insertBefore(parent, elm, ref$$1);\n        }\n      } else {\n        nodeOps.appendChild(parent, elm);\n      }\n    }\n  }\n\n  function createChildren (vnode, children, insertedVnodeQueue) {\n    if (Array.isArray(children)) {\n      if (process.env.NODE_ENV !== 'production') {\n        checkDuplicateKeys(children);\n      }\n      for (var i = 0; i < children.length; ++i) {\n        createElm(children[i], insertedVnodeQueue, vnode.elm, null, true, children, i);\n      }\n    } else if (isPrimitive(vnode.text)) {\n      nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(String(vnode.text)));\n    }\n  }\n\n  function isPatchable (vnode) {\n    while (vnode.componentInstance) {\n      vnode = vnode.componentInstance._vnode;\n    }\n    return isDef(vnode.tag)\n  }\n\n  function invokeCreateHooks (vnode, insertedVnodeQueue) {\n    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n      cbs.create[i$1](emptyNode, vnode);\n    }\n    i = vnode.data.hook; // Reuse variable\n    if (isDef(i)) {\n      if (isDef(i.create)) { i.create(emptyNode, vnode); }\n      if (isDef(i.insert)) { insertedVnodeQueue.push(vnode); }\n    }\n  }\n\n  // set scope id attribute for scoped CSS.\n  // this is implemented as a special case to avoid the overhead\n  // of going through the normal attribute patching process.\n  function setScope (vnode) {\n    var i;\n    if (isDef(i = vnode.fnScopeId)) {\n      nodeOps.setStyleScope(vnode.elm, i);\n    } else {\n      var ancestor = vnode;\n      while (ancestor) {\n        if (isDef(i = ancestor.context) && isDef(i = i.$options._scopeId)) {\n          nodeOps.setStyleScope(vnode.elm, i);\n        }\n        ancestor = ancestor.parent;\n      }\n    }\n    // for slot content they should also get the scopeId from the host instance.\n    if (isDef(i = activeInstance) &&\n      i !== vnode.context &&\n      i !== vnode.fnContext &&\n      isDef(i = i.$options._scopeId)\n    ) {\n      nodeOps.setStyleScope(vnode.elm, i);\n    }\n  }\n\n  function addVnodes (parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm, false, vnodes, startIdx);\n    }\n  }\n\n  function invokeDestroyHook (vnode) {\n    var i, j;\n    var data = vnode.data;\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.destroy)) { i(vnode); }\n      for (i = 0; i < cbs.destroy.length; ++i) { cbs.destroy[i](vnode); }\n    }\n    if (isDef(i = vnode.children)) {\n      for (j = 0; j < vnode.children.length; ++j) {\n        invokeDestroyHook(vnode.children[j]);\n      }\n    }\n  }\n\n  function removeVnodes (parentElm, vnodes, startIdx, endIdx) {\n    for (; startIdx <= endIdx; ++startIdx) {\n      var ch = vnodes[startIdx];\n      if (isDef(ch)) {\n        if (isDef(ch.tag)) {\n          removeAndInvokeRemoveHook(ch);\n          invokeDestroyHook(ch);\n        } else { // Text node\n          removeNode(ch.elm);\n        }\n      }\n    }\n  }\n\n  function removeAndInvokeRemoveHook (vnode, rm) {\n    if (isDef(rm) || isDef(vnode.data)) {\n      var i;\n      var listeners = cbs.remove.length + 1;\n      if (isDef(rm)) {\n        // we have a recursively passed down rm callback\n        // increase the listeners count\n        rm.listeners += listeners;\n      } else {\n        // directly removing\n        rm = createRmCb(vnode.elm, listeners);\n      }\n      // recursively invoke hooks on child component root node\n      if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {\n        removeAndInvokeRemoveHook(i, rm);\n      }\n      for (i = 0; i < cbs.remove.length; ++i) {\n        cbs.remove[i](vnode, rm);\n      }\n      if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {\n        i(vnode, rm);\n      } else {\n        rm();\n      }\n    } else {\n      removeNode(vnode.elm);\n    }\n  }\n\n  function updateChildren (parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {\n    var oldStartIdx = 0;\n    var newStartIdx = 0;\n    var oldEndIdx = oldCh.length - 1;\n    var oldStartVnode = oldCh[0];\n    var oldEndVnode = oldCh[oldEndIdx];\n    var newEndIdx = newCh.length - 1;\n    var newStartVnode = newCh[0];\n    var newEndVnode = newCh[newEndIdx];\n    var oldKeyToIdx, idxInOld, vnodeToMove, refElm;\n\n    // removeOnly is a special flag used only by <transition-group>\n    // to ensure removed elements stay in correct relative positions\n    // during leaving transitions\n    var canMove = !removeOnly;\n\n    if (process.env.NODE_ENV !== 'production') {\n      checkDuplicateKeys(newCh);\n    }\n\n    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {\n      if (isUndef(oldStartVnode)) {\n        oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left\n      } else if (isUndef(oldEndVnode)) {\n        oldEndVnode = oldCh[--oldEndIdx];\n      } else if (sameVnode(oldStartVnode, newStartVnode)) {\n        patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);\n        oldStartVnode = oldCh[++oldStartIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else if (sameVnode(oldEndVnode, newEndVnode)) {\n        patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right\n        patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));\n        oldStartVnode = oldCh[++oldStartIdx];\n        newEndVnode = newCh[--newEndIdx];\n      } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left\n        patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);\n        canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);\n        oldEndVnode = oldCh[--oldEndIdx];\n        newStartVnode = newCh[++newStartIdx];\n      } else {\n        if (isUndef(oldKeyToIdx)) { oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx); }\n        idxInOld = isDef(newStartVnode.key)\n          ? oldKeyToIdx[newStartVnode.key]\n          : findIdxInOld(newStartVnode, oldCh, oldStartIdx, oldEndIdx);\n        if (isUndef(idxInOld)) { // New element\n          createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);\n        } else {\n          vnodeToMove = oldCh[idxInOld];\n          if (sameVnode(vnodeToMove, newStartVnode)) {\n            patchVnode(vnodeToMove, newStartVnode, insertedVnodeQueue);\n            oldCh[idxInOld] = undefined;\n            canMove && nodeOps.insertBefore(parentElm, vnodeToMove.elm, oldStartVnode.elm);\n          } else {\n            // same key but different element. treat as new element\n            createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);\n          }\n        }\n        newStartVnode = newCh[++newStartIdx];\n      }\n    }\n    if (oldStartIdx > oldEndIdx) {\n      refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;\n      addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);\n    } else if (newStartIdx > newEndIdx) {\n      removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);\n    }\n  }\n\n  function checkDuplicateKeys (children) {\n    var seenKeys = {};\n    for (var i = 0; i < children.length; i++) {\n      var vnode = children[i];\n      var key = vnode.key;\n      if (isDef(key)) {\n        if (seenKeys[key]) {\n          warn(\n            (\"Duplicate keys detected: '\" + key + \"'. This may cause an update error.\"),\n            vnode.context\n          );\n        } else {\n          seenKeys[key] = true;\n        }\n      }\n    }\n  }\n\n  function findIdxInOld (node, oldCh, start, end) {\n    for (var i = start; i < end; i++) {\n      var c = oldCh[i];\n      if (isDef(c) && sameVnode(node, c)) { return i }\n    }\n  }\n\n  function patchVnode (oldVnode, vnode, insertedVnodeQueue, removeOnly) {\n    if (oldVnode === vnode) {\n      return\n    }\n\n    var elm = vnode.elm = oldVnode.elm;\n\n    if (isTrue(oldVnode.isAsyncPlaceholder)) {\n      if (isDef(vnode.asyncFactory.resolved)) {\n        hydrate(oldVnode.elm, vnode, insertedVnodeQueue);\n      } else {\n        vnode.isAsyncPlaceholder = true;\n      }\n      return\n    }\n\n    // reuse element for static trees.\n    // note we only do this if the vnode is cloned -\n    // if the new node is not cloned it means the render functions have been\n    // reset by the hot-reload-api and we need to do a proper re-render.\n    if (isTrue(vnode.isStatic) &&\n      isTrue(oldVnode.isStatic) &&\n      vnode.key === oldVnode.key &&\n      (isTrue(vnode.isCloned) || isTrue(vnode.isOnce))\n    ) {\n      vnode.componentInstance = oldVnode.componentInstance;\n      return\n    }\n\n    var i;\n    var data = vnode.data;\n    if (isDef(data) && isDef(i = data.hook) && isDef(i = i.prepatch)) {\n      i(oldVnode, vnode);\n    }\n\n    var oldCh = oldVnode.children;\n    var ch = vnode.children;\n    if (isDef(data) && isPatchable(vnode)) {\n      for (i = 0; i < cbs.update.length; ++i) { cbs.update[i](oldVnode, vnode); }\n      if (isDef(i = data.hook) && isDef(i = i.update)) { i(oldVnode, vnode); }\n    }\n    if (isUndef(vnode.text)) {\n      if (isDef(oldCh) && isDef(ch)) {\n        if (oldCh !== ch) { updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly); }\n      } else if (isDef(ch)) {\n        if (isDef(oldVnode.text)) { nodeOps.setTextContent(elm, ''); }\n        addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);\n      } else if (isDef(oldCh)) {\n        removeVnodes(elm, oldCh, 0, oldCh.length - 1);\n      } else if (isDef(oldVnode.text)) {\n        nodeOps.setTextContent(elm, '');\n      }\n    } else if (oldVnode.text !== vnode.text) {\n      nodeOps.setTextContent(elm, vnode.text);\n    }\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.postpatch)) { i(oldVnode, vnode); }\n    }\n  }\n\n  function invokeInsertHook (vnode, queue, initial) {\n    // delay insert hooks for component root nodes, invoke them after the\n    // element is really inserted\n    if (isTrue(initial) && isDef(vnode.parent)) {\n      vnode.parent.data.pendingInsert = queue;\n    } else {\n      for (var i = 0; i < queue.length; ++i) {\n        queue[i].data.hook.insert(queue[i]);\n      }\n    }\n  }\n\n  var hydrationBailed = false;\n  // list of modules that can skip create hook during hydration because they\n  // are already rendered on the client or has no need for initialization\n  // Note: style is excluded because it relies on initial clone for future\n  // deep updates (#7063).\n  var isRenderedModule = makeMap('attrs,class,staticClass,staticStyle,key');\n\n  // Note: this is a browser-only function so we can assume elms are DOM nodes.\n  function hydrate (elm, vnode, insertedVnodeQueue, inVPre) {\n    var i;\n    var tag = vnode.tag;\n    var data = vnode.data;\n    var children = vnode.children;\n    inVPre = inVPre || (data && data.pre);\n    vnode.elm = elm;\n\n    if (isTrue(vnode.isComment) && isDef(vnode.asyncFactory)) {\n      vnode.isAsyncPlaceholder = true;\n      return true\n    }\n    // assert node match\n    if (process.env.NODE_ENV !== 'production') {\n      if (!assertNodeMatch(elm, vnode, inVPre)) {\n        return false\n      }\n    }\n    if (isDef(data)) {\n      if (isDef(i = data.hook) && isDef(i = i.init)) { i(vnode, true /* hydrating */); }\n      if (isDef(i = vnode.componentInstance)) {\n        // child component. it should have hydrated its own tree.\n        initComponent(vnode, insertedVnodeQueue);\n        return true\n      }\n    }\n    if (isDef(tag)) {\n      if (isDef(children)) {\n        // empty element, allow client to pick up and populate children\n        if (!elm.hasChildNodes()) {\n          createChildren(vnode, children, insertedVnodeQueue);\n        } else {\n          // v-html and domProps: innerHTML\n          if (isDef(i = data) && isDef(i = i.domProps) && isDef(i = i.innerHTML)) {\n            if (i !== elm.innerHTML) {\n              /* istanbul ignore if */\n              if (process.env.NODE_ENV !== 'production' &&\n                typeof console !== 'undefined' &&\n                !hydrationBailed\n              ) {\n                hydrationBailed = true;\n                console.warn('Parent: ', elm);\n                console.warn('server innerHTML: ', i);\n                console.warn('client innerHTML: ', elm.innerHTML);\n              }\n              return false\n            }\n          } else {\n            // iterate and compare children lists\n            var childrenMatch = true;\n            var childNode = elm.firstChild;\n            for (var i$1 = 0; i$1 < children.length; i$1++) {\n              if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue, inVPre)) {\n                childrenMatch = false;\n                break\n              }\n              childNode = childNode.nextSibling;\n            }\n            // if childNode is not null, it means the actual childNodes list is\n            // longer than the virtual children list.\n            if (!childrenMatch || childNode) {\n              /* istanbul ignore if */\n              if (process.env.NODE_ENV !== 'production' &&\n                typeof console !== 'undefined' &&\n                !hydrationBailed\n              ) {\n                hydrationBailed = true;\n                console.warn('Parent: ', elm);\n                console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);\n              }\n              return false\n            }\n          }\n        }\n      }\n      if (isDef(data)) {\n        var fullInvoke = false;\n        for (var key in data) {\n          if (!isRenderedModule(key)) {\n            fullInvoke = true;\n            invokeCreateHooks(vnode, insertedVnodeQueue);\n            break\n          }\n        }\n        if (!fullInvoke && data['class']) {\n          // ensure collecting deps for deep class bindings for future updates\n          traverse(data['class']);\n        }\n      }\n    } else if (elm.data !== vnode.text) {\n      elm.data = vnode.text;\n    }\n    return true\n  }\n\n  function assertNodeMatch (node, vnode, inVPre) {\n    if (isDef(vnode.tag)) {\n      return vnode.tag.indexOf('vue-component') === 0 || (\n        !isUnknownElement$$1(vnode, inVPre) &&\n        vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase())\n      )\n    } else {\n      return node.nodeType === (vnode.isComment ? 8 : 3)\n    }\n  }\n\n  return function patch (oldVnode, vnode, hydrating, removeOnly, parentElm, refElm) {\n    if (isUndef(vnode)) {\n      if (isDef(oldVnode)) { invokeDestroyHook(oldVnode); }\n      return\n    }\n\n    var isInitialPatch = false;\n    var insertedVnodeQueue = [];\n\n    if (isUndef(oldVnode)) {\n      // empty mount (likely as component), create new root element\n      isInitialPatch = true;\n      createElm(vnode, insertedVnodeQueue, parentElm, refElm);\n    } else {\n      var isRealElement = isDef(oldVnode.nodeType);\n      if (!isRealElement && sameVnode(oldVnode, vnode)) {\n        // patch existing root node\n        patchVnode(oldVnode, vnode, insertedVnodeQueue, removeOnly);\n      } else {\n        if (isRealElement) {\n          // mounting to a real element\n          // check if this is server-rendered content and if we can perform\n          // a successful hydration.\n          if (oldVnode.nodeType === 1 && oldVnode.hasAttribute(SSR_ATTR)) {\n            oldVnode.removeAttribute(SSR_ATTR);\n            hydrating = true;\n          }\n          if (isTrue(hydrating)) {\n            if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {\n              invokeInsertHook(vnode, insertedVnodeQueue, true);\n              return oldVnode\n            } else if (process.env.NODE_ENV !== 'production') {\n              warn(\n                'The client-side rendered virtual DOM tree is not matching ' +\n                'server-rendered content. This is likely caused by incorrect ' +\n                'HTML markup, for example nesting block-level elements inside ' +\n                '<p>, or missing <tbody>. Bailing hydration and performing ' +\n                'full client-side render.'\n              );\n            }\n          }\n          // either not server-rendered, or hydration failed.\n          // create an empty node and replace it\n          oldVnode = emptyNodeAt(oldVnode);\n        }\n\n        // replacing existing element\n        var oldElm = oldVnode.elm;\n        var parentElm$1 = nodeOps.parentNode(oldElm);\n\n        // create new node\n        createElm(\n          vnode,\n          insertedVnodeQueue,\n          // extremely rare edge case: do not insert if old element is in a\n          // leaving transition. Only happens when combining transition +\n          // keep-alive + HOCs. (#4590)\n          oldElm._leaveCb ? null : parentElm$1,\n          nodeOps.nextSibling(oldElm)\n        );\n\n        // update parent placeholder node element, recursively\n        if (isDef(vnode.parent)) {\n          var ancestor = vnode.parent;\n          var patchable = isPatchable(vnode);\n          while (ancestor) {\n            for (var i = 0; i < cbs.destroy.length; ++i) {\n              cbs.destroy[i](ancestor);\n            }\n            ancestor.elm = vnode.elm;\n            if (patchable) {\n              for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {\n                cbs.create[i$1](emptyNode, ancestor);\n              }\n              // #6513\n              // invoke insert hooks that may have been merged by create hooks.\n              // e.g. for directives that uses the \"inserted\" hook.\n              var insert = ancestor.data.hook.insert;\n              if (insert.merged) {\n                // start at index 1 to avoid re-invoking component mounted hook\n                for (var i$2 = 1; i$2 < insert.fns.length; i$2++) {\n                  insert.fns[i$2]();\n                }\n              }\n            } else {\n              registerRef(ancestor);\n            }\n            ancestor = ancestor.parent;\n          }\n        }\n\n        // destroy old node\n        if (isDef(parentElm$1)) {\n          removeVnodes(parentElm$1, [oldVnode], 0, 0);\n        } else if (isDef(oldVnode.tag)) {\n          invokeDestroyHook(oldVnode);\n        }\n      }\n    }\n\n    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);\n    return vnode.elm\n  }\n}\n\n/*  */\n\nvar directives = {\n  create: updateDirectives,\n  update: updateDirectives,\n  destroy: function unbindDirectives (vnode) {\n    updateDirectives(vnode, emptyNode);\n  }\n}\n\nfunction updateDirectives (oldVnode, vnode) {\n  if (oldVnode.data.directives || vnode.data.directives) {\n    _update(oldVnode, vnode);\n  }\n}\n\nfunction _update (oldVnode, vnode) {\n  var isCreate = oldVnode === emptyNode;\n  var isDestroy = vnode === emptyNode;\n  var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);\n  var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);\n\n  var dirsWithInsert = [];\n  var dirsWithPostpatch = [];\n\n  var key, oldDir, dir;\n  for (key in newDirs) {\n    oldDir = oldDirs[key];\n    dir = newDirs[key];\n    if (!oldDir) {\n      // new directive, bind\n      callHook$1(dir, 'bind', vnode, oldVnode);\n      if (dir.def && dir.def.inserted) {\n        dirsWithInsert.push(dir);\n      }\n    } else {\n      // existing directive, update\n      dir.oldValue = oldDir.value;\n      callHook$1(dir, 'update', vnode, oldVnode);\n      if (dir.def && dir.def.componentUpdated) {\n        dirsWithPostpatch.push(dir);\n      }\n    }\n  }\n\n  if (dirsWithInsert.length) {\n    var callInsert = function () {\n      for (var i = 0; i < dirsWithInsert.length; i++) {\n        callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);\n      }\n    };\n    if (isCreate) {\n      mergeVNodeHook(vnode, 'insert', callInsert);\n    } else {\n      callInsert();\n    }\n  }\n\n  if (dirsWithPostpatch.length) {\n    mergeVNodeHook(vnode, 'postpatch', function () {\n      for (var i = 0; i < dirsWithPostpatch.length; i++) {\n        callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);\n      }\n    });\n  }\n\n  if (!isCreate) {\n    for (key in oldDirs) {\n      if (!newDirs[key]) {\n        // no longer present, unbind\n        callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);\n      }\n    }\n  }\n}\n\nvar emptyModifiers = Object.create(null);\n\nfunction normalizeDirectives$1 (\n  dirs,\n  vm\n) {\n  var res = Object.create(null);\n  if (!dirs) {\n    // $flow-disable-line\n    return res\n  }\n  var i, dir;\n  for (i = 0; i < dirs.length; i++) {\n    dir = dirs[i];\n    if (!dir.modifiers) {\n      // $flow-disable-line\n      dir.modifiers = emptyModifiers;\n    }\n    res[getRawDirName(dir)] = dir;\n    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);\n  }\n  // $flow-disable-line\n  return res\n}\n\nfunction getRawDirName (dir) {\n  return dir.rawName || ((dir.name) + \".\" + (Object.keys(dir.modifiers || {}).join('.')))\n}\n\nfunction callHook$1 (dir, hook, vnode, oldVnode, isDestroy) {\n  var fn = dir.def && dir.def[hook];\n  if (fn) {\n    try {\n      fn(vnode.elm, dir, vnode, oldVnode, isDestroy);\n    } catch (e) {\n      handleError(e, vnode.context, (\"directive \" + (dir.name) + \" \" + hook + \" hook\"));\n    }\n  }\n}\n\nvar baseModules = [\n  ref,\n  directives\n]\n\n/*  */\n\nfunction updateAttrs (oldVnode, vnode) {\n  var opts = vnode.componentOptions;\n  if (isDef(opts) && opts.Ctor.options.inheritAttrs === false) {\n    return\n  }\n  if (isUndef(oldVnode.data.attrs) && isUndef(vnode.data.attrs)) {\n    return\n  }\n  var key, cur, old;\n  var elm = vnode.elm;\n  var oldAttrs = oldVnode.data.attrs || {};\n  var attrs = vnode.data.attrs || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(attrs.__ob__)) {\n    attrs = vnode.data.attrs = extend({}, attrs);\n  }\n\n  for (key in attrs) {\n    cur = attrs[key];\n    old = oldAttrs[key];\n    if (old !== cur) {\n      setAttr(elm, key, cur);\n    }\n  }\n  // #4391: in IE9, setting type can reset value for input[type=radio]\n  // #6666: IE/Edge forces progress value down to 1 before setting a max\n  /* istanbul ignore if */\n  if ((isIE || isEdge) && attrs.value !== oldAttrs.value) {\n    setAttr(elm, 'value', attrs.value);\n  }\n  for (key in oldAttrs) {\n    if (isUndef(attrs[key])) {\n      if (isXlink(key)) {\n        elm.removeAttributeNS(xlinkNS, getXlinkProp(key));\n      } else if (!isEnumeratedAttr(key)) {\n        elm.removeAttribute(key);\n      }\n    }\n  }\n}\n\nfunction setAttr (el, key, value) {\n  if (el.tagName.indexOf('-') > -1) {\n    baseSetAttr(el, key, value);\n  } else if (isBooleanAttr(key)) {\n    // set attribute for blank value\n    // e.g. <option disabled>Select one</option>\n    if (isFalsyAttrValue(value)) {\n      el.removeAttribute(key);\n    } else {\n      // technically allowfullscreen is a boolean attribute for <iframe>,\n      // but Flash expects a value of \"true\" when used on <embed> tag\n      value = key === 'allowfullscreen' && el.tagName === 'EMBED'\n        ? 'true'\n        : key;\n      el.setAttribute(key, value);\n    }\n  } else if (isEnumeratedAttr(key)) {\n    el.setAttribute(key, isFalsyAttrValue(value) || value === 'false' ? 'false' : 'true');\n  } else if (isXlink(key)) {\n    if (isFalsyAttrValue(value)) {\n      el.removeAttributeNS(xlinkNS, getXlinkProp(key));\n    } else {\n      el.setAttributeNS(xlinkNS, key, value);\n    }\n  } else {\n    baseSetAttr(el, key, value);\n  }\n}\n\nfunction baseSetAttr (el, key, value) {\n  if (isFalsyAttrValue(value)) {\n    el.removeAttribute(key);\n  } else {\n    // #7138: IE10 & 11 fires input event when setting placeholder on\n    // <textarea>... block the first input event and remove the blocker\n    // immediately.\n    /* istanbul ignore if */\n    if (\n      isIE && !isIE9 &&\n      el.tagName === 'TEXTAREA' &&\n      key === 'placeholder' && !el.__ieph\n    ) {\n      var blocker = function (e) {\n        e.stopImmediatePropagation();\n        el.removeEventListener('input', blocker);\n      };\n      el.addEventListener('input', blocker);\n      // $flow-disable-line\n      el.__ieph = true; /* IE placeholder patched */\n    }\n    el.setAttribute(key, value);\n  }\n}\n\nvar attrs = {\n  create: updateAttrs,\n  update: updateAttrs\n}\n\n/*  */\n\nfunction updateClass (oldVnode, vnode) {\n  var el = vnode.elm;\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n  if (\n    isUndef(data.staticClass) &&\n    isUndef(data.class) && (\n      isUndef(oldData) || (\n        isUndef(oldData.staticClass) &&\n        isUndef(oldData.class)\n      )\n    )\n  ) {\n    return\n  }\n\n  var cls = genClassForVnode(vnode);\n\n  // handle transition classes\n  var transitionClass = el._transitionClasses;\n  if (isDef(transitionClass)) {\n    cls = concat(cls, stringifyClass(transitionClass));\n  }\n\n  // set the class\n  if (cls !== el._prevClass) {\n    el.setAttribute('class', cls);\n    el._prevClass = cls;\n  }\n}\n\nvar klass = {\n  create: updateClass,\n  update: updateClass\n}\n\n/*  */\n\n/*  */\n\n\n\n\n\n\n\n\n\n// add a raw attr (use this in preTransforms)\n\n\n\n\n\n\n\n\n// note: this only removes the attr from the Array (attrsList) so that it\n// doesn't get processed by processAttrs.\n// By default it does NOT remove it from the map (attrsMap) because the map is\n// needed during codegen.\n\n/*  */\n\n/**\n * Cross-platform code generation for component v-model\n */\n\n\n/**\n * Cross-platform codegen helper for generating v-model value assignment code.\n */\n\n/*  */\n\n// in some cases, the event used has to be determined at runtime\n// so we used some reserved tokens during compile.\nvar RANGE_TOKEN = '__r';\nvar CHECKBOX_RADIO_TOKEN = '__c';\n\n/*  */\n\n// normalize v-model event tokens that can only be determined at runtime.\n// it's important to place the event as the first in the array because\n// the whole point is ensuring the v-model callback gets called before\n// user-attached handlers.\nfunction normalizeEvents (on) {\n  /* istanbul ignore if */\n  if (isDef(on[RANGE_TOKEN])) {\n    // IE input[type=range] only supports `change` event\n    var event = isIE ? 'change' : 'input';\n    on[event] = [].concat(on[RANGE_TOKEN], on[event] || []);\n    delete on[RANGE_TOKEN];\n  }\n  // This was originally intended to fix #4521 but no longer necessary\n  // after 2.5. Keeping it for backwards compat with generated code from < 2.4\n  /* istanbul ignore if */\n  if (isDef(on[CHECKBOX_RADIO_TOKEN])) {\n    on.change = [].concat(on[CHECKBOX_RADIO_TOKEN], on.change || []);\n    delete on[CHECKBOX_RADIO_TOKEN];\n  }\n}\n\nvar target$1;\n\nfunction createOnceHandler (handler, event, capture) {\n  var _target = target$1; // save current target element in closure\n  return function onceHandler () {\n    var res = handler.apply(null, arguments);\n    if (res !== null) {\n      remove$2(event, onceHandler, capture, _target);\n    }\n  }\n}\n\nfunction add$1 (\n  event,\n  handler,\n  once$$1,\n  capture,\n  passive\n) {\n  handler = withMacroTask(handler);\n  if (once$$1) { handler = createOnceHandler(handler, event, capture); }\n  target$1.addEventListener(\n    event,\n    handler,\n    supportsPassive\n      ? { capture: capture, passive: passive }\n      : capture\n  );\n}\n\nfunction remove$2 (\n  event,\n  handler,\n  capture,\n  _target\n) {\n  (_target || target$1).removeEventListener(\n    event,\n    handler._withTask || handler,\n    capture\n  );\n}\n\nfunction updateDOMListeners (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.on) && isUndef(vnode.data.on)) {\n    return\n  }\n  var on = vnode.data.on || {};\n  var oldOn = oldVnode.data.on || {};\n  target$1 = vnode.elm;\n  normalizeEvents(on);\n  updateListeners(on, oldOn, add$1, remove$2, vnode.context);\n  target$1 = undefined;\n}\n\nvar events = {\n  create: updateDOMListeners,\n  update: updateDOMListeners\n}\n\n/*  */\n\nfunction updateDOMProps (oldVnode, vnode) {\n  if (isUndef(oldVnode.data.domProps) && isUndef(vnode.data.domProps)) {\n    return\n  }\n  var key, cur;\n  var elm = vnode.elm;\n  var oldProps = oldVnode.data.domProps || {};\n  var props = vnode.data.domProps || {};\n  // clone observed objects, as the user probably wants to mutate it\n  if (isDef(props.__ob__)) {\n    props = vnode.data.domProps = extend({}, props);\n  }\n\n  for (key in oldProps) {\n    if (isUndef(props[key])) {\n      elm[key] = '';\n    }\n  }\n  for (key in props) {\n    cur = props[key];\n    // ignore children if the node has textContent or innerHTML,\n    // as these will throw away existing DOM nodes and cause removal errors\n    // on subsequent patches (#3360)\n    if (key === 'textContent' || key === 'innerHTML') {\n      if (vnode.children) { vnode.children.length = 0; }\n      if (cur === oldProps[key]) { continue }\n      // #6601 work around Chrome version <= 55 bug where single textNode\n      // replaced by innerHTML/textContent retains its parentNode property\n      if (elm.childNodes.length === 1) {\n        elm.removeChild(elm.childNodes[0]);\n      }\n    }\n\n    if (key === 'value') {\n      // store value as _value as well since\n      // non-string values will be stringified\n      elm._value = cur;\n      // avoid resetting cursor position when value is the same\n      var strCur = isUndef(cur) ? '' : String(cur);\n      if (shouldUpdateValue(elm, strCur)) {\n        elm.value = strCur;\n      }\n    } else {\n      elm[key] = cur;\n    }\n  }\n}\n\n// check platforms/web/util/attrs.js acceptValue\n\n\nfunction shouldUpdateValue (elm, checkVal) {\n  return (!elm.composing && (\n    elm.tagName === 'OPTION' ||\n    isNotInFocusAndDirty(elm, checkVal) ||\n    isDirtyWithModifiers(elm, checkVal)\n  ))\n}\n\nfunction isNotInFocusAndDirty (elm, checkVal) {\n  // return true when textbox (.number and .trim) loses focus and its value is\n  // not equal to the updated value\n  var notInFocus = true;\n  // #6157\n  // work around IE bug when accessing document.activeElement in an iframe\n  try { notInFocus = document.activeElement !== elm; } catch (e) {}\n  return notInFocus && elm.value !== checkVal\n}\n\nfunction isDirtyWithModifiers (elm, newVal) {\n  var value = elm.value;\n  var modifiers = elm._vModifiers; // injected by v-model runtime\n  if (isDef(modifiers)) {\n    if (modifiers.lazy) {\n      // inputs with lazy should only be updated when not in focus\n      return false\n    }\n    if (modifiers.number) {\n      return toNumber(value) !== toNumber(newVal)\n    }\n    if (modifiers.trim) {\n      return value.trim() !== newVal.trim()\n    }\n  }\n  return value !== newVal\n}\n\nvar domProps = {\n  create: updateDOMProps,\n  update: updateDOMProps\n}\n\n/*  */\n\nvar parseStyleText = cached(function (cssText) {\n  var res = {};\n  var listDelimiter = /;(?![^(]*\\))/g;\n  var propertyDelimiter = /:(.+)/;\n  cssText.split(listDelimiter).forEach(function (item) {\n    if (item) {\n      var tmp = item.split(propertyDelimiter);\n      tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());\n    }\n  });\n  return res\n});\n\n// merge static and dynamic style data on the same vnode\nfunction normalizeStyleData (data) {\n  var style = normalizeStyleBinding(data.style);\n  // static style is pre-processed into an object during compilation\n  // and is always a fresh object, so it's safe to merge into it\n  return data.staticStyle\n    ? extend(data.staticStyle, style)\n    : style\n}\n\n// normalize possible array / string values into Object\nfunction normalizeStyleBinding (bindingStyle) {\n  if (Array.isArray(bindingStyle)) {\n    return toObject(bindingStyle)\n  }\n  if (typeof bindingStyle === 'string') {\n    return parseStyleText(bindingStyle)\n  }\n  return bindingStyle\n}\n\n/**\n * parent component style should be after child's\n * so that parent component's style could override it\n */\nfunction getStyle (vnode, checkChild) {\n  var res = {};\n  var styleData;\n\n  if (checkChild) {\n    var childNode = vnode;\n    while (childNode.componentInstance) {\n      childNode = childNode.componentInstance._vnode;\n      if (\n        childNode && childNode.data &&\n        (styleData = normalizeStyleData(childNode.data))\n      ) {\n        extend(res, styleData);\n      }\n    }\n  }\n\n  if ((styleData = normalizeStyleData(vnode.data))) {\n    extend(res, styleData);\n  }\n\n  var parentNode = vnode;\n  while ((parentNode = parentNode.parent)) {\n    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {\n      extend(res, styleData);\n    }\n  }\n  return res\n}\n\n/*  */\n\nvar cssVarRE = /^--/;\nvar importantRE = /\\s*!important$/;\nvar setProp = function (el, name, val) {\n  /* istanbul ignore if */\n  if (cssVarRE.test(name)) {\n    el.style.setProperty(name, val);\n  } else if (importantRE.test(val)) {\n    el.style.setProperty(name, val.replace(importantRE, ''), 'important');\n  } else {\n    var normalizedName = normalize(name);\n    if (Array.isArray(val)) {\n      // Support values array created by autoprefixer, e.g.\n      // {display: [\"-webkit-box\", \"-ms-flexbox\", \"flex\"]}\n      // Set them one by one, and the browser will only set those it can recognize\n      for (var i = 0, len = val.length; i < len; i++) {\n        el.style[normalizedName] = val[i];\n      }\n    } else {\n      el.style[normalizedName] = val;\n    }\n  }\n};\n\nvar vendorNames = ['Webkit', 'Moz', 'ms'];\n\nvar emptyStyle;\nvar normalize = cached(function (prop) {\n  emptyStyle = emptyStyle || document.createElement('div').style;\n  prop = camelize(prop);\n  if (prop !== 'filter' && (prop in emptyStyle)) {\n    return prop\n  }\n  var capName = prop.charAt(0).toUpperCase() + prop.slice(1);\n  for (var i = 0; i < vendorNames.length; i++) {\n    var name = vendorNames[i] + capName;\n    if (name in emptyStyle) {\n      return name\n    }\n  }\n});\n\nfunction updateStyle (oldVnode, vnode) {\n  var data = vnode.data;\n  var oldData = oldVnode.data;\n\n  if (isUndef(data.staticStyle) && isUndef(data.style) &&\n    isUndef(oldData.staticStyle) && isUndef(oldData.style)\n  ) {\n    return\n  }\n\n  var cur, name;\n  var el = vnode.elm;\n  var oldStaticStyle = oldData.staticStyle;\n  var oldStyleBinding = oldData.normalizedStyle || oldData.style || {};\n\n  // if static style exists, stylebinding already merged into it when doing normalizeStyleData\n  var oldStyle = oldStaticStyle || oldStyleBinding;\n\n  var style = normalizeStyleBinding(vnode.data.style) || {};\n\n  // store normalized style under a different key for next diff\n  // make sure to clone it if it's reactive, since the user likely wants\n  // to mutate it.\n  vnode.data.normalizedStyle = isDef(style.__ob__)\n    ? extend({}, style)\n    : style;\n\n  var newStyle = getStyle(vnode, true);\n\n  for (name in oldStyle) {\n    if (isUndef(newStyle[name])) {\n      setProp(el, name, '');\n    }\n  }\n  for (name in newStyle) {\n    cur = newStyle[name];\n    if (cur !== oldStyle[name]) {\n      // ie9 setting to null has no effect, must use empty string\n      setProp(el, name, cur == null ? '' : cur);\n    }\n  }\n}\n\nvar style = {\n  create: updateStyle,\n  update: updateStyle\n}\n\n/*  */\n\n/**\n * Add class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction addClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.add(c); });\n    } else {\n      el.classList.add(cls);\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      el.setAttribute('class', (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for SVG since classList is not supported on\n * SVG elements in IE\n */\nfunction removeClass (el, cls) {\n  /* istanbul ignore if */\n  if (!cls || !(cls = cls.trim())) {\n    return\n  }\n\n  /* istanbul ignore else */\n  if (el.classList) {\n    if (cls.indexOf(' ') > -1) {\n      cls.split(/\\s+/).forEach(function (c) { return el.classList.remove(c); });\n    } else {\n      el.classList.remove(cls);\n    }\n    if (!el.classList.length) {\n      el.removeAttribute('class');\n    }\n  } else {\n    var cur = \" \" + (el.getAttribute('class') || '') + \" \";\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    cur = cur.trim();\n    if (cur) {\n      el.setAttribute('class', cur);\n    } else {\n      el.removeAttribute('class');\n    }\n  }\n}\n\n/*  */\n\nfunction resolveTransition (def) {\n  if (!def) {\n    return\n  }\n  /* istanbul ignore else */\n  if (typeof def === 'object') {\n    var res = {};\n    if (def.css !== false) {\n      extend(res, autoCssTransition(def.name || 'v'));\n    }\n    extend(res, def);\n    return res\n  } else if (typeof def === 'string') {\n    return autoCssTransition(def)\n  }\n}\n\nvar autoCssTransition = cached(function (name) {\n  return {\n    enterClass: (name + \"-enter\"),\n    enterToClass: (name + \"-enter-to\"),\n    enterActiveClass: (name + \"-enter-active\"),\n    leaveClass: (name + \"-leave\"),\n    leaveToClass: (name + \"-leave-to\"),\n    leaveActiveClass: (name + \"-leave-active\")\n  }\n});\n\nvar hasTransition = inBrowser && !isIE9;\nvar TRANSITION = 'transition';\nvar ANIMATION = 'animation';\n\n// Transition property/event sniffing\nvar transitionProp = 'transition';\nvar transitionEndEvent = 'transitionend';\nvar animationProp = 'animation';\nvar animationEndEvent = 'animationend';\nif (hasTransition) {\n  /* istanbul ignore if */\n  if (window.ontransitionend === undefined &&\n    window.onwebkittransitionend !== undefined\n  ) {\n    transitionProp = 'WebkitTransition';\n    transitionEndEvent = 'webkitTransitionEnd';\n  }\n  if (window.onanimationend === undefined &&\n    window.onwebkitanimationend !== undefined\n  ) {\n    animationProp = 'WebkitAnimation';\n    animationEndEvent = 'webkitAnimationEnd';\n  }\n}\n\n// binding to window is necessary to make hot reload work in IE in strict mode\nvar raf = inBrowser\n  ? window.requestAnimationFrame\n    ? window.requestAnimationFrame.bind(window)\n    : setTimeout\n  : /* istanbul ignore next */ function (fn) { return fn(); };\n\nfunction nextFrame (fn) {\n  raf(function () {\n    raf(fn);\n  });\n}\n\nfunction addTransitionClass (el, cls) {\n  var transitionClasses = el._transitionClasses || (el._transitionClasses = []);\n  if (transitionClasses.indexOf(cls) < 0) {\n    transitionClasses.push(cls);\n    addClass(el, cls);\n  }\n}\n\nfunction removeTransitionClass (el, cls) {\n  if (el._transitionClasses) {\n    remove(el._transitionClasses, cls);\n  }\n  removeClass(el, cls);\n}\n\nfunction whenTransitionEnds (\n  el,\n  expectedType,\n  cb\n) {\n  var ref = getTransitionInfo(el, expectedType);\n  var type = ref.type;\n  var timeout = ref.timeout;\n  var propCount = ref.propCount;\n  if (!type) { return cb() }\n  var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;\n  var ended = 0;\n  var end = function () {\n    el.removeEventListener(event, onEnd);\n    cb();\n  };\n  var onEnd = function (e) {\n    if (e.target === el) {\n      if (++ended >= propCount) {\n        end();\n      }\n    }\n  };\n  setTimeout(function () {\n    if (ended < propCount) {\n      end();\n    }\n  }, timeout + 1);\n  el.addEventListener(event, onEnd);\n}\n\nvar transformRE = /\\b(transform|all)(,|$)/;\n\nfunction getTransitionInfo (el, expectedType) {\n  var styles = window.getComputedStyle(el);\n  var transitionDelays = styles[transitionProp + 'Delay'].split(', ');\n  var transitionDurations = styles[transitionProp + 'Duration'].split(', ');\n  var transitionTimeout = getTimeout(transitionDelays, transitionDurations);\n  var animationDelays = styles[animationProp + 'Delay'].split(', ');\n  var animationDurations = styles[animationProp + 'Duration'].split(', ');\n  var animationTimeout = getTimeout(animationDelays, animationDurations);\n\n  var type;\n  var timeout = 0;\n  var propCount = 0;\n  /* istanbul ignore if */\n  if (expectedType === TRANSITION) {\n    if (transitionTimeout > 0) {\n      type = TRANSITION;\n      timeout = transitionTimeout;\n      propCount = transitionDurations.length;\n    }\n  } else if (expectedType === ANIMATION) {\n    if (animationTimeout > 0) {\n      type = ANIMATION;\n      timeout = animationTimeout;\n      propCount = animationDurations.length;\n    }\n  } else {\n    timeout = Math.max(transitionTimeout, animationTimeout);\n    type = timeout > 0\n      ? transitionTimeout > animationTimeout\n        ? TRANSITION\n        : ANIMATION\n      : null;\n    propCount = type\n      ? type === TRANSITION\n        ? transitionDurations.length\n        : animationDurations.length\n      : 0;\n  }\n  var hasTransform =\n    type === TRANSITION &&\n    transformRE.test(styles[transitionProp + 'Property']);\n  return {\n    type: type,\n    timeout: timeout,\n    propCount: propCount,\n    hasTransform: hasTransform\n  }\n}\n\nfunction getTimeout (delays, durations) {\n  /* istanbul ignore next */\n  while (delays.length < durations.length) {\n    delays = delays.concat(delays);\n  }\n\n  return Math.max.apply(null, durations.map(function (d, i) {\n    return toMs(d) + toMs(delays[i])\n  }))\n}\n\nfunction toMs (s) {\n  return Number(s.slice(0, -1)) * 1000\n}\n\n/*  */\n\nfunction enter (vnode, toggleDisplay) {\n  var el = vnode.elm;\n\n  // call leave callback now\n  if (isDef(el._leaveCb)) {\n    el._leaveCb.cancelled = true;\n    el._leaveCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data)) {\n    return\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._enterCb) || el.nodeType !== 1) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var enterClass = data.enterClass;\n  var enterToClass = data.enterToClass;\n  var enterActiveClass = data.enterActiveClass;\n  var appearClass = data.appearClass;\n  var appearToClass = data.appearToClass;\n  var appearActiveClass = data.appearActiveClass;\n  var beforeEnter = data.beforeEnter;\n  var enter = data.enter;\n  var afterEnter = data.afterEnter;\n  var enterCancelled = data.enterCancelled;\n  var beforeAppear = data.beforeAppear;\n  var appear = data.appear;\n  var afterAppear = data.afterAppear;\n  var appearCancelled = data.appearCancelled;\n  var duration = data.duration;\n\n  // activeInstance will always be the <transition> component managing this\n  // transition. One edge case to check is when the <transition> is placed\n  // as the root node of a child component. In that case we need to check\n  // <transition>'s parent for appear check.\n  var context = activeInstance;\n  var transitionNode = activeInstance.$vnode;\n  while (transitionNode && transitionNode.parent) {\n    transitionNode = transitionNode.parent;\n    context = transitionNode.context;\n  }\n\n  var isAppear = !context._isMounted || !vnode.isRootInsert;\n\n  if (isAppear && !appear && appear !== '') {\n    return\n  }\n\n  var startClass = isAppear && appearClass\n    ? appearClass\n    : enterClass;\n  var activeClass = isAppear && appearActiveClass\n    ? appearActiveClass\n    : enterActiveClass;\n  var toClass = isAppear && appearToClass\n    ? appearToClass\n    : enterToClass;\n\n  var beforeEnterHook = isAppear\n    ? (beforeAppear || beforeEnter)\n    : beforeEnter;\n  var enterHook = isAppear\n    ? (typeof appear === 'function' ? appear : enter)\n    : enter;\n  var afterEnterHook = isAppear\n    ? (afterAppear || afterEnter)\n    : afterEnter;\n  var enterCancelledHook = isAppear\n    ? (appearCancelled || enterCancelled)\n    : enterCancelled;\n\n  var explicitEnterDuration = toNumber(\n    isObject(duration)\n      ? duration.enter\n      : duration\n  );\n\n  if (process.env.NODE_ENV !== 'production' && explicitEnterDuration != null) {\n    checkDuration(explicitEnterDuration, 'enter', vnode);\n  }\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(enterHook);\n\n  var cb = el._enterCb = once(function () {\n    if (expectsCSS) {\n      removeTransitionClass(el, toClass);\n      removeTransitionClass(el, activeClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, startClass);\n      }\n      enterCancelledHook && enterCancelledHook(el);\n    } else {\n      afterEnterHook && afterEnterHook(el);\n    }\n    el._enterCb = null;\n  });\n\n  if (!vnode.data.show) {\n    // remove pending leave element on enter by injecting an insert hook\n    mergeVNodeHook(vnode, 'insert', function () {\n      var parent = el.parentNode;\n      var pendingNode = parent && parent._pending && parent._pending[vnode.key];\n      if (pendingNode &&\n        pendingNode.tag === vnode.tag &&\n        pendingNode.elm._leaveCb\n      ) {\n        pendingNode.elm._leaveCb();\n      }\n      enterHook && enterHook(el, cb);\n    });\n  }\n\n  // start enter transition\n  beforeEnterHook && beforeEnterHook(el);\n  if (expectsCSS) {\n    addTransitionClass(el, startClass);\n    addTransitionClass(el, activeClass);\n    nextFrame(function () {\n      removeTransitionClass(el, startClass);\n      if (!cb.cancelled) {\n        addTransitionClass(el, toClass);\n        if (!userWantsControl) {\n          if (isValidDuration(explicitEnterDuration)) {\n            setTimeout(cb, explicitEnterDuration);\n          } else {\n            whenTransitionEnds(el, type, cb);\n          }\n        }\n      }\n    });\n  }\n\n  if (vnode.data.show) {\n    toggleDisplay && toggleDisplay();\n    enterHook && enterHook(el, cb);\n  }\n\n  if (!expectsCSS && !userWantsControl) {\n    cb();\n  }\n}\n\nfunction leave (vnode, rm) {\n  var el = vnode.elm;\n\n  // call enter callback now\n  if (isDef(el._enterCb)) {\n    el._enterCb.cancelled = true;\n    el._enterCb();\n  }\n\n  var data = resolveTransition(vnode.data.transition);\n  if (isUndef(data) || el.nodeType !== 1) {\n    return rm()\n  }\n\n  /* istanbul ignore if */\n  if (isDef(el._leaveCb)) {\n    return\n  }\n\n  var css = data.css;\n  var type = data.type;\n  var leaveClass = data.leaveClass;\n  var leaveToClass = data.leaveToClass;\n  var leaveActiveClass = data.leaveActiveClass;\n  var beforeLeave = data.beforeLeave;\n  var leave = data.leave;\n  var afterLeave = data.afterLeave;\n  var leaveCancelled = data.leaveCancelled;\n  var delayLeave = data.delayLeave;\n  var duration = data.duration;\n\n  var expectsCSS = css !== false && !isIE9;\n  var userWantsControl = getHookArgumentsLength(leave);\n\n  var explicitLeaveDuration = toNumber(\n    isObject(duration)\n      ? duration.leave\n      : duration\n  );\n\n  if (process.env.NODE_ENV !== 'production' && isDef(explicitLeaveDuration)) {\n    checkDuration(explicitLeaveDuration, 'leave', vnode);\n  }\n\n  var cb = el._leaveCb = once(function () {\n    if (el.parentNode && el.parentNode._pending) {\n      el.parentNode._pending[vnode.key] = null;\n    }\n    if (expectsCSS) {\n      removeTransitionClass(el, leaveToClass);\n      removeTransitionClass(el, leaveActiveClass);\n    }\n    if (cb.cancelled) {\n      if (expectsCSS) {\n        removeTransitionClass(el, leaveClass);\n      }\n      leaveCancelled && leaveCancelled(el);\n    } else {\n      rm();\n      afterLeave && afterLeave(el);\n    }\n    el._leaveCb = null;\n  });\n\n  if (delayLeave) {\n    delayLeave(performLeave);\n  } else {\n    performLeave();\n  }\n\n  function performLeave () {\n    // the delayed leave may have already been cancelled\n    if (cb.cancelled) {\n      return\n    }\n    // record leaving element\n    if (!vnode.data.show) {\n      (el.parentNode._pending || (el.parentNode._pending = {}))[(vnode.key)] = vnode;\n    }\n    beforeLeave && beforeLeave(el);\n    if (expectsCSS) {\n      addTransitionClass(el, leaveClass);\n      addTransitionClass(el, leaveActiveClass);\n      nextFrame(function () {\n        removeTransitionClass(el, leaveClass);\n        if (!cb.cancelled) {\n          addTransitionClass(el, leaveToClass);\n          if (!userWantsControl) {\n            if (isValidDuration(explicitLeaveDuration)) {\n              setTimeout(cb, explicitLeaveDuration);\n            } else {\n              whenTransitionEnds(el, type, cb);\n            }\n          }\n        }\n      });\n    }\n    leave && leave(el, cb);\n    if (!expectsCSS && !userWantsControl) {\n      cb();\n    }\n  }\n}\n\n// only used in dev mode\nfunction checkDuration (val, name, vnode) {\n  if (typeof val !== 'number') {\n    warn(\n      \"<transition> explicit \" + name + \" duration is not a valid number - \" +\n      \"got \" + (JSON.stringify(val)) + \".\",\n      vnode.context\n    );\n  } else if (isNaN(val)) {\n    warn(\n      \"<transition> explicit \" + name + \" duration is NaN - \" +\n      'the duration expression might be incorrect.',\n      vnode.context\n    );\n  }\n}\n\nfunction isValidDuration (val) {\n  return typeof val === 'number' && !isNaN(val)\n}\n\n/**\n * Normalize a transition hook's argument length. The hook may be:\n * - a merged hook (invoker) with the original in .fns\n * - a wrapped component method (check ._length)\n * - a plain function (.length)\n */\nfunction getHookArgumentsLength (fn) {\n  if (isUndef(fn)) {\n    return false\n  }\n  var invokerFns = fn.fns;\n  if (isDef(invokerFns)) {\n    // invoker\n    return getHookArgumentsLength(\n      Array.isArray(invokerFns)\n        ? invokerFns[0]\n        : invokerFns\n    )\n  } else {\n    return (fn._length || fn.length) > 1\n  }\n}\n\nfunction _enter (_, vnode) {\n  if (vnode.data.show !== true) {\n    enter(vnode);\n  }\n}\n\nvar transition = inBrowser ? {\n  create: _enter,\n  activate: _enter,\n  remove: function remove$$1 (vnode, rm) {\n    /* istanbul ignore else */\n    if (vnode.data.show !== true) {\n      leave(vnode, rm);\n    } else {\n      rm();\n    }\n  }\n} : {}\n\nvar platformModules = [\n  attrs,\n  klass,\n  events,\n  domProps,\n  style,\n  transition\n]\n\n/*  */\n\n// the directive module should be applied last, after all\n// built-in modules have been applied.\nvar modules = platformModules.concat(baseModules);\n\nvar patch = createPatchFunction({ nodeOps: nodeOps, modules: modules });\n\n/**\n * Not type checking this file because flow doesn't like attaching\n * properties to Elements.\n */\n\n/* istanbul ignore if */\nif (isIE9) {\n  // http://www.matts411.com/post/internet-explorer-9-oninput/\n  document.addEventListener('selectionchange', function () {\n    var el = document.activeElement;\n    if (el && el.vmodel) {\n      trigger(el, 'input');\n    }\n  });\n}\n\nvar directive = {\n  inserted: function inserted (el, binding, vnode, oldVnode) {\n    if (vnode.tag === 'select') {\n      // #6903\n      if (oldVnode.elm && !oldVnode.elm._vOptions) {\n        mergeVNodeHook(vnode, 'postpatch', function () {\n          directive.componentUpdated(el, binding, vnode);\n        });\n      } else {\n        setSelected(el, binding, vnode.context);\n      }\n      el._vOptions = [].map.call(el.options, getValue);\n    } else if (vnode.tag === 'textarea' || isTextInputType(el.type)) {\n      el._vModifiers = binding.modifiers;\n      if (!binding.modifiers.lazy) {\n        el.addEventListener('compositionstart', onCompositionStart);\n        el.addEventListener('compositionend', onCompositionEnd);\n        // Safari < 10.2 & UIWebView doesn't fire compositionend when\n        // switching focus before confirming composition choice\n        // this also fixes the issue where some browsers e.g. iOS Chrome\n        // fires \"change\" instead of \"input\" on autocomplete.\n        el.addEventListener('change', onCompositionEnd);\n        /* istanbul ignore if */\n        if (isIE9) {\n          el.vmodel = true;\n        }\n      }\n    }\n  },\n\n  componentUpdated: function componentUpdated (el, binding, vnode) {\n    if (vnode.tag === 'select') {\n      setSelected(el, binding, vnode.context);\n      // in case the options rendered by v-for have changed,\n      // it's possible that the value is out-of-sync with the rendered options.\n      // detect such cases and filter out values that no longer has a matching\n      // option in the DOM.\n      var prevOptions = el._vOptions;\n      var curOptions = el._vOptions = [].map.call(el.options, getValue);\n      if (curOptions.some(function (o, i) { return !looseEqual(o, prevOptions[i]); })) {\n        // trigger change event if\n        // no matching option found for at least one value\n        var needReset = el.multiple\n          ? binding.value.some(function (v) { return hasNoMatchingOption(v, curOptions); })\n          : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, curOptions);\n        if (needReset) {\n          trigger(el, 'change');\n        }\n      }\n    }\n  }\n};\n\nfunction setSelected (el, binding, vm) {\n  actuallySetSelected(el, binding, vm);\n  /* istanbul ignore if */\n  if (isIE || isEdge) {\n    setTimeout(function () {\n      actuallySetSelected(el, binding, vm);\n    }, 0);\n  }\n}\n\nfunction actuallySetSelected (el, binding, vm) {\n  var value = binding.value;\n  var isMultiple = el.multiple;\n  if (isMultiple && !Array.isArray(value)) {\n    process.env.NODE_ENV !== 'production' && warn(\n      \"<select multiple v-model=\\\"\" + (binding.expression) + \"\\\"> \" +\n      \"expects an Array value for its binding, but got \" + (Object.prototype.toString.call(value).slice(8, -1)),\n      vm\n    );\n    return\n  }\n  var selected, option;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    option = el.options[i];\n    if (isMultiple) {\n      selected = looseIndexOf(value, getValue(option)) > -1;\n      if (option.selected !== selected) {\n        option.selected = selected;\n      }\n    } else {\n      if (looseEqual(getValue(option), value)) {\n        if (el.selectedIndex !== i) {\n          el.selectedIndex = i;\n        }\n        return\n      }\n    }\n  }\n  if (!isMultiple) {\n    el.selectedIndex = -1;\n  }\n}\n\nfunction hasNoMatchingOption (value, options) {\n  return options.every(function (o) { return !looseEqual(o, value); })\n}\n\nfunction getValue (option) {\n  return '_value' in option\n    ? option._value\n    : option.value\n}\n\nfunction onCompositionStart (e) {\n  e.target.composing = true;\n}\n\nfunction onCompositionEnd (e) {\n  // prevent triggering an input event for no reason\n  if (!e.target.composing) { return }\n  e.target.composing = false;\n  trigger(e.target, 'input');\n}\n\nfunction trigger (el, type) {\n  var e = document.createEvent('HTMLEvents');\n  e.initEvent(type, true, true);\n  el.dispatchEvent(e);\n}\n\n/*  */\n\n// recursively search for possible transition defined inside the component root\nfunction locateNode (vnode) {\n  return vnode.componentInstance && (!vnode.data || !vnode.data.transition)\n    ? locateNode(vnode.componentInstance._vnode)\n    : vnode\n}\n\nvar show = {\n  bind: function bind (el, ref, vnode) {\n    var value = ref.value;\n\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    var originalDisplay = el.__vOriginalDisplay =\n      el.style.display === 'none' ? '' : el.style.display;\n    if (value && transition$$1) {\n      vnode.data.show = true;\n      enter(vnode, function () {\n        el.style.display = originalDisplay;\n      });\n    } else {\n      el.style.display = value ? originalDisplay : 'none';\n    }\n  },\n\n  update: function update (el, ref, vnode) {\n    var value = ref.value;\n    var oldValue = ref.oldValue;\n\n    /* istanbul ignore if */\n    if (!value === !oldValue) { return }\n    vnode = locateNode(vnode);\n    var transition$$1 = vnode.data && vnode.data.transition;\n    if (transition$$1) {\n      vnode.data.show = true;\n      if (value) {\n        enter(vnode, function () {\n          el.style.display = el.__vOriginalDisplay;\n        });\n      } else {\n        leave(vnode, function () {\n          el.style.display = 'none';\n        });\n      }\n    } else {\n      el.style.display = value ? el.__vOriginalDisplay : 'none';\n    }\n  },\n\n  unbind: function unbind (\n    el,\n    binding,\n    vnode,\n    oldVnode,\n    isDestroy\n  ) {\n    if (!isDestroy) {\n      el.style.display = el.__vOriginalDisplay;\n    }\n  }\n}\n\nvar platformDirectives = {\n  model: directive,\n  show: show\n}\n\n/*  */\n\n// Provides transition support for a single element/component.\n// supports transition mode (out-in / in-out)\n\nvar transitionProps = {\n  name: String,\n  appear: Boolean,\n  css: Boolean,\n  mode: String,\n  type: String,\n  enterClass: String,\n  leaveClass: String,\n  enterToClass: String,\n  leaveToClass: String,\n  enterActiveClass: String,\n  leaveActiveClass: String,\n  appearClass: String,\n  appearActiveClass: String,\n  appearToClass: String,\n  duration: [Number, String, Object]\n};\n\n// in case the child is also an abstract component, e.g. <keep-alive>\n// we want to recursively retrieve the real component to be rendered\nfunction getRealChild (vnode) {\n  var compOptions = vnode && vnode.componentOptions;\n  if (compOptions && compOptions.Ctor.options.abstract) {\n    return getRealChild(getFirstComponentChild(compOptions.children))\n  } else {\n    return vnode\n  }\n}\n\nfunction extractTransitionData (comp) {\n  var data = {};\n  var options = comp.$options;\n  // props\n  for (var key in options.propsData) {\n    data[key] = comp[key];\n  }\n  // events.\n  // extract listeners and pass them directly to the transition methods\n  var listeners = options._parentListeners;\n  for (var key$1 in listeners) {\n    data[camelize(key$1)] = listeners[key$1];\n  }\n  return data\n}\n\nfunction placeholder (h, rawChild) {\n  if (/\\d-keep-alive$/.test(rawChild.tag)) {\n    return h('keep-alive', {\n      props: rawChild.componentOptions.propsData\n    })\n  }\n}\n\nfunction hasParentTransition (vnode) {\n  while ((vnode = vnode.parent)) {\n    if (vnode.data.transition) {\n      return true\n    }\n  }\n}\n\nfunction isSameChild (child, oldChild) {\n  return oldChild.key === child.key && oldChild.tag === child.tag\n}\n\nvar Transition = {\n  name: 'transition',\n  props: transitionProps,\n  abstract: true,\n\n  render: function render (h) {\n    var this$1 = this;\n\n    var children = this.$slots.default;\n    if (!children) {\n      return\n    }\n\n    // filter out text nodes (possible whitespaces)\n    children = children.filter(function (c) { return c.tag || isAsyncPlaceholder(c); });\n    /* istanbul ignore if */\n    if (!children.length) {\n      return\n    }\n\n    // warn multiple elements\n    if (process.env.NODE_ENV !== 'production' && children.length > 1) {\n      warn(\n        '<transition> can only be used on a single element. Use ' +\n        '<transition-group> for lists.',\n        this.$parent\n      );\n    }\n\n    var mode = this.mode;\n\n    // warn invalid mode\n    if (process.env.NODE_ENV !== 'production' &&\n      mode && mode !== 'in-out' && mode !== 'out-in'\n    ) {\n      warn(\n        'invalid <transition> mode: ' + mode,\n        this.$parent\n      );\n    }\n\n    var rawChild = children[0];\n\n    // if this is a component root node and the component's\n    // parent container node also has transition, skip.\n    if (hasParentTransition(this.$vnode)) {\n      return rawChild\n    }\n\n    // apply transition data to child\n    // use getRealChild() to ignore abstract components e.g. keep-alive\n    var child = getRealChild(rawChild);\n    /* istanbul ignore if */\n    if (!child) {\n      return rawChild\n    }\n\n    if (this._leaving) {\n      return placeholder(h, rawChild)\n    }\n\n    // ensure a key that is unique to the vnode type and to this transition\n    // component instance. This key will be used to remove pending leaving nodes\n    // during entering.\n    var id = \"__transition-\" + (this._uid) + \"-\";\n    child.key = child.key == null\n      ? child.isComment\n        ? id + 'comment'\n        : id + child.tag\n      : isPrimitive(child.key)\n        ? (String(child.key).indexOf(id) === 0 ? child.key : id + child.key)\n        : child.key;\n\n    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);\n    var oldRawChild = this._vnode;\n    var oldChild = getRealChild(oldRawChild);\n\n    // mark v-show\n    // so that the transition module can hand over the control to the directive\n    if (child.data.directives && child.data.directives.some(function (d) { return d.name === 'show'; })) {\n      child.data.show = true;\n    }\n\n    if (\n      oldChild &&\n      oldChild.data &&\n      !isSameChild(child, oldChild) &&\n      !isAsyncPlaceholder(oldChild) &&\n      // #6687 component root is a comment node\n      !(oldChild.componentInstance && oldChild.componentInstance._vnode.isComment)\n    ) {\n      // replace old child transition data with fresh one\n      // important for dynamic transitions!\n      var oldData = oldChild.data.transition = extend({}, data);\n      // handle transition mode\n      if (mode === 'out-in') {\n        // return placeholder node and queue update when leave finishes\n        this._leaving = true;\n        mergeVNodeHook(oldData, 'afterLeave', function () {\n          this$1._leaving = false;\n          this$1.$forceUpdate();\n        });\n        return placeholder(h, rawChild)\n      } else if (mode === 'in-out') {\n        if (isAsyncPlaceholder(child)) {\n          return oldRawChild\n        }\n        var delayedLeave;\n        var performLeave = function () { delayedLeave(); };\n        mergeVNodeHook(data, 'afterEnter', performLeave);\n        mergeVNodeHook(data, 'enterCancelled', performLeave);\n        mergeVNodeHook(oldData, 'delayLeave', function (leave) { delayedLeave = leave; });\n      }\n    }\n\n    return rawChild\n  }\n}\n\n/*  */\n\n// Provides transition support for list items.\n// supports move transitions using the FLIP technique.\n\n// Because the vdom's children update algorithm is \"unstable\" - i.e.\n// it doesn't guarantee the relative positioning of removed elements,\n// we force transition-group to update its children into two passes:\n// in the first pass, we remove all nodes that need to be removed,\n// triggering their leaving transition; in the second pass, we insert/move\n// into the final desired state. This way in the second pass removed\n// nodes will remain where they should be.\n\nvar props = extend({\n  tag: String,\n  moveClass: String\n}, transitionProps);\n\ndelete props.mode;\n\nvar TransitionGroup = {\n  props: props,\n\n  render: function render (h) {\n    var tag = this.tag || this.$vnode.data.tag || 'span';\n    var map = Object.create(null);\n    var prevChildren = this.prevChildren = this.children;\n    var rawChildren = this.$slots.default || [];\n    var children = this.children = [];\n    var transitionData = extractTransitionData(this);\n\n    for (var i = 0; i < rawChildren.length; i++) {\n      var c = rawChildren[i];\n      if (c.tag) {\n        if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {\n          children.push(c);\n          map[c.key] = c\n          ;(c.data || (c.data = {})).transition = transitionData;\n        } else if (process.env.NODE_ENV !== 'production') {\n          var opts = c.componentOptions;\n          var name = opts ? (opts.Ctor.options.name || opts.tag || '') : c.tag;\n          warn((\"<transition-group> children must be keyed: <\" + name + \">\"));\n        }\n      }\n    }\n\n    if (prevChildren) {\n      var kept = [];\n      var removed = [];\n      for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {\n        var c$1 = prevChildren[i$1];\n        c$1.data.transition = transitionData;\n        c$1.data.pos = c$1.elm.getBoundingClientRect();\n        if (map[c$1.key]) {\n          kept.push(c$1);\n        } else {\n          removed.push(c$1);\n        }\n      }\n      this.kept = h(tag, null, kept);\n      this.removed = removed;\n    }\n\n    return h(tag, null, children)\n  },\n\n  beforeUpdate: function beforeUpdate () {\n    // force removing pass\n    this.__patch__(\n      this._vnode,\n      this.kept,\n      false, // hydrating\n      true // removeOnly (!important, avoids unnecessary moves)\n    );\n    this._vnode = this.kept;\n  },\n\n  updated: function updated () {\n    var children = this.prevChildren;\n    var moveClass = this.moveClass || ((this.name || 'v') + '-move');\n    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {\n      return\n    }\n\n    // we divide the work into three loops to avoid mixing DOM reads and writes\n    // in each iteration - which helps prevent layout thrashing.\n    children.forEach(callPendingCbs);\n    children.forEach(recordPosition);\n    children.forEach(applyTranslation);\n\n    // force reflow to put everything in position\n    // assign to this to avoid being removed in tree-shaking\n    // $flow-disable-line\n    this._reflow = document.body.offsetHeight;\n\n    children.forEach(function (c) {\n      if (c.data.moved) {\n        var el = c.elm;\n        var s = el.style;\n        addTransitionClass(el, moveClass);\n        s.transform = s.WebkitTransform = s.transitionDuration = '';\n        el.addEventListener(transitionEndEvent, el._moveCb = function cb (e) {\n          if (!e || /transform$/.test(e.propertyName)) {\n            el.removeEventListener(transitionEndEvent, cb);\n            el._moveCb = null;\n            removeTransitionClass(el, moveClass);\n          }\n        });\n      }\n    });\n  },\n\n  methods: {\n    hasMove: function hasMove (el, moveClass) {\n      /* istanbul ignore if */\n      if (!hasTransition) {\n        return false\n      }\n      /* istanbul ignore if */\n      if (this._hasMove) {\n        return this._hasMove\n      }\n      // Detect whether an element with the move class applied has\n      // CSS transitions. Since the element may be inside an entering\n      // transition at this very moment, we make a clone of it and remove\n      // all other transition classes applied to ensure only the move class\n      // is applied.\n      var clone = el.cloneNode();\n      if (el._transitionClasses) {\n        el._transitionClasses.forEach(function (cls) { removeClass(clone, cls); });\n      }\n      addClass(clone, moveClass);\n      clone.style.display = 'none';\n      this.$el.appendChild(clone);\n      var info = getTransitionInfo(clone);\n      this.$el.removeChild(clone);\n      return (this._hasMove = info.hasTransform)\n    }\n  }\n}\n\nfunction callPendingCbs (c) {\n  /* istanbul ignore if */\n  if (c.elm._moveCb) {\n    c.elm._moveCb();\n  }\n  /* istanbul ignore if */\n  if (c.elm._enterCb) {\n    c.elm._enterCb();\n  }\n}\n\nfunction recordPosition (c) {\n  c.data.newPos = c.elm.getBoundingClientRect();\n}\n\nfunction applyTranslation (c) {\n  var oldPos = c.data.pos;\n  var newPos = c.data.newPos;\n  var dx = oldPos.left - newPos.left;\n  var dy = oldPos.top - newPos.top;\n  if (dx || dy) {\n    c.data.moved = true;\n    var s = c.elm.style;\n    s.transform = s.WebkitTransform = \"translate(\" + dx + \"px,\" + dy + \"px)\";\n    s.transitionDuration = '0s';\n  }\n}\n\nvar platformComponents = {\n  Transition: Transition,\n  TransitionGroup: TransitionGroup\n}\n\n/*  */\n\n// install platform specific utils\nVue.config.mustUseProp = mustUseProp;\nVue.config.isReservedTag = isReservedTag;\nVue.config.isReservedAttr = isReservedAttr;\nVue.config.getTagNamespace = getTagNamespace;\nVue.config.isUnknownElement = isUnknownElement;\n\n// install platform runtime directives & components\nextend(Vue.options.directives, platformDirectives);\nextend(Vue.options.components, platformComponents);\n\n// install platform patch function\nVue.prototype.__patch__ = inBrowser ? patch : noop;\n\n// public mount method\nVue.prototype.$mount = function (\n  el,\n  hydrating\n) {\n  el = el && inBrowser ? query(el) : undefined;\n  return mountComponent(this, el, hydrating)\n};\n\n// devtools global hook\n/* istanbul ignore next */\nif (inBrowser) {\n  setTimeout(function () {\n    if (config.devtools) {\n      if (devtools) {\n        devtools.emit('init', Vue);\n      } else if (\n        process.env.NODE_ENV !== 'production' &&\n        process.env.NODE_ENV !== 'test' &&\n        isChrome\n      ) {\n        console[console.info ? 'info' : 'log'](\n          'Download the Vue Devtools extension for a better development experience:\\n' +\n          'https://github.com/vuejs/vue-devtools'\n        );\n      }\n    }\n    if (process.env.NODE_ENV !== 'production' &&\n      process.env.NODE_ENV !== 'test' &&\n      config.productionTip !== false &&\n      typeof console !== 'undefined'\n    ) {\n      console[console.info ? 'info' : 'log'](\n        \"You are running Vue in development mode.\\n\" +\n        \"Make sure to turn on production mode when deploying for production.\\n\" +\n        \"See more tips at https://vuejs.org/guide/deployment.html\"\n      );\n    }\n  }, 0);\n}\n\n/*  */\n\nexport default Vue;\n","var store = require('./_shared')('wks');\nvar uid = require('./_uid');\nvar Symbol = require('./_global').Symbol;\nvar USE_SYMBOL = typeof Symbol == 'function';\n\nvar $exports = module.exports = function (name) {\n  return store[name] || (store[name] =\n    USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));\n};\n\n$exports.store = store;\n","module.exports = false;\n","var toString = {}.toString;\n\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n","// fast apply, http://jsperf.lnkit.com/fast-apply/5\nmodule.exports = function (fn, args, that) {\n  var un = that === undefined;\n  switch (args.length) {\n    case 0: return un ? fn()\n                      : fn.call(that);\n    case 1: return un ? fn(args[0])\n                      : fn.call(that, args[0]);\n    case 2: return un ? fn(args[0], args[1])\n                      : fn.call(that, args[0], args[1]);\n    case 3: return un ? fn(args[0], args[1], args[2])\n                      : fn.call(that, args[0], args[1], args[2]);\n    case 4: return un ? fn(args[0], args[1], args[2], args[3])\n                      : fn.call(that, args[0], args[1], args[2], args[3]);\n  } return fn.apply(that, args);\n};\n","var dP = require('./_object-dp');\nvar createDesc = require('./_property-desc');\nmodule.exports = require('./_descriptors') ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n","// check on default Array iterator\nvar Iterators = require('./_iterators');\nvar ITERATOR = require('./_wks')('iterator');\nvar ArrayProto = Array.prototype;\n\nmodule.exports = function (it) {\n  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);\n};\n","// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)\nvar has = require('./_has');\nvar toObject = require('./_to-object');\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\nvar ObjectProto = Object.prototype;\n\nmodule.exports = Object.getPrototypeOf || function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  } return O instanceof Object ? ObjectProto : null;\n};\n","'use strict';\nvar create = require('./_object-create');\nvar descriptor = require('./_property-desc');\nvar setToStringTag = require('./_set-to-string-tag');\nvar IteratorPrototype = {};\n\n// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\nrequire('./_hide')(IteratorPrototype, require('./_wks')('iterator'), function () { return this; });\n\nmodule.exports = function (Constructor, NAME, next) {\n  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });\n  setToStringTag(Constructor, NAME + ' Iterator');\n};\n","// 7.1.4 ToInteger\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nmodule.exports = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n","var ctx = require('./_ctx');\nvar call = require('./_iter-call');\nvar isArrayIter = require('./_is-array-iter');\nvar anObject = require('./_an-object');\nvar toLength = require('./_to-length');\nvar getIterFn = require('./core.get-iterator-method');\nvar BREAK = {};\nvar RETURN = {};\nvar exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {\n  var iterFn = ITERATOR ? function () { return iterable; } : getIterFn(iterable);\n  var f = ctx(fn, that, entries ? 2 : 1);\n  var index = 0;\n  var length, step, iterator, result;\n  if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');\n  // fast case for arrays with default iterator\n  if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {\n    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);\n    if (result === BREAK || result === RETURN) return result;\n  } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {\n    result = call(iterator, f, step.value, entries);\n    if (result === BREAK || result === RETURN) return result;\n  }\n};\nexports.BREAK = BREAK;\nexports.RETURN = RETURN;\n","// 7.1.13 ToObject(argument)\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return Object(defined(it));\n};\n","'use strict';\nvar LIBRARY = require('./_library');\nvar global = require('./_global');\nvar ctx = require('./_ctx');\nvar classof = require('./_classof');\nvar $export = require('./_export');\nvar isObject = require('./_is-object');\nvar aFunction = require('./_a-function');\nvar anInstance = require('./_an-instance');\nvar forOf = require('./_for-of');\nvar speciesConstructor = require('./_species-constructor');\nvar task = require('./_task').set;\nvar microtask = require('./_microtask')();\nvar newPromiseCapabilityModule = require('./_new-promise-capability');\nvar perform = require('./_perform');\nvar userAgent = require('./_user-agent');\nvar promiseResolve = require('./_promise-resolve');\nvar PROMISE = 'Promise';\nvar TypeError = global.TypeError;\nvar process = global.process;\nvar versions = process && process.versions;\nvar v8 = versions && versions.v8 || '';\nvar $Promise = global[PROMISE];\nvar isNode = classof(process) == 'process';\nvar empty = function () { /* empty */ };\nvar Internal, newGenericPromiseCapability, OwnPromiseCapability, Wrapper;\nvar newPromiseCapability = newGenericPromiseCapability = newPromiseCapabilityModule.f;\n\nvar USE_NATIVE = !!function () {\n  try {\n    // correct subclassing with @@species support\n    var promise = $Promise.resolve(1);\n    var FakePromise = (promise.constructor = {})[require('./_wks')('species')] = function (exec) {\n      exec(empty, empty);\n    };\n    // unhandled rejections tracking support, NodeJS Promise without it fails @@species test\n    return (isNode || typeof PromiseRejectionEvent == 'function')\n      && promise.then(empty) instanceof FakePromise\n      // v8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables\n      // https://bugs.chromium.org/p/chromium/issues/detail?id=830565\n      // we can't detect it synchronously, so just check versions\n      && v8.indexOf('6.6') !== 0\n      && userAgent.indexOf('Chrome/66') === -1;\n  } catch (e) { /* empty */ }\n}();\n\n// helpers\nvar isThenable = function (it) {\n  var then;\n  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;\n};\nvar notify = function (promise, isReject) {\n  if (promise._n) return;\n  promise._n = true;\n  var chain = promise._c;\n  microtask(function () {\n    var value = promise._v;\n    var ok = promise._s == 1;\n    var i = 0;\n    var run = function (reaction) {\n      var handler = ok ? reaction.ok : reaction.fail;\n      var resolve = reaction.resolve;\n      var reject = reaction.reject;\n      var domain = reaction.domain;\n      var result, then, exited;\n      try {\n        if (handler) {\n          if (!ok) {\n            if (promise._h == 2) onHandleUnhandled(promise);\n            promise._h = 1;\n          }\n          if (handler === true) result = value;\n          else {\n            if (domain) domain.enter();\n            result = handler(value); // may throw\n            if (domain) {\n              domain.exit();\n              exited = true;\n            }\n          }\n          if (result === reaction.promise) {\n            reject(TypeError('Promise-chain cycle'));\n          } else if (then = isThenable(result)) {\n            then.call(result, resolve, reject);\n          } else resolve(result);\n        } else reject(value);\n      } catch (e) {\n        if (domain && !exited) domain.exit();\n        reject(e);\n      }\n    };\n    while (chain.length > i) run(chain[i++]); // variable length - can't use forEach\n    promise._c = [];\n    promise._n = false;\n    if (isReject && !promise._h) onUnhandled(promise);\n  });\n};\nvar onUnhandled = function (promise) {\n  task.call(global, function () {\n    var value = promise._v;\n    var unhandled = isUnhandled(promise);\n    var result, handler, console;\n    if (unhandled) {\n      result = perform(function () {\n        if (isNode) {\n          process.emit('unhandledRejection', value, promise);\n        } else if (handler = global.onunhandledrejection) {\n          handler({ promise: promise, reason: value });\n        } else if ((console = global.console) && console.error) {\n          console.error('Unhandled promise rejection', value);\n        }\n      });\n      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should\n      promise._h = isNode || isUnhandled(promise) ? 2 : 1;\n    } promise._a = undefined;\n    if (unhandled && result.e) throw result.v;\n  });\n};\nvar isUnhandled = function (promise) {\n  return promise._h !== 1 && (promise._a || promise._c).length === 0;\n};\nvar onHandleUnhandled = function (promise) {\n  task.call(global, function () {\n    var handler;\n    if (isNode) {\n      process.emit('rejectionHandled', promise);\n    } else if (handler = global.onrejectionhandled) {\n      handler({ promise: promise, reason: promise._v });\n    }\n  });\n};\nvar $reject = function (value) {\n  var promise = this;\n  if (promise._d) return;\n  promise._d = true;\n  promise = promise._w || promise; // unwrap\n  promise._v = value;\n  promise._s = 2;\n  if (!promise._a) promise._a = promise._c.slice();\n  notify(promise, true);\n};\nvar $resolve = function (value) {\n  var promise = this;\n  var then;\n  if (promise._d) return;\n  promise._d = true;\n  promise = promise._w || promise; // unwrap\n  try {\n    if (promise === value) throw TypeError(\"Promise can't be resolved itself\");\n    if (then = isThenable(value)) {\n      microtask(function () {\n        var wrapper = { _w: promise, _d: false }; // wrap\n        try {\n          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));\n        } catch (e) {\n          $reject.call(wrapper, e);\n        }\n      });\n    } else {\n      promise._v = value;\n      promise._s = 1;\n      notify(promise, false);\n    }\n  } catch (e) {\n    $reject.call({ _w: promise, _d: false }, e); // wrap\n  }\n};\n\n// constructor polyfill\nif (!USE_NATIVE) {\n  // 25.4.3.1 Promise(executor)\n  $Promise = function Promise(executor) {\n    anInstance(this, $Promise, PROMISE, '_h');\n    aFunction(executor);\n    Internal.call(this);\n    try {\n      executor(ctx($resolve, this, 1), ctx($reject, this, 1));\n    } catch (err) {\n      $reject.call(this, err);\n    }\n  };\n  // eslint-disable-next-line no-unused-vars\n  Internal = function Promise(executor) {\n    this._c = [];             // <- awaiting reactions\n    this._a = undefined;      // <- checked in isUnhandled reactions\n    this._s = 0;              // <- state\n    this._d = false;          // <- done\n    this._v = undefined;      // <- value\n    this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled\n    this._n = false;          // <- notify\n  };\n  Internal.prototype = require('./_redefine-all')($Promise.prototype, {\n    // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)\n    then: function then(onFulfilled, onRejected) {\n      var reaction = newPromiseCapability(speciesConstructor(this, $Promise));\n      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;\n      reaction.fail = typeof onRejected == 'function' && onRejected;\n      reaction.domain = isNode ? process.domain : undefined;\n      this._c.push(reaction);\n      if (this._a) this._a.push(reaction);\n      if (this._s) notify(this, false);\n      return reaction.promise;\n    },\n    // 25.4.5.1 Promise.prototype.catch(onRejected)\n    'catch': function (onRejected) {\n      return this.then(undefined, onRejected);\n    }\n  });\n  OwnPromiseCapability = function () {\n    var promise = new Internal();\n    this.promise = promise;\n    this.resolve = ctx($resolve, promise, 1);\n    this.reject = ctx($reject, promise, 1);\n  };\n  newPromiseCapabilityModule.f = newPromiseCapability = function (C) {\n    return C === $Promise || C === Wrapper\n      ? new OwnPromiseCapability(C)\n      : newGenericPromiseCapability(C);\n  };\n}\n\n$export($export.G + $export.W + $export.F * !USE_NATIVE, { Promise: $Promise });\nrequire('./_set-to-string-tag')($Promise, PROMISE);\nrequire('./_set-species')(PROMISE);\nWrapper = require('./_core')[PROMISE];\n\n// statics\n$export($export.S + $export.F * !USE_NATIVE, PROMISE, {\n  // 25.4.4.5 Promise.reject(r)\n  reject: function reject(r) {\n    var capability = newPromiseCapability(this);\n    var $$reject = capability.reject;\n    $$reject(r);\n    return capability.promise;\n  }\n});\n$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {\n  // 25.4.4.6 Promise.resolve(x)\n  resolve: function resolve(x) {\n    return promiseResolve(LIBRARY && this === Wrapper ? $Promise : this, x);\n  }\n});\n$export($export.S + $export.F * !(USE_NATIVE && require('./_iter-detect')(function (iter) {\n  $Promise.all(iter)['catch'](empty);\n})), PROMISE, {\n  // 25.4.4.1 Promise.all(iterable)\n  all: function all(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var resolve = capability.resolve;\n    var reject = capability.reject;\n    var result = perform(function () {\n      var values = [];\n      var index = 0;\n      var remaining = 1;\n      forOf(iterable, false, function (promise) {\n        var $index = index++;\n        var alreadyCalled = false;\n        values.push(undefined);\n        remaining++;\n        C.resolve(promise).then(function (value) {\n          if (alreadyCalled) return;\n          alreadyCalled = true;\n          values[$index] = value;\n          --remaining || resolve(values);\n        }, reject);\n      });\n      --remaining || resolve(values);\n    });\n    if (result.e) reject(result.v);\n    return capability.promise;\n  },\n  // 25.4.4.4 Promise.race(iterable)\n  race: function race(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var reject = capability.reject;\n    var result = perform(function () {\n      forOf(iterable, false, function (promise) {\n        C.resolve(promise).then(capability.resolve, reject);\n      });\n    });\n    if (result.e) reject(result.v);\n    return capability.promise;\n  }\n});\n","var core = require('./_core');\nvar global = require('./_global');\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || (global[SHARED] = {});\n\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: core.version,\n  mode: require('./_library') ? 'pure' : 'global',\n  copyright: '© 2018 Denis Pushkarev (zloirock.ru)'\n});\n","var global = require('./_global');\nvar core = require('./_core');\nvar hide = require('./_hide');\nvar redefine = require('./_redefine');\nvar ctx = require('./_ctx');\nvar PROTOTYPE = 'prototype';\n\nvar $export = function (type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE];\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});\n  var key, own, out, exp;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    // contains in native\n    own = !IS_FORCED && target && target[key] !== undefined;\n    // export native or passed\n    out = (own ? target : source)[key];\n    // bind timers to global for call from export context\n    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    // extend global\n    if (target) redefine(target, key, out, type & $export.U);\n    // export\n    if (exports[key] != out) hide(exports, key, exp);\n    if (IS_PROTO && expProto[key] != out) expProto[key] = out;\n  }\n};\nglobal.core = core;\n// type bitmap\n$export.F = 1;   // forced\n$export.G = 2;   // global\n$export.S = 4;   // static\n$export.P = 8;   // proto\n$export.B = 16;  // bind\n$export.W = 32;  // wrap\n$export.U = 64;  // safe\n$export.R = 128; // real proto method for `library`\nmodule.exports = $export;\n","var ITERATOR = require('./_wks')('iterator');\nvar SAFE_CLOSING = false;\n\ntry {\n  var riter = [7][ITERATOR]();\n  riter['return'] = function () { SAFE_CLOSING = true; };\n  // eslint-disable-next-line no-throw-literal\n  Array.from(riter, function () { throw 2; });\n} catch (e) { /* empty */ }\n\nmodule.exports = function (exec, skipClosing) {\n  if (!skipClosing && !SAFE_CLOSING) return false;\n  var safe = false;\n  try {\n    var arr = [7];\n    var iter = arr[ITERATOR]();\n    iter.next = function () { return { done: safe = true }; };\n    arr[ITERATOR] = function () { return iter; };\n    exec(arr);\n  } catch (e) { /* empty */ }\n  return safe;\n};\n","var shared = require('./_shared')('keys');\nvar uid = require('./_uid');\nmodule.exports = function (key) {\n  return shared[key] || (shared[key] = uid(key));\n};\n","// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar cof = require('./_cof');\n// eslint-disable-next-line no-prototype-builtins\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n","// to indexed object, toObject with fallback for non-array-like ES3 strings\nvar IObject = require('./_iobject');\nvar defined = require('./_defined');\nmodule.exports = function (it) {\n  return IObject(defined(it));\n};\n","var hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n","// 7.1.1 ToPrimitive(input [, PreferredType])\nvar isObject = require('./_is-object');\n// instead of the ES6 spec version, we didn't implement @@toPrimitive case\n// and the second argument - flag - preferred type is a string\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n","// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n  ? window : typeof self != 'undefined' && self.Math == Math ? self\n  // eslint-disable-next-line no-new-func\n  : Function('return this')();\nif (typeof __g == 'number') __g = global; // eslint-disable-line no-undef\n","var toInteger = require('./_to-integer');\nvar max = Math.max;\nvar min = Math.min;\nmodule.exports = function (index, length) {\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n","'use strict';\nvar global = require('./_global');\nvar dP = require('./_object-dp');\nvar DESCRIPTORS = require('./_descriptors');\nvar SPECIES = require('./_wks')('species');\n\nmodule.exports = function (KEY) {\n  var C = global[KEY];\n  if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {\n    configurable: true,\n    get: function () { return this; }\n  });\n};\n","var def = require('./_object-dp').f;\nvar has = require('./_has');\nvar TAG = require('./_wks')('toStringTag');\n\nmodule.exports = function (it, tag, stat) {\n  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, { configurable: true, value: tag });\n};\n","var global = require('./_global');\nvar macrotask = require('./_task').set;\nvar Observer = global.MutationObserver || global.WebKitMutationObserver;\nvar process = global.process;\nvar Promise = global.Promise;\nvar isNode = require('./_cof')(process) == 'process';\n\nmodule.exports = function () {\n  var head, last, notify;\n\n  var flush = function () {\n    var parent, fn;\n    if (isNode && (parent = process.domain)) parent.exit();\n    while (head) {\n      fn = head.fn;\n      head = head.next;\n      try {\n        fn();\n      } catch (e) {\n        if (head) notify();\n        else last = undefined;\n        throw e;\n      }\n    } last = undefined;\n    if (parent) parent.enter();\n  };\n\n  // Node.js\n  if (isNode) {\n    notify = function () {\n      process.nextTick(flush);\n    };\n  // browsers with MutationObserver, except iOS Safari - https://github.com/zloirock/core-js/issues/339\n  } else if (Observer && !(global.navigator && global.navigator.standalone)) {\n    var toggle = true;\n    var node = document.createTextNode('');\n    new Observer(flush).observe(node, { characterData: true }); // eslint-disable-line no-new\n    notify = function () {\n      node.data = toggle = !toggle;\n    };\n  // environments with maybe non-completely correct, but existent Promise\n  } else if (Promise && Promise.resolve) {\n    // Promise.resolve without an argument throws an error in LG WebOS 2\n    var promise = Promise.resolve(undefined);\n    notify = function () {\n      promise.then(flush);\n    };\n  // for other environments - macrotask based on:\n  // - setImmediate\n  // - MessageChannel\n  // - window.postMessag\n  // - onreadystatechange\n  // - setTimeout\n  } else {\n    notify = function () {\n      // strange IE + webpack dev server bug - use .call(global)\n      macrotask.call(global, flush);\n    };\n  }\n\n  return function (fn) {\n    var task = { fn: fn, next: undefined };\n    if (last) last.next = task;\n    if (!head) {\n      head = task;\n      notify();\n    } last = task;\n  };\n};\n","var core = module.exports = { version: '2.5.7' };\nif (typeof __e == 'number') __e = core; // eslint-disable-line no-undef\n","module.exports = {};\n","var anObject = require('./_an-object');\nvar IE8_DOM_DEFINE = require('./_ie8-dom-define');\nvar toPrimitive = require('./_to-primitive');\nvar dP = Object.defineProperty;\n\nexports.f = require('./_descriptors') ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","// optional / simple context binding\nvar aFunction = require('./_a-function');\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1: return function (a) {\n      return fn.call(that, a);\n    };\n    case 2: return function (a, b) {\n      return fn.call(that, a, b);\n    };\n    case 3: return function (a, b, c) {\n      return fn.call(that, a, b, c);\n    };\n  }\n  return function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n","// 22.1.3.31 Array.prototype[@@unscopables]\nvar UNSCOPABLES = require('./_wks')('unscopables');\nvar ArrayProto = Array.prototype;\nif (ArrayProto[UNSCOPABLES] == undefined) require('./_hide')(ArrayProto, UNSCOPABLES, {});\nmodule.exports = function (key) {\n  ArrayProto[UNSCOPABLES][key] = true;\n};\n","module.exports = function (exec) {\n  try {\n    return { e: false, v: exec() };\n  } catch (e) {\n    return { e: true, v: e };\n  }\n};\n","// 7.1.15 ToLength\nvar toInteger = require('./_to-integer');\nvar min = Math.min;\nmodule.exports = function (it) {\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991\n};\n","// Thank's IE8 for his funny defineProperty\nmodule.exports = !require('./_fails')(function () {\n  return Object.defineProperty({}, 'a', { get: function () { return 7; } }).a != 7;\n});\n","var global = require('./_global');\nvar navigator = global.navigator;\n\nmodule.exports = navigator && navigator.userAgent || '';\n","'use strict';\n// 25.4.1.5 NewPromiseCapability(C)\nvar aFunction = require('./_a-function');\n\nfunction PromiseCapability(C) {\n  var resolve, reject;\n  this.promise = new C(function ($$resolve, $$reject) {\n    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');\n    resolve = $$resolve;\n    reject = $$reject;\n  });\n  this.resolve = aFunction(resolve);\n  this.reject = aFunction(reject);\n}\n\nmodule.exports.f = function (C) {\n  return new PromiseCapability(C);\n};\n","var anObject = require('./_an-object');\nvar isObject = require('./_is-object');\nvar newPromiseCapability = require('./_new-promise-capability');\n\nmodule.exports = function (C, x) {\n  anObject(C);\n  if (isObject(x) && x.constructor === C) return x;\n  var promiseCapability = newPromiseCapability.f(C);\n  var resolve = promiseCapability.resolve;\n  resolve(x);\n  return promiseCapability.promise;\n};\n","// 7.2.1 RequireObjectCoercible(argument)\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n","/* @preserve\n * vue-3d-model 1.0.2, 3D models viewer with vue.js\n * Copyright (c) 2018 Jiulong Hu <me@hujiulong.com>\n */\n\nimport Vue from 'vue';\n\n// Polyfills\n\nif ( Number.EPSILON === undefined ) {\n\n\tNumber.EPSILON = Math.pow( 2, - 52 );\n\n}\n\nif ( Number.isInteger === undefined ) {\n\n\t// Missing in IE\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger\n\n\tNumber.isInteger = function ( value ) {\n\n\t\treturn typeof value === 'number' && isFinite( value ) && Math.floor( value ) === value;\n\n\t};\n\n}\n\n//\n\nif ( Math.sign === undefined ) {\n\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\n\n\tMath.sign = function ( x ) {\n\n\t\treturn ( x < 0 ) ? - 1 : ( x > 0 ) ? 1 : + x;\n\n\t};\n\n}\n\nif ( 'name' in Function.prototype === false ) {\n\n\t// Missing in IE\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\n\n\tObject.defineProperty( Function.prototype, 'name', {\n\n\t\tget: function () {\n\n\t\t\treturn this.toString().match( /^\\s*function\\s*([^\\(\\s]*)/ )[ 1 ];\n\n\t\t}\n\n\t} );\n\n}\n\nif ( Object.assign === undefined ) {\n\n\t// Missing in IE\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n\n\t( function () {\n\n\t\tObject.assign = function ( target ) {\n\n\t\t\tif ( target === undefined || target === null ) {\n\n\t\t\t\tthrow new TypeError( 'Cannot convert undefined or null to object' );\n\n\t\t\t}\n\n\t\t\tvar output = Object( target );\n\n\t\t\tfor ( var index = 1; index < arguments.length; index ++ ) {\n\n\t\t\t\tvar source = arguments[ index ];\n\n\t\t\t\tif ( source !== undefined && source !== null ) {\n\n\t\t\t\t\tfor ( var nextKey in source ) {\n\n\t\t\t\t\t\tif ( Object.prototype.hasOwnProperty.call( source, nextKey ) ) {\n\n\t\t\t\t\t\t\toutput[ nextKey ] = source[ nextKey ];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn output;\n\n\t\t};\n\n\t} )();\n\n}\n\n/**\n * https://github.com/mrdoob/eventdispatcher.js/\n */\n\nfunction EventDispatcher() {}\n\nObject.assign( EventDispatcher.prototype, {\n\n\taddEventListener: function ( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) this._listeners = {};\n\n\t\tvar listeners = this._listeners;\n\n\t\tif ( listeners[ type ] === undefined ) {\n\n\t\t\tlisteners[ type ] = [];\n\n\t\t}\n\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\n\n\t\t\tlisteners[ type ].push( listener );\n\n\t\t}\n\n\t},\n\n\thasEventListener: function ( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return false;\n\n\t\tvar listeners = this._listeners;\n\n\t\treturn listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\n\n\t},\n\n\tremoveEventListener: function ( type, listener ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tvar listeners = this._listeners;\n\t\tvar listenerArray = listeners[ type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tvar index = listenerArray.indexOf( listener );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\tlistenerArray.splice( index, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tdispatchEvent: function ( event ) {\n\n\t\tif ( this._listeners === undefined ) return;\n\n\t\tvar listeners = this._listeners;\n\t\tvar listenerArray = listeners[ event.type ];\n\n\t\tif ( listenerArray !== undefined ) {\n\n\t\t\tevent.target = this;\n\n\t\t\tvar array = listenerArray.slice( 0 );\n\n\t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tarray[ i ].call( this, event );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n} );\n\nvar REVISION = '88';\nvar MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2 };\nvar CullFaceNone = 0;\nvar CullFaceBack = 1;\nvar CullFaceFront = 2;\nvar FrontFaceDirectionCW = 0;\nvar PCFShadowMap = 1;\nvar PCFSoftShadowMap = 2;\nvar FrontSide = 0;\nvar BackSide = 1;\nvar DoubleSide = 2;\nvar FlatShading = 1;\nvar NoColors = 0;\nvar FaceColors = 1;\nvar VertexColors = 2;\nvar NoBlending = 0;\nvar NormalBlending = 1;\nvar AdditiveBlending = 2;\nvar SubtractiveBlending = 3;\nvar MultiplyBlending = 4;\nvar CustomBlending = 5;\nvar AddEquation = 100;\nvar SubtractEquation = 101;\nvar ReverseSubtractEquation = 102;\nvar MinEquation = 103;\nvar MaxEquation = 104;\nvar ZeroFactor = 200;\nvar OneFactor = 201;\nvar SrcColorFactor = 202;\nvar OneMinusSrcColorFactor = 203;\nvar SrcAlphaFactor = 204;\nvar OneMinusSrcAlphaFactor = 205;\nvar DstAlphaFactor = 206;\nvar OneMinusDstAlphaFactor = 207;\nvar DstColorFactor = 208;\nvar OneMinusDstColorFactor = 209;\nvar SrcAlphaSaturateFactor = 210;\nvar NeverDepth = 0;\nvar AlwaysDepth = 1;\nvar LessDepth = 2;\nvar LessEqualDepth = 3;\nvar EqualDepth = 4;\nvar GreaterEqualDepth = 5;\nvar GreaterDepth = 6;\nvar NotEqualDepth = 7;\nvar MultiplyOperation = 0;\nvar MixOperation = 1;\nvar AddOperation = 2;\nvar NoToneMapping = 0;\nvar LinearToneMapping = 1;\nvar ReinhardToneMapping = 2;\nvar Uncharted2ToneMapping = 3;\nvar CineonToneMapping = 4;\nvar UVMapping = 300;\nvar CubeReflectionMapping = 301;\nvar CubeRefractionMapping = 302;\nvar EquirectangularReflectionMapping = 303;\nvar EquirectangularRefractionMapping = 304;\nvar SphericalReflectionMapping = 305;\nvar CubeUVReflectionMapping = 306;\nvar CubeUVRefractionMapping = 307;\nvar RepeatWrapping = 1000;\nvar ClampToEdgeWrapping = 1001;\nvar MirroredRepeatWrapping = 1002;\nvar NearestFilter = 1003;\nvar NearestMipMapNearestFilter = 1004;\nvar NearestMipMapLinearFilter = 1005;\nvar LinearFilter = 1006;\nvar LinearMipMapNearestFilter = 1007;\nvar LinearMipMapLinearFilter = 1008;\nvar UnsignedByteType = 1009;\nvar ByteType = 1010;\nvar ShortType = 1011;\nvar UnsignedShortType = 1012;\nvar IntType = 1013;\nvar UnsignedIntType = 1014;\nvar FloatType = 1015;\nvar HalfFloatType = 1016;\nvar UnsignedShort4444Type = 1017;\nvar UnsignedShort5551Type = 1018;\nvar UnsignedShort565Type = 1019;\nvar UnsignedInt248Type = 1020;\nvar AlphaFormat = 1021;\nvar RGBFormat = 1022;\nvar RGBAFormat = 1023;\nvar LuminanceFormat = 1024;\nvar LuminanceAlphaFormat = 1025;\nvar DepthFormat = 1026;\nvar DepthStencilFormat = 1027;\nvar RGB_S3TC_DXT1_Format = 2001;\nvar RGBA_S3TC_DXT1_Format = 2002;\nvar RGBA_S3TC_DXT3_Format = 2003;\nvar RGBA_S3TC_DXT5_Format = 2004;\nvar RGB_PVRTC_4BPPV1_Format = 2100;\nvar RGB_PVRTC_2BPPV1_Format = 2101;\nvar RGBA_PVRTC_4BPPV1_Format = 2102;\nvar RGBA_PVRTC_2BPPV1_Format = 2103;\nvar RGB_ETC1_Format = 2151;\nvar LoopOnce = 2200;\nvar LoopRepeat = 2201;\nvar LoopPingPong = 2202;\nvar InterpolateDiscrete = 2300;\nvar InterpolateLinear = 2301;\nvar InterpolateSmooth = 2302;\nvar ZeroCurvatureEnding = 2400;\nvar ZeroSlopeEnding = 2401;\nvar WrapAroundEnding = 2402;\nvar TrianglesDrawMode = 0;\nvar TriangleStripDrawMode = 1;\nvar TriangleFanDrawMode = 2;\nvar LinearEncoding = 3000;\nvar sRGBEncoding = 3001;\nvar GammaEncoding = 3007;\nvar RGBEEncoding = 3002;\nvar RGBM7Encoding = 3004;\nvar RGBM16Encoding = 3005;\nvar RGBDEncoding = 3006;\nvar BasicDepthPacking = 3200;\nvar RGBADepthPacking = 3201;\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar _Math = {\n\n\tDEG2RAD: Math.PI / 180,\n\tRAD2DEG: 180 / Math.PI,\n\n\tgenerateUUID: function () {\n\n\t\t// http://www.broofa.com/Tools/Math.uuid.htm\n\t\t// Replaced .join with string concatenation (@takahirox)\n\n\t\tvar chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split( '' );\n\t\tvar rnd = 0, r;\n\n\t\treturn function generateUUID() {\n\n\t\t\tvar uuid = '';\n\n\t\t\tfor ( var i = 0; i < 36; i ++ ) {\n\n\t\t\t\tif ( i === 8 || i === 13 || i === 18 || i === 23 ) {\n\n\t\t\t\t\tuuid += '-';\n\n\t\t\t\t} else if ( i === 14 ) {\n\n\t\t\t\t\tuuid += '4';\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( rnd <= 0x02 ) rnd = 0x2000000 + ( Math.random() * 0x1000000 ) | 0;\n\t\t\t\t\tr = rnd & 0xf;\n\t\t\t\t\trnd = rnd >> 4;\n\t\t\t\t\tuuid += chars[ ( i === 19 ) ? ( r & 0x3 ) | 0x8 : r ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn uuid;\n\n\t\t};\n\n\t}(),\n\n\tclamp: function ( value, min, max ) {\n\n\t\treturn Math.max( min, Math.min( max, value ) );\n\n\t},\n\n\t// compute euclidian modulo of m % n\n\t// https://en.wikipedia.org/wiki/Modulo_operation\n\n\teuclideanModulo: function ( n, m ) {\n\n\t\treturn ( ( n % m ) + m ) % m;\n\n\t},\n\n\t// Linear mapping from range <a1, a2> to range <b1, b2>\n\n\tmapLinear: function ( x, a1, a2, b1, b2 ) {\n\n\t\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n\t},\n\n\t// https://en.wikipedia.org/wiki/Linear_interpolation\n\n\tlerp: function ( x, y, t ) {\n\n\t\treturn ( 1 - t ) * x + t * y;\n\n\t},\n\n\t// http://en.wikipedia.org/wiki/Smoothstep\n\n\tsmoothstep: function ( x, min, max ) {\n\n\t\tif ( x <= min ) return 0;\n\t\tif ( x >= max ) return 1;\n\n\t\tx = ( x - min ) / ( max - min );\n\n\t\treturn x * x * ( 3 - 2 * x );\n\n\t},\n\n\tsmootherstep: function ( x, min, max ) {\n\n\t\tif ( x <= min ) return 0;\n\t\tif ( x >= max ) return 1;\n\n\t\tx = ( x - min ) / ( max - min );\n\n\t\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n\t},\n\n\t// Random integer from <low, high> interval\n\n\trandInt: function ( low, high ) {\n\n\t\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n\t},\n\n\t// Random float from <low, high> interval\n\n\trandFloat: function ( low, high ) {\n\n\t\treturn low + Math.random() * ( high - low );\n\n\t},\n\n\t// Random float from <-range/2, range/2> interval\n\n\trandFloatSpread: function ( range ) {\n\n\t\treturn range * ( 0.5 - Math.random() );\n\n\t},\n\n\tdegToRad: function ( degrees ) {\n\n\t\treturn degrees * _Math.DEG2RAD;\n\n\t},\n\n\tradToDeg: function ( radians ) {\n\n\t\treturn radians * _Math.RAD2DEG;\n\n\t},\n\n\tisPowerOfTwo: function ( value ) {\n\n\t\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n\t},\n\n\tceilPowerOfTwo: function ( value ) {\n\n\t\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n\n\t},\n\n\tfloorPowerOfTwo: function ( value ) {\n\n\t\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n\n\t}\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author philogb / http://blog.thejit.org/\n * @author egraether / http://egraether.com/\n * @author zz85 / http://www.lab4games.net/zz85/blog\n */\n\nfunction Vector2( x, y ) {\n\n\tthis.x = x || 0;\n\tthis.y = y || 0;\n\n}\n\nObject.defineProperties( Vector2.prototype, {\n\n\t\"width\": {\n\n\t\tget: function () {\n\n\t\t\treturn this.x;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis.x = value;\n\n\t\t}\n\n\t},\n\n\t\"height\": {\n\n\t\tget: function () {\n\n\t\t\treturn this.y;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis.y = value;\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( Vector2.prototype, {\n\n\tisVector2: true,\n\n\tset: function ( x, y ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetX: function ( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponent: function ( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetComponent: function ( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.x, this.y );\n\n\t},\n\n\tcopy: function ( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\n\t\treturn this;\n\n\t},\n\n\tadd: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\n\t\treturn this;\n\n\t},\n\n\taddVectors: function ( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\n\t\treturn this;\n\n\t},\n\n\taddScaledVector: function ( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\n\t\treturn this;\n\n\t},\n\n\tsubScalar: function ( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\n\t\treturn this;\n\n\t},\n\n\tsubVectors: function ( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( v ) {\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\n\t\treturn this;\n\n\t},\n\n\tdivide: function ( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\n\t\treturn this;\n\n\t},\n\n\tdivideScalar: function ( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t},\n\n\tapplyMatrix3: function ( m ) {\n\n\t\tvar x = this.x, y = this.y;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\n\n\t\treturn this;\n\n\t},\n\n\tmin: function ( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\n\t\treturn this;\n\n\t},\n\n\tmax: function ( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\n\t\treturn this;\n\n\t},\n\n\tclamp: function ( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampScalar: function () {\n\n\t\tvar min = new Vector2();\n\t\tvar max = new Vector2();\n\n\t\treturn function clampScalar( minVal, maxVal ) {\n\n\t\t\tmin.set( minVal, minVal );\n\t\t\tmax.set( maxVal, maxVal );\n\n\t\t\treturn this.clamp( min, max );\n\n\t\t};\n\n\t}(),\n\n\tclampLength: function ( min, max ) {\n\n\t\tvar length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t},\n\n\tfloor: function () {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\n\t\treturn this;\n\n\t},\n\n\tceil: function () {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\n\t\treturn this;\n\n\t},\n\n\tround: function () {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\n\t\treturn this;\n\n\t},\n\n\troundToZero: function () {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y;\n\n\t},\n\n\tlengthSq: function () {\n\n\t\treturn this.x * this.x + this.y * this.y;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t},\n\n\tmanhattanLength: function () {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t},\n\n\tnormalize: function () {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t},\n\n\tangle: function () {\n\n\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\tvar angle = Math.atan2( this.y, this.x );\n\n\t\tif ( angle < 0 ) angle += 2 * Math.PI;\n\n\t\treturn angle;\n\n\t},\n\n\tdistanceTo: function ( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t},\n\n\tdistanceToSquared: function ( v ) {\n\n\t\tvar dx = this.x - v.x, dy = this.y - v.y;\n\t\treturn dx * dx + dy * dy;\n\n\t},\n\n\tmanhattanDistanceTo: function ( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t},\n\n\tsetLength: function ( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t},\n\n\tlerp: function ( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t},\n\n\tequals: function ( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\n\t\treturn array;\n\n\t},\n\n\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\n\t\treturn this;\n\n\t},\n\n\trotateAround: function ( center, angle ) {\n\n\t\tvar c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\tvar x = this.x - center.x;\n\t\tvar y = this.y - center.y;\n\n\t\tthis.x = x * c - y * s + center.x;\n\t\tthis.y = x * s + y * c + center.y;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author philogb / http://blog.thejit.org/\n * @author jordi_ros / http://plattsoft.com\n * @author D1plo1d / http://github.com/D1plo1d\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author timknip / http://www.floorplanner.com/\n * @author bhouston / http://clara.io\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Matrix4() {\n\n\tthis.elements = [\n\n\t\t1, 0, 0, 0,\n\t\t0, 1, 0, 0,\n\t\t0, 0, 1, 0,\n\t\t0, 0, 0, 1\n\n\t];\n\n\tif ( arguments.length > 0 ) {\n\n\t\tconsole.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );\n\n\t}\n\n}\n\nObject.assign( Matrix4.prototype, {\n\n\tisMatrix4: true,\n\n\tset: function ( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\treturn this;\n\n\t},\n\n\tidentity: function () {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new Matrix4().fromArray( this.elements );\n\n\t},\n\n\tcopy: function ( m ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\n\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\n\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\n\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\n\n\t\treturn this;\n\n\t},\n\n\tcopyPosition: function ( m ) {\n\n\t\tvar te = this.elements, me = m.elements;\n\n\t\tte[ 12 ] = me[ 12 ];\n\t\tte[ 13 ] = me[ 13 ];\n\t\tte[ 14 ] = me[ 14 ];\n\n\t\treturn this;\n\n\t},\n\n\textractBasis: function ( xAxis, yAxis, zAxis ) {\n\n\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\treturn this;\n\n\t},\n\n\tmakeBasis: function ( xAxis, yAxis, zAxis ) {\n\n\t\tthis.set(\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\textractRotation: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function extractRotation( m ) {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar me = m.elements;\n\n\t\t\tvar scaleX = 1 / v1.setFromMatrixColumn( m, 0 ).length();\n\t\t\tvar scaleY = 1 / v1.setFromMatrixColumn( m, 1 ).length();\n\t\t\tvar scaleZ = 1 / v1.setFromMatrixColumn( m, 2 ).length();\n\n\t\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\n\t\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\n\t\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tmakeRotationFromEuler: function ( euler ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\tvar te = this.elements;\n\n\t\tvar x = euler.x, y = euler.y, z = euler.z;\n\t\tvar a = Math.cos( x ), b = Math.sin( x );\n\t\tvar c = Math.cos( y ), d = Math.sin( y );\n\t\tvar e = Math.cos( z ), f = Math.sin( z );\n\n\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - c * f;\n\t\t\tte[ 8 ] = d;\n\n\t\t\tte[ 1 ] = af + be * d;\n\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\tte[ 9 ] = - b * c;\n\n\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\tte[ 6 ] = be + af * d;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce + df * b;\n\t\t\tte[ 4 ] = de * b - cf;\n\t\t\tte[ 8 ] = a * d;\n\n\t\t\tte[ 1 ] = a * f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b;\n\n\t\t\tte[ 2 ] = cf * b - de;\n\t\t\tte[ 6 ] = df + ce * b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\tte[ 0 ] = ce - df * b;\n\t\t\tte[ 4 ] = - a * f;\n\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\tte[ 1 ] = cf + de * b;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\tte[ 2 ] = - a * d;\n\t\t\tte[ 6 ] = b;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = be * d - af;\n\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\tte[ 1 ] = c * f;\n\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\tte[ 2 ] = - d;\n\t\t\tte[ 6 ] = b * c;\n\t\t\tte[ 10 ] = a * c;\n\n\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\tte[ 1 ] = f;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = - b * e;\n\n\t\t\tte[ 2 ] = - d * e;\n\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\tte[ 0 ] = c * e;\n\t\t\tte[ 4 ] = - f;\n\t\t\tte[ 8 ] = d * e;\n\n\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\tte[ 5 ] = a * e;\n\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\tte[ 6 ] = b * e;\n\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t}\n\n\t\t// last column\n\t\tte[ 3 ] = 0;\n\t\tte[ 7 ] = 0;\n\t\tte[ 11 ] = 0;\n\n\t\t// bottom row\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationFromQuaternion: function ( q ) {\n\n\t\tvar te = this.elements;\n\n\t\tvar x = q._x, y = q._y, z = q._z, w = q._w;\n\t\tvar x2 = x + x, y2 = y + y, z2 = z + z;\n\t\tvar xx = x * x2, xy = x * y2, xz = x * z2;\n\t\tvar yy = y * y2, yz = y * z2, zz = z * z2;\n\t\tvar wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\tte[ 0 ] = 1 - ( yy + zz );\n\t\tte[ 4 ] = xy - wz;\n\t\tte[ 8 ] = xz + wy;\n\n\t\tte[ 1 ] = xy + wz;\n\t\tte[ 5 ] = 1 - ( xx + zz );\n\t\tte[ 9 ] = yz - wx;\n\n\t\tte[ 2 ] = xz - wy;\n\t\tte[ 6 ] = yz + wx;\n\t\tte[ 10 ] = 1 - ( xx + yy );\n\n\t\t// last column\n\t\tte[ 3 ] = 0;\n\t\tte[ 7 ] = 0;\n\t\tte[ 11 ] = 0;\n\n\t\t// bottom row\n\t\tte[ 12 ] = 0;\n\t\tte[ 13 ] = 0;\n\t\tte[ 14 ] = 0;\n\t\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t},\n\n\tlookAt: function () {\n\n\t\tvar x = new Vector3();\n\t\tvar y = new Vector3();\n\t\tvar z = new Vector3();\n\n\t\treturn function lookAt( eye, target, up ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tz.subVectors( eye, target );\n\n\t\t\tif ( z.lengthSq() === 0 ) {\n\n\t\t\t\t// eye and target are in the same position\n\n\t\t\t\tz.z = 1;\n\n\t\t\t}\n\n\t\t\tz.normalize();\n\t\t\tx.crossVectors( up, z );\n\n\t\t\tif ( x.lengthSq() === 0 ) {\n\n\t\t\t\t// up and z are parallel\n\n\t\t\t\tif ( Math.abs( up.z ) === 1 ) {\n\n\t\t\t\t\tz.x += 0.0001;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz.z += 0.0001;\n\n\t\t\t\t}\n\n\t\t\t\tz.normalize();\n\t\t\t\tx.crossVectors( up, z );\n\n\t\t\t}\n\n\t\t\tx.normalize();\n\t\t\ty.crossVectors( z, x );\n\n\t\t\tte[ 0 ] = x.x; te[ 4 ] = y.x; te[ 8 ] = z.x;\n\t\t\tte[ 1 ] = x.y; te[ 5 ] = y.y; te[ 9 ] = z.y;\n\t\t\tte[ 2 ] = x.z; te[ 6 ] = y.z; te[ 10 ] = z.z;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tmultiply: function ( m, n ) {\n\n\t\tif ( n !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );\n\t\t\treturn this.multiplyMatrices( m, n );\n\n\t\t}\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t},\n\n\tpremultiply: function ( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t},\n\n\tmultiplyMatrices: function ( a, b ) {\n\n\t\tvar ae = a.elements;\n\t\tvar be = b.elements;\n\t\tvar te = this.elements;\n\n\t\tvar a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\tvar a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\tvar a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\tvar a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\tvar b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\tvar b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\tvar b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\tvar b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( s ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\treturn this;\n\n\t},\n\n\tapplyToBufferAttribute: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function applyToBufferAttribute( attribute ) {\n\n\t\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\t\tv1.x = attribute.getX( i );\n\t\t\t\tv1.y = attribute.getY( i );\n\t\t\t\tv1.z = attribute.getZ( i );\n\n\t\t\t\tv1.applyMatrix4( this );\n\n\t\t\t\tattribute.setXYZ( i, v1.x, v1.y, v1.z );\n\n\t\t\t}\n\n\t\t\treturn attribute;\n\n\t\t};\n\n\t}(),\n\n\tdeterminant: function () {\n\n\t\tvar te = this.elements;\n\n\t\tvar n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\tvar n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\tvar n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\tvar n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t//TODO: make this more efficient\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\treturn (\n\t\t\tn41 * (\n\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t - n13 * n24 * n32\n\t\t\t\t - n14 * n22 * n33\n\t\t\t\t + n12 * n24 * n33\n\t\t\t\t + n13 * n22 * n34\n\t\t\t\t - n12 * n23 * n34\n\t\t\t) +\n\t\t\tn42 * (\n\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t - n11 * n24 * n33\n\t\t\t\t + n14 * n21 * n33\n\t\t\t\t - n13 * n21 * n34\n\t\t\t\t + n13 * n24 * n31\n\t\t\t\t - n14 * n23 * n31\n\t\t\t) +\n\t\t\tn43 * (\n\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t - n11 * n22 * n34\n\t\t\t\t - n14 * n21 * n32\n\t\t\t\t + n12 * n21 * n34\n\t\t\t\t + n14 * n22 * n31\n\t\t\t\t - n12 * n24 * n31\n\t\t\t) +\n\t\t\tn44 * (\n\t\t\t\t- n13 * n22 * n31\n\t\t\t\t - n11 * n23 * n32\n\t\t\t\t + n11 * n22 * n33\n\t\t\t\t + n13 * n21 * n32\n\t\t\t\t - n12 * n21 * n33\n\t\t\t\t + n12 * n23 * n31\n\t\t\t)\n\n\t\t);\n\n\t},\n\n\ttranspose: function () {\n\n\t\tvar te = this.elements;\n\t\tvar tmp;\n\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\treturn this;\n\n\t},\n\n\tsetPosition: function ( v ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 12 ] = v.x;\n\t\tte[ 13 ] = v.y;\n\t\tte[ 14 ] = v.z;\n\n\t\treturn this;\n\n\t},\n\n\tgetInverse: function ( m, throwOnDegenerate ) {\n\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\tvar te = this.elements,\n\t\t\tme = m.elements,\n\n\t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ], n41 = me[ 3 ],\n\t\t\tn12 = me[ 4 ], n22 = me[ 5 ], n32 = me[ 6 ], n42 = me[ 7 ],\n\t\t\tn13 = me[ 8 ], n23 = me[ 9 ], n33 = me[ 10 ], n43 = me[ 11 ],\n\t\t\tn14 = me[ 12 ], n24 = me[ 13 ], n34 = me[ 14 ], n44 = me[ 15 ],\n\n\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\tvar det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\tif ( det === 0 ) {\n\n\t\t\tvar msg = \"THREE.Matrix4: .getInverse() can't invert matrix, determinant is 0\";\n\n\t\t\tif ( throwOnDegenerate === true ) {\n\n\t\t\t\tthrow new Error( msg );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( msg );\n\n\t\t\t}\n\n\t\t\treturn this.identity();\n\n\t\t}\n\n\t\tvar detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\tte[ 4 ] = t12 * detInv;\n\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\tte[ 8 ] = t13 * detInv;\n\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\tte[ 12 ] = t14 * detInv;\n\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\treturn this;\n\n\t},\n\n\tscale: function ( v ) {\n\n\t\tvar te = this.elements;\n\t\tvar x = v.x, y = v.y, z = v.z;\n\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\treturn this;\n\n\t},\n\n\tgetMaxScaleOnAxis: function () {\n\n\t\tvar te = this.elements;\n\n\t\tvar scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\tvar scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\tvar scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t},\n\n\tmakeTranslation: function ( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, x,\n\t\t\t0, 1, 0, y,\n\t\t\t0, 0, 1, z,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationX: function ( theta ) {\n\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, c, - s, 0,\n\t\t\t0, s, c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationY: function ( theta ) {\n\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\t c, 0, s, 0,\n\t\t\t 0, 1, 0, 0,\n\t\t\t- s, 0, c, 0,\n\t\t\t 0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationZ: function ( theta ) {\n\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\tthis.set(\n\n\t\t\tc, - s, 0, 0,\n\t\t\ts, c, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeRotationAxis: function ( axis, angle ) {\n\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\tvar c = Math.cos( angle );\n\t\tvar s = Math.sin( angle );\n\t\tvar t = 1 - c;\n\t\tvar x = axis.x, y = axis.y, z = axis.z;\n\t\tvar tx = t * x, ty = t * y;\n\n\t\tthis.set(\n\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\t return this;\n\n\t},\n\n\tmakeScale: function ( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\tx, 0, 0, 0,\n\t\t\t0, y, 0, 0,\n\t\t\t0, 0, z, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tmakeShear: function ( x, y, z ) {\n\n\t\tthis.set(\n\n\t\t\t1, y, z, 0,\n\t\t\tx, 1, z, 0,\n\t\t\tx, y, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tcompose: function ( position, quaternion, scale ) {\n\n\t\tthis.makeRotationFromQuaternion( quaternion );\n\t\tthis.scale( scale );\n\t\tthis.setPosition( position );\n\n\t\treturn this;\n\n\t},\n\n\tdecompose: function () {\n\n\t\tvar vector = new Vector3();\n\t\tvar matrix = new Matrix4();\n\n\t\treturn function decompose( position, quaternion, scale ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar sx = vector.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\t\tvar sy = vector.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\t\tvar sz = vector.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t\t// if determine is negative, we need to invert one scale\n\t\t\tvar det = this.determinant();\n\t\t\tif ( det < 0 ) sx = - sx;\n\n\t\t\tposition.x = te[ 12 ];\n\t\t\tposition.y = te[ 13 ];\n\t\t\tposition.z = te[ 14 ];\n\n\t\t\t// scale the rotation part\n\t\t\tmatrix.copy( this );\n\n\t\t\tvar invSX = 1 / sx;\n\t\t\tvar invSY = 1 / sy;\n\t\t\tvar invSZ = 1 / sz;\n\n\t\t\tmatrix.elements[ 0 ] *= invSX;\n\t\t\tmatrix.elements[ 1 ] *= invSX;\n\t\t\tmatrix.elements[ 2 ] *= invSX;\n\n\t\t\tmatrix.elements[ 4 ] *= invSY;\n\t\t\tmatrix.elements[ 5 ] *= invSY;\n\t\t\tmatrix.elements[ 6 ] *= invSY;\n\n\t\t\tmatrix.elements[ 8 ] *= invSZ;\n\t\t\tmatrix.elements[ 9 ] *= invSZ;\n\t\t\tmatrix.elements[ 10 ] *= invSZ;\n\n\t\t\tquaternion.setFromRotationMatrix( matrix );\n\n\t\t\tscale.x = sx;\n\t\t\tscale.y = sy;\n\t\t\tscale.z = sz;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tmakePerspective: function ( left, right, top, bottom, near, far ) {\n\n\t\tif ( far === undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.' );\n\n\t\t}\n\n\t\tvar te = this.elements;\n\t\tvar x = 2 * near / ( right - left );\n\t\tvar y = 2 * near / ( top - bottom );\n\n\t\tvar a = ( right + left ) / ( right - left );\n\t\tvar b = ( top + bottom ) / ( top - bottom );\n\t\tvar c = - ( far + near ) / ( far - near );\n\t\tvar d = - 2 * far * near / ( far - near );\n\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\treturn this;\n\n\t},\n\n\tmakeOrthographic: function ( left, right, top, bottom, near, far ) {\n\n\t\tvar te = this.elements;\n\t\tvar w = 1.0 / ( right - left );\n\t\tvar h = 1.0 / ( top - bottom );\n\t\tvar p = 1.0 / ( far - near );\n\n\t\tvar x = ( right + left ) * w;\n\t\tvar y = ( top + bottom ) * h;\n\t\tvar z = ( far + near ) * p;\n\n\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\n\t\tte[ 1 ] = 0;\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 * p;\tte[ 14 ] = - z;\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( matrix ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = matrix.elements;\n\n\t\tfor ( var i = 0; i < 16; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tfor ( var i = 0; i < 16; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tvar te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\t\tarray[ offset + 9 ] = te[ 9 ];\n\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\treturn array;\n\n\t}\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io\n */\n\nfunction Quaternion( x, y, z, w ) {\n\n\tthis._x = x || 0;\n\tthis._y = y || 0;\n\tthis._z = z || 0;\n\tthis._w = ( w !== undefined ) ? w : 1;\n\n}\n\nObject.assign( Quaternion, {\n\n\tslerp: function ( qa, qb, qm, t ) {\n\n\t\treturn qm.copy( qa ).slerp( qb, t );\n\n\t},\n\n\tslerpFlat: function ( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\tvar x0 = src0[ srcOffset0 + 0 ],\n\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\tw0 = src0[ srcOffset0 + 3 ],\n\n\t\t\tx1 = src1[ srcOffset1 + 0 ],\n\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\tvar s = 1 - t,\n\n\t\t\t\tcos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\n\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\tvar sin = Math.sqrt( sqrSin ),\n\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t}\n\n\t\t\tvar tDir = t * dir;\n\n\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t// Normalize in case we just did a lerp:\n\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\tvar f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\tx0 *= f;\n\t\t\t\ty0 *= f;\n\t\t\t\tz0 *= f;\n\t\t\t\tw0 *= f;\n\n\t\t\t}\n\n\t\t}\n\n\t\tdst[ dstOffset ] = x0;\n\t\tdst[ dstOffset + 1 ] = y0;\n\t\tdst[ dstOffset + 2 ] = z0;\n\t\tdst[ dstOffset + 3 ] = w0;\n\n\t}\n\n} );\n\nObject.defineProperties( Quaternion.prototype, {\n\n\tx: {\n\n\t\tget: function () {\n\n\t\t\treturn this._x;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._x = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\ty: {\n\n\t\tget: function () {\n\n\t\t\treturn this._y;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._y = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\tz: {\n\n\t\tget: function () {\n\n\t\t\treturn this._z;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._z = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\tw: {\n\n\t\tget: function () {\n\n\t\t\treturn this._w;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._w = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( Quaternion.prototype, {\n\n\tset: function ( x, y, z, w ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._w = w;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t},\n\n\tcopy: function ( quaternion ) {\n\n\t\tthis._x = quaternion.x;\n\t\tthis._y = quaternion.y;\n\t\tthis._z = quaternion.z;\n\t\tthis._w = quaternion.w;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromEuler: function ( euler, update ) {\n\n\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\tthrow new Error( 'THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t}\n\n\t\tvar x = euler._x, y = euler._y, z = euler._z, order = euler.order;\n\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t//\tcontent/SpinCalc.m\n\n\t\tvar cos = Math.cos;\n\t\tvar sin = Math.sin;\n\n\t\tvar c1 = cos( x / 2 );\n\t\tvar c2 = cos( y / 2 );\n\t\tvar c3 = cos( z / 2 );\n\n\t\tvar s1 = sin( x / 2 );\n\t\tvar s2 = sin( y / 2 );\n\t\tvar s3 = sin( z / 2 );\n\n\t\tif ( order === 'XYZ' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t} else if ( order === 'YXZ' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t} else if ( order === 'ZXY' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t} else if ( order === 'ZYX' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t} else if ( order === 'YZX' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t} else if ( order === 'XZY' ) {\n\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t}\n\n\t\tif ( update !== false ) this.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromAxisAngle: function ( axis, angle ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t// assumes axis is normalized\n\n\t\tvar halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\tthis._x = axis.x * s;\n\t\tthis._y = axis.y * s;\n\t\tthis._z = axis.z * s;\n\t\tthis._w = Math.cos( halfAngle );\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromRotationMatrix: function ( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tvar te = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\ttrace = m11 + m22 + m33,\n\t\t\ts;\n\n\t\tif ( trace > 0 ) {\n\n\t\t\ts = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\tthis._w = 0.25 / s;\n\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\tthis._x = 0.25 * s;\n\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t} else if ( m22 > m33 ) {\n\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\tthis._y = 0.25 * s;\n\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t} else {\n\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\tthis._z = 0.25 * s;\n\n\t\t}\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromUnitVectors: function () {\n\n\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\tvar v1 = new Vector3();\n\t\tvar r;\n\n\t\tvar EPS = 0.000001;\n\n\t\treturn function setFromUnitVectors( vFrom, vTo ) {\n\n\t\t\tif ( v1 === undefined ) v1 = new Vector3();\n\n\t\t\tr = vFrom.dot( vTo ) + 1;\n\n\t\t\tif ( r < EPS ) {\n\n\t\t\t\tr = 0;\n\n\t\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\t\tv1.set( - vFrom.y, vFrom.x, 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv1.set( 0, - vFrom.z, vFrom.y );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tv1.crossVectors( vFrom, vTo );\n\n\t\t\t}\n\n\t\t\tthis._x = v1.x;\n\t\t\tthis._y = v1.y;\n\t\t\tthis._z = v1.z;\n\t\t\tthis._w = r;\n\n\t\t\treturn this.normalize();\n\n\t\t};\n\n\t}(),\n\n\tinverse: function () {\n\n\t\treturn this.conjugate().normalize();\n\n\t},\n\n\tconjugate: function () {\n\n\t\tthis._x *= - 1;\n\t\tthis._y *= - 1;\n\t\tthis._z *= - 1;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t},\n\n\tlengthSq: function () {\n\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t},\n\n\tnormalize: function () {\n\n\t\tvar l = this.length();\n\n\t\tif ( l === 0 ) {\n\n\t\t\tthis._x = 0;\n\t\t\tthis._y = 0;\n\t\t\tthis._z = 0;\n\t\t\tthis._w = 1;\n\n\t\t} else {\n\n\t\t\tl = 1 / l;\n\n\t\t\tthis._x = this._x * l;\n\t\t\tthis._y = this._y * l;\n\t\t\tthis._z = this._z * l;\n\t\t\tthis._w = this._w * l;\n\n\t\t}\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( q, p ) {\n\n\t\tif ( p !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\n\t\t\treturn this.multiplyQuaternions( q, p );\n\n\t\t}\n\n\t\treturn this.multiplyQuaternions( this, q );\n\n\t},\n\n\tpremultiply: function ( q ) {\n\n\t\treturn this.multiplyQuaternions( q, this );\n\n\t},\n\n\tmultiplyQuaternions: function ( a, b ) {\n\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\tvar qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\tvar qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tslerp: function ( qb, t ) {\n\n\t\tif ( t === 0 ) return this;\n\t\tif ( t === 1 ) return this.copy( qb );\n\n\t\tvar x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\tvar cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\tthis._w = - qb._w;\n\t\t\tthis._x = - qb._x;\n\t\t\tthis._y = - qb._y;\n\t\t\tthis._z = - qb._z;\n\n\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t} else {\n\n\t\t\tthis.copy( qb );\n\n\t\t}\n\n\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\tthis._w = w;\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvar sinHalfTheta = Math.sqrt( 1.0 - cosHalfTheta * cosHalfTheta );\n\n\t\tif ( Math.abs( sinHalfTheta ) < 0.001 ) {\n\n\t\t\tthis._w = 0.5 * ( w + this._w );\n\t\t\tthis._x = 0.5 * ( x + this._x );\n\t\t\tthis._y = 0.5 * ( y + this._y );\n\t\t\tthis._z = 0.5 * ( z + this._z );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvar halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\tvar ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( quaternion ) {\n\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis._x = array[ offset ];\n\t\tthis._y = array[ offset + 1 ];\n\t\tthis._z = array[ offset + 2 ];\n\t\tthis._w = array[ offset + 3 ];\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._w;\n\n\t\treturn array;\n\n\t},\n\n\tonChange: function ( callback ) {\n\n\t\tthis.onChangeCallback = callback;\n\n\t\treturn this;\n\n\t},\n\n\tonChangeCallback: function () {}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author kile / http://kile.stravaganza.org/\n * @author philogb / http://blog.thejit.org/\n * @author mikael emtinger / http://gomo.se/\n * @author egraether / http://egraether.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Vector3( x, y, z ) {\n\n\tthis.x = x || 0;\n\tthis.y = y || 0;\n\tthis.z = z || 0;\n\n}\n\nObject.assign( Vector3.prototype, {\n\n\tisVector3: true,\n\n\tset: function ( x, y, z ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetX: function ( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetZ: function ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponent: function ( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetComponent: function ( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t},\n\n\tcopy: function ( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\n\t\treturn this;\n\n\t},\n\n\tadd: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\n\t\treturn this;\n\n\t},\n\n\taddVectors: function ( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\n\t\treturn this;\n\n\t},\n\n\taddScaledVector: function ( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\n\t\treturn this;\n\n\t},\n\n\tsubScalar: function ( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\n\t\treturn this;\n\n\t},\n\n\tsubVectors: function ( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\n\t\t\treturn this.multiplyVectors( v, w );\n\n\t\t}\n\n\t\tthis.x *= v.x;\n\t\tthis.y *= v.y;\n\t\tthis.z *= v.z;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyVectors: function ( a, b ) {\n\n\t\tthis.x = a.x * b.x;\n\t\tthis.y = a.y * b.y;\n\t\tthis.z = a.z * b.z;\n\n\t\treturn this;\n\n\t},\n\n\tapplyEuler: function () {\n\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function applyEuler( euler ) {\n\n\t\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\t\tconsole.error( 'THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t\t}\n\n\t\t\treturn this.applyQuaternion( quaternion.setFromEuler( euler ) );\n\n\t\t};\n\n\t}(),\n\n\tapplyAxisAngle: function () {\n\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function applyAxisAngle( axis, angle ) {\n\n\t\t\treturn this.applyQuaternion( quaternion.setFromAxisAngle( axis, angle ) );\n\n\t\t};\n\n\t}(),\n\n\tapplyMatrix3: function ( m ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\treturn this;\n\n\t},\n\n\tapplyMatrix4: function ( m ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\n\t\tvar w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\treturn this;\n\n\t},\n\n\tapplyQuaternion: function ( q ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t// calculate quat * vector\n\n\t\tvar ix = qw * x + qy * z - qz * y;\n\t\tvar iy = qw * y + qz * x - qx * z;\n\t\tvar iz = qw * z + qx * y - qy * x;\n\t\tvar iw = - qx * x - qy * y - qz * z;\n\n\t\t// calculate result * inverse quat\n\n\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\n\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\n\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\n\n\t\treturn this;\n\n\t},\n\n\tproject: function () {\n\n\t\tvar matrix = new Matrix4();\n\n\t\treturn function project( camera ) {\n\n\t\t\tmatrix.multiplyMatrices( camera.projectionMatrix, matrix.getInverse( camera.matrixWorld ) );\n\t\t\treturn this.applyMatrix4( matrix );\n\n\t\t};\n\n\t}(),\n\n\tunproject: function () {\n\n\t\tvar matrix = new Matrix4();\n\n\t\treturn function unproject( camera ) {\n\n\t\t\tmatrix.multiplyMatrices( camera.matrixWorld, matrix.getInverse( camera.projectionMatrix ) );\n\t\t\treturn this.applyMatrix4( matrix );\n\n\t\t};\n\n\t}(),\n\n\ttransformDirection: function ( m ) {\n\n\t\t// input: THREE.Matrix4 affine matrix\n\t\t// vector interpreted as a direction\n\n\t\tvar x = this.x, y = this.y, z = this.z;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\treturn this.normalize();\n\n\t},\n\n\tdivide: function ( v ) {\n\n\t\tthis.x /= v.x;\n\t\tthis.y /= v.y;\n\t\tthis.z /= v.z;\n\n\t\treturn this;\n\n\t},\n\n\tdivideScalar: function ( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t},\n\n\tmin: function ( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\n\t\treturn this;\n\n\t},\n\n\tmax: function ( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\n\t\treturn this;\n\n\t},\n\n\tclamp: function ( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampScalar: function () {\n\n\t\tvar min = new Vector3();\n\t\tvar max = new Vector3();\n\n\t\treturn function clampScalar( minVal, maxVal ) {\n\n\t\t\tmin.set( minVal, minVal, minVal );\n\t\t\tmax.set( maxVal, maxVal, maxVal );\n\n\t\t\treturn this.clamp( min, max );\n\n\t\t};\n\n\t}(),\n\n\tclampLength: function ( min, max ) {\n\n\t\tvar length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t},\n\n\tfloor: function () {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\n\t\treturn this;\n\n\t},\n\n\tceil: function () {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\n\t\treturn this;\n\n\t},\n\n\tround: function () {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\n\t\treturn this;\n\n\t},\n\n\troundToZero: function () {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t},\n\n\t// TODO lengthSquared?\n\n\tlengthSq: function () {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t},\n\n\tmanhattanLength: function () {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t},\n\n\tnormalize: function () {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t},\n\n\tsetLength: function ( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t},\n\n\tlerp: function ( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t},\n\n\tcross: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\n\t\t\treturn this.crossVectors( v, w );\n\n\t\t}\n\n\t\treturn this.crossVectors( this, v );\n\n\t},\n\n\tcrossVectors: function ( a, b ) {\n\n\t\tvar ax = a.x, ay = a.y, az = a.z;\n\t\tvar bx = b.x, by = b.y, bz = b.z;\n\n\t\tthis.x = ay * bz - az * by;\n\t\tthis.y = az * bx - ax * bz;\n\t\tthis.z = ax * by - ay * bx;\n\n\t\treturn this;\n\n\t},\n\n\tprojectOnVector: function ( vector ) {\n\n\t\tvar scalar = vector.dot( this ) / vector.lengthSq();\n\n\t\treturn this.copy( vector ).multiplyScalar( scalar );\n\n\t},\n\n\tprojectOnPlane: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function projectOnPlane( planeNormal ) {\n\n\t\t\tv1.copy( this ).projectOnVector( planeNormal );\n\n\t\t\treturn this.sub( v1 );\n\n\t\t};\n\n\t}(),\n\n\treflect: function () {\n\n\t\t// reflect incident vector off plane orthogonal to normal\n\t\t// normal is assumed to have unit length\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function reflect( normal ) {\n\n\t\t\treturn this.sub( v1.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t\t};\n\n\t}(),\n\n\tangleTo: function ( v ) {\n\n\t\tvar theta = this.dot( v ) / ( Math.sqrt( this.lengthSq() * v.lengthSq() ) );\n\n\t\t// clamp, to handle numerical problems\n\n\t\treturn Math.acos( _Math.clamp( theta, - 1, 1 ) );\n\n\t},\n\n\tdistanceTo: function ( v ) {\n\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t},\n\n\tdistanceToSquared: function ( v ) {\n\n\t\tvar dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t},\n\n\tmanhattanDistanceTo: function ( v ) {\n\n\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t},\n\n\tsetFromSpherical: function ( s ) {\n\n\t\tvar sinPhiRadius = Math.sin( s.phi ) * s.radius;\n\n\t\tthis.x = sinPhiRadius * Math.sin( s.theta );\n\t\tthis.y = Math.cos( s.phi ) * s.radius;\n\t\tthis.z = sinPhiRadius * Math.cos( s.theta );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCylindrical: function ( c ) {\n\n\t\tthis.x = c.radius * Math.sin( c.theta );\n\t\tthis.y = c.y;\n\t\tthis.z = c.radius * Math.cos( c.theta );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrixPosition: function ( m ) {\n\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 12 ];\n\t\tthis.y = e[ 13 ];\n\t\tthis.z = e[ 14 ];\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrixScale: function ( m ) {\n\n\t\tvar sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\tvar sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\tvar sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\tthis.x = sx;\n\t\tthis.y = sy;\n\t\tthis.z = sz;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrixColumn: function ( m, index ) {\n\n\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t},\n\n\tequals: function ( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\n\t\treturn array;\n\n\t},\n\n\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io\n * @author tschw\n */\n\nfunction Matrix3() {\n\n\tthis.elements = [\n\n\t\t1, 0, 0,\n\t\t0, 1, 0,\n\t\t0, 0, 1\n\n\t];\n\n\tif ( arguments.length > 0 ) {\n\n\t\tconsole.error( 'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.' );\n\n\t}\n\n}\n\nObject.assign( Matrix3.prototype, {\n\n\tisMatrix3: true,\n\n\tset: function ( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\n\t\treturn this;\n\n\t},\n\n\tidentity: function () {\n\n\t\tthis.set(\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().fromArray( this.elements );\n\n\t},\n\n\tcopy: function ( m ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = m.elements;\n\n\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\n\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\n\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrix4: function ( m ) {\n\n\t\tvar me = m.elements;\n\n\t\tthis.set(\n\n\t\t\tme[ 0 ], me[ 4 ], me[ 8 ],\n\t\t\tme[ 1 ], me[ 5 ], me[ 9 ],\n\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\n\t\t);\n\n\t\treturn this;\n\n\t},\n\n\tapplyToBufferAttribute: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function applyToBufferAttribute( attribute ) {\n\n\t\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\t\tv1.x = attribute.getX( i );\n\t\t\t\tv1.y = attribute.getY( i );\n\t\t\t\tv1.z = attribute.getZ( i );\n\n\t\t\t\tv1.applyMatrix3( this );\n\n\t\t\t\tattribute.setXYZ( i, v1.x, v1.y, v1.z );\n\n\t\t\t}\n\n\t\t\treturn attribute;\n\n\t\t};\n\n\t}(),\n\n\tmultiply: function ( m ) {\n\n\t\treturn this.multiplyMatrices( this, m );\n\n\t},\n\n\tpremultiply: function ( m ) {\n\n\t\treturn this.multiplyMatrices( m, this );\n\n\t},\n\n\tmultiplyMatrices: function ( a, b ) {\n\n\t\tvar ae = a.elements;\n\t\tvar be = b.elements;\n\t\tvar te = this.elements;\n\n\t\tvar a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\n\t\tvar a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\n\t\tvar a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\n\n\t\tvar b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\n\t\tvar b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\n\t\tvar b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\n\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\n\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\n\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( s ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n\t\treturn this;\n\n\t},\n\n\tdeterminant: function () {\n\n\t\tvar te = this.elements;\n\n\t\tvar a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n\t},\n\n\tgetInverse: function ( matrix, throwOnDegenerate ) {\n\n\t\tif ( matrix && matrix.isMatrix4 ) {\n\n\t\t\tconsole.error( \"THREE.Matrix3: .getInverse() no longer takes a Matrix4 argument.\" );\n\n\t\t}\n\n\t\tvar me = matrix.elements,\n\t\t\tte = this.elements,\n\n\t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ],\n\t\t\tn12 = me[ 3 ], n22 = me[ 4 ], n32 = me[ 5 ],\n\t\t\tn13 = me[ 6 ], n23 = me[ 7 ], n33 = me[ 8 ],\n\n\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\tt13 = n23 * n12 - n22 * n13,\n\n\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\n\t\tif ( det === 0 ) {\n\n\t\t\tvar msg = \"THREE.Matrix3: .getInverse() can't invert matrix, determinant is 0\";\n\n\t\t\tif ( throwOnDegenerate === true ) {\n\n\t\t\t\tthrow new Error( msg );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( msg );\n\n\t\t\t}\n\n\t\t\treturn this.identity();\n\n\t\t}\n\n\t\tvar detInv = 1 / det;\n\n\t\tte[ 0 ] = t11 * detInv;\n\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\n\t\tte[ 3 ] = t12 * detInv;\n\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\n\t\tte[ 6 ] = t13 * detInv;\n\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\n\t\treturn this;\n\n\t},\n\n\ttranspose: function () {\n\n\t\tvar tmp, m = this.elements;\n\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n\t\treturn this;\n\n\t},\n\n\tgetNormalMatrix: function ( matrix4 ) {\n\n\t\treturn this.setFromMatrix4( matrix4 ).getInverse( this ).transpose();\n\n\t},\n\n\ttransposeIntoArray: function ( r ) {\n\n\t\tvar m = this.elements;\n\n\t\tr[ 0 ] = m[ 0 ];\n\t\tr[ 1 ] = m[ 3 ];\n\t\tr[ 2 ] = m[ 6 ];\n\t\tr[ 3 ] = m[ 1 ];\n\t\tr[ 4 ] = m[ 4 ];\n\t\tr[ 5 ] = m[ 7 ];\n\t\tr[ 6 ] = m[ 2 ];\n\t\tr[ 7 ] = m[ 5 ];\n\t\tr[ 8 ] = m[ 8 ];\n\n\t\treturn this;\n\n\t},\n\n\tsetUvTransform: function ( tx, ty, sx, sy, rotation, cx, cy ) {\n\n\t\tvar c = Math.cos( rotation );\n\t\tvar s = Math.sin( rotation );\n\n\t\tthis.set(\n\t\t\tsx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\n\t\t\t- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\n\t\t\t0, 0, 1\n\t\t);\n\n\t},\n\n\tscale: function ( sx, sy ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] *= sx; te[ 3 ] *= sx; te[ 6 ] *= sx;\n\t\tte[ 1 ] *= sy; te[ 4 ] *= sy; te[ 7 ] *= sy;\n\n\t\treturn this;\n\n\t},\n\n\trotate: function ( theta ) {\n\n\t\tvar c = Math.cos( theta );\n\t\tvar s = Math.sin( theta );\n\n\t\tvar te = this.elements;\n\n\t\tvar a11 = te[ 0 ], a12 = te[ 3 ], a13 = te[ 6 ];\n\t\tvar a21 = te[ 1 ], a22 = te[ 4 ], a23 = te[ 7 ];\n\n\t\tte[ 0 ] = c * a11 + s * a21;\n\t\tte[ 3 ] = c * a12 + s * a22;\n\t\tte[ 6 ] = c * a13 + s * a23;\n\n\t\tte[ 1 ] = - s * a11 + c * a21;\n\t\tte[ 4 ] = - s * a12 + c * a22;\n\t\tte[ 7 ] = - s * a13 + c * a23;\n\n\t\treturn this;\n\n\t},\n\n\ttranslate: function ( tx, ty ) {\n\n\t\tvar te = this.elements;\n\n\t\tte[ 0 ] += tx * te[ 2 ]; te[ 3 ] += tx * te[ 5 ]; te[ 6 ] += tx * te[ 8 ];\n\t\tte[ 1 ] += ty * te[ 2 ]; te[ 4 ] += ty * te[ 5 ]; te[ 7 ] += ty * te[ 8 ];\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( matrix ) {\n\n\t\tvar te = this.elements;\n\t\tvar me = matrix.elements;\n\n\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\tif ( te[ i ] !== me[ i ] ) return false;\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tvar te = this.elements;\n\n\t\tarray[ offset ] = te[ 0 ];\n\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\tarray[ offset + 2 ] = te[ 2 ];\n\n\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\tarray[ offset + 5 ] = te[ 5 ];\n\n\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\tarray[ offset + 8 ] = te[ 8 ];\n\n\t\treturn array;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author szimek / https://github.com/szimek/\n */\n\nvar textureId = 0;\n\nfunction Texture( image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\tObject.defineProperty( this, 'id', { value: textureId ++ } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\n\tthis.image = image !== undefined ? image : Texture.DEFAULT_IMAGE;\n\tthis.mipmaps = [];\n\n\tthis.mapping = mapping !== undefined ? mapping : Texture.DEFAULT_MAPPING;\n\n\tthis.wrapS = wrapS !== undefined ? wrapS : ClampToEdgeWrapping;\n\tthis.wrapT = wrapT !== undefined ? wrapT : ClampToEdgeWrapping;\n\n\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\tthis.minFilter = minFilter !== undefined ? minFilter : LinearMipMapLinearFilter;\n\n\tthis.anisotropy = anisotropy !== undefined ? anisotropy : 1;\n\n\tthis.format = format !== undefined ? format : RGBAFormat;\n\tthis.type = type !== undefined ? type : UnsignedByteType;\n\n\tthis.offset = new Vector2( 0, 0 );\n\tthis.repeat = new Vector2( 1, 1 );\n\tthis.center = new Vector2( 0, 0 );\n\tthis.rotation = 0;\n\n\tthis.matrixAutoUpdate = true;\n\tthis.matrix = new Matrix3();\n\n\tthis.generateMipmaps = true;\n\tthis.premultiplyAlpha = false;\n\tthis.flipY = true;\n\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\t// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n\t//\n\t// Also changing the encoding after already used by a Material will not automatically make the Material\n\t// update.  You need to explicitly call Material.needsUpdate to trigger it to recompile.\n\tthis.encoding = encoding !== undefined ? encoding : LinearEncoding;\n\n\tthis.version = 0;\n\tthis.onUpdate = null;\n\n}\n\nTexture.DEFAULT_IMAGE = undefined;\nTexture.DEFAULT_MAPPING = UVMapping;\n\nObject.defineProperty( Texture.prototype, \"needsUpdate\", {\n\n\tset: function ( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n} );\n\nObject.assign( Texture.prototype, EventDispatcher.prototype, {\n\n\tconstructor: Texture,\n\n\tisTexture: true,\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.image = source.image;\n\t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\n\t\tthis.mapping = source.mapping;\n\n\t\tthis.wrapS = source.wrapS;\n\t\tthis.wrapT = source.wrapT;\n\n\t\tthis.magFilter = source.magFilter;\n\t\tthis.minFilter = source.minFilter;\n\n\t\tthis.anisotropy = source.anisotropy;\n\n\t\tthis.format = source.format;\n\t\tthis.type = source.type;\n\n\t\tthis.offset.copy( source.offset );\n\t\tthis.repeat.copy( source.repeat );\n\t\tthis.center.copy( source.center );\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrix.copy( source.matrix );\n\n\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\tthis.flipY = source.flipY;\n\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\tthis.encoding = source.encoding;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.textures[ this.uuid ];\n\n\t\t}\n\n\t\tfunction getDataURL( image ) {\n\n\t\t\tvar canvas;\n\n\t\t\tif ( image instanceof HTMLCanvasElement ) {\n\n\t\t\t\tcanvas = image;\n\n\t\t\t} else {\n\n\t\t\t\tcanvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\t\t\t\tcanvas.width = image.width;\n\t\t\t\tcanvas.height = image.height;\n\n\t\t\t\tvar context = canvas.getContext( '2d' );\n\n\t\t\t\tif ( image instanceof ImageData ) {\n\n\t\t\t\t\tcontext.putImageData( image, 0, 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\n\n\t\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\n\n\t\t\t} else {\n\n\t\t\t\treturn canvas.toDataURL( 'image/png' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar output = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Texture',\n\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t},\n\n\t\t\tuuid: this.uuid,\n\t\t\tname: this.name,\n\n\t\t\tmapping: this.mapping,\n\n\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n\t\t\toffset: [ this.offset.x, this.offset.y ],\n\t\t\tcenter: [ this.center.x, this.center.y ],\n\t\t\trotation: this.rotation,\n\n\t\t\twrap: [ this.wrapS, this.wrapT ],\n\n\t\t\tminFilter: this.minFilter,\n\t\t\tmagFilter: this.magFilter,\n\t\t\tanisotropy: this.anisotropy,\n\n\t\t\tflipY: this.flipY\n\t\t};\n\n\t\tif ( this.image !== undefined ) {\n\n\t\t\t// TODO: Move to THREE.Image\n\n\t\t\tvar image = this.image;\n\n\t\t\tif ( image.uuid === undefined ) {\n\n\t\t\t\timage.uuid = _Math.generateUUID(); // UGH\n\n\t\t\t}\n\n\t\t\tif ( ! isRootObject && meta.images[ image.uuid ] === undefined ) {\n\n\t\t\t\tmeta.images[ image.uuid ] = {\n\t\t\t\t\tuuid: image.uuid,\n\t\t\t\t\turl: getDataURL( image )\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\toutput.image = image.uuid;\n\n\t\t}\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.textures[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t},\n\n\ttransformUv: function ( uv ) {\n\n\t\tif ( this.mapping !== UVMapping ) return;\n\n\t\tuv.applyMatrix3( this.matrix );\n\n\t\tif ( uv.x < 0 || uv.x > 1 ) {\n\n\t\t\tswitch ( this.wrapS ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( uv.y < 0 || uv.y > 1 ) {\n\n\t\t\tswitch ( this.wrapT ) {\n\n\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.flipY ) {\n\n\t\t\tuv.y = 1 - uv.y;\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author philogb / http://blog.thejit.org/\n * @author mikael emtinger / http://gomo.se/\n * @author egraether / http://egraether.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Vector4( x, y, z, w ) {\n\n\tthis.x = x || 0;\n\tthis.y = y || 0;\n\tthis.z = z || 0;\n\tthis.w = ( w !== undefined ) ? w : 1;\n\n}\n\nObject.assign( Vector4.prototype, {\n\n\tisVector4: true,\n\n\tset: function ( x, y, z, w ) {\n\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t\tthis.z = z;\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.x = scalar;\n\t\tthis.y = scalar;\n\t\tthis.z = scalar;\n\t\tthis.w = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetX: function ( x ) {\n\n\t\tthis.x = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( y ) {\n\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetZ: function ( z ) {\n\n\t\tthis.z = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetW: function ( w ) {\n\n\t\tthis.w = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponent: function ( index, value ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: this.x = value; break;\n\t\t\tcase 1: this.y = value; break;\n\t\t\tcase 2: this.z = value; break;\n\t\t\tcase 3: this.w = value; break;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetComponent: function ( index ) {\n\n\t\tswitch ( index ) {\n\n\t\t\tcase 0: return this.x;\n\t\t\tcase 1: return this.y;\n\t\t\tcase 2: return this.z;\n\t\t\tcase 3: return this.w;\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\n\t},\n\n\tcopy: function ( v ) {\n\n\t\tthis.x = v.x;\n\t\tthis.y = v.y;\n\t\tthis.z = v.z;\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n\t\treturn this;\n\n\t},\n\n\tadd: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\treturn this.addVectors( v, w );\n\n\t\t}\n\n\t\tthis.x += v.x;\n\t\tthis.y += v.y;\n\t\tthis.z += v.z;\n\t\tthis.w += v.w;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.x += s;\n\t\tthis.y += s;\n\t\tthis.z += s;\n\t\tthis.w += s;\n\n\t\treturn this;\n\n\t},\n\n\taddVectors: function ( a, b ) {\n\n\t\tthis.x = a.x + b.x;\n\t\tthis.y = a.y + b.y;\n\t\tthis.z = a.z + b.z;\n\t\tthis.w = a.w + b.w;\n\n\t\treturn this;\n\n\t},\n\n\taddScaledVector: function ( v, s ) {\n\n\t\tthis.x += v.x * s;\n\t\tthis.y += v.y * s;\n\t\tthis.z += v.z * s;\n\t\tthis.w += v.w * s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( v, w ) {\n\n\t\tif ( w !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\treturn this.subVectors( v, w );\n\n\t\t}\n\n\t\tthis.x -= v.x;\n\t\tthis.y -= v.y;\n\t\tthis.z -= v.z;\n\t\tthis.w -= v.w;\n\n\t\treturn this;\n\n\t},\n\n\tsubScalar: function ( s ) {\n\n\t\tthis.x -= s;\n\t\tthis.y -= s;\n\t\tthis.z -= s;\n\t\tthis.w -= s;\n\n\t\treturn this;\n\n\t},\n\n\tsubVectors: function ( a, b ) {\n\n\t\tthis.x = a.x - b.x;\n\t\tthis.y = a.y - b.y;\n\t\tthis.z = a.z - b.z;\n\t\tthis.w = a.w - b.w;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( scalar ) {\n\n\t\tthis.x *= scalar;\n\t\tthis.y *= scalar;\n\t\tthis.z *= scalar;\n\t\tthis.w *= scalar;\n\n\t\treturn this;\n\n\t},\n\n\tapplyMatrix4: function ( m ) {\n\n\t\tvar x = this.x, y = this.y, z = this.z, w = this.w;\n\t\tvar e = m.elements;\n\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n\t\treturn this;\n\n\t},\n\n\tdivideScalar: function ( scalar ) {\n\n\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t},\n\n\tsetAxisAngleFromQuaternion: function ( q ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n\t\t// q is assumed to be normalized\n\n\t\tthis.w = 2 * Math.acos( q.w );\n\n\t\tvar s = Math.sqrt( 1 - q.w * q.w );\n\n\t\tif ( s < 0.0001 ) {\n\n\t\t\tthis.x = 1;\n\t\t\tthis.y = 0;\n\t\t\tthis.z = 0;\n\n\t\t} else {\n\n\t\t\tthis.x = q.x / s;\n\t\t\tthis.y = q.y / s;\n\t\t\tthis.z = q.z / s;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetAxisAngleFromRotationMatrix: function ( m ) {\n\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tvar angle, x, y, z,\t\t// variables for result\n\t\t\tepsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n\t\t\tte = m.elements,\n\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n\t\t\t// singularity found\n\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t// in leading diagonal and zero in other terms\n\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n\t\t\t\t// this singularity is identity matrix so angle = 0\n\n\t\t\t\tthis.set( 1, 0, 0, 0 );\n\n\t\t\t\treturn this; // zero angle, arbitrary axis\n\n\t\t\t}\n\n\t\t\t// otherwise this singularity is angle = 180\n\n\t\t\tangle = Math.PI;\n\n\t\t\tvar xx = ( m11 + 1 ) / 2;\n\t\t\tvar yy = ( m22 + 1 ) / 2;\n\t\t\tvar zz = ( m33 + 1 ) / 2;\n\t\t\tvar xy = ( m12 + m21 ) / 4;\n\t\t\tvar xz = ( m13 + m31 ) / 4;\n\t\t\tvar yz = ( m23 + m32 ) / 4;\n\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\n\t\t\t\t// m11 is the largest diagonal term\n\n\t\t\t\tif ( xx < epsilon ) {\n\n\t\t\t\t\tx = 0;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\ty = xy / x;\n\t\t\t\t\tz = xz / x;\n\n\t\t\t\t}\n\n\t\t\t} else if ( yy > zz ) {\n\n\t\t\t\t// m22 is the largest diagonal term\n\n\t\t\t\tif ( yy < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0;\n\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t} else {\n\n\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\tx = xy / y;\n\t\t\t\t\tz = yz / y;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// m33 is the largest diagonal term so base result on this\n\n\t\t\t\tif ( zz < epsilon ) {\n\n\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\tz = 0;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\tx = xz / z;\n\t\t\t\t\ty = yz / z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.set( x, y, z, angle );\n\n\t\t\treturn this; // return 180 deg rotation\n\n\t\t}\n\n\t\t// as we have reached here there are no singularities so we can handle normally\n\n\t\tvar s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t                   ( m13 - m31 ) * ( m13 - m31 ) +\n\t\t                   ( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\n\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\tthis.x = ( m32 - m23 ) / s;\n\t\tthis.y = ( m13 - m31 ) / s;\n\t\tthis.z = ( m21 - m12 ) / s;\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n\t\treturn this;\n\n\t},\n\n\tmin: function ( v ) {\n\n\t\tthis.x = Math.min( this.x, v.x );\n\t\tthis.y = Math.min( this.y, v.y );\n\t\tthis.z = Math.min( this.z, v.z );\n\t\tthis.w = Math.min( this.w, v.w );\n\n\t\treturn this;\n\n\t},\n\n\tmax: function ( v ) {\n\n\t\tthis.x = Math.max( this.x, v.x );\n\t\tthis.y = Math.max( this.y, v.y );\n\t\tthis.z = Math.max( this.z, v.z );\n\t\tthis.w = Math.max( this.w, v.w );\n\n\t\treturn this;\n\n\t},\n\n\tclamp: function ( min, max ) {\n\n\t\t// assumes min < max, componentwise\n\n\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\n\n\t\treturn this;\n\n\t},\n\n\tclampScalar: function () {\n\n\t\tvar min, max;\n\n\t\treturn function clampScalar( minVal, maxVal ) {\n\n\t\t\tif ( min === undefined ) {\n\n\t\t\t\tmin = new Vector4();\n\t\t\t\tmax = new Vector4();\n\n\t\t\t}\n\n\t\t\tmin.set( minVal, minVal, minVal, minVal );\n\t\t\tmax.set( maxVal, maxVal, maxVal, maxVal );\n\n\t\t\treturn this.clamp( min, max );\n\n\t\t};\n\n\t}(),\n\n\tclampLength: function ( min, max ) {\n\n\t\tvar length = this.length();\n\n\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t},\n\n\tfloor: function () {\n\n\t\tthis.x = Math.floor( this.x );\n\t\tthis.y = Math.floor( this.y );\n\t\tthis.z = Math.floor( this.z );\n\t\tthis.w = Math.floor( this.w );\n\n\t\treturn this;\n\n\t},\n\n\tceil: function () {\n\n\t\tthis.x = Math.ceil( this.x );\n\t\tthis.y = Math.ceil( this.y );\n\t\tthis.z = Math.ceil( this.z );\n\t\tthis.w = Math.ceil( this.w );\n\n\t\treturn this;\n\n\t},\n\n\tround: function () {\n\n\t\tthis.x = Math.round( this.x );\n\t\tthis.y = Math.round( this.y );\n\t\tthis.z = Math.round( this.z );\n\t\tthis.w = Math.round( this.w );\n\n\t\treturn this;\n\n\t},\n\n\troundToZero: function () {\n\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.x = - this.x;\n\t\tthis.y = - this.y;\n\t\tthis.z = - this.z;\n\t\tthis.w = - this.w;\n\n\t\treturn this;\n\n\t},\n\n\tdot: function ( v ) {\n\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n\t},\n\n\tlengthSq: function () {\n\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t},\n\n\tlength: function () {\n\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n\t},\n\n\tmanhattanLength: function () {\n\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n\t},\n\n\tnormalize: function () {\n\n\t\treturn this.divideScalar( this.length() || 1 );\n\n\t},\n\n\tsetLength: function ( length ) {\n\n\t\treturn this.normalize().multiplyScalar( length );\n\n\t},\n\n\tlerp: function ( v, alpha ) {\n\n\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\tthis.w += ( v.w - this.w ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t},\n\n\tequals: function ( v ) {\n\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.x = array[ offset ];\n\t\tthis.y = array[ offset + 1 ];\n\t\tthis.z = array[ offset + 2 ];\n\t\tthis.w = array[ offset + 3 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.x;\n\t\tarray[ offset + 1 ] = this.y;\n\t\tarray[ offset + 2 ] = this.z;\n\t\tarray[ offset + 3 ] = this.w;\n\n\t\treturn array;\n\n\t},\n\n\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\tif ( offset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: offset has been removed from .fromBufferAttribute().' );\n\n\t\t}\n\n\t\tthis.x = attribute.getX( index );\n\t\tthis.y = attribute.getY( index );\n\t\tthis.z = attribute.getZ( index );\n\t\tthis.w = attribute.getW( index );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author szimek / https://github.com/szimek/\n * @author alteredq / http://alteredqualia.com/\n * @author Marius Kintel / https://github.com/kintel\n */\n\n/*\n In options, we can specify:\n * Texture parameters for an auto-generated target texture\n * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n*/\nfunction WebGLRenderTarget( width, height, options ) {\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.width = width;\n\tthis.height = height;\n\n\tthis.scissor = new Vector4( 0, 0, width, height );\n\tthis.scissorTest = false;\n\n\tthis.viewport = new Vector4( 0, 0, width, height );\n\n\toptions = options || {};\n\n\tif ( options.minFilter === undefined ) options.minFilter = LinearFilter;\n\n\tthis.texture = new Texture( undefined, undefined, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\n\n\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : true;\n\tthis.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\n\n}\n\nObject.assign( WebGLRenderTarget.prototype, EventDispatcher.prototype, {\n\n\tisWebGLRenderTarget: true,\n\n\tsetSize: function ( width, height ) {\n\n\t\tif ( this.width !== width || this.height !== height ) {\n\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\n\t\t\tthis.dispose();\n\n\t\t}\n\n\t\tthis.viewport.set( 0, 0, width, height );\n\t\tthis.scissor.set( 0, 0, width, height );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\tthis.viewport.copy( source.viewport );\n\n\t\tthis.texture = source.texture.clone();\n\n\t\tthis.depthBuffer = source.depthBuffer;\n\t\tthis.stencilBuffer = source.stencilBuffer;\n\t\tthis.depthTexture = source.depthTexture;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com\n */\n\nfunction WebGLRenderTargetCube( width, height, options ) {\n\n\tWebGLRenderTarget.call( this, width, height, options );\n\n\tthis.activeCubeFace = 0; // PX 0, NX 1, PY 2, NY 3, PZ 4, NZ 5\n\tthis.activeMipMapLevel = 0;\n\n}\n\nWebGLRenderTargetCube.prototype = Object.create( WebGLRenderTarget.prototype );\nWebGLRenderTargetCube.prototype.constructor = WebGLRenderTargetCube;\n\nWebGLRenderTargetCube.prototype.isWebGLRenderTargetCube = true;\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction DataTexture( data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\tthis.image = { data: data, width: width, height: height };\n\n\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\tthis.generateMipmaps = false;\n\tthis.flipY = false;\n\tthis.unpackAlignment = 1;\n\n}\n\nDataTexture.prototype = Object.create( Texture.prototype );\nDataTexture.prototype.constructor = DataTexture;\n\nDataTexture.prototype.isDataTexture = true;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction CubeTexture( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\timages = images !== undefined ? images : [];\n\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\n\tTexture.call( this, images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\tthis.flipY = false;\n\n}\n\nCubeTexture.prototype = Object.create( Texture.prototype );\nCubeTexture.prototype.constructor = CubeTexture;\n\nCubeTexture.prototype.isCubeTexture = true;\n\nObject.defineProperty( CubeTexture.prototype, 'images', {\n\n\tget: function () {\n\n\t\treturn this.image;\n\n\t},\n\n\tset: function ( value ) {\n\n\t\tthis.image = value;\n\n\t}\n\n} );\n\n/**\n * @author tschw\n *\n * Uniforms of a program.\n * Those form a tree structure with a special top-level container for the root,\n * which you get by calling 'new WebGLUniforms( gl, program, renderer )'.\n *\n *\n * Properties of inner nodes including the top-level container:\n *\n * .seq - array of nested uniforms\n * .map - nested uniforms by name\n *\n *\n * Methods of all nodes except the top-level container:\n *\n * .setValue( gl, value, [renderer] )\n *\n * \t\tuploads a uniform value(s)\n *  \tthe 'renderer' parameter is needed for sampler uniforms\n *\n *\n * Static methods of the top-level container (renderer factorizations):\n *\n * .upload( gl, seq, values, renderer )\n *\n * \t\tsets uniforms in 'seq' to 'values[id].value'\n *\n * .seqWithValue( seq, values ) : filteredSeq\n *\n * \t\tfilters 'seq' entries with corresponding entry in values\n *\n *\n * Methods of the top-level container (renderer factorizations):\n *\n * .setValue( gl, name, value )\n *\n * \t\tsets uniform with  name 'name' to 'value'\n *\n * .set( gl, obj, prop )\n *\n * \t\tsets uniform from object and property with same name than uniform\n *\n * .setOptional( gl, obj, prop )\n *\n * \t\tlike .set for an optional property of the object\n *\n */\n\nvar emptyTexture = new Texture();\nvar emptyCubeTexture = new CubeTexture();\n\n// --- Base for inner nodes (including the root) ---\n\nfunction UniformContainer() {\n\n\tthis.seq = [];\n\tthis.map = {};\n\n}\n\n// --- Utilities ---\n\n// Array Caches (provide typed arrays for temporary by size)\n\nvar arrayCacheF32 = [];\nvar arrayCacheI32 = [];\n\n// Float32Array caches used for uploading Matrix uniforms\n\nvar mat4array = new Float32Array( 16 );\nvar mat3array = new Float32Array( 9 );\n\n// Flattening for arrays of vectors and matrices\n\nfunction flatten( array, nBlocks, blockSize ) {\n\n\tvar firstElem = array[ 0 ];\n\n\tif ( firstElem <= 0 || firstElem > 0 ) return array;\n\t// unoptimized: ! isNaN( firstElem )\n\t// see http://jacksondunstan.com/articles/983\n\n\tvar n = nBlocks * blockSize,\n\t\tr = arrayCacheF32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Float32Array( n );\n\t\tarrayCacheF32[ n ] = r;\n\n\t}\n\n\tif ( nBlocks !== 0 ) {\n\n\t\tfirstElem.toArray( r, 0 );\n\n\t\tfor ( var i = 1, offset = 0; i !== nBlocks; ++ i ) {\n\n\t\t\toffset += blockSize;\n\t\t\tarray[ i ].toArray( r, offset );\n\n\t\t}\n\n\t}\n\n\treturn r;\n\n}\n\n// Texture unit allocation\n\nfunction allocTexUnits( renderer, n ) {\n\n\tvar r = arrayCacheI32[ n ];\n\n\tif ( r === undefined ) {\n\n\t\tr = new Int32Array( n );\n\t\tarrayCacheI32[ n ] = r;\n\n\t}\n\n\tfor ( var i = 0; i !== n; ++ i )\n\t\tr[ i ] = renderer.allocTextureUnit();\n\n\treturn r;\n\n}\n\n// --- Setters ---\n\n// Note: Defining these methods externally, because they come in a bunch\n// and this way their names minify.\n\n// Single scalar\n\nfunction setValue1f( gl, v ) {\n\n\tgl.uniform1f( this.addr, v );\n\n}\n\nfunction setValue1i( gl, v ) {\n\n\tgl.uniform1i( this.addr, v );\n\n}\n\n// Single float vector (from flat array or THREE.VectorN)\n\nfunction setValue2fv( gl, v ) {\n\n\tif ( v.x === undefined ) {\n\n\t\tgl.uniform2fv( this.addr, v );\n\n\t} else {\n\n\t\tgl.uniform2f( this.addr, v.x, v.y );\n\n\t}\n\n}\n\nfunction setValue3fv( gl, v ) {\n\n\tif ( v.x !== undefined ) {\n\n\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\n\n\t} else if ( v.r !== undefined ) {\n\n\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\n\n\t} else {\n\n\t\tgl.uniform3fv( this.addr, v );\n\n\t}\n\n}\n\nfunction setValue4fv( gl, v ) {\n\n\tif ( v.x === undefined ) {\n\n\t\tgl.uniform4fv( this.addr, v );\n\n\t} else {\n\n\t\t gl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\n\n\t}\n\n}\n\n// Single matrix (from flat array or MatrixN)\n\nfunction setValue2fm( gl, v ) {\n\n\tgl.uniformMatrix2fv( this.addr, false, v.elements || v );\n\n}\n\nfunction setValue3fm( gl, v ) {\n\n\tif ( v.elements === undefined ) {\n\n\t\tgl.uniformMatrix3fv( this.addr, false, v );\n\n\t} else {\n\n\t\tmat3array.set( v.elements );\n\t\tgl.uniformMatrix3fv( this.addr, false, mat3array );\n\n\t}\n\n}\n\nfunction setValue4fm( gl, v ) {\n\n\tif ( v.elements === undefined ) {\n\n\t\tgl.uniformMatrix4fv( this.addr, false, v );\n\n\t} else {\n\n\t\tmat4array.set( v.elements );\n\t\tgl.uniformMatrix4fv( this.addr, false, mat4array );\n\n\t}\n\n}\n\n// Single texture (2D / Cube)\n\nfunction setValueT1( gl, v, renderer ) {\n\n\tvar unit = renderer.allocTextureUnit();\n\tgl.uniform1i( this.addr, unit );\n\trenderer.setTexture2D( v || emptyTexture, unit );\n\n}\n\nfunction setValueT6( gl, v, renderer ) {\n\n\tvar unit = renderer.allocTextureUnit();\n\tgl.uniform1i( this.addr, unit );\n\trenderer.setTextureCube( v || emptyCubeTexture, unit );\n\n}\n\n// Integer / Boolean vectors or arrays thereof (always flat arrays)\n\nfunction setValue2iv( gl, v ) {\n\n\tgl.uniform2iv( this.addr, v );\n\n}\n\nfunction setValue3iv( gl, v ) {\n\n\tgl.uniform3iv( this.addr, v );\n\n}\n\nfunction setValue4iv( gl, v ) {\n\n\tgl.uniform4iv( this.addr, v );\n\n}\n\n// Helper to pick the right setter for the singular case\n\nfunction getSingularSetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValue1f; // FLOAT\n\t\tcase 0x8b50: return setValue2fv; // _VEC2\n\t\tcase 0x8b51: return setValue3fv; // _VEC3\n\t\tcase 0x8b52: return setValue4fv; // _VEC4\n\n\t\tcase 0x8b5a: return setValue2fm; // _MAT2\n\t\tcase 0x8b5b: return setValue3fm; // _MAT3\n\t\tcase 0x8b5c: return setValue4fm; // _MAT4\n\n\t\tcase 0x8b5e: case 0x8d66: return setValueT1; // SAMPLER_2D, SAMPLER_EXTERNAL_OES\n\t\tcase 0x8b60: return setValueT6; // SAMPLER_CUBE\n\n\t\tcase 0x1404: case 0x8b56: return setValue1i; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValue2iv; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValue3iv; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValue4iv; // _VEC4\n\n\t}\n\n}\n\n// Array of scalars\n\nfunction setValue1fv( gl, v ) {\n\n\tgl.uniform1fv( this.addr, v );\n\n}\nfunction setValue1iv( gl, v ) {\n\n\tgl.uniform1iv( this.addr, v );\n\n}\n\n// Array of vectors (flat or from THREE classes)\n\nfunction setValueV2a( gl, v ) {\n\n\tgl.uniform2fv( this.addr, flatten( v, this.size, 2 ) );\n\n}\n\nfunction setValueV3a( gl, v ) {\n\n\tgl.uniform3fv( this.addr, flatten( v, this.size, 3 ) );\n\n}\n\nfunction setValueV4a( gl, v ) {\n\n\tgl.uniform4fv( this.addr, flatten( v, this.size, 4 ) );\n\n}\n\n// Array of matrices (flat or from THREE clases)\n\nfunction setValueM2a( gl, v ) {\n\n\tgl.uniformMatrix2fv( this.addr, false, flatten( v, this.size, 4 ) );\n\n}\n\nfunction setValueM3a( gl, v ) {\n\n\tgl.uniformMatrix3fv( this.addr, false, flatten( v, this.size, 9 ) );\n\n}\n\nfunction setValueM4a( gl, v ) {\n\n\tgl.uniformMatrix4fv( this.addr, false, flatten( v, this.size, 16 ) );\n\n}\n\n// Array of textures (2D / Cube)\n\nfunction setValueT1a( gl, v, renderer ) {\n\n\tvar n = v.length,\n\t\tunits = allocTexUnits( renderer, n );\n\n\tgl.uniform1iv( this.addr, units );\n\n\tfor ( var i = 0; i !== n; ++ i ) {\n\n\t\trenderer.setTexture2D( v[ i ] || emptyTexture, units[ i ] );\n\n\t}\n\n}\n\nfunction setValueT6a( gl, v, renderer ) {\n\n\tvar n = v.length,\n\t\tunits = allocTexUnits( renderer, n );\n\n\tgl.uniform1iv( this.addr, units );\n\n\tfor ( var i = 0; i !== n; ++ i ) {\n\n\t\trenderer.setTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\n\n\t}\n\n}\n\n// Helper to pick the right setter for a pure (bottom-level) array\n\nfunction getPureArraySetter( type ) {\n\n\tswitch ( type ) {\n\n\t\tcase 0x1406: return setValue1fv; // FLOAT\n\t\tcase 0x8b50: return setValueV2a; // _VEC2\n\t\tcase 0x8b51: return setValueV3a; // _VEC3\n\t\tcase 0x8b52: return setValueV4a; // _VEC4\n\n\t\tcase 0x8b5a: return setValueM2a; // _MAT2\n\t\tcase 0x8b5b: return setValueM3a; // _MAT3\n\t\tcase 0x8b5c: return setValueM4a; // _MAT4\n\n\t\tcase 0x8b5e: return setValueT1a; // SAMPLER_2D\n\t\tcase 0x8b60: return setValueT6a; // SAMPLER_CUBE\n\n\t\tcase 0x1404: case 0x8b56: return setValue1iv; // INT, BOOL\n\t\tcase 0x8b53: case 0x8b57: return setValue2iv; // _VEC2\n\t\tcase 0x8b54: case 0x8b58: return setValue3iv; // _VEC3\n\t\tcase 0x8b55: case 0x8b59: return setValue4iv; // _VEC4\n\n\t}\n\n}\n\n// --- Uniform Classes ---\n\nfunction SingleUniform( id, activeInfo, addr ) {\n\n\tthis.id = id;\n\tthis.addr = addr;\n\tthis.setValue = getSingularSetter( activeInfo.type );\n\n\t// this.path = activeInfo.name; // DEBUG\n\n}\n\nfunction PureArrayUniform( id, activeInfo, addr ) {\n\n\tthis.id = id;\n\tthis.addr = addr;\n\tthis.size = activeInfo.size;\n\tthis.setValue = getPureArraySetter( activeInfo.type );\n\n\t// this.path = activeInfo.name; // DEBUG\n\n}\n\nfunction StructuredUniform( id ) {\n\n\tthis.id = id;\n\n\tUniformContainer.call( this ); // mix-in\n\n}\n\nStructuredUniform.prototype.setValue = function ( gl, value ) {\n\n\t// Note: Don't need an extra 'renderer' parameter, since samplers\n\t// are not allowed in structured uniforms.\n\n\tvar seq = this.seq;\n\n\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tvar u = seq[ i ];\n\t\tu.setValue( gl, value[ u.id ] );\n\n\t}\n\n};\n\n// --- Top-level ---\n\n// Parser - builds up the property tree from the path strings\n\nvar RePathPart = /([\\w\\d_]+)(\\])?(\\[|\\.)?/g;\n\n// extracts\n// \t- the identifier (member name or array index)\n//  - followed by an optional right bracket (found when array index)\n//  - followed by an optional left bracket or dot (type of subscript)\n//\n// Note: These portions can be read in a non-overlapping fashion and\n// allow straightforward parsing of the hierarchy that WebGL encodes\n// in the uniform names.\n\nfunction addUniform( container, uniformObject ) {\n\n\tcontainer.seq.push( uniformObject );\n\tcontainer.map[ uniformObject.id ] = uniformObject;\n\n}\n\nfunction parseUniform( activeInfo, addr, container ) {\n\n\tvar path = activeInfo.name,\n\t\tpathLength = path.length;\n\n\t// reset RegExp object, because of the early exit of a previous run\n\tRePathPart.lastIndex = 0;\n\n\tfor ( ; ; ) {\n\n\t\tvar match = RePathPart.exec( path ),\n\t\t\tmatchEnd = RePathPart.lastIndex,\n\n\t\t\tid = match[ 1 ],\n\t\t\tidIsIndex = match[ 2 ] === ']',\n\t\t\tsubscript = match[ 3 ];\n\n\t\tif ( idIsIndex ) id = id | 0; // convert to integer\n\n\t\tif ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\n\n\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\n\t\t\taddUniform( container, subscript === undefined ?\n\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\n\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\n\n\t\t\tbreak;\n\n\t\t} else {\n\n\t\t\t// step into inner node / create it in case it doesn't exist\n\n\t\t\tvar map = container.map, next = map[ id ];\n\n\t\t\tif ( next === undefined ) {\n\n\t\t\t\tnext = new StructuredUniform( id );\n\t\t\t\taddUniform( container, next );\n\n\t\t\t}\n\n\t\t\tcontainer = next;\n\n\t\t}\n\n\t}\n\n}\n\n// Root Container\n\nfunction WebGLUniforms( gl, program, renderer ) {\n\n\tUniformContainer.call( this );\n\n\tthis.renderer = renderer;\n\n\tvar n = gl.getProgramParameter( program, gl.ACTIVE_UNIFORMS );\n\n\tfor ( var i = 0; i < n; ++ i ) {\n\n\t\tvar info = gl.getActiveUniform( program, i ),\n\t\t\tpath = info.name,\n\t\t\taddr = gl.getUniformLocation( program, path );\n\n\t\tparseUniform( info, addr, this );\n\n\t}\n\n}\n\nWebGLUniforms.prototype.setValue = function ( gl, name, value ) {\n\n\tvar u = this.map[ name ];\n\n\tif ( u !== undefined ) u.setValue( gl, value, this.renderer );\n\n};\n\nWebGLUniforms.prototype.setOptional = function ( gl, object, name ) {\n\n\tvar v = object[ name ];\n\n\tif ( v !== undefined ) this.setValue( gl, name, v );\n\n};\n\n\n// Static interface\n\nWebGLUniforms.upload = function ( gl, seq, values, renderer ) {\n\n\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tvar u = seq[ i ],\n\t\t\tv = values[ u.id ];\n\n\t\tif ( v.needsUpdate !== false ) {\n\n\t\t\t// note: always updating when .needsUpdate is undefined\n\t\t\tu.setValue( gl, v.value, renderer );\n\n\t\t}\n\n\t}\n\n};\n\nWebGLUniforms.seqWithValue = function ( seq, values ) {\n\n\tvar r = [];\n\n\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\tvar u = seq[ i ];\n\t\tif ( u.id in values ) r.push( u );\n\n\t}\n\n\treturn r;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar ColorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\nfunction Color( r, g, b ) {\n\n\tif ( g === undefined && b === undefined ) {\n\n\t\t// r is THREE.Color, hex or string\n\t\treturn this.set( r );\n\n\t}\n\n\treturn this.setRGB( r, g, b );\n\n}\n\nObject.assign( Color.prototype, {\n\n\tisColor: true,\n\n\tr: 1, g: 1, b: 1,\n\n\tset: function ( value ) {\n\n\t\tif ( value && value.isColor ) {\n\n\t\t\tthis.copy( value );\n\n\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\tthis.setHex( value );\n\n\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\tthis.setStyle( value );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetScalar: function ( scalar ) {\n\n\t\tthis.r = scalar;\n\t\tthis.g = scalar;\n\t\tthis.b = scalar;\n\n\t\treturn this;\n\n\t},\n\n\tsetHex: function ( hex ) {\n\n\t\thex = Math.floor( hex );\n\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\treturn this;\n\n\t},\n\n\tsetRGB: function ( r, g, b ) {\n\n\t\tthis.r = r;\n\t\tthis.g = g;\n\t\tthis.b = b;\n\n\t\treturn this;\n\n\t},\n\n\tsetHSL: function () {\n\n\t\tfunction hue2rgb( p, q, t ) {\n\n\t\t\tif ( t < 0 ) t += 1;\n\t\t\tif ( t > 1 ) t -= 1;\n\t\t\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\n\t\t\tif ( t < 1 / 2 ) return q;\n\t\t\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\n\t\t\treturn p;\n\n\t\t}\n\n\t\treturn function setHSL( h, s, l ) {\n\n\t\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\t\th = _Math.euclideanModulo( h, 1 );\n\t\t\ts = _Math.clamp( s, 0, 1 );\n\t\t\tl = _Math.clamp( l, 0, 1 );\n\n\t\t\tif ( s === 0 ) {\n\n\t\t\t\tthis.r = this.g = this.b = l;\n\n\t\t\t} else {\n\n\t\t\t\tvar p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\t\tvar q = ( 2 * l ) - p;\n\n\t\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tsetStyle: function ( style ) {\n\n\t\tfunction handleAlpha( string ) {\n\n\t\t\tif ( string === undefined ) return;\n\n\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tvar m;\n\n\t\tif ( m = /^((?:rgb|hsl)a?)\\(\\s*([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t// rgb / hsl\n\n\t\t\tvar color;\n\t\t\tvar name = m[ 1 ];\n\t\t\tvar components = m[ 2 ];\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'rgb':\n\t\t\t\tcase 'rgba':\n\n\t\t\t\t\tif ( color = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\n\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\n\n\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( color = /^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\n\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\n\n\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'hsl':\n\t\t\t\tcase 'hsla':\n\n\t\t\t\t\tif ( color = /^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\t\t\t\t\t\tvar h = parseFloat( color[ 1 ] ) / 360;\n\t\t\t\t\t\tvar s = parseInt( color[ 2 ], 10 ) / 100;\n\t\t\t\t\t\tvar l = parseInt( color[ 3 ], 10 ) / 100;\n\n\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\treturn this.setHSL( h, s, l );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t} else if ( m = /^\\#([A-Fa-f0-9]+)$/.exec( style ) ) {\n\n\t\t\t// hex color\n\n\t\t\tvar hex = m[ 1 ];\n\t\t\tvar size = hex.length;\n\n\t\t\tif ( size === 3 ) {\n\n\t\t\t\t// #ff0\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;\n\n\t\t\t\treturn this;\n\n\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t// #ff0000\n\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\tthis.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;\n\t\t\t\tthis.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( style && style.length > 0 ) {\n\n\t\t\t// color keywords\n\t\t\tvar hex = ColorKeywords[ style ];\n\n\t\t\tif ( hex !== undefined ) {\n\n\t\t\t\t// red\n\t\t\t\tthis.setHex( hex );\n\n\t\t\t} else {\n\n\t\t\t\t// unknown color\n\t\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t},\n\n\tcopy: function ( color ) {\n\n\t\tthis.r = color.r;\n\t\tthis.g = color.g;\n\t\tthis.b = color.b;\n\n\t\treturn this;\n\n\t},\n\n\tcopyGammaToLinear: function ( color, gammaFactor ) {\n\n\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\n\n\t\tthis.r = Math.pow( color.r, gammaFactor );\n\t\tthis.g = Math.pow( color.g, gammaFactor );\n\t\tthis.b = Math.pow( color.b, gammaFactor );\n\n\t\treturn this;\n\n\t},\n\n\tcopyLinearToGamma: function ( color, gammaFactor ) {\n\n\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\n\n\t\tvar safeInverse = ( gammaFactor > 0 ) ? ( 1.0 / gammaFactor ) : 1.0;\n\n\t\tthis.r = Math.pow( color.r, safeInverse );\n\t\tthis.g = Math.pow( color.g, safeInverse );\n\t\tthis.b = Math.pow( color.b, safeInverse );\n\n\t\treturn this;\n\n\t},\n\n\tconvertGammaToLinear: function () {\n\n\t\tvar r = this.r, g = this.g, b = this.b;\n\n\t\tthis.r = r * r;\n\t\tthis.g = g * g;\n\t\tthis.b = b * b;\n\n\t\treturn this;\n\n\t},\n\n\tconvertLinearToGamma: function () {\n\n\t\tthis.r = Math.sqrt( this.r );\n\t\tthis.g = Math.sqrt( this.g );\n\t\tthis.b = Math.sqrt( this.b );\n\n\t\treturn this;\n\n\t},\n\n\tgetHex: function () {\n\n\t\treturn ( this.r * 255 ) << 16 ^ ( this.g * 255 ) << 8 ^ ( this.b * 255 ) << 0;\n\n\t},\n\n\tgetHexString: function () {\n\n\t\treturn ( '000000' + this.getHex().toString( 16 ) ).slice( - 6 );\n\n\t},\n\n\tgetHSL: function ( optionalTarget ) {\n\n\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\tvar hsl = optionalTarget || { h: 0, s: 0, l: 0 };\n\n\t\tvar r = this.r, g = this.g, b = this.b;\n\n\t\tvar max = Math.max( r, g, b );\n\t\tvar min = Math.min( r, g, b );\n\n\t\tvar hue, saturation;\n\t\tvar lightness = ( min + max ) / 2.0;\n\n\t\tif ( min === max ) {\n\n\t\t\thue = 0;\n\t\t\tsaturation = 0;\n\n\t\t} else {\n\n\t\t\tvar delta = max - min;\n\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\tswitch ( max ) {\n\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t}\n\n\t\t\thue /= 6;\n\n\t\t}\n\n\t\thsl.h = hue;\n\t\thsl.s = saturation;\n\t\thsl.l = lightness;\n\n\t\treturn hsl;\n\n\t},\n\n\tgetStyle: function () {\n\n\t\treturn 'rgb(' + ( ( this.r * 255 ) | 0 ) + ',' + ( ( this.g * 255 ) | 0 ) + ',' + ( ( this.b * 255 ) | 0 ) + ')';\n\n\t},\n\n\toffsetHSL: function ( h, s, l ) {\n\n\t\tvar hsl = this.getHSL();\n\n\t\thsl.h += h; hsl.s += s; hsl.l += l;\n\n\t\tthis.setHSL( hsl.h, hsl.s, hsl.l );\n\n\t\treturn this;\n\n\t},\n\n\tadd: function ( color ) {\n\n\t\tthis.r += color.r;\n\t\tthis.g += color.g;\n\t\tthis.b += color.b;\n\n\t\treturn this;\n\n\t},\n\n\taddColors: function ( color1, color2 ) {\n\n\t\tthis.r = color1.r + color2.r;\n\t\tthis.g = color1.g + color2.g;\n\t\tthis.b = color1.b + color2.b;\n\n\t\treturn this;\n\n\t},\n\n\taddScalar: function ( s ) {\n\n\t\tthis.r += s;\n\t\tthis.g += s;\n\t\tthis.b += s;\n\n\t\treturn this;\n\n\t},\n\n\tsub: function ( color ) {\n\n\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\treturn this;\n\n\t},\n\n\tmultiply: function ( color ) {\n\n\t\tthis.r *= color.r;\n\t\tthis.g *= color.g;\n\t\tthis.b *= color.b;\n\n\t\treturn this;\n\n\t},\n\n\tmultiplyScalar: function ( s ) {\n\n\t\tthis.r *= s;\n\t\tthis.g *= s;\n\t\tthis.b *= s;\n\n\t\treturn this;\n\n\t},\n\n\tlerp: function ( color, alpha ) {\n\n\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( c ) {\n\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t},\n\n\tfromArray: function ( array, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.r = array[ offset ];\n\t\tthis.g = array[ offset + 1 ];\n\t\tthis.b = array[ offset + 2 ];\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this.r;\n\t\tarray[ offset + 1 ] = this.g;\n\t\tarray[ offset + 2 ] = this.b;\n\n\t\treturn array;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\treturn this.getHex();\n\n\t}\n\n} );\n\n/**\n * Uniforms library for shared webgl shaders\n */\n\nvar UniformsLib = {\n\n\tcommon: {\n\n\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\topacity: { value: 1.0 },\n\n\t\tmap: { value: null },\n\t\tuvTransform: { value: new Matrix3() },\n\n\t\talphaMap: { value: null },\n\n\t},\n\n\tspecularmap: {\n\n\t\tspecularMap: { value: null },\n\n\t},\n\n\tenvmap: {\n\n\t\tenvMap: { value: null },\n\t\tflipEnvMap: { value: - 1 },\n\t\treflectivity: { value: 1.0 },\n\t\trefractionRatio: { value: 0.98 }\n\n\t},\n\n\taomap: {\n\n\t\taoMap: { value: null },\n\t\taoMapIntensity: { value: 1 }\n\n\t},\n\n\tlightmap: {\n\n\t\tlightMap: { value: null },\n\t\tlightMapIntensity: { value: 1 }\n\n\t},\n\n\temissivemap: {\n\n\t\temissiveMap: { value: null }\n\n\t},\n\n\tbumpmap: {\n\n\t\tbumpMap: { value: null },\n\t\tbumpScale: { value: 1 }\n\n\t},\n\n\tnormalmap: {\n\n\t\tnormalMap: { value: null },\n\t\tnormalScale: { value: new Vector2( 1, 1 ) }\n\n\t},\n\n\tdisplacementmap: {\n\n\t\tdisplacementMap: { value: null },\n\t\tdisplacementScale: { value: 1 },\n\t\tdisplacementBias: { value: 0 }\n\n\t},\n\n\troughnessmap: {\n\n\t\troughnessMap: { value: null }\n\n\t},\n\n\tmetalnessmap: {\n\n\t\tmetalnessMap: { value: null }\n\n\t},\n\n\tgradientmap: {\n\n\t\tgradientMap: { value: null }\n\n\t},\n\n\tfog: {\n\n\t\tfogDensity: { value: 0.00025 },\n\t\tfogNear: { value: 1 },\n\t\tfogFar: { value: 2000 },\n\t\tfogColor: { value: new Color( 0xffffff ) }\n\n\t},\n\n\tlights: {\n\n\t\tambientLightColor: { value: [] },\n\n\t\tdirectionalLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tcolor: {},\n\n\t\t\tshadow: {},\n\t\t\tshadowBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tdirectionalShadowMap: { value: [] },\n\t\tdirectionalShadowMatrix: { value: [] },\n\n\t\tspotLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdirection: {},\n\t\t\tdistance: {},\n\t\t\tconeCos: {},\n\t\t\tpenumbraCos: {},\n\t\t\tdecay: {},\n\n\t\t\tshadow: {},\n\t\t\tshadowBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {}\n\t\t} },\n\n\t\tspotShadowMap: { value: [] },\n\t\tspotShadowMatrix: { value: [] },\n\n\t\tpointLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\tdecay: {},\n\t\t\tdistance: {},\n\n\t\t\tshadow: {},\n\t\t\tshadowBias: {},\n\t\t\tshadowRadius: {},\n\t\t\tshadowMapSize: {},\n\t\t\tshadowCameraNear: {},\n\t\t\tshadowCameraFar: {}\n\t\t} },\n\n\t\tpointShadowMap: { value: [] },\n\t\tpointShadowMatrix: { value: [] },\n\n\t\themisphereLights: { value: [], properties: {\n\t\t\tdirection: {},\n\t\t\tskyColor: {},\n\t\t\tgroundColor: {}\n\t\t} },\n\n\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n\t\trectAreaLights: { value: [], properties: {\n\t\t\tcolor: {},\n\t\t\tposition: {},\n\t\t\twidth: {},\n\t\t\theight: {}\n\t\t} }\n\n\t},\n\n\tpoints: {\n\n\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\topacity: { value: 1.0 },\n\t\tsize: { value: 1.0 },\n\t\tscale: { value: 1.0 },\n\t\tmap: { value: null },\n\t\tuvTransform: { value: new Matrix3() }\n\n\t}\n\n};\n\n/**\n * Uniform Utilities\n */\n\nvar UniformsUtils = {\n\n\tmerge: function ( uniforms ) {\n\n\t\tvar merged = {};\n\n\t\tfor ( var u = 0; u < uniforms.length; u ++ ) {\n\n\t\t\tvar tmp = this.clone( uniforms[ u ] );\n\n\t\t\tfor ( var p in tmp ) {\n\n\t\t\t\tmerged[ p ] = tmp[ p ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn merged;\n\n\t},\n\n\tclone: function ( uniforms_src ) {\n\n\t\tvar uniforms_dst = {};\n\n\t\tfor ( var u in uniforms_src ) {\n\n\t\t\tuniforms_dst[ u ] = {};\n\n\t\t\tfor ( var p in uniforms_src[ u ] ) {\n\n\t\t\t\tvar parameter_src = uniforms_src[ u ][ p ];\n\n\t\t\t\tif ( parameter_src && ( parameter_src.isColor ||\n\t\t\t\t\tparameter_src.isMatrix3 || parameter_src.isMatrix4 ||\n\t\t\t\t\tparameter_src.isVector2 || parameter_src.isVector3 || parameter_src.isVector4 ||\n\t\t\t\t\tparameter_src.isTexture ) ) {\n\n\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.clone();\n\n\t\t\t\t} else if ( Array.isArray( parameter_src ) ) {\n\n\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.slice();\n\n\t\t\t\t} else {\n\n\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn uniforms_dst;\n\n\t}\n\n};\n\nvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\\n\";\n\nvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\\n\";\n\nvar alphatest_fragment = \"#ifdef ALPHATEST\\n\\tif ( diffuseColor.a < ALPHATEST ) discard;\\n#endif\\n\";\n\nvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\\n\\t#endif\\n#endif\\n\";\n\nvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n\nvar begin_vertex = \"\\nvec3 transformed = vec3( position );\\n\";\n\nvar beginnormal_vertex = \"\\nvec3 objectNormal = vec3( normal );\\n\";\n\nvar bsdfs = \"float punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n\\tif( decayExponent > 0.0 ) {\\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\t\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\t\\tfloat maxDistanceCutoffFactor = pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t\\treturn distanceFalloff * maxDistanceCutoffFactor;\\n#else\\n\\t\\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n#endif\\n\\t}\\n\\treturn 1.0;\\n}\\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\\n\\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n}\\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\treturn 1.0 / ( gl * gv );\\n}\\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( G * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE  = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS  = 0.5 / LUT_SIZE;\\n\\tfloat theta = acos( dot( N, V ) );\\n\\tvec2 uv = vec2(\\n\\t\\tsqrt( saturate( roughness ) ),\\n\\t\\tsaturate( theta / ( 0.5 * PI ) ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.86267 + (0.49788 + 0.01436 * y ) * y;\\n\\tfloat b = 3.45068 + (4.18814 + y) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = (x > 0.0) ? v : 0.5 * inversesqrt( 1.0 - x * x ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tvec3 result = vec3( LTC_ClippedSphereFormFactor( vectorFormFactor ) );\\n\\treturn result;\\n}\\nvec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\tvec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;\\n\\treturn specularColor * AB.x + AB.y;\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\\n\\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\\n}\\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\\n\\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\\n}\\n\";\n\nvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\\t\\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\\n\\t\\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 );\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\\n\";\n\nvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; ++ i ) {\\n\\t\\tvec4 plane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t\\t\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; ++ i ) {\\n\\t\\t\\tvec4 plane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\tif ( clipped ) discard;\\n\\t\\n\\t#endif\\n#endif\\n\";\n\nvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\t#if ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\t\\tvarying vec3 vViewPosition;\\n\\t#endif\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\\n\";\n\nvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n\";\n\nvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n\";\n\nvar color_fragment = \"#ifdef USE_COLOR\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n\nvar color_pars_fragment = \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\\n\";\n\nvar color_pars_vertex = \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\";\n\nvar color_vertex = \"#ifdef USE_COLOR\\n\\tvColor.xyz = color.xyz;\\n#endif\";\n\nvar common = \"#define PI 3.14159265359\\n#define PI2 6.28318530718\\n#define PI_HALF 1.5707963267949\\n#define RECIPROCAL_PI 0.31830988618\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#define whiteCompliment(a) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract(sin(sn) * c);\\n}\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\treturn - distance * planeNormal + point;\\n}\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n}\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat linearToRelativeLuminance( const in vec3 color ) {\\n\\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\\n\\treturn dot( weights, color.rgb );\\n}\\n\";\n\nvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n#define cubeUV_textureSize (1024.0)\\nint getFaceFromDirection(vec3 direction) {\\n\\tvec3 absDirection = abs(direction);\\n\\tint face = -1;\\n\\tif( absDirection.x > absDirection.z ) {\\n\\t\\tif(absDirection.x > absDirection.y )\\n\\t\\t\\tface = direction.x > 0.0 ? 0 : 3;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\telse {\\n\\t\\tif(absDirection.z > absDirection.y )\\n\\t\\t\\tface = direction.z > 0.0 ? 2 : 5;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\treturn face;\\n}\\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\\n\\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\\n\\tfloat dxRoughness = dFdx(roughness);\\n\\tfloat dyRoughness = dFdy(roughness);\\n\\tvec3 dx = dFdx( vec * scale * dxRoughness );\\n\\tvec3 dy = dFdy( vec * scale * dyRoughness );\\n\\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\\n\\td = clamp(d, 1.0, cubeUV_rangeClamp);\\n\\tfloat mipLevel = 0.5 * log2(d);\\n\\treturn vec2(floor(mipLevel), fract(mipLevel));\\n}\\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\\n\\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\\n\\tfloat a = 16.0 * cubeUV_rcpTextureSize;\\n\\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\\n\\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\\n\\tfloat powScale = exp2_packed.x * exp2_packed.y;\\n\\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\\n\\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\\n\\tbool bRes = mipLevel == 0.0;\\n\\tscale =  bRes && (scale < a) ? a : scale;\\n\\tvec3 r;\\n\\tvec2 offset;\\n\\tint face = getFaceFromDirection(direction);\\n\\tfloat rcpPowScale = 1.0 / powScale;\\n\\tif( face == 0) {\\n\\t\\tr = vec3(direction.x, -direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 1) {\\n\\t\\tr = vec3(direction.y, direction.x, direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 2) {\\n\\t\\tr = vec3(direction.z, direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 3) {\\n\\t\\tr = vec3(direction.x, direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\telse if( face == 4) {\\n\\t\\tr = vec3(direction.y, direction.x, -direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\telse {\\n\\t\\tr = vec3(direction.z, -direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\tr = normalize(r);\\n\\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\\n\\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\\n\\tvec2 base = offset + vec2( texelOffset );\\n\\treturn base + s * ( scale - 2.0 * texelOffset );\\n}\\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\\nvec4 textureCubeUV(vec3 reflectedDirection, float roughness ) {\\n\\tfloat roughnessVal = roughness* cubeUV_maxLods3;\\n\\tfloat r1 = floor(roughnessVal);\\n\\tfloat r2 = r1 + 1.0;\\n\\tfloat t = fract(roughnessVal);\\n\\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\\n\\tfloat s = mipInfo.y;\\n\\tfloat level0 = mipInfo.x;\\n\\tfloat level1 = level0 + 1.0;\\n\\tlevel1 = level1 > 5.0 ? 5.0 : level1;\\n\\tlevel0 += min( floor( s + 0.5 ), 5.0 );\\n\\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\\n\\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\\n\\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\\n\\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\\n\\tvec4 result = mix(color10, color20, t);\\n\\treturn vec4(result.rgb, 1.0);\\n}\\n#endif\\n\";\n\nvar defaultnormal_vertex = \"vec3 transformedNormal = normalMatrix * objectNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n\";\n\nvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\\n\";\n\nvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );\\n#endif\\n\";\n\nvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\\n\";\n\nvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\\n\";\n\nvar encodings_fragment = \"  gl_FragColor = linearToOutputTexel( gl_FragColor );\\n\";\n\nvar encodings_pars_fragment = \"\\nvec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );\\n}\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );\\n}\\nvec4 sRGBToLinear( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );\\n}\\nvec4 RGBEToLinear( in vec4 value ) {\\n\\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\n}\\nvec4 LinearToRGBE( in vec4 value ) {\\n\\tfloat maxComponent = max( max( value.r, value.g ), value.b );\\n\\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\n\\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\\n}\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.xyz * value.w * maxRange, 1.0 );\\n}\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\\n\\tfloat M      = clamp( maxRGB / maxRange, 0.0, 1.0 );\\n\\tM            = ceil( M * 255.0 ) / 255.0;\\n\\treturn vec4( value.rgb / ( M * maxRange ), M );\\n}\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\\n}\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.x, max( value.g, value.b ) );\\n\\tfloat D      = max( maxRange / maxRGB, 1.0 );\\n\\tD            = min( floor( D ) / 255.0, 1.0 );\\n\\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\\n}\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\nvec4 LinearToLogLuv( in vec4 value )  {\\n\\tvec3 Xp_Y_XYZp = value.rgb * cLogLuvM;\\n\\tXp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));\\n\\tvec4 vResult;\\n\\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\\n\\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\n\\tvResult.w = fract(Le);\\n\\tvResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;\\n\\treturn vResult;\\n}\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\nvec4 LogLuvToLinear( in vec4 value ) {\\n\\tfloat Le = value.z * 255.0 + value.w;\\n\\tvec3 Xp_Y_XYZp;\\n\\tXp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);\\n\\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\\n\\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\n\\tvec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;\\n\\treturn vec4( max(vRGB, 0.0), 1.0 );\\n}\\n\";\n\nvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\tvec2 sampleUV;\\n\\t\\treflectVec = normalize( reflectVec );\\n\\t\\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\t\\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\tvec4 envColor = texture2D( envMap, sampleUV );\\n\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\treflectVec = normalize( reflectVec );\\n\\t\\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\\n\\t\\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\tenvColor = envMapTexelToLinear( envColor );\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\\n\";\n\nvar envmap_pars_fragment = \"#if defined( USE_ENVMAP ) || defined( PHYSICAL )\\n\\tuniform float reflectivity;\\n\\tuniform float envMapIntensity;\\n#endif\\n#ifdef USE_ENVMAP\\n\\t#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\tuniform float flipEnvMap;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\\n\";\n\nvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\\n\";\n\nvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\\n\";\n\nvar fog_vertex = \"\\n#ifdef USE_FOG\\nfogDepth = -mvPosition.z;\\n#endif\";\n\nvar fog_pars_vertex = \"#ifdef USE_FOG\\n  varying float fogDepth;\\n#endif\\n\";\n\nvar fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 ) );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\\n\";\n\nvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float fogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\\n\";\n\nvar gradientmap_pars_fragment = \"#ifdef TOON\\n\\tuniform sampler2D gradientMap;\\n\\tvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\t\\tfloat dotNL = dot( normal, lightDirection );\\n\\t\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t\\t#ifdef USE_GRADIENTMAP\\n\\t\\t\\treturn texture2D( gradientMap, coord ).rgb;\\n\\t\\t#else\\n\\t\\t\\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\";\n\nvar lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n#endif\\n\";\n\nvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n\nvar lights_lambert_vertex = \"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\\tvLightBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\n#if NUM_POINT_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\tvLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\";\n\nvar lights_pars = \"uniform vec3 ambientLightColor;\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treturn irradiance;\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tdirectLight.color = directionalLight.color;\\n\\t\\tdirectLight.direction = directionalLight.direction;\\n\\t\\tdirectLight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t\\tfloat shadowCameraNear;\\n\\t\\tfloat shadowCameraFar;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tdirectLight.color = pointLight.color;\\n\\t\\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tfloat angleCos = dot( directLight.direction, spotLight.direction );\\n\\t\\tif ( angleCos > spotLight.coneCos ) {\\n\\t\\t\\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\t\\tdirectLight.color = spotLight.color;\\n\\t\\t\\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tdirectLight.visible = true;\\n\\t\\t} else {\\n\\t\\t\\tdirectLight.color = vec3( 0.0 );\\n\\t\\t\\tdirectLight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltcMat;\\tuniform sampler2D ltcMag;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\\n\\t\\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tirradiance *= PI;\\n\\t\\t#endif\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\\n#if defined( USE_ENVMAP ) && defined( PHYSICAL )\\n\\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\\n\\t\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( queryVec, 1.0 );\\n\\t\\t#else\\n\\t\\t\\tvec4 envMapColor = vec4( 0.0 );\\n\\t\\t#endif\\n\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t}\\n\\tfloat getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\tfloat maxMIPLevelScalar = float( maxMIPLevel );\\n\\t\\tfloat desiredMIPLevel = maxMIPLevelScalar + 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );\\n\\t\\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\\n\\t}\\n\\tvec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );\\n\\t\\t#endif\\n\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\tfloat specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV(queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent));\\n\\t\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\t\\tvec2 sampleUV;\\n\\t\\t\\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\t\\t\\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\t\\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#endif\\n\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t}\\n#endif\\n\";\n\nvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\\n\";\n\nvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\nstruct BlinnPhongMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tvec3\\tspecularColor;\\n\\tfloat\\tspecularShininess;\\n\\tfloat\\tspecularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t#ifdef TOON\\n\\t\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\t#else\\n\\t\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\t\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#endif\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\\t(0)\\n\";\n\nvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\\n#ifdef STANDARD\\n\\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\\n\\tmaterial.clearCoat = saturate( clearCoat );\\tmaterial.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );\\n#endif\\n\";\n\nvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tfloat\\tspecularRoughness;\\n\\tvec3\\tspecularColor;\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoat;\\n\\t\\tfloat clearCoatRoughness;\\n\\t#endif\\n};\\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\\nfloat clearCoatDHRApprox( const in float roughness, const in float dotNL ) {\\n\\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometry.normal;\\n\\t\\tvec3 viewDir = geometry.viewDir;\\n\\t\\tvec3 position = geometry.position;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.specularRoughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos - halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos + halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos + halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos - halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tfloat norm = texture2D( ltcMag, uv ).a;\\n\\t\\tvec4 t = texture2D( ltcMat, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3(   1,   0, t.y ),\\n\\t\\t\\tvec3(   0, t.z,   0 ),\\n\\t\\t\\tvec3( t.w,   0, t.x )\\n\\t\\t);\\n\\t\\treflectedLight.directSpecular += lightColor * material.specularColor * norm * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\t#ifndef STANDARD\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\treflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );\\n\\treflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t#ifndef STANDARD\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\tfloat dotNL = dotNV;\\n\\t\\tfloat clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );\\n\\t#else\\n\\t\\tfloat clearCoatDHR = 0.0;\\n\\t#endif\\n\\treflectedLight.indirectSpecular += ( 1.0 - clearCoatDHR ) * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );\\n\\t#ifndef STANDARD\\n\\t\\treflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );\\n\\t#endif\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\n#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )\\n#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\\n\";\n\nvar lights_template = \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = normalize( vViewPosition );\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\\n\\t\\t#ifdef USE_SHADOWMAP\\n\\t\\tdirectLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tlightMapIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t}\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tirradiance += getLightProbeIndirectIrradiance( geometry, 8 );\\n\\t#endif\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tvec3 radiance = getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), 8 );\\n\\t#ifndef STANDARD\\n\\t\\tvec3 clearCoatRadiance = getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), 8 );\\n\\t#else\\n\\t\\tvec3 clearCoatRadiance = vec3( 0.0 );\\n\\t#endif\\n\\tRE_IndirectSpecular( radiance, clearCoatRadiance, geometry, material, reflectedLight );\\n#endif\\n\";\n\nvar logdepthbuf_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";\n\nvar logdepthbuf_pars_fragment = \"#ifdef USE_LOGDEPTHBUF\\n\\tuniform float logDepthBufFC;\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t#endif\\n#endif\\n\";\n\nvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t#endif\\n\\tuniform float logDepthBufFC;\\n#endif\";\n\nvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t#else\\n\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\tgl_Position.z *= gl_Position.w;\\n\\t#endif\\n#endif\\n\";\n\nvar map_fragment = \"#ifdef USE_MAP\\n\\tvec4 texelColor = texture2D( map, vUv );\\n\\ttexelColor = mapTexelToLinear( texelColor );\\n\\tdiffuseColor *= texelColor;\\n#endif\\n\";\n\nvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n\";\n\nvar map_particle_fragment = \"#ifdef USE_MAP\\n\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n\\tvec4 mapTexel = texture2D( map, uv );\\n\\tdiffuseColor *= mapTexelToLinear( mapTexel );\\n#endif\\n\";\n\nvar map_particle_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform mat3 uvTransform;\\n\\tuniform sampler2D map;\\n#endif\\n\";\n\nvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\\n\";\n\nvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n\nvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\n\\tobjectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\n\\tobjectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\n\\tobjectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\n#endif\\n\";\n\nvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\t#ifndef USE_MORPHNORMALS\\n\\tuniform float morphTargetInfluences[ 8 ];\\n\\t#else\\n\\tuniform float morphTargetInfluences[ 4 ];\\n\\t#endif\\n#endif\";\n\nvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\\n\\ttransformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\\n\\ttransformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\\n\\ttransformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\\n\\t#ifndef USE_MORPHNORMALS\\n\\ttransformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\\n\\ttransformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\\n\\ttransformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\\n\\ttransformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\\n\\t#endif\\n#endif\\n\";\n\nvar normal_fragment = \"#ifdef FLAT_SHADED\\n\\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t#endif\\n#endif\\n#ifdef USE_NORMALMAP\\n\\tnormal = perturbNormal2Arb( -vViewPosition, normal );\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n#endif\\n\";\n\nvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\\n\\t\\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\\n\\t\\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\\n\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\\n\\t\\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\\n\\t\\tvec3 N = normalize( surf_norm );\\n\\t\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t\\tmapN.xy = normalScale * mapN.xy;\\n\\t\\tmat3 tsn = mat3( S, T, N );\\n\\t\\treturn normalize( tsn * mapN );\\n\\t}\\n#endif\\n\";\n\nvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n\\treturn linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\\n\";\n\nvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\\n\";\n\nvar project_vertex = \"vec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );\\ngl_Position = projectionMatrix * mvPosition;\\n\";\n\nvar dithering_fragment = \"#if defined( DITHERING )\\n  gl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\\n\";\n\nvar dithering_pars_fragment = \"#if defined( DITHERING )\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\\n\";\n\nvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\\n\";\n\nvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n\nvar shadowmap_pars_fragment = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\\n\\t\\tconst vec2 offset = vec2( 0.0, 1.0 );\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / size;\\n\\t\\tvec2 centroidUV = floor( uv * size + 0.5 ) / size;\\n\\t\\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\\n\\t\\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\\n\\t\\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\\n\\t\\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\\n\\t\\tvec2 f = fract( uv * size + 0.5 );\\n\\t\\tfloat a = mix( lb, lt, f.y );\\n\\t\\tfloat b = mix( rb, rt, f.y );\\n\\t\\tfloat c = mix( a, b, f.x );\\n\\t\\treturn c;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\\n\";\n\nvar shadowmap_pars_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\t\\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];\\n\\t#endif\\n#endif\\n\";\n\nvar shadowmap_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n#endif\\n\";\n\nvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHTS > 0\\n\\tDirectionalLight directionalLight;\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tshadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHTS > 0\\n\\tSpotLight spotLight;\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tshadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHTS > 0\\n\\tPointLight pointLight;\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tshadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\\n\";\n\nvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n\nvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\t#ifdef BONE_TEXTURE\\n\\t\\tuniform sampler2D boneTexture;\\n\\t\\tuniform int boneTextureSize;\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tfloat j = i * 4.0;\\n\\t\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\t\\tfloat y = floor( j / float( boneTextureSize ) );\\n\\t\\t\\tfloat dx = 1.0 / float( boneTextureSize );\\n\\t\\t\\tfloat dy = 1.0 / float( boneTextureSize );\\n\\t\\t\\ty = dy * ( y + 0.5 );\\n\\t\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#else\\n\\t\\tuniform mat4 boneMatrices[ MAX_BONES ];\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tmat4 bone = boneMatrices[ int(i) ];\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#endif\\n#endif\\n\";\n\nvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\\n\";\n\nvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n#endif\\n\";\n\nvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n\nvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n\nvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\\n\";\n\nvar tonemapping_pars_fragment = \"#ifndef saturate\\n\\t#define saturate(a) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nuniform float toneMappingWhitePoint;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\\nvec3 Uncharted2ToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\n\";\n\nvar uv_pars_fragment = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n#endif\";\n\nvar uv_pars_vertex = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvarying vec2 vUv;\\n\\tuniform mat3 uvTransform;\\n#endif\\n\";\n\nvar uv_vertex = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n#endif\";\n\nvar uv2_pars_fragment = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif\";\n\nvar uv2_pars_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n#endif\";\n\nvar uv2_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = uv2;\\n#endif\";\n\nvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\\n\\tvec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );\\n#endif\\n\";\n\nvar cube_frag = \"uniform samplerCube tCube;\\nuniform float tFlip;\\nuniform float opacity;\\nvarying vec3 vWorldPosition;\\nvoid main() {\\n\\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\\n\\tgl_FragColor.a *= opacity;\\n}\\n\";\n\nvar cube_vert = \"varying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvWorldPosition = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\\n\";\n\nvar depth_frag = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( gl_FragCoord.z ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\\n\\t#endif\\n}\\n\";\n\nvar depth_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n}\\n\";\n\nvar distanceRGBA_frag = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\\n\";\n\nvar distanceRGBA_vert = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\\n\";\n\nvar equirect_frag = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldPosition );\\n\\tvec2 sampleUV;\\n\\tsampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tgl_FragColor = texture2D( tEquirect, sampleUV );\\n}\\n\";\n\nvar equirect_vert = \"varying vec3 vWorldPosition;\\n#include <common>\\nvoid main() {\\n\\tvWorldPosition = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\\n\";\n\nvar linedashed_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\nvar linedashed_vert = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\tvLineDistance = scale * lineDistance;\\n\\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar meshbasic_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\treflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\nvar meshbasic_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_ENVMAP\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar meshlambert_frag = \"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <emissivemap_fragment>\\n\\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\\n\\t#include <lightmap_fragment>\\n\\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\\t#else\\n\\t\\treflectedLight.directDiffuse = vLightFront;\\n\\t#endif\\n\\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n\";\n\nvar meshlambert_vert = \"#define LAMBERT\\nvarying vec3 vLightFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <lights_lambert_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar meshphong_frag = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_template>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n\";\n\nvar meshphong_vert = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar meshphysical_frag = \"#define PHYSICAL\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifndef STANDARD\\n\\tuniform float clearCoat;\\n\\tuniform float clearCoatRoughness;\\n#endif\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <cube_uv_reflection_fragment>\\n#include <lights_pars>\\n#include <lights_physical_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_template>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\\n\";\n\nvar meshphysical_vert = \"#define PHYSICAL\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar normal_frag = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\nvoid main() {\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n}\\n\";\n\nvar normal_vert = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\\n\";\n\nvar points_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\\n\";\n\nvar points_vert = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tgl_PointSize = size * ( scale / - mvPosition.z );\\n\\t#else\\n\\t\\tgl_PointSize = size;\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar shadow_frag = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <fog_fragment>\\n}\\n\";\n\nvar shadow_vert = \"#include <fog_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\\n\";\n\nvar ShaderChunk = {\n\talphamap_fragment: alphamap_fragment,\n\talphamap_pars_fragment: alphamap_pars_fragment,\n\talphatest_fragment: alphatest_fragment,\n\taomap_fragment: aomap_fragment,\n\taomap_pars_fragment: aomap_pars_fragment,\n\tbegin_vertex: begin_vertex,\n\tbeginnormal_vertex: beginnormal_vertex,\n\tbsdfs: bsdfs,\n\tbumpmap_pars_fragment: bumpmap_pars_fragment,\n\tclipping_planes_fragment: clipping_planes_fragment,\n\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\n\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\n\tclipping_planes_vertex: clipping_planes_vertex,\n\tcolor_fragment: color_fragment,\n\tcolor_pars_fragment: color_pars_fragment,\n\tcolor_pars_vertex: color_pars_vertex,\n\tcolor_vertex: color_vertex,\n\tcommon: common,\n\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\n\tdefaultnormal_vertex: defaultnormal_vertex,\n\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\n\tdisplacementmap_vertex: displacementmap_vertex,\n\temissivemap_fragment: emissivemap_fragment,\n\temissivemap_pars_fragment: emissivemap_pars_fragment,\n\tencodings_fragment: encodings_fragment,\n\tencodings_pars_fragment: encodings_pars_fragment,\n\tenvmap_fragment: envmap_fragment,\n\tenvmap_pars_fragment: envmap_pars_fragment,\n\tenvmap_pars_vertex: envmap_pars_vertex,\n\tenvmap_vertex: envmap_vertex,\n\tfog_vertex: fog_vertex,\n\tfog_pars_vertex: fog_pars_vertex,\n\tfog_fragment: fog_fragment,\n\tfog_pars_fragment: fog_pars_fragment,\n\tgradientmap_pars_fragment: gradientmap_pars_fragment,\n\tlightmap_fragment: lightmap_fragment,\n\tlightmap_pars_fragment: lightmap_pars_fragment,\n\tlights_lambert_vertex: lights_lambert_vertex,\n\tlights_pars: lights_pars,\n\tlights_phong_fragment: lights_phong_fragment,\n\tlights_phong_pars_fragment: lights_phong_pars_fragment,\n\tlights_physical_fragment: lights_physical_fragment,\n\tlights_physical_pars_fragment: lights_physical_pars_fragment,\n\tlights_template: lights_template,\n\tlogdepthbuf_fragment: logdepthbuf_fragment,\n\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n\tlogdepthbuf_vertex: logdepthbuf_vertex,\n\tmap_fragment: map_fragment,\n\tmap_pars_fragment: map_pars_fragment,\n\tmap_particle_fragment: map_particle_fragment,\n\tmap_particle_pars_fragment: map_particle_pars_fragment,\n\tmetalnessmap_fragment: metalnessmap_fragment,\n\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\n\tmorphnormal_vertex: morphnormal_vertex,\n\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\n\tmorphtarget_vertex: morphtarget_vertex,\n\tnormal_fragment: normal_fragment,\n\tnormalmap_pars_fragment: normalmap_pars_fragment,\n\tpacking: packing,\n\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\n\tproject_vertex: project_vertex,\n\tdithering_fragment: dithering_fragment,\n\tdithering_pars_fragment: dithering_pars_fragment,\n\troughnessmap_fragment: roughnessmap_fragment,\n\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\n\tshadowmap_pars_fragment: shadowmap_pars_fragment,\n\tshadowmap_pars_vertex: shadowmap_pars_vertex,\n\tshadowmap_vertex: shadowmap_vertex,\n\tshadowmask_pars_fragment: shadowmask_pars_fragment,\n\tskinbase_vertex: skinbase_vertex,\n\tskinning_pars_vertex: skinning_pars_vertex,\n\tskinning_vertex: skinning_vertex,\n\tskinnormal_vertex: skinnormal_vertex,\n\tspecularmap_fragment: specularmap_fragment,\n\tspecularmap_pars_fragment: specularmap_pars_fragment,\n\ttonemapping_fragment: tonemapping_fragment,\n\ttonemapping_pars_fragment: tonemapping_pars_fragment,\n\tuv_pars_fragment: uv_pars_fragment,\n\tuv_pars_vertex: uv_pars_vertex,\n\tuv_vertex: uv_vertex,\n\tuv2_pars_fragment: uv2_pars_fragment,\n\tuv2_pars_vertex: uv2_pars_vertex,\n\tuv2_vertex: uv2_vertex,\n\tworldpos_vertex: worldpos_vertex,\n\n\tcube_frag: cube_frag,\n\tcube_vert: cube_vert,\n\tdepth_frag: depth_frag,\n\tdepth_vert: depth_vert,\n\tdistanceRGBA_frag: distanceRGBA_frag,\n\tdistanceRGBA_vert: distanceRGBA_vert,\n\tequirect_frag: equirect_frag,\n\tequirect_vert: equirect_vert,\n\tlinedashed_frag: linedashed_frag,\n\tlinedashed_vert: linedashed_vert,\n\tmeshbasic_frag: meshbasic_frag,\n\tmeshbasic_vert: meshbasic_vert,\n\tmeshlambert_frag: meshlambert_frag,\n\tmeshlambert_vert: meshlambert_vert,\n\tmeshphong_frag: meshphong_frag,\n\tmeshphong_vert: meshphong_vert,\n\tmeshphysical_frag: meshphysical_frag,\n\tmeshphysical_vert: meshphysical_vert,\n\tnormal_frag: normal_frag,\n\tnormal_vert: normal_vert,\n\tpoints_frag: points_frag,\n\tpoints_vert: points_vert,\n\tshadow_frag: shadow_frag,\n\tshadow_vert: shadow_vert\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n */\n\nvar ShaderLib = {\n\n\tbasic: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshbasic_vert,\n\t\tfragmentShader: ShaderChunk.meshbasic_frag\n\n\t},\n\n\tlambert: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshlambert_vert,\n\t\tfragmentShader: ShaderChunk.meshlambert_frag\n\n\t},\n\n\tphong: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.specularmap,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.gradientmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\tspecular: { value: new Color( 0x111111 ) },\n\t\t\t\tshininess: { value: 30 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphong_vert,\n\t\tfragmentShader: ShaderChunk.meshphong_frag\n\n\t},\n\n\tstandard: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.envmap,\n\t\t\tUniformsLib.aomap,\n\t\t\tUniformsLib.lightmap,\n\t\t\tUniformsLib.emissivemap,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\tUniformsLib.roughnessmap,\n\t\t\tUniformsLib.metalnessmap,\n\t\t\tUniformsLib.fog,\n\t\t\tUniformsLib.lights,\n\t\t\t{\n\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\troughness: { value: 0.5 },\n\t\t\t\tmetalness: { value: 0.5 },\n\t\t\t\tenvMapIntensity: { value: 1 } // temporary\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t},\n\n\tpoints: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.points,\n\t\t\tUniformsLib.fog\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.points_vert,\n\t\tfragmentShader: ShaderChunk.points_frag\n\n\t},\n\n\tdashed: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tscale: { value: 1 },\n\t\t\t\tdashSize: { value: 1 },\n\t\t\t\ttotalSize: { value: 2 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.linedashed_vert,\n\t\tfragmentShader: ShaderChunk.linedashed_frag\n\n\t},\n\n\tdepth: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.depth_vert,\n\t\tfragmentShader: ShaderChunk.depth_frag\n\n\t},\n\n\tnormal: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.bumpmap,\n\t\t\tUniformsLib.normalmap,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.normal_vert,\n\t\tfragmentShader: ShaderChunk.normal_frag\n\n\t},\n\n\t/* -------------------------------------------------------------------------\n\t//\tCube map shader\n\t ------------------------------------------------------------------------- */\n\n\tcube: {\n\n\t\tuniforms: {\n\t\t\ttCube: { value: null },\n\t\t\ttFlip: { value: - 1 },\n\t\t\topacity: { value: 1.0 }\n\t\t},\n\n\t\tvertexShader: ShaderChunk.cube_vert,\n\t\tfragmentShader: ShaderChunk.cube_frag\n\n\t},\n\n\tequirect: {\n\n\t\tuniforms: {\n\t\t\ttEquirect: { value: null },\n\t\t},\n\n\t\tvertexShader: ShaderChunk.equirect_vert,\n\t\tfragmentShader: ShaderChunk.equirect_frag\n\n\t},\n\n\tdistanceRGBA: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.common,\n\t\t\tUniformsLib.displacementmap,\n\t\t\t{\n\t\t\t\treferencePosition: { value: new Vector3() },\n\t\t\t\tnearDistance: { value: 1 },\n\t\t\t\tfarDistance: { value: 1000 }\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\n\t},\n\n\tshadow: {\n\n\t\tuniforms: UniformsUtils.merge( [\n\t\t\tUniformsLib.lights,\n\t\t\tUniformsLib.fog,\n\t\t\t{\n\t\t\t\tcolor: { value: new Color( 0x00000 ) },\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t},\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.shadow_vert,\n\t\tfragmentShader: ShaderChunk.shadow_frag\n\n\t}\n\n};\n\nShaderLib.physical = {\n\n\tuniforms: UniformsUtils.merge( [\n\t\tShaderLib.standard.uniforms,\n\t\t{\n\t\t\tclearCoat: { value: 0 },\n\t\t\tclearCoatRoughness: { value: 0 }\n\t\t}\n\t] ),\n\n\tvertexShader: ShaderChunk.meshphysical_vert,\n\tfragmentShader: ShaderChunk.meshphysical_frag\n\n};\n\n/**\n * @author bhouston / http://clara.io\n */\n\nfunction Box2( min, max ) {\n\n\tthis.min = ( min !== undefined ) ? min : new Vector2( + Infinity, + Infinity );\n\tthis.max = ( max !== undefined ) ? max : new Vector2( - Infinity, - Infinity );\n\n}\n\nObject.assign( Box2.prototype, {\n\n\tset: function ( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCenterAndSize: function () {\n\n\t\tvar v1 = new Vector2();\n\n\t\treturn function setFromCenterAndSize( center, size ) {\n\n\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\n\t\t\tthis.min.copy( center ).sub( halfSize );\n\t\t\tthis.max.copy( center ).add( halfSize );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tmakeEmpty: function () {\n\n\t\tthis.min.x = this.min.y = + Infinity;\n\t\tthis.max.x = this.max.y = - Infinity;\n\n\t\treturn this;\n\n\t},\n\n\tisEmpty: function () {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n\n\t},\n\n\tgetCenter: function ( optionalTarget ) {\n\n\t\tvar result = optionalTarget || new Vector2();\n\t\treturn this.isEmpty() ? result.set( 0, 0 ) : result.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t},\n\n\tgetSize: function ( optionalTarget ) {\n\n\t\tvar result = optionalTarget || new Vector2();\n\t\treturn this.isEmpty() ? result.set( 0, 0 ) : result.subVectors( this.max, this.min );\n\n\t},\n\n\texpandByPoint: function ( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t},\n\n\texpandByVector: function ( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t},\n\n\texpandByScalar: function ( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t},\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ? false : true;\n\n\t},\n\n\tcontainsBox: function ( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y;\n\n\t},\n\n\tgetParameter: function ( point, optionalTarget ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\tvar result = optionalTarget || new Vector2();\n\n\t\treturn result.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\n\t\t);\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\t// using 4 splitting planes to rule out intersections\n\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n\n\t},\n\n\tclampPoint: function ( point, optionalTarget ) {\n\n\t\tvar result = optionalTarget || new Vector2();\n\t\treturn result.copy( point ).clamp( this.min, this.max );\n\n\t},\n\n\tdistanceToPoint: function () {\n\n\t\tvar v1 = new Vector2();\n\n\t\treturn function distanceToPoint( point ) {\n\n\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\n\t\t\treturn clampedPoint.sub( point ).length();\n\n\t\t};\n\n\t}(),\n\n\tintersect: function ( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tunion: function ( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t},\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction WebGLFlareRenderer( renderer, gl, state, textures, capabilities ) {\n\n\tvar vertexBuffer, elementBuffer;\n\tvar shader, program, attributes, uniforms;\n\n\tvar tempTexture, occlusionTexture;\n\n\tfunction init() {\n\n\t\tvar vertices = new Float32Array( [\n\t\t\t- 1, - 1, 0, 0,\n\t\t\t  1, - 1, 1, 0,\n\t\t\t  1, 1, 1, 1,\n\t\t\t- 1, 1, 0, 1\n\t\t] );\n\n\t\tvar faces = new Uint16Array( [\n\t\t\t0, 1, 2,\n\t\t\t0, 2, 3\n\t\t] );\n\n\t\t// buffers\n\n\t\tvertexBuffer = gl.createBuffer();\n\t\telementBuffer = gl.createBuffer();\n\n\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\n\t\tgl.bufferData( gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW );\n\n\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\n\t\tgl.bufferData( gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW );\n\n\t\t// textures\n\n\t\ttempTexture = gl.createTexture();\n\t\tocclusionTexture = gl.createTexture();\n\n\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\n\t\tgl.texImage2D( gl.TEXTURE_2D, 0, gl.RGB, 16, 16, 0, gl.RGB, gl.UNSIGNED_BYTE, null );\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE );\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE );\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\n\n\t\tstate.bindTexture( gl.TEXTURE_2D, occlusionTexture );\n\t\tgl.texImage2D( gl.TEXTURE_2D, 0, gl.RGBA, 16, 16, 0, gl.RGBA, gl.UNSIGNED_BYTE, null );\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE );\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE );\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\n\n\t\tshader = {\n\n\t\t\tvertexShader: [\n\n\t\t\t\t'uniform lowp int renderType;',\n\n\t\t\t\t'uniform vec3 screenPosition;',\n\t\t\t\t'uniform vec2 scale;',\n\t\t\t\t'uniform float rotation;',\n\n\t\t\t\t'uniform sampler2D occlusionMap;',\n\n\t\t\t\t'attribute vec2 position;',\n\t\t\t\t'attribute vec2 uv;',\n\n\t\t\t\t'varying vec2 vUV;',\n\t\t\t\t'varying float vVisibility;',\n\n\t\t\t\t'void main() {',\n\n\t\t\t\t'\tvUV = uv;',\n\n\t\t\t\t'\tvec2 pos = position;',\n\n\t\t\t\t'\tif ( renderType == 2 ) {',\n\n\t\t\t\t'\t\tvec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );',\n\t\t\t\t'\t\tvisibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );',\n\t\t\t\t'\t\tvisibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );',\n\t\t\t\t'\t\tvisibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );',\n\t\t\t\t'\t\tvisibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );',\n\t\t\t\t'\t\tvisibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );',\n\t\t\t\t'\t\tvisibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );',\n\t\t\t\t'\t\tvisibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );',\n\t\t\t\t'\t\tvisibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );',\n\n\t\t\t\t'\t\tvVisibility =        visibility.r / 9.0;',\n\t\t\t\t'\t\tvVisibility *= 1.0 - visibility.g / 9.0;',\n\t\t\t\t'\t\tvVisibility *=       visibility.b / 9.0;',\n\t\t\t\t'\t\tvVisibility *= 1.0 - visibility.a / 9.0;',\n\n\t\t\t\t'\t\tpos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;',\n\t\t\t\t'\t\tpos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;',\n\n\t\t\t\t'\t}',\n\n\t\t\t\t'\tgl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );',\n\n\t\t\t\t'}'\n\n\t\t\t].join( '\\n' ),\n\n\t\t\tfragmentShader: [\n\n\t\t\t\t'uniform lowp int renderType;',\n\n\t\t\t\t'uniform sampler2D map;',\n\t\t\t\t'uniform float opacity;',\n\t\t\t\t'uniform vec3 color;',\n\n\t\t\t\t'varying vec2 vUV;',\n\t\t\t\t'varying float vVisibility;',\n\n\t\t\t\t'void main() {',\n\n\t\t\t\t// pink square\n\n\t\t\t\t'\tif ( renderType == 0 ) {',\n\n\t\t\t\t'\t\tgl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );',\n\n\t\t\t\t// restore\n\n\t\t\t\t'\t} else if ( renderType == 1 ) {',\n\n\t\t\t\t'\t\tgl_FragColor = texture2D( map, vUV );',\n\n\t\t\t\t// flare\n\n\t\t\t\t'\t} else {',\n\n\t\t\t\t'\t\tvec4 texture = texture2D( map, vUV );',\n\t\t\t\t'\t\ttexture.a *= opacity * vVisibility;',\n\t\t\t\t'\t\tgl_FragColor = texture;',\n\t\t\t\t'\t\tgl_FragColor.rgb *= color;',\n\n\t\t\t\t'\t}',\n\n\t\t\t\t'}'\n\n\t\t\t].join( '\\n' )\n\n\t\t};\n\n\t\tprogram = createProgram( shader );\n\n\t\tattributes = {\n\t\t\tvertex: gl.getAttribLocation( program, 'position' ),\n\t\t\tuv: gl.getAttribLocation( program, 'uv' )\n\t\t};\n\n\t\tuniforms = {\n\t\t\trenderType: gl.getUniformLocation( program, 'renderType' ),\n\t\t\tmap: gl.getUniformLocation( program, 'map' ),\n\t\t\tocclusionMap: gl.getUniformLocation( program, 'occlusionMap' ),\n\t\t\topacity: gl.getUniformLocation( program, 'opacity' ),\n\t\t\tcolor: gl.getUniformLocation( program, 'color' ),\n\t\t\tscale: gl.getUniformLocation( program, 'scale' ),\n\t\t\trotation: gl.getUniformLocation( program, 'rotation' ),\n\t\t\tscreenPosition: gl.getUniformLocation( program, 'screenPosition' )\n\t\t};\n\n\t}\n\n\t/*\n\t * Render lens flares\n\t * Method: renders 16x16 0xff00ff-colored points scattered over the light source area,\n\t *         reads these back and calculates occlusion.\n\t */\n\n\tthis.render = function ( flares, scene, camera, viewport ) {\n\n\t\tif ( flares.length === 0 ) return;\n\n\t\tvar tempPosition = new Vector3();\n\n\t\tvar invAspect = viewport.w / viewport.z,\n\t\t\thalfViewportWidth = viewport.z * 0.5,\n\t\t\thalfViewportHeight = viewport.w * 0.5;\n\n\t\tvar size = 16 / viewport.w,\n\t\t\tscale = new Vector2( size * invAspect, size );\n\n\t\tvar screenPosition = new Vector3( 1, 1, 0 ),\n\t\t\tscreenPositionPixels = new Vector2( 1, 1 );\n\n\t\tvar validArea = new Box2();\n\n\t\tvalidArea.min.set( viewport.x, viewport.y );\n\t\tvalidArea.max.set( viewport.x + ( viewport.z - 16 ), viewport.y + ( viewport.w - 16 ) );\n\n\t\tif ( program === undefined ) {\n\n\t\t\tinit();\n\n\t\t}\n\n\t\tstate.useProgram( program );\n\n\t\tstate.initAttributes();\n\t\tstate.enableAttribute( attributes.vertex );\n\t\tstate.enableAttribute( attributes.uv );\n\t\tstate.disableUnusedAttributes();\n\n\t\t// loop through all lens flares to update their occlusion and positions\n\t\t// setup gl and common used attribs/uniforms\n\n\t\tgl.uniform1i( uniforms.occlusionMap, 0 );\n\t\tgl.uniform1i( uniforms.map, 1 );\n\n\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\n\t\tgl.vertexAttribPointer( attributes.vertex, 2, gl.FLOAT, false, 2 * 8, 0 );\n\t\tgl.vertexAttribPointer( attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8 );\n\n\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\n\n\t\tstate.disable( gl.CULL_FACE );\n\t\tstate.buffers.depth.setMask( false );\n\n\t\tfor ( var i = 0, l = flares.length; i < l; i ++ ) {\n\n\t\t\tsize = 16 / viewport.w;\n\t\t\tscale.set( size * invAspect, size );\n\n\t\t\t// calc object screen position\n\n\t\t\tvar flare = flares[ i ];\n\n\t\t\ttempPosition.set( flare.matrixWorld.elements[ 12 ], flare.matrixWorld.elements[ 13 ], flare.matrixWorld.elements[ 14 ] );\n\n\t\t\ttempPosition.applyMatrix4( camera.matrixWorldInverse );\n\t\t\ttempPosition.applyMatrix4( camera.projectionMatrix );\n\n\t\t\t// setup arrays for gl programs\n\n\t\t\tscreenPosition.copy( tempPosition );\n\n\t\t\t// horizontal and vertical coordinate of the lower left corner of the pixels to copy\n\n\t\t\tscreenPositionPixels.x = viewport.x + ( screenPosition.x * halfViewportWidth ) + halfViewportWidth - 8;\n\t\t\tscreenPositionPixels.y = viewport.y + ( screenPosition.y * halfViewportHeight ) + halfViewportHeight - 8;\n\n\t\t\t// screen cull\n\n\t\t\tif ( validArea.containsPoint( screenPositionPixels ) === true ) {\n\n\t\t\t\t// save current RGB to temp texture\n\n\t\t\t\tstate.activeTexture( gl.TEXTURE0 );\n\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, null );\n\t\t\t\tstate.activeTexture( gl.TEXTURE1 );\n\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\n\t\t\t\tgl.copyTexImage2D( gl.TEXTURE_2D, 0, gl.RGB, screenPositionPixels.x, screenPositionPixels.y, 16, 16, 0 );\n\n\n\t\t\t\t// render pink quad\n\n\t\t\t\tgl.uniform1i( uniforms.renderType, 0 );\n\t\t\t\tgl.uniform2f( uniforms.scale, scale.x, scale.y );\n\t\t\t\tgl.uniform3f( uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z );\n\n\t\t\t\tstate.disable( gl.BLEND );\n\t\t\t\tstate.enable( gl.DEPTH_TEST );\n\n\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\n\n\n\t\t\t\t// copy result to occlusionMap\n\n\t\t\t\tstate.activeTexture( gl.TEXTURE0 );\n\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, occlusionTexture );\n\t\t\t\tgl.copyTexImage2D( gl.TEXTURE_2D, 0, gl.RGBA, screenPositionPixels.x, screenPositionPixels.y, 16, 16, 0 );\n\n\n\t\t\t\t// restore graphics\n\n\t\t\t\tgl.uniform1i( uniforms.renderType, 1 );\n\t\t\t\tstate.disable( gl.DEPTH_TEST );\n\n\t\t\t\tstate.activeTexture( gl.TEXTURE1 );\n\t\t\t\tstate.bindTexture( gl.TEXTURE_2D, tempTexture );\n\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\n\n\n\t\t\t\t// update object positions\n\n\t\t\t\tflare.positionScreen.copy( screenPosition );\n\n\t\t\t\tif ( flare.customUpdateCallback ) {\n\n\t\t\t\t\tflare.customUpdateCallback( flare );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tflare.updateLensFlares();\n\n\t\t\t\t}\n\n\t\t\t\t// render flares\n\n\t\t\t\tgl.uniform1i( uniforms.renderType, 2 );\n\t\t\t\tstate.enable( gl.BLEND );\n\n\t\t\t\tfor ( var j = 0, jl = flare.lensFlares.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar sprite = flare.lensFlares[ j ];\n\n\t\t\t\t\tif ( sprite.opacity > 0.001 && sprite.scale > 0.001 ) {\n\n\t\t\t\t\t\tscreenPosition.x = sprite.x;\n\t\t\t\t\t\tscreenPosition.y = sprite.y;\n\t\t\t\t\t\tscreenPosition.z = sprite.z;\n\n\t\t\t\t\t\tsize = sprite.size * sprite.scale / viewport.w;\n\n\t\t\t\t\t\tscale.x = size * invAspect;\n\t\t\t\t\t\tscale.y = size;\n\n\t\t\t\t\t\tgl.uniform3f( uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z );\n\t\t\t\t\t\tgl.uniform2f( uniforms.scale, scale.x, scale.y );\n\t\t\t\t\t\tgl.uniform1f( uniforms.rotation, sprite.rotation );\n\n\t\t\t\t\t\tgl.uniform1f( uniforms.opacity, sprite.opacity );\n\t\t\t\t\t\tgl.uniform3f( uniforms.color, sprite.color.r, sprite.color.g, sprite.color.b );\n\n\t\t\t\t\t\tstate.setBlending( sprite.blending, sprite.blendEquation, sprite.blendSrc, sprite.blendDst );\n\n\t\t\t\t\t\ttextures.setTexture2D( sprite.texture, 1 );\n\n\t\t\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// restore gl\n\n\t\tstate.enable( gl.CULL_FACE );\n\t\tstate.enable( gl.DEPTH_TEST );\n\t\tstate.buffers.depth.setMask( true );\n\n\t\tstate.reset();\n\n\t};\n\n\tfunction createProgram( shader ) {\n\n\t\tvar program = gl.createProgram();\n\n\t\tvar fragmentShader = gl.createShader( gl.FRAGMENT_SHADER );\n\t\tvar vertexShader = gl.createShader( gl.VERTEX_SHADER );\n\n\t\tvar prefix = 'precision ' + capabilities.precision + ' float;\\n';\n\n\t\tgl.shaderSource( fragmentShader, prefix + shader.fragmentShader );\n\t\tgl.shaderSource( vertexShader, prefix + shader.vertexShader );\n\n\t\tgl.compileShader( fragmentShader );\n\t\tgl.compileShader( vertexShader );\n\n\t\tgl.attachShader( program, fragmentShader );\n\t\tgl.attachShader( program, vertexShader );\n\n\t\tgl.linkProgram( program );\n\n\t\treturn program;\n\n\t}\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction CanvasTexture( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\tTexture.call( this, canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\tthis.needsUpdate = true;\n\n}\n\nCanvasTexture.prototype = Object.create( Texture.prototype );\nCanvasTexture.prototype.constructor = CanvasTexture;\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction WebGLSpriteRenderer( renderer, gl, state, textures, capabilities ) {\n\n\tvar vertexBuffer, elementBuffer;\n\tvar program, attributes, uniforms;\n\n\tvar texture;\n\n\t// decompose matrixWorld\n\n\tvar spritePosition = new Vector3();\n\tvar spriteRotation = new Quaternion();\n\tvar spriteScale = new Vector3();\n\n\tfunction init() {\n\n\t\tvar vertices = new Float32Array( [\n\t\t\t- 0.5, - 0.5, 0, 0,\n\t\t\t  0.5, - 0.5, 1, 0,\n\t\t\t  0.5, 0.5, 1, 1,\n\t\t\t- 0.5, 0.5, 0, 1\n\t\t] );\n\n\t\tvar faces = new Uint16Array( [\n\t\t\t0, 1, 2,\n\t\t\t0, 2, 3\n\t\t] );\n\n\t\tvertexBuffer = gl.createBuffer();\n\t\telementBuffer = gl.createBuffer();\n\n\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\n\t\tgl.bufferData( gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW );\n\n\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\n\t\tgl.bufferData( gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW );\n\n\t\tprogram = createProgram();\n\n\t\tattributes = {\n\t\t\tposition: gl.getAttribLocation( program, 'position' ),\n\t\t\tuv: gl.getAttribLocation( program, 'uv' )\n\t\t};\n\n\t\tuniforms = {\n\t\t\tuvOffset: gl.getUniformLocation( program, 'uvOffset' ),\n\t\t\tuvScale: gl.getUniformLocation( program, 'uvScale' ),\n\n\t\t\trotation: gl.getUniformLocation( program, 'rotation' ),\n\t\t\tscale: gl.getUniformLocation( program, 'scale' ),\n\n\t\t\tcolor: gl.getUniformLocation( program, 'color' ),\n\t\t\tmap: gl.getUniformLocation( program, 'map' ),\n\t\t\topacity: gl.getUniformLocation( program, 'opacity' ),\n\n\t\t\tmodelViewMatrix: gl.getUniformLocation( program, 'modelViewMatrix' ),\n\t\t\tprojectionMatrix: gl.getUniformLocation( program, 'projectionMatrix' ),\n\n\t\t\tfogType: gl.getUniformLocation( program, 'fogType' ),\n\t\t\tfogDensity: gl.getUniformLocation( program, 'fogDensity' ),\n\t\t\tfogNear: gl.getUniformLocation( program, 'fogNear' ),\n\t\t\tfogFar: gl.getUniformLocation( program, 'fogFar' ),\n\t\t\tfogColor: gl.getUniformLocation( program, 'fogColor' ),\n\t\t\tfogDepth: gl.getUniformLocation( program, 'fogDepth' ),\n\n\t\t\talphaTest: gl.getUniformLocation( program, 'alphaTest' )\n\t\t};\n\n\t\tvar canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\t\tcanvas.width = 8;\n\t\tcanvas.height = 8;\n\n\t\tvar context = canvas.getContext( '2d' );\n\t\tcontext.fillStyle = 'white';\n\t\tcontext.fillRect( 0, 0, 8, 8 );\n\n\t\ttexture = new CanvasTexture( canvas );\n\n\t}\n\n\tthis.render = function ( sprites, scene, camera ) {\n\n\t\tif ( sprites.length === 0 ) return;\n\n\t\t// setup gl\n\n\t\tif ( program === undefined ) {\n\n\t\t\tinit();\n\n\t\t}\n\n\t\tstate.useProgram( program );\n\n\t\tstate.initAttributes();\n\t\tstate.enableAttribute( attributes.position );\n\t\tstate.enableAttribute( attributes.uv );\n\t\tstate.disableUnusedAttributes();\n\n\t\tstate.disable( gl.CULL_FACE );\n\t\tstate.enable( gl.BLEND );\n\n\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\n\t\tgl.vertexAttribPointer( attributes.position, 2, gl.FLOAT, false, 2 * 8, 0 );\n\t\tgl.vertexAttribPointer( attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8 );\n\n\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\n\n\t\tgl.uniformMatrix4fv( uniforms.projectionMatrix, false, camera.projectionMatrix.elements );\n\n\t\tstate.activeTexture( gl.TEXTURE0 );\n\t\tgl.uniform1i( uniforms.map, 0 );\n\n\t\tvar oldFogType = 0;\n\t\tvar sceneFogType = 0;\n\t\tvar fog = scene.fog;\n\n\t\tif ( fog ) {\n\n\t\t\tgl.uniform3f( uniforms.fogColor, fog.color.r, fog.color.g, fog.color.b );\n\n\t\t\tif ( fog.isFog ) {\n\n\t\t\t\tgl.uniform1f( uniforms.fogNear, fog.near );\n\t\t\t\tgl.uniform1f( uniforms.fogFar, fog.far );\n\n\t\t\t\tgl.uniform1i( uniforms.fogType, 1 );\n\t\t\t\toldFogType = 1;\n\t\t\t\tsceneFogType = 1;\n\n\t\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\t\tgl.uniform1f( uniforms.fogDensity, fog.density );\n\n\t\t\t\tgl.uniform1i( uniforms.fogType, 2 );\n\t\t\t\toldFogType = 2;\n\t\t\t\tsceneFogType = 2;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tgl.uniform1i( uniforms.fogType, 0 );\n\t\t\toldFogType = 0;\n\t\t\tsceneFogType = 0;\n\n\t\t}\n\n\n\t\t// update positions and sort\n\n\t\tfor ( var i = 0, l = sprites.length; i < l; i ++ ) {\n\n\t\t\tvar sprite = sprites[ i ];\n\n\t\t\tsprite.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, sprite.matrixWorld );\n\t\t\tsprite.z = - sprite.modelViewMatrix.elements[ 14 ];\n\n\t\t}\n\n\t\tsprites.sort( painterSortStable );\n\n\t\t// render all sprites\n\n\t\tvar scale = [];\n\n\t\tfor ( var i = 0, l = sprites.length; i < l; i ++ ) {\n\n\t\t\tvar sprite = sprites[ i ];\n\t\t\tvar material = sprite.material;\n\n\t\t\tif ( material.visible === false ) continue;\n\n\t\t\tsprite.onBeforeRender( renderer, scene, camera, undefined, material, undefined );\n\n\t\t\tgl.uniform1f( uniforms.alphaTest, material.alphaTest );\n\t\t\tgl.uniformMatrix4fv( uniforms.modelViewMatrix, false, sprite.modelViewMatrix.elements );\n\n\t\t\tsprite.matrixWorld.decompose( spritePosition, spriteRotation, spriteScale );\n\n\t\t\tscale[ 0 ] = spriteScale.x;\n\t\t\tscale[ 1 ] = spriteScale.y;\n\n\t\t\tvar fogType = 0;\n\n\t\t\tif ( scene.fog && material.fog ) {\n\n\t\t\t\tfogType = sceneFogType;\n\n\t\t\t}\n\n\t\t\tif ( oldFogType !== fogType ) {\n\n\t\t\t\tgl.uniform1i( uniforms.fogType, fogType );\n\t\t\t\toldFogType = fogType;\n\n\t\t\t}\n\n\t\t\tif ( material.map !== null ) {\n\n\t\t\t\tgl.uniform2f( uniforms.uvOffset, material.map.offset.x, material.map.offset.y );\n\t\t\t\tgl.uniform2f( uniforms.uvScale, material.map.repeat.x, material.map.repeat.y );\n\n\t\t\t} else {\n\n\t\t\t\tgl.uniform2f( uniforms.uvOffset, 0, 0 );\n\t\t\t\tgl.uniform2f( uniforms.uvScale, 1, 1 );\n\n\t\t\t}\n\n\t\t\tgl.uniform1f( uniforms.opacity, material.opacity );\n\t\t\tgl.uniform3f( uniforms.color, material.color.r, material.color.g, material.color.b );\n\n\t\t\tgl.uniform1f( uniforms.rotation, material.rotation );\n\t\t\tgl.uniform2fv( uniforms.scale, scale );\n\n\t\t\tstate.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha );\n\t\t\tstate.buffers.depth.setTest( material.depthTest );\n\t\t\tstate.buffers.depth.setMask( material.depthWrite );\n\t\t\tstate.buffers.color.setMask( material.colorWrite );\n\n\t\t\ttextures.setTexture2D( material.map || texture, 0 );\n\n\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\n\n\t\t\tsprite.onAfterRender( renderer, scene, camera, undefined, material, undefined );\n\n\t\t}\n\n\t\t// restore gl\n\n\t\tstate.enable( gl.CULL_FACE );\n\n\t\tstate.reset();\n\n\t};\n\n\tfunction createProgram() {\n\n\t\tvar program = gl.createProgram();\n\n\t\tvar vertexShader = gl.createShader( gl.VERTEX_SHADER );\n\t\tvar fragmentShader = gl.createShader( gl.FRAGMENT_SHADER );\n\n\t\tgl.shaderSource( vertexShader, [\n\n\t\t\t'precision ' + capabilities.precision + ' float;',\n\n\t\t\t'#define SHADER_NAME ' + 'SpriteMaterial',\n\n\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t'uniform float rotation;',\n\t\t\t'uniform vec2 scale;',\n\t\t\t'uniform vec2 uvOffset;',\n\t\t\t'uniform vec2 uvScale;',\n\n\t\t\t'attribute vec2 position;',\n\t\t\t'attribute vec2 uv;',\n\n\t\t\t'varying vec2 vUV;',\n\t\t\t'varying float fogDepth;',\n\n\t\t\t'void main() {',\n\n\t\t\t'\tvUV = uvOffset + uv * uvScale;',\n\n\t\t\t'\tvec2 alignedPosition = position * scale;',\n\n\t\t\t'\tvec2 rotatedPosition;',\n\t\t\t'\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;',\n\t\t\t'\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;',\n\n\t\t\t'\tvec4 mvPosition;',\n\n\t\t\t'\tmvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );',\n\t\t\t'\tmvPosition.xy += rotatedPosition;',\n\n\t\t\t'\tgl_Position = projectionMatrix * mvPosition;',\n\n\t\t\t'\tfogDepth = - mvPosition.z;',\n\n\t\t\t'}'\n\n\t\t].join( '\\n' ) );\n\n\t\tgl.shaderSource( fragmentShader, [\n\n\t\t\t'precision ' + capabilities.precision + ' float;',\n\n\t\t\t'#define SHADER_NAME ' + 'SpriteMaterial',\n\n\t\t\t'uniform vec3 color;',\n\t\t\t'uniform sampler2D map;',\n\t\t\t'uniform float opacity;',\n\n\t\t\t'uniform int fogType;',\n\t\t\t'uniform vec3 fogColor;',\n\t\t\t'uniform float fogDensity;',\n\t\t\t'uniform float fogNear;',\n\t\t\t'uniform float fogFar;',\n\t\t\t'uniform float alphaTest;',\n\n\t\t\t'varying vec2 vUV;',\n\t\t\t'varying float fogDepth;',\n\n\t\t\t'void main() {',\n\n\t\t\t'\tvec4 texture = texture2D( map, vUV );',\n\n\t\t\t'\tgl_FragColor = vec4( color * texture.xyz, texture.a * opacity );',\n\n\t\t\t'\tif ( gl_FragColor.a < alphaTest ) discard;',\n\n\t\t\t'\tif ( fogType > 0 ) {',\n\n\t\t\t'\t\tfloat fogFactor = 0.0;',\n\n\t\t\t'\t\tif ( fogType == 1 ) {',\n\n\t\t\t'\t\t\tfogFactor = smoothstep( fogNear, fogFar, fogDepth );',\n\n\t\t\t'\t\t} else {',\n\n\t\t\t'\t\t\tconst float LOG2 = 1.442695;',\n\t\t\t'\t\t\tfogFactor = exp2( - fogDensity * fogDensity * fogDepth * fogDepth * LOG2 );',\n\t\t\t'\t\t\tfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );',\n\n\t\t\t'\t\t}',\n\n\t\t\t'\t\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );',\n\n\t\t\t'\t}',\n\n\t\t\t'}'\n\n\t\t].join( '\\n' ) );\n\n\t\tgl.compileShader( vertexShader );\n\t\tgl.compileShader( fragmentShader );\n\n\t\tgl.attachShader( program, vertexShader );\n\t\tgl.attachShader( program, fragmentShader );\n\n\t\tgl.linkProgram( program );\n\n\t\treturn program;\n\n\t}\n\n\tfunction painterSortStable( a, b ) {\n\n\t\tif ( a.renderOrder !== b.renderOrder ) {\n\n\t\t\treturn a.renderOrder - b.renderOrder;\n\n\t\t} else if ( a.z !== b.z ) {\n\n\t\t\treturn b.z - a.z;\n\n\t\t} else {\n\n\t\t\treturn b.id - a.id;\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nvar materialId = 0;\n\nfunction Material() {\n\n\tObject.defineProperty( this, 'id', { value: materialId ++ } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'Material';\n\n\tthis.fog = true;\n\tthis.lights = true;\n\n\tthis.blending = NormalBlending;\n\tthis.side = FrontSide;\n\tthis.flatShading = false;\n\tthis.vertexColors = NoColors; // THREE.NoColors, THREE.VertexColors, THREE.FaceColors\n\n\tthis.opacity = 1;\n\tthis.transparent = false;\n\n\tthis.blendSrc = SrcAlphaFactor;\n\tthis.blendDst = OneMinusSrcAlphaFactor;\n\tthis.blendEquation = AddEquation;\n\tthis.blendSrcAlpha = null;\n\tthis.blendDstAlpha = null;\n\tthis.blendEquationAlpha = null;\n\n\tthis.depthFunc = LessEqualDepth;\n\tthis.depthTest = true;\n\tthis.depthWrite = true;\n\n\tthis.clippingPlanes = null;\n\tthis.clipIntersection = false;\n\tthis.clipShadows = false;\n\n\tthis.colorWrite = true;\n\n\tthis.precision = null; // override the renderer's default precision for this material\n\n\tthis.polygonOffset = false;\n\tthis.polygonOffsetFactor = 0;\n\tthis.polygonOffsetUnits = 0;\n\n\tthis.dithering = false;\n\n\tthis.alphaTest = 0;\n\tthis.premultipliedAlpha = false;\n\n\tthis.overdraw = 0; // Overdrawn pixels (typically between 0 and 1) for fixing antialiasing gaps in CanvasRenderer\n\n\tthis.visible = true;\n\n\tthis.userData = {};\n\n\tthis.needsUpdate = true;\n\n}\n\nObject.assign( Material.prototype, EventDispatcher.prototype, {\n\n\tisMaterial: true,\n\n\tonBeforeCompile: function () {},\n\n\tsetValues: function ( values ) {\n\n\t\tif ( values === undefined ) return;\n\n\t\tfor ( var key in values ) {\n\n\t\t\tvar newValue = values[ key ];\n\n\t\t\tif ( newValue === undefined ) {\n\n\t\t\t\tconsole.warn( \"THREE.Material: '\" + key + \"' parameter is undefined.\" );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\t// for backward compatability if shading is set in the constructor\n\t\t\tif ( key === 'shading' ) {\n\n\t\t\t\tconsole.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\t\t\t\tthis.flatShading = ( newValue === FlatShading ) ? true : false;\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tvar currentValue = this[ key ];\n\n\t\t\tif ( currentValue === undefined ) {\n\n\t\t\t\tconsole.warn( \"THREE.\" + this.type + \": '\" + key + \"' is not a property of this material.\" );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tif ( currentValue && currentValue.isColor ) {\n\n\t\t\t\tcurrentValue.set( newValue );\n\n\t\t\t} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\n\n\t\t\t\tcurrentValue.copy( newValue );\n\n\t\t\t} else if ( key === 'overdraw' ) {\n\n\t\t\t\t// ensure overdraw is backwards-compatible with legacy boolean type\n\t\t\t\tthis[ key ] = Number( newValue );\n\n\t\t\t} else {\n\n\t\t\t\tthis[ key ] = newValue;\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar isRoot = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( isRoot ) {\n\n\t\t\tmeta = {\n\t\t\t\ttextures: {},\n\t\t\t\timages: {}\n\t\t\t};\n\n\t\t}\n\n\t\tvar data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Material',\n\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Material serialization\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.color && this.color.isColor ) data.color = this.color.getHex();\n\n\t\tif ( this.roughness !== undefined ) data.roughness = this.roughness;\n\t\tif ( this.metalness !== undefined ) data.metalness = this.metalness;\n\n\t\tif ( this.emissive && this.emissive.isColor ) data.emissive = this.emissive.getHex();\n\t\tif ( this.emissiveIntensity !== 1 ) data.emissiveIntensity = this.emissiveIntensity;\n\n\t\tif ( this.specular && this.specular.isColor ) data.specular = this.specular.getHex();\n\t\tif ( this.shininess !== undefined ) data.shininess = this.shininess;\n\t\tif ( this.clearCoat !== undefined ) data.clearCoat = this.clearCoat;\n\t\tif ( this.clearCoatRoughness !== undefined ) data.clearCoatRoughness = this.clearCoatRoughness;\n\n\t\tif ( this.map && this.map.isTexture ) data.map = this.map.toJSON( meta ).uuid;\n\t\tif ( this.alphaMap && this.alphaMap.isTexture ) data.alphaMap = this.alphaMap.toJSON( meta ).uuid;\n\t\tif ( this.lightMap && this.lightMap.isTexture ) data.lightMap = this.lightMap.toJSON( meta ).uuid;\n\t\tif ( this.bumpMap && this.bumpMap.isTexture ) {\n\n\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\tdata.bumpScale = this.bumpScale;\n\n\t\t}\n\t\tif ( this.normalMap && this.normalMap.isTexture ) {\n\n\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\tdata.normalScale = this.normalScale.toArray();\n\n\t\t}\n\t\tif ( this.displacementMap && this.displacementMap.isTexture ) {\n\n\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\tdata.displacementBias = this.displacementBias;\n\n\t\t}\n\t\tif ( this.roughnessMap && this.roughnessMap.isTexture ) data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid;\n\t\tif ( this.metalnessMap && this.metalnessMap.isTexture ) data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid;\n\n\t\tif ( this.emissiveMap && this.emissiveMap.isTexture ) data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid;\n\t\tif ( this.specularMap && this.specularMap.isTexture ) data.specularMap = this.specularMap.toJSON( meta ).uuid;\n\n\t\tif ( this.envMap && this.envMap.isTexture ) {\n\n\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n\t\t\tdata.reflectivity = this.reflectivity; // Scale behind envMap\n\n\t\t}\n\n\t\tif ( this.gradientMap && this.gradientMap.isTexture ) {\n\n\t\t\tdata.gradientMap = this.gradientMap.toJSON( meta ).uuid;\n\n\t\t}\n\n\t\tif ( this.size !== undefined ) data.size = this.size;\n\t\tif ( this.sizeAttenuation !== undefined ) data.sizeAttenuation = this.sizeAttenuation;\n\n\t\tif ( this.blending !== NormalBlending ) data.blending = this.blending;\n\t\tif ( this.flatShading === true ) data.flatShading = this.flatShading;\n\t\tif ( this.side !== FrontSide ) data.side = this.side;\n\t\tif ( this.vertexColors !== NoColors ) data.vertexColors = this.vertexColors;\n\n\t\tif ( this.opacity < 1 ) data.opacity = this.opacity;\n\t\tif ( this.transparent === true ) data.transparent = this.transparent;\n\n\t\tdata.depthFunc = this.depthFunc;\n\t\tdata.depthTest = this.depthTest;\n\t\tdata.depthWrite = this.depthWrite;\n\n\t\t// rotation (SpriteMaterial)\n\t\tif ( this.rotation !== 0 ) data.rotation = this.rotation;\n\n\t\tif ( this.linewidth !== 1 ) data.linewidth = this.linewidth;\n\t\tif ( this.dashSize !== undefined ) data.dashSize = this.dashSize;\n\t\tif ( this.gapSize !== undefined ) data.gapSize = this.gapSize;\n\t\tif ( this.scale !== undefined ) data.scale = this.scale;\n\n\t\tif ( this.dithering === true ) data.dithering = true;\n\n\t\tif ( this.alphaTest > 0 ) data.alphaTest = this.alphaTest;\n\t\tif ( this.premultipliedAlpha === true ) data.premultipliedAlpha = this.premultipliedAlpha;\n\n\t\tif ( this.wireframe === true ) data.wireframe = this.wireframe;\n\t\tif ( this.wireframeLinewidth > 1 ) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\tif ( this.wireframeLinecap !== 'round' ) data.wireframeLinecap = this.wireframeLinecap;\n\t\tif ( this.wireframeLinejoin !== 'round' ) data.wireframeLinejoin = this.wireframeLinejoin;\n\n\t\tif ( this.morphTargets === true ) data.morphTargets = true;\n\t\tif ( this.skinning === true ) data.skinning = true;\n\n\t\tif ( this.visible === false ) data.visible = false;\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) data.userData = this.userData;\n\n\t\t// TODO: Copied from Object3D.toJSON\n\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tvar values = [];\n\n\t\t\tfor ( var key in cache ) {\n\n\t\t\t\tvar data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\n\t\t\treturn values;\n\n\t\t}\n\n\t\tif ( isRoot ) {\n\n\t\t\tvar textures = extractFromCache( meta.textures );\n\t\t\tvar images = extractFromCache( meta.images );\n\n\t\t\tif ( textures.length > 0 ) data.textures = textures;\n\t\t\tif ( images.length > 0 ) data.images = images;\n\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.name = source.name;\n\n\t\tthis.fog = source.fog;\n\t\tthis.lights = source.lights;\n\n\t\tthis.blending = source.blending;\n\t\tthis.side = source.side;\n\t\tthis.flatShading = source.flatShading;\n\t\tthis.vertexColors = source.vertexColors;\n\n\t\tthis.opacity = source.opacity;\n\t\tthis.transparent = source.transparent;\n\n\t\tthis.blendSrc = source.blendSrc;\n\t\tthis.blendDst = source.blendDst;\n\t\tthis.blendEquation = source.blendEquation;\n\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\n\t\tthis.depthFunc = source.depthFunc;\n\t\tthis.depthTest = source.depthTest;\n\t\tthis.depthWrite = source.depthWrite;\n\n\t\tthis.colorWrite = source.colorWrite;\n\n\t\tthis.precision = source.precision;\n\n\t\tthis.polygonOffset = source.polygonOffset;\n\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\n\t\tthis.dithering = source.dithering;\n\n\t\tthis.alphaTest = source.alphaTest;\n\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\n\t\tthis.overdraw = source.overdraw;\n\n\t\tthis.visible = source.visible;\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tthis.clipShadows = source.clipShadows;\n\t\tthis.clipIntersection = source.clipIntersection;\n\n\t\tvar srcPlanes = source.clippingPlanes,\n\t\t\tdstPlanes = null;\n\n\t\tif ( srcPlanes !== null ) {\n\n\t\t\tvar n = srcPlanes.length;\n\t\t\tdstPlanes = new Array( n );\n\n\t\t\tfor ( var i = 0; i !== n; ++ i )\n\t\t\t\tdstPlanes[ i ] = srcPlanes[ i ].clone();\n\n\t\t}\n\n\t\tthis.clippingPlanes = dstPlanes;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author bhouston / https://clara.io\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>\n * }\n */\n\nfunction MeshDepthMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshDepthMaterial';\n\n\tthis.depthPacking = BasicDepthPacking;\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\n\tthis.map = null;\n\n\tthis.alphaMap = null;\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\n\tthis.fog = false;\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshDepthMaterial.prototype = Object.create( Material.prototype );\nMeshDepthMaterial.prototype.constructor = MeshDepthMaterial;\n\nMeshDepthMaterial.prototype.isMeshDepthMaterial = true;\n\nMeshDepthMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.depthPacking = source.depthPacking;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\n\tthis.map = source.map;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\treturn this;\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *\n *  referencePosition: <float>,\n *  nearDistance: <float>,\n *  farDistance: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>\n *\n * }\n */\n\nfunction MeshDistanceMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshDistanceMaterial';\n\n\tthis.referencePosition = new Vector3();\n\tthis.nearDistance = 1;\n\tthis.farDistance = 1000;\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\n\tthis.map = null;\n\n\tthis.alphaMap = null;\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.fog = false;\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshDistanceMaterial.prototype = Object.create( Material.prototype );\nMeshDistanceMaterial.prototype.constructor = MeshDistanceMaterial;\n\nMeshDistanceMaterial.prototype.isMeshDistanceMaterial = true;\n\nMeshDistanceMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.referencePosition.copy( source.referencePosition );\n\tthis.nearDistance = source.nearDistance;\n\tthis.farDistance = source.farDistance;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\n\tthis.map = source.map;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\treturn this;\n\n};\n\n/**\n * @author bhouston / http://clara.io\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Box3( min, max ) {\n\n\tthis.min = ( min !== undefined ) ? min : new Vector3( + Infinity, + Infinity, + Infinity );\n\tthis.max = ( max !== undefined ) ? max : new Vector3( - Infinity, - Infinity, - Infinity );\n\n}\n\nObject.assign( Box3.prototype, {\n\n\tisBox3: true,\n\n\tset: function ( min, max ) {\n\n\t\tthis.min.copy( min );\n\t\tthis.max.copy( max );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromArray: function ( array ) {\n\n\t\tvar minX = + Infinity;\n\t\tvar minY = + Infinity;\n\t\tvar minZ = + Infinity;\n\n\t\tvar maxX = - Infinity;\n\t\tvar maxY = - Infinity;\n\t\tvar maxZ = - Infinity;\n\n\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\tvar x = array[ i ];\n\t\t\tvar y = array[ i + 1 ];\n\t\t\tvar z = array[ i + 2 ];\n\n\t\t\tif ( x < minX ) minX = x;\n\t\t\tif ( y < minY ) minY = y;\n\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\tif ( x > maxX ) maxX = x;\n\t\t\tif ( y > maxY ) maxY = y;\n\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t}\n\n\t\tthis.min.set( minX, minY, minZ );\n\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromBufferAttribute: function ( attribute ) {\n\n\t\tvar minX = + Infinity;\n\t\tvar minY = + Infinity;\n\t\tvar minZ = + Infinity;\n\n\t\tvar maxX = - Infinity;\n\t\tvar maxY = - Infinity;\n\t\tvar maxZ = - Infinity;\n\n\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\tvar x = attribute.getX( i );\n\t\t\tvar y = attribute.getY( i );\n\t\t\tvar z = attribute.getZ( i );\n\n\t\t\tif ( x < minX ) minX = x;\n\t\t\tif ( y < minY ) minY = y;\n\t\t\tif ( z < minZ ) minZ = z;\n\n\t\t\tif ( x > maxX ) maxX = x;\n\t\t\tif ( y > maxY ) maxY = y;\n\t\t\tif ( z > maxZ ) maxZ = z;\n\n\t\t}\n\n\t\tthis.min.set( minX, minY, minZ );\n\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tthis.makeEmpty();\n\n\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCenterAndSize: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function setFromCenterAndSize( center, size ) {\n\n\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\n\n\t\t\tthis.min.copy( center ).sub( halfSize );\n\t\t\tthis.max.copy( center ).add( halfSize );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tsetFromObject: function ( object ) {\n\n\t\tthis.makeEmpty();\n\n\t\treturn this.expandByObject( object );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( box ) {\n\n\t\tthis.min.copy( box.min );\n\t\tthis.max.copy( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tmakeEmpty: function () {\n\n\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\treturn this;\n\n\t},\n\n\tisEmpty: function () {\n\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t},\n\n\tgetCenter: function ( optionalTarget ) {\n\n\t\tvar result = optionalTarget || new Vector3();\n\t\treturn this.isEmpty() ? result.set( 0, 0, 0 ) : result.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t},\n\n\tgetSize: function ( optionalTarget ) {\n\n\t\tvar result = optionalTarget || new Vector3();\n\t\treturn this.isEmpty() ? result.set( 0, 0, 0 ) : result.subVectors( this.max, this.min );\n\n\t},\n\n\texpandByPoint: function ( point ) {\n\n\t\tthis.min.min( point );\n\t\tthis.max.max( point );\n\n\t\treturn this;\n\n\t},\n\n\texpandByVector: function ( vector ) {\n\n\t\tthis.min.sub( vector );\n\t\tthis.max.add( vector );\n\n\t\treturn this;\n\n\t},\n\n\texpandByScalar: function ( scalar ) {\n\n\t\tthis.min.addScalar( - scalar );\n\t\tthis.max.addScalar( scalar );\n\n\t\treturn this;\n\n\t},\n\n\texpandByObject: function () {\n\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t// accounting for both the object's, and children's, world transforms\n\n\t\tvar scope, i, l;\n\n\t\tvar v1 = new Vector3();\n\n\t\tfunction traverse( node ) {\n\n\t\t\tvar geometry = node.geometry;\n\n\t\t\tif ( geometry !== undefined ) {\n\n\t\t\t\tif ( geometry.isGeometry ) {\n\n\t\t\t\t\tvar vertices = geometry.vertices;\n\n\t\t\t\t\tfor ( i = 0, l = vertices.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tv1.copy( vertices[ i ] );\n\t\t\t\t\t\tv1.applyMatrix4( node.matrixWorld );\n\n\t\t\t\t\t\tscope.expandByPoint( v1 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( geometry.isBufferGeometry ) {\n\n\t\t\t\t\tvar attribute = geometry.attributes.position;\n\n\t\t\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\t\t\tfor ( i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tv1.fromBufferAttribute( attribute, i ).applyMatrix4( node.matrixWorld );\n\n\t\t\t\t\t\t\tscope.expandByPoint( v1 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn function expandByObject( object ) {\n\n\t\t\tscope = this;\n\n\t\t\tobject.updateMatrixWorld( true );\n\n\t\t\tobject.traverse( traverse );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\tpoint.y < this.min.y || point.y > this.max.y ||\n\t\t\tpoint.z < this.min.z || point.z > this.max.z ? false : true;\n\n\t},\n\n\tcontainsBox: function ( box ) {\n\n\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\n\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\n\n\t},\n\n\tgetParameter: function ( point, optionalTarget ) {\n\n\t\t// This can potentially have a divide by zero if the box\n\t\t// has a size dimension of 0.\n\n\t\tvar result = optionalTarget || new Vector3();\n\n\t\treturn result.set(\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t);\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\t// using 6 splitting planes to rule out intersections.\n\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ||\n\t\t\tbox.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n\n\t},\n\n\tintersectsSphere: ( function () {\n\n\t\tvar closestPoint = new Vector3();\n\n\t\treturn function intersectsSphere( sphere ) {\n\n\t\t\t// Find the point on the AABB closest to the sphere center.\n\t\t\tthis.clampPoint( sphere.center, closestPoint );\n\n\t\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\t\treturn closestPoint.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t\t};\n\n\t} )(),\n\n\tintersectsPlane: function ( plane ) {\n\n\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n\t\tvar min, max;\n\n\t\tif ( plane.normal.x > 0 ) {\n\n\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\tmax = plane.normal.x * this.max.x;\n\n\t\t} else {\n\n\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\tmax = plane.normal.x * this.min.x;\n\n\t\t}\n\n\t\tif ( plane.normal.y > 0 ) {\n\n\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\tmax += plane.normal.y * this.max.y;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\tmax += plane.normal.y * this.min.y;\n\n\t\t}\n\n\t\tif ( plane.normal.z > 0 ) {\n\n\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\tmax += plane.normal.z * this.max.z;\n\n\t\t} else {\n\n\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\tmax += plane.normal.z * this.min.z;\n\n\t\t}\n\n\t\treturn ( min <= plane.constant && max >= plane.constant );\n\n\t},\n\n\tclampPoint: function ( point, optionalTarget ) {\n\n\t\tvar result = optionalTarget || new Vector3();\n\t\treturn result.copy( point ).clamp( this.min, this.max );\n\n\t},\n\n\tdistanceToPoint: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function distanceToPoint( point ) {\n\n\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\n\t\t\treturn clampedPoint.sub( point ).length();\n\n\t\t};\n\n\t}(),\n\n\tgetBoundingSphere: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function getBoundingSphere( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Sphere();\n\n\t\t\tthis.getCenter( result.center );\n\n\t\t\tresult.radius = this.getSize( v1 ).length() * 0.5;\n\n\t\t\treturn result;\n\n\t\t};\n\n\t}(),\n\n\tintersect: function ( box ) {\n\n\t\tthis.min.max( box.min );\n\t\tthis.max.min( box.max );\n\n\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\tif ( this.isEmpty() ) this.makeEmpty();\n\n\t\treturn this;\n\n\t},\n\n\tunion: function ( box ) {\n\n\t\tthis.min.min( box.min );\n\t\tthis.max.max( box.max );\n\n\t\treturn this;\n\n\t},\n\n\tapplyMatrix4: function () {\n\n\t\tvar points = [\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3(),\n\t\t\tnew Vector3()\n\t\t];\n\n\t\treturn function applyMatrix4( matrix ) {\n\n\t\t\t// transform of empty box is an empty box.\n\t\t\tif ( this.isEmpty() ) return this;\n\n\t\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\t\t\tpoints[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\n\t\t\tpoints[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\n\t\t\tpoints[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\n\t\t\tpoints[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\n\t\t\tpoints[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\n\t\t\tpoints[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\n\t\t\tpoints[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\n\t\t\tpoints[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix );\t// 111\n\n\t\t\tthis.setFromPoints( points );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.min.add( offset );\n\t\tthis.max.add( offset );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( box ) {\n\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Sphere( center, radius ) {\n\n\tthis.center = ( center !== undefined ) ? center : new Vector3();\n\tthis.radius = ( radius !== undefined ) ? radius : 0;\n\n}\n\nObject.assign( Sphere.prototype, {\n\n\tset: function ( center, radius ) {\n\n\t\tthis.center.copy( center );\n\t\tthis.radius = radius;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function () {\n\n\t\tvar box = new Box3();\n\n\t\treturn function setFromPoints( points, optionalCenter ) {\n\n\t\t\tvar center = this.center;\n\n\t\t\tif ( optionalCenter !== undefined ) {\n\n\t\t\t\tcenter.copy( optionalCenter );\n\n\t\t\t} else {\n\n\t\t\t\tbox.setFromPoints( points ).getCenter( center );\n\n\t\t\t}\n\n\t\t\tvar maxRadiusSq = 0;\n\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n\t\t\t}\n\n\t\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( sphere ) {\n\n\t\tthis.center.copy( sphere.center );\n\t\tthis.radius = sphere.radius;\n\n\t\treturn this;\n\n\t},\n\n\tempty: function () {\n\n\t\treturn ( this.radius <= 0 );\n\n\t},\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n\t},\n\n\tdistanceToPoint: function ( point ) {\n\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\n\n\t},\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\tvar radiusSum = this.radius + sphere.radius;\n\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\treturn box.intersectsSphere( this );\n\n\t},\n\n\tintersectsPlane: function ( plane ) {\n\n\t\treturn Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\n\n\t},\n\n\tclampPoint: function ( point, optionalTarget ) {\n\n\t\tvar deltaLengthSq = this.center.distanceToSquared( point );\n\n\t\tvar result = optionalTarget || new Vector3();\n\n\t\tresult.copy( point );\n\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\tresult.sub( this.center ).normalize();\n\t\t\tresult.multiplyScalar( this.radius ).add( this.center );\n\n\t\t}\n\n\t\treturn result;\n\n\t},\n\n\tgetBoundingBox: function ( optionalTarget ) {\n\n\t\tvar box = optionalTarget || new Box3();\n\n\t\tbox.set( this.center, this.center );\n\t\tbox.expandByScalar( this.radius );\n\n\t\treturn box;\n\n\t},\n\n\tapplyMatrix4: function ( matrix ) {\n\n\t\tthis.center.applyMatrix4( matrix );\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n\t\treturn this;\n\n\t},\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.center.add( offset );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( sphere ) {\n\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n */\n\nfunction Plane( normal, constant ) {\n\n\t// normal is assumed to be normalized\n\n\tthis.normal = ( normal !== undefined ) ? normal : new Vector3( 1, 0, 0 );\n\tthis.constant = ( constant !== undefined ) ? constant : 0;\n\n}\n\nObject.assign( Plane.prototype, {\n\n\tset: function ( normal, constant ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = constant;\n\n\t\treturn this;\n\n\t},\n\n\tsetComponents: function ( x, y, z, w ) {\n\n\t\tthis.normal.set( x, y, z );\n\t\tthis.constant = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromNormalAndCoplanarPoint: function ( normal, point ) {\n\n\t\tthis.normal.copy( normal );\n\t\tthis.constant = - point.dot( this.normal );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromCoplanarPoints: function () {\n\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\n\t\treturn function setFromCoplanarPoints( a, b, c ) {\n\n\t\t\tvar normal = v1.subVectors( c, b ).cross( v2.subVectors( a, b ) ).normalize();\n\n\t\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\t\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( plane ) {\n\n\t\tthis.normal.copy( plane.normal );\n\t\tthis.constant = plane.constant;\n\n\t\treturn this;\n\n\t},\n\n\tnormalize: function () {\n\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\n\t\tvar inverseNormalLength = 1.0 / this.normal.length();\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\n\t\tthis.constant *= inverseNormalLength;\n\n\t\treturn this;\n\n\t},\n\n\tnegate: function () {\n\n\t\tthis.constant *= - 1;\n\t\tthis.normal.negate();\n\n\t\treturn this;\n\n\t},\n\n\tdistanceToPoint: function ( point ) {\n\n\t\treturn this.normal.dot( point ) + this.constant;\n\n\t},\n\n\tdistanceToSphere: function ( sphere ) {\n\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\n\t},\n\n\tprojectPoint: function ( point, optionalTarget ) {\n\n\t\tvar result = optionalTarget || new Vector3();\n\n\t\treturn result.copy( this.normal ).multiplyScalar( - this.distanceToPoint( point ) ).add( point );\n\n\t},\n\n\tintersectLine: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function intersectLine( line, optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\tvar direction = line.delta( v1 );\n\n\t\t\tvar denominator = this.normal.dot( direction );\n\n\t\t\tif ( denominator === 0 ) {\n\n\t\t\t\t// line is coplanar, return origin\n\t\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\n\n\t\t\t\t\treturn result.copy( line.start );\n\n\t\t\t\t}\n\n\t\t\t\t// Unsure if this is the correct method to handle this case.\n\t\t\t\treturn undefined;\n\n\t\t\t}\n\n\t\t\tvar t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n\t\t\tif ( t < 0 || t > 1 ) {\n\n\t\t\t\treturn undefined;\n\n\t\t\t}\n\n\t\t\treturn result.copy( direction ).multiplyScalar( t ).add( line.start );\n\n\t\t};\n\n\t}(),\n\n\tintersectsLine: function ( line ) {\n\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n\t\tvar startSign = this.distanceToPoint( line.start );\n\t\tvar endSign = this.distanceToPoint( line.end );\n\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n\t},\n\n\tintersectsBox: function ( box ) {\n\n\t\treturn box.intersectsPlane( this );\n\n\t},\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\treturn sphere.intersectsPlane( this );\n\n\t},\n\n\tcoplanarPoint: function ( optionalTarget ) {\n\n\t\tvar result = optionalTarget || new Vector3();\n\n\t\treturn result.copy( this.normal ).multiplyScalar( - this.constant );\n\n\t},\n\n\tapplyMatrix4: function () {\n\n\t\tvar v1 = new Vector3();\n\t\tvar m1 = new Matrix3();\n\n\t\treturn function applyMatrix4( matrix, optionalNormalMatrix ) {\n\n\t\t\tvar normalMatrix = optionalNormalMatrix || m1.getNormalMatrix( matrix );\n\n\t\t\tvar referencePoint = this.coplanarPoint( v1 ).applyMatrix4( matrix );\n\n\t\t\tvar normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\tthis.constant = - referencePoint.dot( normal );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslate: function ( offset ) {\n\n\t\tthis.constant -= offset.dot( this.normal );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( plane ) {\n\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author bhouston / http://clara.io\n */\n\nfunction Frustum( p0, p1, p2, p3, p4, p5 ) {\n\n\tthis.planes = [\n\n\t\t( p0 !== undefined ) ? p0 : new Plane(),\n\t\t( p1 !== undefined ) ? p1 : new Plane(),\n\t\t( p2 !== undefined ) ? p2 : new Plane(),\n\t\t( p3 !== undefined ) ? p3 : new Plane(),\n\t\t( p4 !== undefined ) ? p4 : new Plane(),\n\t\t( p5 !== undefined ) ? p5 : new Plane()\n\n\t];\n\n}\n\nObject.assign( Frustum.prototype, {\n\n\tset: function ( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tvar planes = this.planes;\n\n\t\tplanes[ 0 ].copy( p0 );\n\t\tplanes[ 1 ].copy( p1 );\n\t\tplanes[ 2 ].copy( p2 );\n\t\tplanes[ 3 ].copy( p3 );\n\t\tplanes[ 4 ].copy( p4 );\n\t\tplanes[ 5 ].copy( p5 );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( frustum ) {\n\n\t\tvar planes = this.planes;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromMatrix: function ( m ) {\n\n\t\tvar planes = this.planes;\n\t\tvar me = m.elements;\n\t\tvar me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\tvar me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\tvar me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\tvar me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n\t\treturn this;\n\n\t},\n\n\tintersectsObject: function () {\n\n\t\tvar sphere = new Sphere();\n\n\t\treturn function intersectsObject( object ) {\n\n\t\t\tvar geometry = object.geometry;\n\n\t\t\tif ( geometry.boundingSphere === null )\n\t\t\t\tgeometry.computeBoundingSphere();\n\n\t\t\tsphere.copy( geometry.boundingSphere )\n\t\t\t\t.applyMatrix4( object.matrixWorld );\n\n\t\t\treturn this.intersectsSphere( sphere );\n\n\t\t};\n\n\t}(),\n\n\tintersectsSprite: function () {\n\n\t\tvar sphere = new Sphere();\n\n\t\treturn function intersectsSprite( sprite ) {\n\n\t\t\tsphere.center.set( 0, 0, 0 );\n\t\t\tsphere.radius = 0.7071067811865476;\n\t\t\tsphere.applyMatrix4( sprite.matrixWorld );\n\n\t\t\treturn this.intersectsSphere( sphere );\n\n\t\t};\n\n\t}(),\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\tvar planes = this.planes;\n\t\tvar center = sphere.center;\n\t\tvar negRadius = - sphere.radius;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\tvar distance = planes[ i ].distanceToPoint( center );\n\n\t\t\tif ( distance < negRadius ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t},\n\n\tintersectsBox: function () {\n\n\t\tvar p1 = new Vector3(),\n\t\t\tp2 = new Vector3();\n\n\t\treturn function intersectsBox( box ) {\n\n\t\t\tvar planes = this.planes;\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tvar plane = planes[ i ];\n\n\t\t\t\tp1.x = plane.normal.x > 0 ? box.min.x : box.max.x;\n\t\t\t\tp2.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t\tp1.y = plane.normal.y > 0 ? box.min.y : box.max.y;\n\t\t\t\tp2.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t\tp1.z = plane.normal.z > 0 ? box.min.z : box.max.z;\n\t\t\t\tp2.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\t\tvar d1 = plane.distanceToPoint( p1 );\n\t\t\t\tvar d2 = plane.distanceToPoint( p2 );\n\n\t\t\t\t// if both outside plane, no intersection\n\n\t\t\t\tif ( d1 < 0 && d2 < 0 ) {\n\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t};\n\n\t}(),\n\n\tcontainsPoint: function ( point ) {\n\n\t\tvar planes = this.planes;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLShadowMap( _renderer, _objects, maxTextureSize ) {\n\n\tvar _frustum = new Frustum(),\n\t\t_projScreenMatrix = new Matrix4(),\n\n\t\t_shadowMapSize = new Vector2(),\n\t\t_maxShadowMapSize = new Vector2( maxTextureSize, maxTextureSize ),\n\n\t\t_lookTarget = new Vector3(),\n\t\t_lightPositionWorld = new Vector3(),\n\n\t\t_MorphingFlag = 1,\n\t\t_SkinningFlag = 2,\n\n\t\t_NumberOfMaterialVariants = ( _MorphingFlag | _SkinningFlag ) + 1,\n\n\t\t_depthMaterials = new Array( _NumberOfMaterialVariants ),\n\t\t_distanceMaterials = new Array( _NumberOfMaterialVariants ),\n\n\t\t_materialCache = {};\n\n\tvar cubeDirections = [\n\t\tnew Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\n\t\tnew Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\n\t];\n\n\tvar cubeUps = [\n\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\n\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\n\t];\n\n\tvar cube2DViewPorts = [\n\t\tnew Vector4(), new Vector4(), new Vector4(),\n\t\tnew Vector4(), new Vector4(), new Vector4()\n\t];\n\n\t// init\n\n\tfor ( var i = 0; i !== _NumberOfMaterialVariants; ++ i ) {\n\n\t\tvar useMorphing = ( i & _MorphingFlag ) !== 0;\n\t\tvar useSkinning = ( i & _SkinningFlag ) !== 0;\n\n\t\tvar depthMaterial = new MeshDepthMaterial( {\n\n\t\t\tdepthPacking: RGBADepthPacking,\n\n\t\t\tmorphTargets: useMorphing,\n\t\t\tskinning: useSkinning\n\n\t\t} );\n\n\t\t_depthMaterials[ i ] = depthMaterial;\n\n\t\t//\n\n\t\tvar distanceMaterial = new MeshDistanceMaterial( {\n\n\t\t\tmorphTargets: useMorphing,\n\t\t\tskinning: useSkinning\n\n\t\t} );\n\n\t\t_distanceMaterials[ i ] = distanceMaterial;\n\n\t}\n\n\t//\n\n\tvar scope = this;\n\n\tthis.enabled = false;\n\n\tthis.autoUpdate = true;\n\tthis.needsUpdate = false;\n\n\tthis.type = PCFShadowMap;\n\n\tthis.renderReverseSided = true;\n\tthis.renderSingleSided = true;\n\n\tthis.render = function ( lights, scene, camera ) {\n\n\t\tif ( scope.enabled === false ) return;\n\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) return;\n\n\t\tif ( lights.length === 0 ) return;\n\n\t\t// TODO Clean up (needed in case of contextlost)\n\t\tvar _gl = _renderer.context;\n\t\tvar _state = _renderer.state;\n\n\t\t// Set GL state for depth map.\n\t\t_state.disable( _gl.BLEND );\n\t\t_state.buffers.color.setClear( 1, 1, 1, 1 );\n\t\t_state.buffers.depth.setTest( true );\n\t\t_state.setScissorTest( false );\n\n\t\t// render depth map\n\n\t\tvar faceCount;\n\n\t\tfor ( var i = 0, il = lights.length; i < il; i ++ ) {\n\n\t\t\tvar light = lights[ i ];\n\t\t\tvar shadow = light.shadow;\n\t\t\tvar isPointLight = light && light.isPointLight;\n\n\t\t\tif ( shadow === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tvar shadowCamera = shadow.camera;\n\n\t\t\t_shadowMapSize.copy( shadow.mapSize );\n\t\t\t_shadowMapSize.min( _maxShadowMapSize );\n\n\t\t\tif ( isPointLight ) {\n\n\t\t\t\tvar vpWidth = _shadowMapSize.x;\n\t\t\t\tvar vpHeight = _shadowMapSize.y;\n\n\t\t\t\t// These viewports map a cube-map onto a 2D texture with the\n\t\t\t\t// following orientation:\n\t\t\t\t//\n\t\t\t\t//  xzXZ\n\t\t\t\t//   y Y\n\t\t\t\t//\n\t\t\t\t// X - Positive x direction\n\t\t\t\t// x - Negative x direction\n\t\t\t\t// Y - Positive y direction\n\t\t\t\t// y - Negative y direction\n\t\t\t\t// Z - Positive z direction\n\t\t\t\t// z - Negative z direction\n\n\t\t\t\t// positive X\n\t\t\t\tcube2DViewPorts[ 0 ].set( vpWidth * 2, vpHeight, vpWidth, vpHeight );\n\t\t\t\t// negative X\n\t\t\t\tcube2DViewPorts[ 1 ].set( 0, vpHeight, vpWidth, vpHeight );\n\t\t\t\t// positive Z\n\t\t\t\tcube2DViewPorts[ 2 ].set( vpWidth * 3, vpHeight, vpWidth, vpHeight );\n\t\t\t\t// negative Z\n\t\t\t\tcube2DViewPorts[ 3 ].set( vpWidth, vpHeight, vpWidth, vpHeight );\n\t\t\t\t// positive Y\n\t\t\t\tcube2DViewPorts[ 4 ].set( vpWidth * 3, 0, vpWidth, vpHeight );\n\t\t\t\t// negative Y\n\t\t\t\tcube2DViewPorts[ 5 ].set( vpWidth, 0, vpWidth, vpHeight );\n\n\t\t\t\t_shadowMapSize.x *= 4.0;\n\t\t\t\t_shadowMapSize.y *= 2.0;\n\n\t\t\t}\n\n\t\t\tif ( shadow.map === null ) {\n\n\t\t\t\tvar pars = { minFilter: NearestFilter, magFilter: NearestFilter, format: RGBAFormat };\n\n\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\tshadow.map.texture.name = light.name + \".shadowMap\";\n\n\t\t\t\tshadowCamera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\tif ( shadow.isSpotLightShadow ) {\n\n\t\t\t\tshadow.update( light );\n\n\t\t\t}\n\n\t\t\tvar shadowMap = shadow.map;\n\t\t\tvar shadowMatrix = shadow.matrix;\n\n\t\t\t_lightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\t\tshadowCamera.position.copy( _lightPositionWorld );\n\n\t\t\tif ( isPointLight ) {\n\n\t\t\t\tfaceCount = 6;\n\n\t\t\t\t// for point lights we set the shadow matrix to be a translation-only matrix\n\t\t\t\t// equal to inverse of the light's position\n\n\t\t\t\tshadowMatrix.makeTranslation( - _lightPositionWorld.x, - _lightPositionWorld.y, - _lightPositionWorld.z );\n\n\t\t\t} else {\n\n\t\t\t\tfaceCount = 1;\n\n\t\t\t\t_lookTarget.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tshadowCamera.lookAt( _lookTarget );\n\t\t\t\tshadowCamera.updateMatrixWorld();\n\n\t\t\t\t// compute shadow matrix\n\n\t\t\t\tshadowMatrix.set(\n\t\t\t\t\t0.5, 0.0, 0.0, 0.5,\n\t\t\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t\t\t);\n\n\t\t\t\tshadowMatrix.multiply( shadowCamera.projectionMatrix );\n\t\t\t\tshadowMatrix.multiply( shadowCamera.matrixWorldInverse );\n\n\t\t\t}\n\n\t\t\t_renderer.setRenderTarget( shadowMap );\n\t\t\t_renderer.clear();\n\n\t\t\t// render shadow map for each cube face (if omni-directional) or\n\t\t\t// run a single pass if not\n\n\t\t\tfor ( var face = 0; face < faceCount; face ++ ) {\n\n\t\t\t\tif ( isPointLight ) {\n\n\t\t\t\t\t_lookTarget.copy( shadowCamera.position );\n\t\t\t\t\t_lookTarget.add( cubeDirections[ face ] );\n\t\t\t\t\tshadowCamera.up.copy( cubeUps[ face ] );\n\t\t\t\t\tshadowCamera.lookAt( _lookTarget );\n\t\t\t\t\tshadowCamera.updateMatrixWorld();\n\n\t\t\t\t\tvar vpDimensions = cube2DViewPorts[ face ];\n\t\t\t\t\t_state.viewport( vpDimensions );\n\n\t\t\t\t}\n\n\t\t\t\t// update camera matrices and frustum\n\n\t\t\t\t_projScreenMatrix.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n\t\t\t\t_frustum.setFromMatrix( _projScreenMatrix );\n\n\t\t\t\t// set object matrices & frustum culling\n\n\t\t\t\trenderObject( scene, camera, shadowCamera, isPointLight );\n\n\t\t\t}\n\n\t\t}\n\n\t\tscope.needsUpdate = false;\n\n\t};\n\n\tfunction getDepthMaterial( object, material, isPointLight, lightPositionWorld, shadowCameraNear, shadowCameraFar ) {\n\n\t\tvar geometry = object.geometry;\n\n\t\tvar result = null;\n\n\t\tvar materialVariants = _depthMaterials;\n\t\tvar customMaterial = object.customDepthMaterial;\n\n\t\tif ( isPointLight ) {\n\n\t\t\tmaterialVariants = _distanceMaterials;\n\t\t\tcustomMaterial = object.customDistanceMaterial;\n\n\t\t}\n\n\t\tif ( ! customMaterial ) {\n\n\t\t\tvar useMorphing = false;\n\n\t\t\tif ( material.morphTargets ) {\n\n\t\t\t\tif ( geometry && geometry.isBufferGeometry ) {\n\n\t\t\t\t\tuseMorphing = geometry.morphAttributes && geometry.morphAttributes.position && geometry.morphAttributes.position.length > 0;\n\n\t\t\t\t} else if ( geometry && geometry.isGeometry ) {\n\n\t\t\t\t\tuseMorphing = geometry.morphTargets && geometry.morphTargets.length > 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( object.isSkinnedMesh && material.skinning === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:', object );\n\n\t\t\t}\n\n\t\t\tvar useSkinning = object.isSkinnedMesh && material.skinning;\n\n\t\t\tvar variantIndex = 0;\n\n\t\t\tif ( useMorphing ) variantIndex |= _MorphingFlag;\n\t\t\tif ( useSkinning ) variantIndex |= _SkinningFlag;\n\n\t\t\tresult = materialVariants[ variantIndex ];\n\n\t\t} else {\n\n\t\t\tresult = customMaterial;\n\n\t\t}\n\n\t\tif ( _renderer.localClippingEnabled &&\n\t\t\t\tmaterial.clipShadows === true &&\n\t\t\t\tmaterial.clippingPlanes.length !== 0 ) {\n\n\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t// appropriate state\n\n\t\t\tvar keyA = result.uuid, keyB = material.uuid;\n\n\t\t\tvar materialsForVariant = _materialCache[ keyA ];\n\n\t\t\tif ( materialsForVariant === undefined ) {\n\n\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\n\n\t\t\t}\n\n\t\t\tvar cachedMaterial = materialsForVariant[ keyB ];\n\n\t\t\tif ( cachedMaterial === undefined ) {\n\n\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\n\n\t\t\t}\n\n\t\t\tresult = cachedMaterial;\n\n\t\t}\n\n\t\tresult.visible = material.visible;\n\t\tresult.wireframe = material.wireframe;\n\n\t\tvar side = material.side;\n\n\t\tif ( scope.renderSingleSided && side == DoubleSide ) {\n\n\t\t\tside = FrontSide;\n\n\t\t}\n\n\t\tif ( scope.renderReverseSided ) {\n\n\t\t\tif ( side === FrontSide ) side = BackSide;\n\t\t\telse if ( side === BackSide ) side = FrontSide;\n\n\t\t}\n\n\t\tresult.side = side;\n\n\t\tresult.clipShadows = material.clipShadows;\n\t\tresult.clippingPlanes = material.clippingPlanes;\n\t\tresult.clipIntersection = material.clipIntersection;\n\n\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\tresult.linewidth = material.linewidth;\n\n\t\tif ( isPointLight && result.isMeshDistanceMaterial ) {\n\n\t\t\tresult.referencePosition.copy( lightPositionWorld );\n\t\t\tresult.nearDistance = shadowCameraNear;\n\t\t\tresult.farDistance = shadowCameraFar;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n\tfunction renderObject( object, camera, shadowCamera, isPointLight ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tvar visible = object.layers.test( camera.layers );\n\n\t\tif ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\n\n\t\t\tif ( object.castShadow && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {\n\n\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n\n\t\t\t\tvar geometry = _objects.update( object );\n\t\t\t\tvar material = object.material;\n\n\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\tvar groups = geometry.groups;\n\n\t\t\t\t\tfor ( var k = 0, kl = groups.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\tvar group = groups[ k ];\n\t\t\t\t\t\tvar groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\tvar depthMaterial = getDepthMaterial( object, groupMaterial, isPointLight, _lightPositionWorld, shadowCamera.near, shadowCamera.far );\n\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\tvar depthMaterial = getDepthMaterial( object, material, isPointLight, _lightPositionWorld, shadowCamera.near, shadowCamera.far );\n\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar children = object.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\trenderObject( children[ i ], camera, shadowCamera, isPointLight );\n\n\t\t}\n\n\t}\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLAttributes( gl ) {\n\n\tvar buffers = {};\n\n\tfunction createBuffer( attribute, bufferType ) {\n\n\t\tvar array = attribute.array;\n\t\tvar usage = attribute.dynamic ? gl.DYNAMIC_DRAW : gl.STATIC_DRAW;\n\n\t\tvar buffer = gl.createBuffer();\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\t\tgl.bufferData( bufferType, array, usage );\n\n\t\tattribute.onUploadCallback();\n\n\t\tvar type = gl.FLOAT;\n\n\t\tif ( array instanceof Float32Array ) {\n\n\t\t\ttype = gl.FLOAT;\n\n\t\t} else if ( array instanceof Float64Array ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.' );\n\n\t\t} else if ( array instanceof Uint16Array ) {\n\n\t\t\ttype = gl.UNSIGNED_SHORT;\n\n\t\t} else if ( array instanceof Int16Array ) {\n\n\t\t\ttype = gl.SHORT;\n\n\t\t} else if ( array instanceof Uint32Array ) {\n\n\t\t\ttype = gl.UNSIGNED_INT;\n\n\t\t} else if ( array instanceof Int32Array ) {\n\n\t\t\ttype = gl.INT;\n\n\t\t} else if ( array instanceof Int8Array ) {\n\n\t\t\ttype = gl.BYTE;\n\n\t\t} else if ( array instanceof Uint8Array ) {\n\n\t\t\ttype = gl.UNSIGNED_BYTE;\n\n\t\t}\n\n\t\treturn {\n\t\t\tbuffer: buffer,\n\t\t\ttype: type,\n\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\n\t\t\tversion: attribute.version\n\t\t};\n\n\t}\n\n\tfunction updateBuffer( buffer, attribute, bufferType ) {\n\n\t\tvar array = attribute.array;\n\t\tvar updateRange = attribute.updateRange;\n\n\t\tgl.bindBuffer( bufferType, buffer );\n\n\t\tif ( attribute.dynamic === false ) {\n\n\t\t\tgl.bufferData( bufferType, array, gl.STATIC_DRAW );\n\n\t\t} else if ( updateRange.count === - 1 ) {\n\n\t\t\t// Not using update ranges\n\n\t\t\tgl.bufferSubData( bufferType, 0, array );\n\n\t\t} else if ( updateRange.count === 0 ) {\n\n\t\t\tconsole.error( 'THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually.' );\n\n\t\t} else {\n\n\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\tarray.subarray( updateRange.offset, updateRange.offset + updateRange.count ) );\n\n\t\t\tupdateRange.count = - 1; // reset range\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction get( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\treturn buffers[ attribute.uuid ];\n\n\t}\n\n\tfunction remove( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tvar data = buffers[ attribute.uuid ];\n\n\t\tif ( data ) {\n\n\t\t\tgl.deleteBuffer( data.buffer );\n\n\t\t\tdelete buffers[ attribute.uuid ];\n\n\t\t}\n\n\t}\n\n\tfunction update( attribute, bufferType ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) attribute = attribute.data;\n\n\t\tvar data = buffers[ attribute.uuid ];\n\n\t\tif ( data === undefined ) {\n\n\t\t\tbuffers[ attribute.uuid ] = createBuffer( attribute, bufferType );\n\n\t\t} else if ( data.version < attribute.version ) {\n\n\t\t\tupdateBuffer( data.buffer, attribute, bufferType );\n\n\t\t\tdata.version = attribute.version;\n\n\t\t}\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tremove: remove,\n\t\tupdate: update\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author bhouston / http://clara.io\n */\n\nfunction Euler( x, y, z, order ) {\n\n\tthis._x = x || 0;\n\tthis._y = y || 0;\n\tthis._z = z || 0;\n\tthis._order = order || Euler.DefaultOrder;\n\n}\n\nEuler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\n\nEuler.DefaultOrder = 'XYZ';\n\nObject.defineProperties( Euler.prototype, {\n\n\tx: {\n\n\t\tget: function () {\n\n\t\t\treturn this._x;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._x = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\ty: {\n\n\t\tget: function () {\n\n\t\t\treturn this._y;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._y = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\tz: {\n\n\t\tget: function () {\n\n\t\t\treturn this._z;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._z = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t},\n\n\torder: {\n\n\t\tget: function () {\n\n\t\t\treturn this._order;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis._order = value;\n\t\t\tthis.onChangeCallback();\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( Euler.prototype, {\n\n\tisEuler: true,\n\n\tset: function ( x, y, z, order ) {\n\n\t\tthis._x = x;\n\t\tthis._y = y;\n\t\tthis._z = z;\n\t\tthis._order = order || this._order;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n\t},\n\n\tcopy: function ( euler ) {\n\n\t\tthis._x = euler._x;\n\t\tthis._y = euler._y;\n\t\tthis._z = euler._z;\n\t\tthis._order = euler._order;\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromRotationMatrix: function ( m, order, update ) {\n\n\t\tvar clamp = _Math.clamp;\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tvar te = m.elements;\n\t\tvar m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\tvar m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\tvar m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\torder = order || this._order;\n\n\t\tif ( order === 'XYZ' ) {\n\n\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m13 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\tthis._z = 0;\n\n\t\t\t}\n\n\t\t} else if ( order === 'YXZ' ) {\n\n\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m23 ) < 0.99999 ) {\n\n\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\tthis._z = 0;\n\n\t\t\t}\n\n\t\t} else if ( order === 'ZXY' ) {\n\n\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m32 ) < 0.99999 ) {\n\n\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._y = 0;\n\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t}\n\n\t\t} else if ( order === 'ZYX' ) {\n\n\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m31 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t}\n\n\t\t} else if ( order === 'YZX' ) {\n\n\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m21 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t}\n\n\t\t} else if ( order === 'XZY' ) {\n\n\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\tif ( Math.abs( m12 ) < 0.99999 ) {\n\n\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t} else {\n\n\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\tthis._y = 0;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() given unsupported order: ' + order );\n\n\t\t}\n\n\t\tthis._order = order;\n\n\t\tif ( update !== false ) this.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\tsetFromQuaternion: function () {\n\n\t\tvar matrix = new Matrix4();\n\n\t\treturn function setFromQuaternion( q, order, update ) {\n\n\t\t\tmatrix.makeRotationFromQuaternion( q );\n\n\t\t\treturn this.setFromRotationMatrix( matrix, order, update );\n\n\t\t};\n\n\t}(),\n\n\tsetFromVector3: function ( v, order ) {\n\n\t\treturn this.set( v.x, v.y, v.z, order || this._order );\n\n\t},\n\n\treorder: function () {\n\n\t\t// WARNING: this discards revolution information -bhouston\n\n\t\tvar q = new Quaternion();\n\n\t\treturn function reorder( newOrder ) {\n\n\t\t\tq.setFromEuler( this );\n\n\t\t\treturn this.setFromQuaternion( q, newOrder );\n\n\t\t};\n\n\t}(),\n\n\tequals: function ( euler ) {\n\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t},\n\n\tfromArray: function ( array ) {\n\n\t\tthis._x = array[ 0 ];\n\t\tthis._y = array[ 1 ];\n\t\tthis._z = array[ 2 ];\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\n\n\t\tthis.onChangeCallback();\n\n\t\treturn this;\n\n\t},\n\n\ttoArray: function ( array, offset ) {\n\n\t\tif ( array === undefined ) array = [];\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tarray[ offset ] = this._x;\n\t\tarray[ offset + 1 ] = this._y;\n\t\tarray[ offset + 2 ] = this._z;\n\t\tarray[ offset + 3 ] = this._order;\n\n\t\treturn array;\n\n\t},\n\n\ttoVector3: function ( optionalResult ) {\n\n\t\tif ( optionalResult ) {\n\n\t\t\treturn optionalResult.set( this._x, this._y, this._z );\n\n\t\t} else {\n\n\t\t\treturn new Vector3( this._x, this._y, this._z );\n\n\t\t}\n\n\t},\n\n\tonChange: function ( callback ) {\n\n\t\tthis.onChangeCallback = callback;\n\n\t\treturn this;\n\n\t},\n\n\tonChangeCallback: function () {}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Layers() {\n\n\tthis.mask = 1 | 0;\n\n}\n\nObject.assign( Layers.prototype, {\n\n\tset: function ( channel ) {\n\n\t\tthis.mask = 1 << channel | 0;\n\n\t},\n\n\tenable: function ( channel ) {\n\n\t\tthis.mask |= 1 << channel | 0;\n\n\t},\n\n\ttoggle: function ( channel ) {\n\n\t\tthis.mask ^= 1 << channel | 0;\n\n\t},\n\n\tdisable: function ( channel ) {\n\n\t\tthis.mask &= ~ ( 1 << channel | 0 );\n\n\t},\n\n\ttest: function ( layers ) {\n\n\t\treturn ( this.mask & layers.mask ) !== 0;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author elephantatwork / www.elephantatwork.ch\n */\n\nvar object3DId = 0;\n\nfunction Object3D() {\n\n\tObject.defineProperty( this, 'id', { value: object3DId ++ } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'Object3D';\n\n\tthis.parent = null;\n\tthis.children = [];\n\n\tthis.up = Object3D.DefaultUp.clone();\n\n\tvar position = new Vector3();\n\tvar rotation = new Euler();\n\tvar quaternion = new Quaternion();\n\tvar scale = new Vector3( 1, 1, 1 );\n\n\tfunction onRotationChange() {\n\n\t\tquaternion.setFromEuler( rotation, false );\n\n\t}\n\n\tfunction onQuaternionChange() {\n\n\t\trotation.setFromQuaternion( quaternion, undefined, false );\n\n\t}\n\n\trotation.onChange( onRotationChange );\n\tquaternion.onChange( onQuaternionChange );\n\n\tObject.defineProperties( this, {\n\t\tposition: {\n\t\t\tenumerable: true,\n\t\t\tvalue: position\n\t\t},\n\t\trotation: {\n\t\t\tenumerable: true,\n\t\t\tvalue: rotation\n\t\t},\n\t\tquaternion: {\n\t\t\tenumerable: true,\n\t\t\tvalue: quaternion\n\t\t},\n\t\tscale: {\n\t\t\tenumerable: true,\n\t\t\tvalue: scale\n\t\t},\n\t\tmodelViewMatrix: {\n\t\t\tvalue: new Matrix4()\n\t\t},\n\t\tnormalMatrix: {\n\t\t\tvalue: new Matrix3()\n\t\t}\n\t} );\n\n\tthis.matrix = new Matrix4();\n\tthis.matrixWorld = new Matrix4();\n\n\tthis.matrixAutoUpdate = Object3D.DefaultMatrixAutoUpdate;\n\tthis.matrixWorldNeedsUpdate = false;\n\n\tthis.layers = new Layers();\n\tthis.visible = true;\n\n\tthis.castShadow = false;\n\tthis.receiveShadow = false;\n\n\tthis.frustumCulled = true;\n\tthis.renderOrder = 0;\n\n\tthis.userData = {};\n\n}\n\nObject3D.DefaultUp = new Vector3( 0, 1, 0 );\nObject3D.DefaultMatrixAutoUpdate = true;\n\nObject.assign( Object3D.prototype, EventDispatcher.prototype, {\n\n\tisObject3D: true,\n\n\tonBeforeRender: function () {},\n\tonAfterRender: function () {},\n\n\tapplyMatrix: function ( matrix ) {\n\n\t\tthis.matrix.multiplyMatrices( matrix, this.matrix );\n\n\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\n\n\t},\n\n\tapplyQuaternion: function ( q ) {\n\n\t\tthis.quaternion.premultiply( q );\n\n\t\treturn this;\n\n\t},\n\n\tsetRotationFromAxisAngle: function ( axis, angle ) {\n\n\t\t// assumes axis is normalized\n\n\t\tthis.quaternion.setFromAxisAngle( axis, angle );\n\n\t},\n\n\tsetRotationFromEuler: function ( euler ) {\n\n\t\tthis.quaternion.setFromEuler( euler, true );\n\n\t},\n\n\tsetRotationFromMatrix: function ( m ) {\n\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\tthis.quaternion.setFromRotationMatrix( m );\n\n\t},\n\n\tsetRotationFromQuaternion: function ( q ) {\n\n\t\t// assumes q is normalized\n\n\t\tthis.quaternion.copy( q );\n\n\t},\n\n\trotateOnAxis: function () {\n\n\t\t// rotate object on axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\tvar q1 = new Quaternion();\n\n\t\treturn function rotateOnAxis( axis, angle ) {\n\n\t\t\tq1.setFromAxisAngle( axis, angle );\n\n\t\t\tthis.quaternion.multiply( q1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateOnWorldAxis: function () {\n\n\t\t// rotate object on axis in world space\n\t\t// axis is assumed to be normalized\n\t\t// method assumes no rotated parent\n\n\t\tvar q1 = new Quaternion();\n\n\t\treturn function rotateOnWorldAxis( axis, angle ) {\n\n\t\t\tq1.setFromAxisAngle( axis, angle );\n\n\t\t\tthis.quaternion.premultiply( q1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateX: function () {\n\n\t\tvar v1 = new Vector3( 1, 0, 0 );\n\n\t\treturn function rotateX( angle ) {\n\n\t\t\treturn this.rotateOnAxis( v1, angle );\n\n\t\t};\n\n\t}(),\n\n\trotateY: function () {\n\n\t\tvar v1 = new Vector3( 0, 1, 0 );\n\n\t\treturn function rotateY( angle ) {\n\n\t\t\treturn this.rotateOnAxis( v1, angle );\n\n\t\t};\n\n\t}(),\n\n\trotateZ: function () {\n\n\t\tvar v1 = new Vector3( 0, 0, 1 );\n\n\t\treturn function rotateZ( angle ) {\n\n\t\t\treturn this.rotateOnAxis( v1, angle );\n\n\t\t};\n\n\t}(),\n\n\ttranslateOnAxis: function () {\n\n\t\t// translate object by distance along axis in object space\n\t\t// axis is assumed to be normalized\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function translateOnAxis( axis, distance ) {\n\n\t\t\tv1.copy( axis ).applyQuaternion( this.quaternion );\n\n\t\t\tthis.position.add( v1.multiplyScalar( distance ) );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslateX: function () {\n\n\t\tvar v1 = new Vector3( 1, 0, 0 );\n\n\t\treturn function translateX( distance ) {\n\n\t\t\treturn this.translateOnAxis( v1, distance );\n\n\t\t};\n\n\t}(),\n\n\ttranslateY: function () {\n\n\t\tvar v1 = new Vector3( 0, 1, 0 );\n\n\t\treturn function translateY( distance ) {\n\n\t\t\treturn this.translateOnAxis( v1, distance );\n\n\t\t};\n\n\t}(),\n\n\ttranslateZ: function () {\n\n\t\tvar v1 = new Vector3( 0, 0, 1 );\n\n\t\treturn function translateZ( distance ) {\n\n\t\t\treturn this.translateOnAxis( v1, distance );\n\n\t\t};\n\n\t}(),\n\n\tlocalToWorld: function ( vector ) {\n\n\t\treturn vector.applyMatrix4( this.matrixWorld );\n\n\t},\n\n\tworldToLocal: function () {\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function worldToLocal( vector ) {\n\n\t\t\treturn vector.applyMatrix4( m1.getInverse( this.matrixWorld ) );\n\n\t\t};\n\n\t}(),\n\n\tlookAt: function () {\n\n\t\t// This method does not support objects with rotated and/or translated parent(s)\n\n\t\tvar m1 = new Matrix4();\n\t\tvar vector = new Vector3();\n\n\t\treturn function lookAt( x, y, z ) {\n\n\t\t\tif ( x.isVector3 ) {\n\n\t\t\t\tvector.copy( x );\n\n\t\t\t} else {\n\n\t\t\t\tvector.set( x, y, z );\n\n\t\t\t}\n\n\t\t\tif ( this.isCamera ) {\n\n\t\t\t\tm1.lookAt( this.position, vector, this.up );\n\n\t\t\t} else {\n\n\t\t\t\tm1.lookAt( vector, this.position, this.up );\n\n\t\t\t}\n\n\t\t\tthis.quaternion.setFromRotationMatrix( m1 );\n\n\t\t};\n\n\t}(),\n\n\tadd: function ( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.add( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( object === this ) {\n\n\t\t\tconsole.error( \"THREE.Object3D.add: object can't be added as a child of itself.\", object );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tif ( ( object && object.isObject3D ) ) {\n\n\t\t\tif ( object.parent !== null ) {\n\n\t\t\t\tobject.parent.remove( object );\n\n\t\t\t}\n\n\t\t\tobject.parent = this;\n\t\t\tobject.dispatchEvent( { type: 'added' } );\n\n\t\t\tthis.children.push( object );\n\n\t\t} else {\n\n\t\t\tconsole.error( \"THREE.Object3D.add: object not an instance of THREE.Object3D.\", object );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tremove: function ( object ) {\n\n\t\tif ( arguments.length > 1 ) {\n\n\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\tthis.remove( arguments[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvar index = this.children.indexOf( object );\n\n\t\tif ( index !== - 1 ) {\n\n\t\t\tobject.parent = null;\n\n\t\t\tobject.dispatchEvent( { type: 'removed' } );\n\n\t\t\tthis.children.splice( index, 1 );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetObjectById: function ( id ) {\n\n\t\treturn this.getObjectByProperty( 'id', id );\n\n\t},\n\n\tgetObjectByName: function ( name ) {\n\n\t\treturn this.getObjectByProperty( 'name', name );\n\n\t},\n\n\tgetObjectByProperty: function ( name, value ) {\n\n\t\tif ( this[ name ] === value ) return this;\n\n\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\tvar child = this.children[ i ];\n\t\t\tvar object = child.getObjectByProperty( name, value );\n\n\t\t\tif ( object !== undefined ) {\n\n\t\t\t\treturn object;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn undefined;\n\n\t},\n\n\tgetWorldPosition: function ( optionalTarget ) {\n\n\t\tvar result = optionalTarget || new Vector3();\n\n\t\tthis.updateMatrixWorld( true );\n\n\t\treturn result.setFromMatrixPosition( this.matrixWorld );\n\n\t},\n\n\tgetWorldQuaternion: function () {\n\n\t\tvar position = new Vector3();\n\t\tvar scale = new Vector3();\n\n\t\treturn function getWorldQuaternion( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Quaternion();\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.matrixWorld.decompose( position, result, scale );\n\n\t\t\treturn result;\n\n\t\t};\n\n\t}(),\n\n\tgetWorldRotation: function () {\n\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function getWorldRotation( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Euler();\n\n\t\t\tthis.getWorldQuaternion( quaternion );\n\n\t\t\treturn result.setFromQuaternion( quaternion, this.rotation.order, false );\n\n\t\t};\n\n\t}(),\n\n\tgetWorldScale: function () {\n\n\t\tvar position = new Vector3();\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function getWorldScale( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.matrixWorld.decompose( position, quaternion, result );\n\n\t\t\treturn result;\n\n\t\t};\n\n\t}(),\n\n\tgetWorldDirection: function () {\n\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function getWorldDirection( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\tthis.getWorldQuaternion( quaternion );\n\n\t\t\treturn result.set( 0, 0, 1 ).applyQuaternion( quaternion );\n\n\t\t};\n\n\t}(),\n\n\traycast: function () {},\n\n\ttraverse: function ( callback ) {\n\n\t\tcallback( this );\n\n\t\tvar children = this.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverse( callback );\n\n\t\t}\n\n\t},\n\n\ttraverseVisible: function ( callback ) {\n\n\t\tif ( this.visible === false ) return;\n\n\t\tcallback( this );\n\n\t\tvar children = this.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].traverseVisible( callback );\n\n\t\t}\n\n\t},\n\n\ttraverseAncestors: function ( callback ) {\n\n\t\tvar parent = this.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tcallback( parent );\n\n\t\t\tparent.traverseAncestors( callback );\n\n\t\t}\n\n\t},\n\n\tupdateMatrix: function () {\n\n\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\n\n\t\tthis.matrixWorldNeedsUpdate = true;\n\n\t},\n\n\tupdateMatrixWorld: function ( force ) {\n\n\t\tif ( this.matrixAutoUpdate ) this.updateMatrix();\n\n\t\tif ( this.matrixWorldNeedsUpdate || force ) {\n\n\t\t\tif ( this.parent === null ) {\n\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t}\n\n\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\tforce = true;\n\n\t\t}\n\n\t\t// update children\n\n\t\tvar children = this.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tchildren[ i ].updateMatrixWorld( force );\n\n\t\t}\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\t// meta is a string when called from JSON.stringify\n\t\tvar isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tvar output = {};\n\n\t\t// meta is a hash used to collect geometries, materials.\n\t\t// not providing it implies that this is the root object\n\t\t// being serialized.\n\t\tif ( isRootObject ) {\n\n\t\t\t// initialize meta obj\n\t\t\tmeta = {\n\t\t\t\tgeometries: {},\n\t\t\t\tmaterials: {},\n\t\t\t\ttextures: {},\n\t\t\t\timages: {}\n\t\t\t};\n\n\t\t\toutput.metadata = {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Object',\n\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t};\n\n\t\t}\n\n\t\t// standard Object3D serialization\n\n\t\tvar object = {};\n\n\t\tobject.uuid = this.uuid;\n\t\tobject.type = this.type;\n\n\t\tif ( this.name !== '' ) object.name = this.name;\n\t\tif ( this.castShadow === true ) object.castShadow = true;\n\t\tif ( this.receiveShadow === true ) object.receiveShadow = true;\n\t\tif ( this.visible === false ) object.visible = false;\n\t\tif ( JSON.stringify( this.userData ) !== '{}' ) object.userData = this.userData;\n\n\t\tobject.matrix = this.matrix.toArray();\n\n\t\t//\n\n\t\tfunction serialize( library, element ) {\n\n\t\t\tif ( library[ element.uuid ] === undefined ) {\n\n\t\t\t\tlibrary[ element.uuid ] = element.toJSON( meta );\n\n\t\t\t}\n\n\t\t\treturn element.uuid;\n\n\t\t}\n\n\t\tif ( this.geometry !== undefined ) {\n\n\t\t\tobject.geometry = serialize( meta.geometries, this.geometry );\n\n\t\t}\n\n\t\tif ( this.material !== undefined ) {\n\n\t\t\tif ( Array.isArray( this.material ) ) {\n\n\t\t\t\tvar uuids = [];\n\n\t\t\t\tfor ( var i = 0, l = this.material.length; i < l; i ++ ) {\n\n\t\t\t\t\tuuids.push( serialize( meta.materials, this.material[ i ] ) );\n\n\t\t\t\t}\n\n\t\t\t\tobject.material = uuids;\n\n\t\t\t} else {\n\n\t\t\t\tobject.material = serialize( meta.materials, this.material );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tif ( this.children.length > 0 ) {\n\n\t\t\tobject.children = [];\n\n\t\t\tfor ( var i = 0; i < this.children.length; i ++ ) {\n\n\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( isRootObject ) {\n\n\t\t\tvar geometries = extractFromCache( meta.geometries );\n\t\t\tvar materials = extractFromCache( meta.materials );\n\t\t\tvar textures = extractFromCache( meta.textures );\n\t\t\tvar images = extractFromCache( meta.images );\n\n\t\t\tif ( geometries.length > 0 ) output.geometries = geometries;\n\t\t\tif ( materials.length > 0 ) output.materials = materials;\n\t\t\tif ( textures.length > 0 ) output.textures = textures;\n\t\t\tif ( images.length > 0 ) output.images = images;\n\n\t\t}\n\n\t\toutput.object = object;\n\n\t\treturn output;\n\n\t\t// extract data from the cache hash\n\t\t// remove metadata on each item\n\t\t// and return as array\n\t\tfunction extractFromCache( cache ) {\n\n\t\t\tvar values = [];\n\t\t\tfor ( var key in cache ) {\n\n\t\t\t\tvar data = cache[ key ];\n\t\t\t\tdelete data.metadata;\n\t\t\t\tvalues.push( data );\n\n\t\t\t}\n\t\t\treturn values;\n\n\t\t}\n\n\t},\n\n\tclone: function ( recursive ) {\n\n\t\treturn new this.constructor().copy( this, recursive );\n\n\t},\n\n\tcopy: function ( source, recursive ) {\n\n\t\tif ( recursive === undefined ) recursive = true;\n\n\t\tthis.name = source.name;\n\n\t\tthis.up.copy( source.up );\n\n\t\tthis.position.copy( source.position );\n\t\tthis.quaternion.copy( source.quaternion );\n\t\tthis.scale.copy( source.scale );\n\n\t\tthis.matrix.copy( source.matrix );\n\t\tthis.matrixWorld.copy( source.matrixWorld );\n\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\n\t\tthis.layers.mask = source.layers.mask;\n\t\tthis.visible = source.visible;\n\n\t\tthis.castShadow = source.castShadow;\n\t\tthis.receiveShadow = source.receiveShadow;\n\n\t\tthis.frustumCulled = source.frustumCulled;\n\t\tthis.renderOrder = source.renderOrder;\n\n\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\tif ( recursive === true ) {\n\n\t\t\tfor ( var i = 0; i < source.children.length; i ++ ) {\n\n\t\t\t\tvar child = source.children[ i ];\n\t\t\t\tthis.add( child.clone() );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author mikael emtinger / http://gomo.se/\n * @author WestLangley / http://github.com/WestLangley\n*/\n\nfunction Camera() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Camera';\n\n\tthis.matrixWorldInverse = new Matrix4();\n\tthis.projectionMatrix = new Matrix4();\n\n}\n\nCamera.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Camera,\n\n\tisCamera: true,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tObject3D.prototype.copy.call( this, source, recursive );\n\n\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\n\t\tthis.projectionMatrix.copy( source.projectionMatrix );\n\n\t\treturn this;\n\n\t},\n\n\tgetWorldDirection: function () {\n\n\t\tvar quaternion = new Quaternion();\n\n\t\treturn function getWorldDirection( optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\tthis.getWorldQuaternion( quaternion );\n\n\t\t\treturn result.set( 0, 0, - 1 ).applyQuaternion( quaternion );\n\n\t\t};\n\n\t}(),\n\n\tupdateMatrixWorld: function ( force ) {\n\n\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\tthis.matrixWorldInverse.getInverse( this.matrixWorld );\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author arose / http://github.com/arose\n */\n\nfunction OrthographicCamera( left, right, top, bottom, near, far ) {\n\n\tCamera.call( this );\n\n\tthis.type = 'OrthographicCamera';\n\n\tthis.zoom = 1;\n\tthis.view = null;\n\n\tthis.left = left;\n\tthis.right = right;\n\tthis.top = top;\n\tthis.bottom = bottom;\n\n\tthis.near = ( near !== undefined ) ? near : 0.1;\n\tthis.far = ( far !== undefined ) ? far : 2000;\n\n\tthis.updateProjectionMatrix();\n\n}\n\nOrthographicCamera.prototype = Object.assign( Object.create( Camera.prototype ), {\n\n\tconstructor: OrthographicCamera,\n\n\tisOrthographicCamera: true,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tCamera.prototype.copy.call( this, source, recursive );\n\n\t\tthis.left = source.left;\n\t\tthis.right = source.right;\n\t\tthis.top = source.top;\n\t\tthis.bottom = source.bottom;\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\n\t\tthis.zoom = source.zoom;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\treturn this;\n\n\t},\n\n\tsetViewOffset: function ( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tclearViewOffset: function () {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tupdateProjectionMatrix: function () {\n\n\t\tvar dx = ( this.right - this.left ) / ( 2 * this.zoom );\n\t\tvar dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n\t\tvar cx = ( this.right + this.left ) / 2;\n\t\tvar cy = ( this.top + this.bottom ) / 2;\n\n\t\tvar left = cx - dx;\n\t\tvar right = cx + dx;\n\t\tvar top = cy + dy;\n\t\tvar bottom = cy - dy;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tvar zoomW = this.zoom / ( this.view.width / this.view.fullWidth );\n\t\t\tvar zoomH = this.zoom / ( this.view.height / this.view.fullHeight );\n\t\t\tvar scaleW = ( this.right - this.left ) / this.view.width;\n\t\t\tvar scaleH = ( this.top - this.bottom ) / this.view.height;\n\n\t\t\tleft += scaleW * ( this.view.offsetX / zoomW );\n\t\t\tright = left + scaleW * ( this.view.width / zoomW );\n\t\t\ttop -= scaleH * ( this.view.offsetY / zoomH );\n\t\t\tbottom = top - scaleH * ( this.view.height / zoomH );\n\n\t\t}\n\n\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far );\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.zoom = this.zoom;\n\t\tdata.object.left = this.left;\n\t\tdata.object.right = this.right;\n\t\tdata.object.top = this.top;\n\t\tdata.object.bottom = this.bottom;\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Face3( a, b, c, normal, color, materialIndex ) {\n\n\tthis.a = a;\n\tthis.b = b;\n\tthis.c = c;\n\n\tthis.normal = ( normal && normal.isVector3 ) ? normal : new Vector3();\n\tthis.vertexNormals = Array.isArray( normal ) ? normal : [];\n\n\tthis.color = ( color && color.isColor ) ? color : new Color();\n\tthis.vertexColors = Array.isArray( color ) ? color : [];\n\n\tthis.materialIndex = materialIndex !== undefined ? materialIndex : 0;\n\n}\n\nObject.assign( Face3.prototype, {\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.a = source.a;\n\t\tthis.b = source.b;\n\t\tthis.c = source.c;\n\n\t\tthis.normal.copy( source.normal );\n\t\tthis.color.copy( source.color );\n\n\t\tthis.materialIndex = source.materialIndex;\n\n\t\tfor ( var i = 0, il = source.vertexNormals.length; i < il; i ++ ) {\n\n\t\t\tthis.vertexNormals[ i ] = source.vertexNormals[ i ].clone();\n\n\t\t}\n\n\t\tfor ( var i = 0, il = source.vertexColors.length; i < il; i ++ ) {\n\n\t\t\tthis.vertexColors[ i ] = source.vertexColors[ i ].clone();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author kile / http://kile.stravaganza.org/\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author bhouston / http://clara.io\n */\n\nvar geometryId = 0; // Geometry uses even numbers as Id\n\nfunction Geometry() {\n\n\tObject.defineProperty( this, 'id', { value: geometryId += 2 } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'Geometry';\n\n\tthis.vertices = [];\n\tthis.colors = [];\n\tthis.faces = [];\n\tthis.faceVertexUvs = [[]];\n\n\tthis.morphTargets = [];\n\tthis.morphNormals = [];\n\n\tthis.skinWeights = [];\n\tthis.skinIndices = [];\n\n\tthis.lineDistances = [];\n\n\tthis.boundingBox = null;\n\tthis.boundingSphere = null;\n\n\t// update flags\n\n\tthis.elementsNeedUpdate = false;\n\tthis.verticesNeedUpdate = false;\n\tthis.uvsNeedUpdate = false;\n\tthis.normalsNeedUpdate = false;\n\tthis.colorsNeedUpdate = false;\n\tthis.lineDistancesNeedUpdate = false;\n\tthis.groupsNeedUpdate = false;\n\n}\n\nObject.assign( Geometry.prototype, EventDispatcher.prototype, {\n\n\tisGeometry: true,\n\n\tapplyMatrix: function ( matrix ) {\n\n\t\tvar normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\tfor ( var i = 0, il = this.vertices.length; i < il; i ++ ) {\n\n\t\t\tvar vertex = this.vertices[ i ];\n\t\t\tvertex.applyMatrix4( matrix );\n\n\t\t}\n\n\t\tfor ( var i = 0, il = this.faces.length; i < il; i ++ ) {\n\n\t\t\tvar face = this.faces[ i ];\n\t\t\tface.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\tface.vertexNormals[ j ].applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\tthis.verticesNeedUpdate = true;\n\t\tthis.normalsNeedUpdate = true;\n\n\t\treturn this;\n\n\t},\n\n\trotateX: function () {\n\n\t\t// rotate geometry around world x-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateX( angle ) {\n\n\t\t\tm1.makeRotationX( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateY: function () {\n\n\t\t// rotate geometry around world y-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateY( angle ) {\n\n\t\t\tm1.makeRotationY( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateZ: function () {\n\n\t\t// rotate geometry around world z-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateZ( angle ) {\n\n\t\t\tm1.makeRotationZ( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslate: function () {\n\n\t\t// translate geometry\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function translate( x, y, z ) {\n\n\t\t\tm1.makeTranslation( x, y, z );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tscale: function () {\n\n\t\t// scale geometry\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function scale( x, y, z ) {\n\n\t\t\tm1.makeScale( x, y, z );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tlookAt: function () {\n\n\t\tvar obj = new Object3D();\n\n\t\treturn function lookAt( vector ) {\n\n\t\t\tobj.lookAt( vector );\n\n\t\t\tobj.updateMatrix();\n\n\t\t\tthis.applyMatrix( obj.matrix );\n\n\t\t};\n\n\t}(),\n\n\tfromBufferGeometry: function ( geometry ) {\n\n\t\tvar scope = this;\n\n\t\tvar indices = geometry.index !== null ? geometry.index.array : undefined;\n\t\tvar attributes = geometry.attributes;\n\n\t\tvar positions = attributes.position.array;\n\t\tvar normals = attributes.normal !== undefined ? attributes.normal.array : undefined;\n\t\tvar colors = attributes.color !== undefined ? attributes.color.array : undefined;\n\t\tvar uvs = attributes.uv !== undefined ? attributes.uv.array : undefined;\n\t\tvar uvs2 = attributes.uv2 !== undefined ? attributes.uv2.array : undefined;\n\n\t\tif ( uvs2 !== undefined ) this.faceVertexUvs[ 1 ] = [];\n\n\t\tvar tempNormals = [];\n\t\tvar tempUVs = [];\n\t\tvar tempUVs2 = [];\n\n\t\tfor ( var i = 0, j = 0; i < positions.length; i += 3, j += 2 ) {\n\n\t\t\tscope.vertices.push( new Vector3( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] ) );\n\n\t\t\tif ( normals !== undefined ) {\n\n\t\t\t\ttempNormals.push( new Vector3( normals[ i ], normals[ i + 1 ], normals[ i + 2 ] ) );\n\n\t\t\t}\n\n\t\t\tif ( colors !== undefined ) {\n\n\t\t\t\tscope.colors.push( new Color( colors[ i ], colors[ i + 1 ], colors[ i + 2 ] ) );\n\n\t\t\t}\n\n\t\t\tif ( uvs !== undefined ) {\n\n\t\t\t\ttempUVs.push( new Vector2( uvs[ j ], uvs[ j + 1 ] ) );\n\n\t\t\t}\n\n\t\t\tif ( uvs2 !== undefined ) {\n\n\t\t\t\ttempUVs2.push( new Vector2( uvs2[ j ], uvs2[ j + 1 ] ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction addFace( a, b, c, materialIndex ) {\n\n\t\t\tvar vertexNormals = normals !== undefined ? [ tempNormals[ a ].clone(), tempNormals[ b ].clone(), tempNormals[ c ].clone() ] : [];\n\t\t\tvar vertexColors = colors !== undefined ? [ scope.colors[ a ].clone(), scope.colors[ b ].clone(), scope.colors[ c ].clone() ] : [];\n\n\t\t\tvar face = new Face3( a, b, c, vertexNormals, vertexColors, materialIndex );\n\n\t\t\tscope.faces.push( face );\n\n\t\t\tif ( uvs !== undefined ) {\n\n\t\t\t\tscope.faceVertexUvs[ 0 ].push( [ tempUVs[ a ].clone(), tempUVs[ b ].clone(), tempUVs[ c ].clone() ] );\n\n\t\t\t}\n\n\t\t\tif ( uvs2 !== undefined ) {\n\n\t\t\t\tscope.faceVertexUvs[ 1 ].push( [ tempUVs2[ a ].clone(), tempUVs2[ b ].clone(), tempUVs2[ c ].clone() ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar groups = geometry.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tfor ( var i = 0; i < groups.length; i ++ ) {\n\n\t\t\t\tvar group = groups[ i ];\n\n\t\t\t\tvar start = group.start;\n\t\t\t\tvar count = group.count;\n\n\t\t\t\tfor ( var j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\t\tif ( indices !== undefined ) {\n\n\t\t\t\t\t\taddFace( indices[ j ], indices[ j + 1 ], indices[ j + 2 ], group.materialIndex );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\taddFace( j, j + 1, j + 2, group.materialIndex );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( indices !== undefined ) {\n\n\t\t\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t\taddFace( indices[ i ], indices[ i + 1 ], indices[ i + 2 ] );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tfor ( var i = 0; i < positions.length / 3; i += 3 ) {\n\n\t\t\t\t\taddFace( i, i + 1, i + 2 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.computeFaceNormals();\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t}\n\n\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcenter: function () {\n\n\t\tthis.computeBoundingBox();\n\n\t\tvar offset = this.boundingBox.getCenter().negate();\n\n\t\tthis.translate( offset.x, offset.y, offset.z );\n\n\t\treturn offset;\n\n\t},\n\n\tnormalize: function () {\n\n\t\tthis.computeBoundingSphere();\n\n\t\tvar center = this.boundingSphere.center;\n\t\tvar radius = this.boundingSphere.radius;\n\n\t\tvar s = radius === 0 ? 1 : 1.0 / radius;\n\n\t\tvar matrix = new Matrix4();\n\t\tmatrix.set(\n\t\t\ts, 0, 0, - s * center.x,\n\t\t\t0, s, 0, - s * center.y,\n\t\t\t0, 0, s, - s * center.z,\n\t\t\t0, 0, 0, 1\n\t\t);\n\n\t\tthis.applyMatrix( matrix );\n\n\t\treturn this;\n\n\t},\n\n\tcomputeFaceNormals: function () {\n\n\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\tfor ( var f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tvar face = this.faces[ f ];\n\n\t\t\tvar vA = this.vertices[ face.a ];\n\t\t\tvar vB = this.vertices[ face.b ];\n\t\t\tvar vC = this.vertices[ face.c ];\n\n\t\t\tcb.subVectors( vC, vB );\n\t\t\tab.subVectors( vA, vB );\n\t\t\tcb.cross( ab );\n\n\t\t\tcb.normalize();\n\n\t\t\tface.normal.copy( cb );\n\n\t\t}\n\n\t},\n\n\tcomputeVertexNormals: function ( areaWeighted ) {\n\n\t\tif ( areaWeighted === undefined ) areaWeighted = true;\n\n\t\tvar v, vl, f, fl, face, vertices;\n\n\t\tvertices = new Array( this.vertices.length );\n\n\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\n\n\t\t\tvertices[ v ] = new Vector3();\n\n\t\t}\n\n\t\tif ( areaWeighted ) {\n\n\t\t\t// vertex normals weighted by triangle areas\n\t\t\t// http://www.iquilezles.org/www/articles/normals/normals.htm\n\n\t\t\tvar vA, vB, vC;\n\t\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tvA = this.vertices[ face.a ];\n\t\t\t\tvB = this.vertices[ face.b ];\n\t\t\t\tvC = this.vertices[ face.c ];\n\n\t\t\t\tcb.subVectors( vC, vB );\n\t\t\t\tab.subVectors( vA, vB );\n\t\t\t\tcb.cross( ab );\n\n\t\t\t\tvertices[ face.a ].add( cb );\n\t\t\t\tvertices[ face.b ].add( cb );\n\t\t\t\tvertices[ face.c ].add( cb );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tthis.computeFaceNormals();\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tvertices[ face.a ].add( face.normal );\n\t\t\t\tvertices[ face.b ].add( face.normal );\n\t\t\t\tvertices[ face.c ].add( face.normal );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\n\n\t\t\tvertices[ v ].normalize();\n\n\t\t}\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\n\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\tvertexNormals[ 0 ].copy( vertices[ face.a ] );\n\t\t\t\tvertexNormals[ 1 ].copy( vertices[ face.b ] );\n\t\t\t\tvertexNormals[ 2 ].copy( vertices[ face.c ] );\n\n\t\t\t} else {\n\n\t\t\t\tvertexNormals[ 0 ] = vertices[ face.a ].clone();\n\t\t\t\tvertexNormals[ 1 ] = vertices[ face.b ].clone();\n\t\t\t\tvertexNormals[ 2 ] = vertices[ face.c ].clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.faces.length > 0 ) {\n\n\t\t\tthis.normalsNeedUpdate = true;\n\n\t\t}\n\n\t},\n\n\tcomputeFlatVertexNormals: function () {\n\n\t\tvar f, fl, face;\n\n\t\tthis.computeFaceNormals();\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\n\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\tvertexNormals[ 0 ].copy( face.normal );\n\t\t\t\tvertexNormals[ 1 ].copy( face.normal );\n\t\t\t\tvertexNormals[ 2 ].copy( face.normal );\n\n\t\t\t} else {\n\n\t\t\t\tvertexNormals[ 0 ] = face.normal.clone();\n\t\t\t\tvertexNormals[ 1 ] = face.normal.clone();\n\t\t\t\tvertexNormals[ 2 ] = face.normal.clone();\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.faces.length > 0 ) {\n\n\t\t\tthis.normalsNeedUpdate = true;\n\n\t\t}\n\n\t},\n\n\tcomputeMorphNormals: function () {\n\n\t\tvar i, il, f, fl, face;\n\n\t\t// save original normals\n\t\t// - create temp variables on first access\n\t\t//   otherwise just copy (for faster repeated calls)\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\n\t\t\tif ( ! face.__originalFaceNormal ) {\n\n\t\t\t\tface.__originalFaceNormal = face.normal.clone();\n\n\t\t\t} else {\n\n\t\t\t\tface.__originalFaceNormal.copy( face.normal );\n\n\t\t\t}\n\n\t\t\tif ( ! face.__originalVertexNormals ) face.__originalVertexNormals = [];\n\n\t\t\tfor ( i = 0, il = face.vertexNormals.length; i < il; i ++ ) {\n\n\t\t\t\tif ( ! face.__originalVertexNormals[ i ] ) {\n\n\t\t\t\t\tface.__originalVertexNormals[ i ] = face.vertexNormals[ i ].clone();\n\n\t\t\t\t} else {\n\n\t\t\t\t\tface.__originalVertexNormals[ i ].copy( face.vertexNormals[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// use temp geometry to compute face and vertex normals for each morph\n\n\t\tvar tmpGeo = new Geometry();\n\t\ttmpGeo.faces = this.faces;\n\n\t\tfor ( i = 0, il = this.morphTargets.length; i < il; i ++ ) {\n\n\t\t\t// create on first access\n\n\t\t\tif ( ! this.morphNormals[ i ] ) {\n\n\t\t\t\tthis.morphNormals[ i ] = {};\n\t\t\t\tthis.morphNormals[ i ].faceNormals = [];\n\t\t\t\tthis.morphNormals[ i ].vertexNormals = [];\n\n\t\t\t\tvar dstNormalsFace = this.morphNormals[ i ].faceNormals;\n\t\t\t\tvar dstNormalsVertex = this.morphNormals[ i ].vertexNormals;\n\n\t\t\t\tvar faceNormal, vertexNormals;\n\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\tfaceNormal = new Vector3();\n\t\t\t\t\tvertexNormals = { a: new Vector3(), b: new Vector3(), c: new Vector3() };\n\n\t\t\t\t\tdstNormalsFace.push( faceNormal );\n\t\t\t\t\tdstNormalsVertex.push( vertexNormals );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar morphNormals = this.morphNormals[ i ];\n\n\t\t\t// set vertices to morph target\n\n\t\t\ttmpGeo.vertices = this.morphTargets[ i ].vertices;\n\n\t\t\t// compute morph normals\n\n\t\t\ttmpGeo.computeFaceNormals();\n\t\t\ttmpGeo.computeVertexNormals();\n\n\t\t\t// store morph normals\n\n\t\t\tvar faceNormal, vertexNormals;\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tfaceNormal = morphNormals.faceNormals[ f ];\n\t\t\t\tvertexNormals = morphNormals.vertexNormals[ f ];\n\n\t\t\t\tfaceNormal.copy( face.normal );\n\n\t\t\t\tvertexNormals.a.copy( face.vertexNormals[ 0 ] );\n\t\t\t\tvertexNormals.b.copy( face.vertexNormals[ 1 ] );\n\t\t\t\tvertexNormals.c.copy( face.vertexNormals[ 2 ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// restore original normals\n\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\tface = this.faces[ f ];\n\n\t\t\tface.normal = face.__originalFaceNormal;\n\t\t\tface.vertexNormals = face.__originalVertexNormals;\n\n\t\t}\n\n\t},\n\n\tcomputeLineDistances: function () {\n\n\t\tvar d = 0;\n\t\tvar vertices = this.vertices;\n\n\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\n\n\t\t\tif ( i > 0 ) {\n\n\t\t\t\td += vertices[ i ].distanceTo( vertices[ i - 1 ] );\n\n\t\t\t}\n\n\t\t\tthis.lineDistances[ i ] = d;\n\n\t\t}\n\n\t},\n\n\tcomputeBoundingBox: function () {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tthis.boundingBox.setFromPoints( this.vertices );\n\n\t},\n\n\tcomputeBoundingSphere: function () {\n\n\t\tif ( this.boundingSphere === null ) {\n\n\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t}\n\n\t\tthis.boundingSphere.setFromPoints( this.vertices );\n\n\t},\n\n\tmerge: function ( geometry, matrix, materialIndexOffset ) {\n\n\t\tif ( ! ( geometry && geometry.isGeometry ) ) {\n\n\t\t\tconsole.error( 'THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.', geometry );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar normalMatrix,\n\t\t\tvertexOffset = this.vertices.length,\n\t\t\tvertices1 = this.vertices,\n\t\t\tvertices2 = geometry.vertices,\n\t\t\tfaces1 = this.faces,\n\t\t\tfaces2 = geometry.faces,\n\t\t\tuvs1 = this.faceVertexUvs[ 0 ],\n\t\t\tuvs2 = geometry.faceVertexUvs[ 0 ],\n\t\t\tcolors1 = this.colors,\n\t\t\tcolors2 = geometry.colors;\n\n\t\tif ( materialIndexOffset === undefined ) materialIndexOffset = 0;\n\n\t\tif ( matrix !== undefined ) {\n\n\t\t\tnormalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t}\n\n\t\t// vertices\n\n\t\tfor ( var i = 0, il = vertices2.length; i < il; i ++ ) {\n\n\t\t\tvar vertex = vertices2[ i ];\n\n\t\t\tvar vertexCopy = vertex.clone();\n\n\t\t\tif ( matrix !== undefined ) vertexCopy.applyMatrix4( matrix );\n\n\t\t\tvertices1.push( vertexCopy );\n\n\t\t}\n\n\t\t// colors\n\n\t\tfor ( var i = 0, il = colors2.length; i < il; i ++ ) {\n\n\t\t\tcolors1.push( colors2[ i ].clone() );\n\n\t\t}\n\n\t\t// faces\n\n\t\tfor ( i = 0, il = faces2.length; i < il; i ++ ) {\n\n\t\t\tvar face = faces2[ i ], faceCopy, normal, color,\n\t\t\t\tfaceVertexNormals = face.vertexNormals,\n\t\t\t\tfaceVertexColors = face.vertexColors;\n\n\t\t\tfaceCopy = new Face3( face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset );\n\t\t\tfaceCopy.normal.copy( face.normal );\n\n\t\t\tif ( normalMatrix !== undefined ) {\n\n\t\t\t\tfaceCopy.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t}\n\n\t\t\tfor ( var j = 0, jl = faceVertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\tnormal = faceVertexNormals[ j ].clone();\n\n\t\t\t\tif ( normalMatrix !== undefined ) {\n\n\t\t\t\t\tnormal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\t}\n\n\t\t\t\tfaceCopy.vertexNormals.push( normal );\n\n\t\t\t}\n\n\t\t\tfaceCopy.color.copy( face.color );\n\n\t\t\tfor ( var j = 0, jl = faceVertexColors.length; j < jl; j ++ ) {\n\n\t\t\t\tcolor = faceVertexColors[ j ];\n\t\t\t\tfaceCopy.vertexColors.push( color.clone() );\n\n\t\t\t}\n\n\t\t\tfaceCopy.materialIndex = face.materialIndex + materialIndexOffset;\n\n\t\t\tfaces1.push( faceCopy );\n\n\t\t}\n\n\t\t// uvs\n\n\t\tfor ( i = 0, il = uvs2.length; i < il; i ++ ) {\n\n\t\t\tvar uv = uvs2[ i ], uvCopy = [];\n\n\t\t\tif ( uv === undefined ) {\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tfor ( var j = 0, jl = uv.length; j < jl; j ++ ) {\n\n\t\t\t\tuvCopy.push( uv[ j ].clone() );\n\n\t\t\t}\n\n\t\t\tuvs1.push( uvCopy );\n\n\t\t}\n\n\t},\n\n\tmergeMesh: function ( mesh ) {\n\n\t\tif ( ! ( mesh && mesh.isMesh ) ) {\n\n\t\t\tconsole.error( 'THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.', mesh );\n\t\t\treturn;\n\n\t\t}\n\n\t\tmesh.matrixAutoUpdate && mesh.updateMatrix();\n\n\t\tthis.merge( mesh.geometry, mesh.matrix );\n\n\t},\n\n\t/*\n\t * Checks for duplicate vertices with hashmap.\n\t * Duplicated vertices are removed\n\t * and faces' vertices are updated.\n\t */\n\n\tmergeVertices: function () {\n\n\t\tvar verticesMap = {}; // Hashmap for looking up vertices by position coordinates (and making sure they are unique)\n\t\tvar unique = [], changes = [];\n\n\t\tvar v, key;\n\t\tvar precisionPoints = 4; // number of decimal points, e.g. 4 for epsilon of 0.0001\n\t\tvar precision = Math.pow( 10, precisionPoints );\n\t\tvar i, il, face;\n\t\tvar indices, j, jl;\n\n\t\tfor ( i = 0, il = this.vertices.length; i < il; i ++ ) {\n\n\t\t\tv = this.vertices[ i ];\n\t\t\tkey = Math.round( v.x * precision ) + '_' + Math.round( v.y * precision ) + '_' + Math.round( v.z * precision );\n\n\t\t\tif ( verticesMap[ key ] === undefined ) {\n\n\t\t\t\tverticesMap[ key ] = i;\n\t\t\t\tunique.push( this.vertices[ i ] );\n\t\t\t\tchanges[ i ] = unique.length - 1;\n\n\t\t\t} else {\n\n\t\t\t\t//console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);\n\t\t\t\tchanges[ i ] = changes[ verticesMap[ key ] ];\n\n\t\t\t}\n\n\t\t}\n\n\n\t\t// if faces are completely degenerate after merging vertices, we\n\t\t// have to remove them from the geometry.\n\t\tvar faceIndicesToRemove = [];\n\n\t\tfor ( i = 0, il = this.faces.length; i < il; i ++ ) {\n\n\t\t\tface = this.faces[ i ];\n\n\t\t\tface.a = changes[ face.a ];\n\t\t\tface.b = changes[ face.b ];\n\t\t\tface.c = changes[ face.c ];\n\n\t\t\tindices = [ face.a, face.b, face.c ];\n\n\t\t\t// if any duplicate vertices are found in a Face3\n\t\t\t// we have to remove the face as nothing can be saved\n\t\t\tfor ( var n = 0; n < 3; n ++ ) {\n\n\t\t\t\tif ( indices[ n ] === indices[ ( n + 1 ) % 3 ] ) {\n\n\t\t\t\t\tfaceIndicesToRemove.push( i );\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( i = faceIndicesToRemove.length - 1; i >= 0; i -- ) {\n\n\t\t\tvar idx = faceIndicesToRemove[ i ];\n\n\t\t\tthis.faces.splice( idx, 1 );\n\n\t\t\tfor ( j = 0, jl = this.faceVertexUvs.length; j < jl; j ++ ) {\n\n\t\t\t\tthis.faceVertexUvs[ j ].splice( idx, 1 );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Use unique set of vertices\n\n\t\tvar diff = this.vertices.length - unique.length;\n\t\tthis.vertices = unique;\n\t\treturn diff;\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tthis.vertices = [];\n\n\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tvar point = points[ i ];\n\t\t\tthis.vertices.push( new Vector3( point.x, point.y, point.z || 0 ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsortFacesByMaterialIndex: function () {\n\n\t\tvar faces = this.faces;\n\t\tvar length = faces.length;\n\n\t\t// tag faces\n\n\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\tfaces[ i ]._id = i;\n\n\t\t}\n\n\t\t// sort faces\n\n\t\tfunction materialIndexSort( a, b ) {\n\n\t\t\treturn a.materialIndex - b.materialIndex;\n\n\t\t}\n\n\t\tfaces.sort( materialIndexSort );\n\n\t\t// sort uvs\n\n\t\tvar uvs1 = this.faceVertexUvs[ 0 ];\n\t\tvar uvs2 = this.faceVertexUvs[ 1 ];\n\n\t\tvar newUvs1, newUvs2;\n\n\t\tif ( uvs1 && uvs1.length === length ) newUvs1 = [];\n\t\tif ( uvs2 && uvs2.length === length ) newUvs2 = [];\n\n\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\tvar id = faces[ i ]._id;\n\n\t\t\tif ( newUvs1 ) newUvs1.push( uvs1[ id ] );\n\t\t\tif ( newUvs2 ) newUvs2.push( uvs2[ id ] );\n\n\t\t}\n\n\t\tif ( newUvs1 ) this.faceVertexUvs[ 0 ] = newUvs1;\n\t\tif ( newUvs2 ) this.faceVertexUvs[ 1 ] = newUvs2;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'Geometry',\n\t\t\t\tgenerator: 'Geometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard Geometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tvar parameters = this.parameters;\n\n\t\t\tfor ( var key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tvar vertices = [];\n\n\t\tfor ( var i = 0; i < this.vertices.length; i ++ ) {\n\n\t\t\tvar vertex = this.vertices[ i ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t\tvar faces = [];\n\t\tvar normals = [];\n\t\tvar normalsHash = {};\n\t\tvar colors = [];\n\t\tvar colorsHash = {};\n\t\tvar uvs = [];\n\t\tvar uvsHash = {};\n\n\t\tfor ( var i = 0; i < this.faces.length; i ++ ) {\n\n\t\t\tvar face = this.faces[ i ];\n\n\t\t\tvar hasMaterial = true;\n\t\t\tvar hasFaceUv = false; // deprecated\n\t\t\tvar hasFaceVertexUv = this.faceVertexUvs[ 0 ][ i ] !== undefined;\n\t\t\tvar hasFaceNormal = face.normal.length() > 0;\n\t\t\tvar hasFaceVertexNormal = face.vertexNormals.length > 0;\n\t\t\tvar hasFaceColor = face.color.r !== 1 || face.color.g !== 1 || face.color.b !== 1;\n\t\t\tvar hasFaceVertexColor = face.vertexColors.length > 0;\n\n\t\t\tvar faceType = 0;\n\n\t\t\tfaceType = setBit( faceType, 0, 0 ); // isQuad\n\t\t\tfaceType = setBit( faceType, 1, hasMaterial );\n\t\t\tfaceType = setBit( faceType, 2, hasFaceUv );\n\t\t\tfaceType = setBit( faceType, 3, hasFaceVertexUv );\n\t\t\tfaceType = setBit( faceType, 4, hasFaceNormal );\n\t\t\tfaceType = setBit( faceType, 5, hasFaceVertexNormal );\n\t\t\tfaceType = setBit( faceType, 6, hasFaceColor );\n\t\t\tfaceType = setBit( faceType, 7, hasFaceVertexColor );\n\n\t\t\tfaces.push( faceType );\n\t\t\tfaces.push( face.a, face.b, face.c );\n\t\t\tfaces.push( face.materialIndex );\n\n\t\t\tif ( hasFaceVertexUv ) {\n\n\t\t\t\tvar faceVertexUvs = this.faceVertexUvs[ 0 ][ i ];\n\n\t\t\t\tfaces.push(\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 0 ] ),\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 1 ] ),\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 2 ] )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t\tif ( hasFaceNormal ) {\n\n\t\t\t\tfaces.push( getNormalIndex( face.normal ) );\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexNormal ) {\n\n\t\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\t\tfaces.push(\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 0 ] ),\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 1 ] ),\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 2 ] )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t\tif ( hasFaceColor ) {\n\n\t\t\t\tfaces.push( getColorIndex( face.color ) );\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexColor ) {\n\n\t\t\t\tvar vertexColors = face.vertexColors;\n\n\t\t\t\tfaces.push(\n\t\t\t\t\tgetColorIndex( vertexColors[ 0 ] ),\n\t\t\t\t\tgetColorIndex( vertexColors[ 1 ] ),\n\t\t\t\t\tgetColorIndex( vertexColors[ 2 ] )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setBit( value, position, enabled ) {\n\n\t\t\treturn enabled ? value | ( 1 << position ) : value & ( ~ ( 1 << position ) );\n\n\t\t}\n\n\t\tfunction getNormalIndex( normal ) {\n\n\t\t\tvar hash = normal.x.toString() + normal.y.toString() + normal.z.toString();\n\n\t\t\tif ( normalsHash[ hash ] !== undefined ) {\n\n\t\t\t\treturn normalsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tnormalsHash[ hash ] = normals.length / 3;\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\treturn normalsHash[ hash ];\n\n\t\t}\n\n\t\tfunction getColorIndex( color ) {\n\n\t\t\tvar hash = color.r.toString() + color.g.toString() + color.b.toString();\n\n\t\t\tif ( colorsHash[ hash ] !== undefined ) {\n\n\t\t\t\treturn colorsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tcolorsHash[ hash ] = colors.length;\n\t\t\tcolors.push( color.getHex() );\n\n\t\t\treturn colorsHash[ hash ];\n\n\t\t}\n\n\t\tfunction getUvIndex( uv ) {\n\n\t\t\tvar hash = uv.x.toString() + uv.y.toString();\n\n\t\t\tif ( uvsHash[ hash ] !== undefined ) {\n\n\t\t\t\treturn uvsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tuvsHash[ hash ] = uvs.length / 2;\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\treturn uvsHash[ hash ];\n\n\t\t}\n\n\t\tdata.data = {};\n\n\t\tdata.data.vertices = vertices;\n\t\tdata.data.normals = normals;\n\t\tif ( colors.length > 0 ) data.data.colors = colors;\n\t\tif ( uvs.length > 0 ) data.data.uvs = [ uvs ]; // temporal backward compatibility\n\t\tdata.data.faces = faces;\n\n\t\treturn data;\n\n\t},\n\n\tclone: function () {\n\n\t\t/*\n\t\t // Handle primitives\n\n\t\t var parameters = this.parameters;\n\n\t\t if ( parameters !== undefined ) {\n\n\t\t var values = [];\n\n\t\t for ( var key in parameters ) {\n\n\t\t values.push( parameters[ key ] );\n\n\t\t }\n\n\t\t var geometry = Object.create( this.constructor.prototype );\n\t\t this.constructor.apply( geometry, values );\n\t\t return geometry;\n\n\t\t }\n\n\t\t return new this.constructor().copy( this );\n\t\t */\n\n\t\treturn new Geometry().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tvar i, il, j, jl, k, kl;\n\n\t\t// reset\n\n\t\tthis.vertices = [];\n\t\tthis.colors = [];\n\t\tthis.faces = [];\n\t\tthis.faceVertexUvs = [[]];\n\t\tthis.morphTargets = [];\n\t\tthis.morphNormals = [];\n\t\tthis.skinWeights = [];\n\t\tthis.skinIndices = [];\n\t\tthis.lineDistances = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// vertices\n\n\t\tvar vertices = source.vertices;\n\n\t\tfor ( i = 0, il = vertices.length; i < il; i ++ ) {\n\n\t\t\tthis.vertices.push( vertices[ i ].clone() );\n\n\t\t}\n\n\t\t// colors\n\n\t\tvar colors = source.colors;\n\n\t\tfor ( i = 0, il = colors.length; i < il; i ++ ) {\n\n\t\t\tthis.colors.push( colors[ i ].clone() );\n\n\t\t}\n\n\t\t// faces\n\n\t\tvar faces = source.faces;\n\n\t\tfor ( i = 0, il = faces.length; i < il; i ++ ) {\n\n\t\t\tthis.faces.push( faces[ i ].clone() );\n\n\t\t}\n\n\t\t// face vertex uvs\n\n\t\tfor ( i = 0, il = source.faceVertexUvs.length; i < il; i ++ ) {\n\n\t\t\tvar faceVertexUvs = source.faceVertexUvs[ i ];\n\n\t\t\tif ( this.faceVertexUvs[ i ] === undefined ) {\n\n\t\t\t\tthis.faceVertexUvs[ i ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( j = 0, jl = faceVertexUvs.length; j < jl; j ++ ) {\n\n\t\t\t\tvar uvs = faceVertexUvs[ j ], uvsCopy = [];\n\n\t\t\t\tfor ( k = 0, kl = uvs.length; k < kl; k ++ ) {\n\n\t\t\t\t\tvar uv = uvs[ k ];\n\n\t\t\t\t\tuvsCopy.push( uv.clone() );\n\n\t\t\t\t}\n\n\t\t\t\tthis.faceVertexUvs[ i ].push( uvsCopy );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tvar morphTargets = source.morphTargets;\n\n\t\tfor ( i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tvar morphTarget = {};\n\t\t\tmorphTarget.name = morphTargets[ i ].name;\n\n\t\t\t// vertices\n\n\t\t\tif ( morphTargets[ i ].vertices !== undefined ) {\n\n\t\t\t\tmorphTarget.vertices = [];\n\n\t\t\t\tfor ( j = 0, jl = morphTargets[ i ].vertices.length; j < jl; j ++ ) {\n\n\t\t\t\t\tmorphTarget.vertices.push( morphTargets[ i ].vertices[ j ].clone() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// normals\n\n\t\t\tif ( morphTargets[ i ].normals !== undefined ) {\n\n\t\t\t\tmorphTarget.normals = [];\n\n\t\t\t\tfor ( j = 0, jl = morphTargets[ i ].normals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tmorphTarget.normals.push( morphTargets[ i ].normals[ j ].clone() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.morphTargets.push( morphTarget );\n\n\t\t}\n\n\t\t// morph normals\n\n\t\tvar morphNormals = source.morphNormals;\n\n\t\tfor ( i = 0, il = morphNormals.length; i < il; i ++ ) {\n\n\t\t\tvar morphNormal = {};\n\n\t\t\t// vertex normals\n\n\t\t\tif ( morphNormals[ i ].vertexNormals !== undefined ) {\n\n\t\t\t\tmorphNormal.vertexNormals = [];\n\n\t\t\t\tfor ( j = 0, jl = morphNormals[ i ].vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar srcVertexNormal = morphNormals[ i ].vertexNormals[ j ];\n\t\t\t\t\tvar destVertexNormal = {};\n\n\t\t\t\t\tdestVertexNormal.a = srcVertexNormal.a.clone();\n\t\t\t\t\tdestVertexNormal.b = srcVertexNormal.b.clone();\n\t\t\t\t\tdestVertexNormal.c = srcVertexNormal.c.clone();\n\n\t\t\t\t\tmorphNormal.vertexNormals.push( destVertexNormal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// face normals\n\n\t\t\tif ( morphNormals[ i ].faceNormals !== undefined ) {\n\n\t\t\t\tmorphNormal.faceNormals = [];\n\n\t\t\t\tfor ( j = 0, jl = morphNormals[ i ].faceNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tmorphNormal.faceNormals.push( morphNormals[ i ].faceNormals[ j ].clone() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.morphNormals.push( morphNormal );\n\n\t\t}\n\n\t\t// skin weights\n\n\t\tvar skinWeights = source.skinWeights;\n\n\t\tfor ( i = 0, il = skinWeights.length; i < il; i ++ ) {\n\n\t\t\tthis.skinWeights.push( skinWeights[ i ].clone() );\n\n\t\t}\n\n\t\t// skin indices\n\n\t\tvar skinIndices = source.skinIndices;\n\n\t\tfor ( i = 0, il = skinIndices.length; i < il; i ++ ) {\n\n\t\t\tthis.skinIndices.push( skinIndices[ i ].clone() );\n\n\t\t}\n\n\t\t// line distances\n\n\t\tvar lineDistances = source.lineDistances;\n\n\t\tfor ( i = 0, il = lineDistances.length; i < il; i ++ ) {\n\n\t\t\tthis.lineDistances.push( lineDistances[ i ] );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tvar boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tvar boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// update flags\n\n\t\tthis.elementsNeedUpdate = source.elementsNeedUpdate;\n\t\tthis.verticesNeedUpdate = source.verticesNeedUpdate;\n\t\tthis.uvsNeedUpdate = source.uvsNeedUpdate;\n\t\tthis.normalsNeedUpdate = source.normalsNeedUpdate;\n\t\tthis.colorsNeedUpdate = source.colorsNeedUpdate;\n\t\tthis.lineDistancesNeedUpdate = source.lineDistancesNeedUpdate;\n\t\tthis.groupsNeedUpdate = source.groupsNeedUpdate;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction BufferAttribute( array, itemSize, normalized ) {\n\n\tif ( Array.isArray( array ) ) {\n\n\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t}\n\n\tthis.uuid = _Math.generateUUID();\n\tthis.name = '';\n\n\tthis.array = array;\n\tthis.itemSize = itemSize;\n\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\tthis.normalized = normalized === true;\n\n\tthis.dynamic = false;\n\tthis.updateRange = { offset: 0, count: - 1 };\n\n\tthis.onUploadCallback = function () {};\n\n\tthis.version = 0;\n\n}\n\nObject.defineProperty( BufferAttribute.prototype, 'needsUpdate', {\n\n\tset: function ( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n} );\n\nObject.assign( BufferAttribute.prototype, {\n\n\tisBufferAttribute: true,\n\n\tsetArray: function ( array ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.count = array !== undefined ? array.length / this.itemSize : 0;\n\t\tthis.array = array;\n\n\t},\n\n\tsetDynamic: function ( value ) {\n\n\t\tthis.dynamic = value;\n\n\t\treturn this;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.itemSize = source.itemSize;\n\t\tthis.count = source.count;\n\t\tthis.normalized = source.normalized;\n\n\t\tthis.dynamic = source.dynamic;\n\n\t\treturn this;\n\n\t},\n\n\tcopyAt: function ( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.itemSize;\n\t\tindex2 *= attribute.itemSize;\n\n\t\tfor ( var i = 0, l = this.itemSize; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyArray: function ( array ) {\n\n\t\tthis.array.set( array );\n\n\t\treturn this;\n\n\t},\n\n\tcopyColorsArray: function ( colors ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = colors.length; i < l; i ++ ) {\n\n\t\t\tvar color = colors[ i ];\n\n\t\t\tif ( color === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyColorsArray(): color is undefined', i );\n\t\t\t\tcolor = new Color();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = color.r;\n\t\t\tarray[ offset ++ ] = color.g;\n\t\t\tarray[ offset ++ ] = color.b;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyIndicesArray: function ( indices ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\tvar index = indices[ i ];\n\n\t\t\tarray[ offset ++ ] = index.a;\n\t\t\tarray[ offset ++ ] = index.b;\n\t\t\tarray[ offset ++ ] = index.c;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyVector2sArray: function ( vectors ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tvar vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector2();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyVector3sArray: function ( vectors ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tvar vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector3();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\tarray[ offset ++ ] = vector.z;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcopyVector4sArray: function ( vectors ) {\n\n\t\tvar array = this.array, offset = 0;\n\n\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\tvar vector = vectors[ i ];\n\n\t\t\tif ( vector === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i );\n\t\t\t\tvector = new Vector4();\n\n\t\t\t}\n\n\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\tarray[ offset ++ ] = vector.z;\n\t\t\tarray[ offset ++ ] = vector.w;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tset: function ( value, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t},\n\n\tgetX: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize ];\n\n\t},\n\n\tsetX: function ( index, x ) {\n\n\t\tthis.array[ index * this.itemSize ] = x;\n\n\t\treturn this;\n\n\t},\n\n\tgetY: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 1 ];\n\n\t},\n\n\tsetY: function ( index, y ) {\n\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tgetZ: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 2 ];\n\n\t},\n\n\tsetZ: function ( index, z ) {\n\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tgetW: function ( index ) {\n\n\t\treturn this.array[ index * this.itemSize + 3 ];\n\n\t},\n\n\tsetW: function ( index, w ) {\n\n\t\tthis.array[ index * this.itemSize + 3 ] = w;\n\n\t\treturn this;\n\n\t},\n\n\tsetXY: function ( index, x, y ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZ: function ( index, x, y, z ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZW: function ( index, x, y, z, w ) {\n\n\t\tindex *= this.itemSize;\n\n\t\tthis.array[ index + 0 ] = x;\n\t\tthis.array[ index + 1 ] = y;\n\t\tthis.array[ index + 2 ] = z;\n\t\tthis.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t},\n\n\tonUpload: function ( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.array, this.itemSize ).copy( this );\n\n\t}\n\n} );\n\n//\n\nfunction Int8BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Int8Array( array ), itemSize, normalized );\n\n}\n\nInt8BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nInt8BufferAttribute.prototype.constructor = Int8BufferAttribute;\n\n\nfunction Uint8BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint8Array( array ), itemSize, normalized );\n\n}\n\nUint8BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint8BufferAttribute.prototype.constructor = Uint8BufferAttribute;\n\n\nfunction Uint8ClampedBufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint8ClampedArray( array ), itemSize, normalized );\n\n}\n\nUint8ClampedBufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint8ClampedBufferAttribute.prototype.constructor = Uint8ClampedBufferAttribute;\n\n\nfunction Int16BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Int16Array( array ), itemSize, normalized );\n\n}\n\nInt16BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nInt16BufferAttribute.prototype.constructor = Int16BufferAttribute;\n\n\nfunction Uint16BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint16Array( array ), itemSize, normalized );\n\n}\n\nUint16BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint16BufferAttribute.prototype.constructor = Uint16BufferAttribute;\n\n\nfunction Int32BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Int32Array( array ), itemSize, normalized );\n\n}\n\nInt32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nInt32BufferAttribute.prototype.constructor = Int32BufferAttribute;\n\n\nfunction Uint32BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Uint32Array( array ), itemSize, normalized );\n\n}\n\nUint32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nUint32BufferAttribute.prototype.constructor = Uint32BufferAttribute;\n\n\nfunction Float32BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Float32Array( array ), itemSize, normalized );\n\n}\n\nFloat32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nFloat32BufferAttribute.prototype.constructor = Float32BufferAttribute;\n\n\nfunction Float64BufferAttribute( array, itemSize, normalized ) {\n\n\tBufferAttribute.call( this, new Float64Array( array ), itemSize, normalized );\n\n}\n\nFloat64BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\nFloat64BufferAttribute.prototype.constructor = Float64BufferAttribute;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction DirectGeometry() {\n\n\tthis.indices = [];\n\tthis.vertices = [];\n\tthis.normals = [];\n\tthis.colors = [];\n\tthis.uvs = [];\n\tthis.uvs2 = [];\n\n\tthis.groups = [];\n\n\tthis.morphTargets = {};\n\n\tthis.skinWeights = [];\n\tthis.skinIndices = [];\n\n\t// this.lineDistances = [];\n\n\tthis.boundingBox = null;\n\tthis.boundingSphere = null;\n\n\t// update flags\n\n\tthis.verticesNeedUpdate = false;\n\tthis.normalsNeedUpdate = false;\n\tthis.colorsNeedUpdate = false;\n\tthis.uvsNeedUpdate = false;\n\tthis.groupsNeedUpdate = false;\n\n}\n\nObject.assign( DirectGeometry.prototype, {\n\n\tcomputeGroups: function ( geometry ) {\n\n\t\tvar group;\n\t\tvar groups = [];\n\t\tvar materialIndex = undefined;\n\n\t\tvar faces = geometry.faces;\n\n\t\tfor ( var i = 0; i < faces.length; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\t// materials\n\n\t\t\tif ( face.materialIndex !== materialIndex ) {\n\n\t\t\t\tmaterialIndex = face.materialIndex;\n\n\t\t\t\tif ( group !== undefined ) {\n\n\t\t\t\t\tgroup.count = ( i * 3 ) - group.start;\n\t\t\t\t\tgroups.push( group );\n\n\t\t\t\t}\n\n\t\t\t\tgroup = {\n\t\t\t\t\tstart: i * 3,\n\t\t\t\t\tmaterialIndex: materialIndex\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( group !== undefined ) {\n\n\t\t\tgroup.count = ( i * 3 ) - group.start;\n\t\t\tgroups.push( group );\n\n\t\t}\n\n\t\tthis.groups = groups;\n\n\t},\n\n\tfromGeometry: function ( geometry ) {\n\n\t\tvar faces = geometry.faces;\n\t\tvar vertices = geometry.vertices;\n\t\tvar faceVertexUvs = geometry.faceVertexUvs;\n\n\t\tvar hasFaceVertexUv = faceVertexUvs[ 0 ] && faceVertexUvs[ 0 ].length > 0;\n\t\tvar hasFaceVertexUv2 = faceVertexUvs[ 1 ] && faceVertexUvs[ 1 ].length > 0;\n\n\t\t// morphs\n\n\t\tvar morphTargets = geometry.morphTargets;\n\t\tvar morphTargetsLength = morphTargets.length;\n\n\t\tvar morphTargetsPosition;\n\n\t\tif ( morphTargetsLength > 0 ) {\n\n\t\t\tmorphTargetsPosition = [];\n\n\t\t\tfor ( var i = 0; i < morphTargetsLength; i ++ ) {\n\n\t\t\t\tmorphTargetsPosition[ i ] = [];\n\n\t\t\t}\n\n\t\t\tthis.morphTargets.position = morphTargetsPosition;\n\n\t\t}\n\n\t\tvar morphNormals = geometry.morphNormals;\n\t\tvar morphNormalsLength = morphNormals.length;\n\n\t\tvar morphTargetsNormal;\n\n\t\tif ( morphNormalsLength > 0 ) {\n\n\t\t\tmorphTargetsNormal = [];\n\n\t\t\tfor ( var i = 0; i < morphNormalsLength; i ++ ) {\n\n\t\t\t\tmorphTargetsNormal[ i ] = [];\n\n\t\t\t}\n\n\t\t\tthis.morphTargets.normal = morphTargetsNormal;\n\n\t\t}\n\n\t\t// skins\n\n\t\tvar skinIndices = geometry.skinIndices;\n\t\tvar skinWeights = geometry.skinWeights;\n\n\t\tvar hasSkinIndices = skinIndices.length === vertices.length;\n\t\tvar hasSkinWeights = skinWeights.length === vertices.length;\n\n\t\t//\n\n\t\tfor ( var i = 0; i < faces.length; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tthis.vertices.push( vertices[ face.a ], vertices[ face.b ], vertices[ face.c ] );\n\n\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\tthis.normals.push( vertexNormals[ 0 ], vertexNormals[ 1 ], vertexNormals[ 2 ] );\n\n\t\t\t} else {\n\n\t\t\t\tvar normal = face.normal;\n\n\t\t\t\tthis.normals.push( normal, normal, normal );\n\n\t\t\t}\n\n\t\t\tvar vertexColors = face.vertexColors;\n\n\t\t\tif ( vertexColors.length === 3 ) {\n\n\t\t\t\tthis.colors.push( vertexColors[ 0 ], vertexColors[ 1 ], vertexColors[ 2 ] );\n\n\t\t\t} else {\n\n\t\t\t\tvar color = face.color;\n\n\t\t\t\tthis.colors.push( color, color, color );\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexUv === true ) {\n\n\t\t\t\tvar vertexUvs = faceVertexUvs[ 0 ][ i ];\n\n\t\t\t\tif ( vertexUvs !== undefined ) {\n\n\t\t\t\t\tthis.uvs.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ', i );\n\n\t\t\t\t\tthis.uvs.push( new Vector2(), new Vector2(), new Vector2() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hasFaceVertexUv2 === true ) {\n\n\t\t\t\tvar vertexUvs = faceVertexUvs[ 1 ][ i ];\n\n\t\t\t\tif ( vertexUvs !== undefined ) {\n\n\t\t\t\t\tthis.uvs2.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ', i );\n\n\t\t\t\t\tthis.uvs2.push( new Vector2(), new Vector2(), new Vector2() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// morphs\n\n\t\t\tfor ( var j = 0; j < morphTargetsLength; j ++ ) {\n\n\t\t\t\tvar morphTarget = morphTargets[ j ].vertices;\n\n\t\t\t\tmorphTargetsPosition[ j ].push( morphTarget[ face.a ], morphTarget[ face.b ], morphTarget[ face.c ] );\n\n\t\t\t}\n\n\t\t\tfor ( var j = 0; j < morphNormalsLength; j ++ ) {\n\n\t\t\t\tvar morphNormal = morphNormals[ j ].vertexNormals[ i ];\n\n\t\t\t\tmorphTargetsNormal[ j ].push( morphNormal.a, morphNormal.b, morphNormal.c );\n\n\t\t\t}\n\n\t\t\t// skins\n\n\t\t\tif ( hasSkinIndices ) {\n\n\t\t\t\tthis.skinIndices.push( skinIndices[ face.a ], skinIndices[ face.b ], skinIndices[ face.c ] );\n\n\t\t\t}\n\n\t\t\tif ( hasSkinWeights ) {\n\n\t\t\t\tthis.skinWeights.push( skinWeights[ face.a ], skinWeights[ face.b ], skinWeights[ face.c ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.computeGroups( geometry );\n\n\t\tthis.verticesNeedUpdate = geometry.verticesNeedUpdate;\n\t\tthis.normalsNeedUpdate = geometry.normalsNeedUpdate;\n\t\tthis.colorsNeedUpdate = geometry.colorsNeedUpdate;\n\t\tthis.uvsNeedUpdate = geometry.uvsNeedUpdate;\n\t\tthis.groupsNeedUpdate = geometry.groupsNeedUpdate;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction arrayMax( array ) {\n\n\tif ( array.length === 0 ) return - Infinity;\n\n\tvar max = array[ 0 ];\n\n\tfor ( var i = 1, l = array.length; i < l; ++ i ) {\n\n\t\tif ( array[ i ] > max ) max = array[ i ];\n\n\t}\n\n\treturn max;\n\n}\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar bufferGeometryId = 1; // BufferGeometry uses odd numbers as Id\n\nfunction BufferGeometry() {\n\n\tObject.defineProperty( this, 'id', { value: bufferGeometryId += 2 } );\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.name = '';\n\tthis.type = 'BufferGeometry';\n\n\tthis.index = null;\n\tthis.attributes = {};\n\n\tthis.morphAttributes = {};\n\n\tthis.groups = [];\n\n\tthis.boundingBox = null;\n\tthis.boundingSphere = null;\n\n\tthis.drawRange = { start: 0, count: Infinity };\n\n}\n\nObject.assign( BufferGeometry.prototype, EventDispatcher.prototype, {\n\n\tisBufferGeometry: true,\n\n\tgetIndex: function () {\n\n\t\treturn this.index;\n\n\t},\n\n\tsetIndex: function ( index ) {\n\n\t\tif ( Array.isArray( index ) ) {\n\n\t\t\tthis.index = new ( arrayMax( index ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\n\n\t\t} else {\n\n\t\t\tthis.index = index;\n\n\t\t}\n\n\t},\n\n\taddAttribute: function ( name, attribute ) {\n\n\t\tif ( ! ( attribute && attribute.isBufferAttribute ) && ! ( attribute && attribute.isInterleavedBufferAttribute ) ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).' );\n\n\t\t\tthis.addAttribute( name, new BufferAttribute( arguments[ 1 ], arguments[ 2 ] ) );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( name === 'index' ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.' );\n\t\t\tthis.setIndex( attribute );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.attributes[ name ] = attribute;\n\n\t\treturn this;\n\n\t},\n\n\tgetAttribute: function ( name ) {\n\n\t\treturn this.attributes[ name ];\n\n\t},\n\n\tremoveAttribute: function ( name ) {\n\n\t\tdelete this.attributes[ name ];\n\n\t\treturn this;\n\n\t},\n\n\taddGroup: function ( start, count, materialIndex ) {\n\n\t\tthis.groups.push( {\n\n\t\t\tstart: start,\n\t\t\tcount: count,\n\t\t\tmaterialIndex: materialIndex !== undefined ? materialIndex : 0\n\n\t\t} );\n\n\t},\n\n\tclearGroups: function () {\n\n\t\tthis.groups = [];\n\n\t},\n\n\tsetDrawRange: function ( start, count ) {\n\n\t\tthis.drawRange.start = start;\n\t\tthis.drawRange.count = count;\n\n\t},\n\n\tapplyMatrix: function ( matrix ) {\n\n\t\tvar position = this.attributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tmatrix.applyToBufferAttribute( position );\n\t\t\tposition.needsUpdate = true;\n\n\t\t}\n\n\t\tvar normal = this.attributes.normal;\n\n\t\tif ( normal !== undefined ) {\n\n\t\t\tvar normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\tnormalMatrix.applyToBufferAttribute( normal );\n\t\t\tnormal.needsUpdate = true;\n\n\t\t}\n\n\t\tif ( this.boundingBox !== null ) {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t}\n\n\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\trotateX: function () {\n\n\t\t// rotate geometry around world x-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateX( angle ) {\n\n\t\t\tm1.makeRotationX( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateY: function () {\n\n\t\t// rotate geometry around world y-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateY( angle ) {\n\n\t\t\tm1.makeRotationY( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\trotateZ: function () {\n\n\t\t// rotate geometry around world z-axis\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function rotateZ( angle ) {\n\n\t\t\tm1.makeRotationZ( angle );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\ttranslate: function () {\n\n\t\t// translate geometry\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function translate( x, y, z ) {\n\n\t\t\tm1.makeTranslation( x, y, z );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tscale: function () {\n\n\t\t// scale geometry\n\n\t\tvar m1 = new Matrix4();\n\n\t\treturn function scale( x, y, z ) {\n\n\t\t\tm1.makeScale( x, y, z );\n\n\t\t\tthis.applyMatrix( m1 );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tlookAt: function () {\n\n\t\tvar obj = new Object3D();\n\n\t\treturn function lookAt( vector ) {\n\n\t\t\tobj.lookAt( vector );\n\n\t\t\tobj.updateMatrix();\n\n\t\t\tthis.applyMatrix( obj.matrix );\n\n\t\t};\n\n\t}(),\n\n\tcenter: function () {\n\n\t\tthis.computeBoundingBox();\n\n\t\tvar offset = this.boundingBox.getCenter().negate();\n\n\t\tthis.translate( offset.x, offset.y, offset.z );\n\n\t\treturn offset;\n\n\t},\n\n\tsetFromObject: function ( object ) {\n\n\t\t// console.log( 'THREE.BufferGeometry.setFromObject(). Converting', object, this );\n\n\t\tvar geometry = object.geometry;\n\n\t\tif ( object.isPoints || object.isLine ) {\n\n\t\t\tvar positions = new Float32BufferAttribute( geometry.vertices.length * 3, 3 );\n\t\t\tvar colors = new Float32BufferAttribute( geometry.colors.length * 3, 3 );\n\n\t\t\tthis.addAttribute( 'position', positions.copyVector3sArray( geometry.vertices ) );\n\t\t\tthis.addAttribute( 'color', colors.copyColorsArray( geometry.colors ) );\n\n\t\t\tif ( geometry.lineDistances && geometry.lineDistances.length === geometry.vertices.length ) {\n\n\t\t\t\tvar lineDistances = new Float32BufferAttribute( geometry.lineDistances.length, 1 );\n\n\t\t\t\tthis.addAttribute( 'lineDistance', lineDistances.copyArray( geometry.lineDistances ) );\n\n\t\t\t}\n\n\t\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t\t}\n\n\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t\t}\n\n\t\t} else if ( object.isMesh ) {\n\n\t\t\tif ( geometry && geometry.isGeometry ) {\n\n\t\t\t\tthis.fromGeometry( geometry );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPoints: function ( points ) {\n\n\t\tvar position = [];\n\n\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tvar point = points[ i ];\n\t\t\tposition.push( point.x, point.y, point.z || 0 );\n\n\t\t}\n\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( position, 3 ) );\n\n\t\treturn this;\n\n\t},\n\n\tupdateFromObject: function ( object ) {\n\n\t\tvar geometry = object.geometry;\n\n\t\tif ( object.isMesh ) {\n\n\t\t\tvar direct = geometry.__directGeometry;\n\n\t\t\tif ( geometry.elementsNeedUpdate === true ) {\n\n\t\t\t\tdirect = undefined;\n\t\t\t\tgeometry.elementsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( direct === undefined ) {\n\n\t\t\t\treturn this.fromGeometry( geometry );\n\n\t\t\t}\n\n\t\t\tdirect.verticesNeedUpdate = geometry.verticesNeedUpdate;\n\t\t\tdirect.normalsNeedUpdate = geometry.normalsNeedUpdate;\n\t\t\tdirect.colorsNeedUpdate = geometry.colorsNeedUpdate;\n\t\t\tdirect.uvsNeedUpdate = geometry.uvsNeedUpdate;\n\t\t\tdirect.groupsNeedUpdate = geometry.groupsNeedUpdate;\n\n\t\t\tgeometry.verticesNeedUpdate = false;\n\t\t\tgeometry.normalsNeedUpdate = false;\n\t\t\tgeometry.colorsNeedUpdate = false;\n\t\t\tgeometry.uvsNeedUpdate = false;\n\t\t\tgeometry.groupsNeedUpdate = false;\n\n\t\t\tgeometry = direct;\n\n\t\t}\n\n\t\tvar attribute;\n\n\t\tif ( geometry.verticesNeedUpdate === true ) {\n\n\t\t\tattribute = this.attributes.position;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyVector3sArray( geometry.vertices );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.verticesNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.normalsNeedUpdate === true ) {\n\n\t\t\tattribute = this.attributes.normal;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyVector3sArray( geometry.normals );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.normalsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.colorsNeedUpdate === true ) {\n\n\t\t\tattribute = this.attributes.color;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyColorsArray( geometry.colors );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.colorsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.uvsNeedUpdate ) {\n\n\t\t\tattribute = this.attributes.uv;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyVector2sArray( geometry.uvs );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.uvsNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.lineDistancesNeedUpdate ) {\n\n\t\t\tattribute = this.attributes.lineDistance;\n\n\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\tattribute.copyArray( geometry.lineDistances );\n\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tgeometry.lineDistancesNeedUpdate = false;\n\n\t\t}\n\n\t\tif ( geometry.groupsNeedUpdate ) {\n\n\t\t\tgeometry.computeGroups( object.geometry );\n\t\t\tthis.groups = geometry.groups;\n\n\t\t\tgeometry.groupsNeedUpdate = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tfromGeometry: function ( geometry ) {\n\n\t\tgeometry.__directGeometry = new DirectGeometry().fromGeometry( geometry );\n\n\t\treturn this.fromDirectGeometry( geometry.__directGeometry );\n\n\t},\n\n\tfromDirectGeometry: function ( geometry ) {\n\n\t\tvar positions = new Float32Array( geometry.vertices.length * 3 );\n\t\tthis.addAttribute( 'position', new BufferAttribute( positions, 3 ).copyVector3sArray( geometry.vertices ) );\n\n\t\tif ( geometry.normals.length > 0 ) {\n\n\t\t\tvar normals = new Float32Array( geometry.normals.length * 3 );\n\t\t\tthis.addAttribute( 'normal', new BufferAttribute( normals, 3 ).copyVector3sArray( geometry.normals ) );\n\n\t\t}\n\n\t\tif ( geometry.colors.length > 0 ) {\n\n\t\t\tvar colors = new Float32Array( geometry.colors.length * 3 );\n\t\t\tthis.addAttribute( 'color', new BufferAttribute( colors, 3 ).copyColorsArray( geometry.colors ) );\n\n\t\t}\n\n\t\tif ( geometry.uvs.length > 0 ) {\n\n\t\t\tvar uvs = new Float32Array( geometry.uvs.length * 2 );\n\t\t\tthis.addAttribute( 'uv', new BufferAttribute( uvs, 2 ).copyVector2sArray( geometry.uvs ) );\n\n\t\t}\n\n\t\tif ( geometry.uvs2.length > 0 ) {\n\n\t\t\tvar uvs2 = new Float32Array( geometry.uvs2.length * 2 );\n\t\t\tthis.addAttribute( 'uv2', new BufferAttribute( uvs2, 2 ).copyVector2sArray( geometry.uvs2 ) );\n\n\t\t}\n\n\t\tif ( geometry.indices.length > 0 ) {\n\n\t\t\tvar TypeArray = arrayMax( geometry.indices ) > 65535 ? Uint32Array : Uint16Array;\n\t\t\tvar indices = new TypeArray( geometry.indices.length * 3 );\n\t\t\tthis.setIndex( new BufferAttribute( indices, 1 ).copyIndicesArray( geometry.indices ) );\n\n\t\t}\n\n\t\t// groups\n\n\t\tthis.groups = geometry.groups;\n\n\t\t// morphs\n\n\t\tfor ( var name in geometry.morphTargets ) {\n\n\t\t\tvar array = [];\n\t\t\tvar morphTargets = geometry.morphTargets[ name ];\n\n\t\t\tfor ( var i = 0, l = morphTargets.length; i < l; i ++ ) {\n\n\t\t\t\tvar morphTarget = morphTargets[ i ];\n\n\t\t\t\tvar attribute = new Float32BufferAttribute( morphTarget.length * 3, 3 );\n\n\t\t\t\tarray.push( attribute.copyVector3sArray( morphTarget ) );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\t// skinning\n\n\t\tif ( geometry.skinIndices.length > 0 ) {\n\n\t\t\tvar skinIndices = new Float32BufferAttribute( geometry.skinIndices.length * 4, 4 );\n\t\t\tthis.addAttribute( 'skinIndex', skinIndices.copyVector4sArray( geometry.skinIndices ) );\n\n\t\t}\n\n\t\tif ( geometry.skinWeights.length > 0 ) {\n\n\t\t\tvar skinWeights = new Float32BufferAttribute( geometry.skinWeights.length * 4, 4 );\n\t\t\tthis.addAttribute( 'skinWeight', skinWeights.copyVector4sArray( geometry.skinWeights ) );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t}\n\n\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcomputeBoundingBox: function () {\n\n\t\tif ( this.boundingBox === null ) {\n\n\t\t\tthis.boundingBox = new Box3();\n\n\t\t}\n\n\t\tvar position = this.attributes.position;\n\n\t\tif ( position !== undefined ) {\n\n\t\t\tthis.boundingBox.setFromBufferAttribute( position );\n\n\t\t} else {\n\n\t\t\tthis.boundingBox.makeEmpty();\n\n\t\t}\n\n\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t}\n\n\t},\n\n\tcomputeBoundingSphere: function () {\n\n\t\tvar box = new Box3();\n\t\tvar vector = new Vector3();\n\n\t\treturn function computeBoundingSphere() {\n\n\t\t\tif ( this.boundingSphere === null ) {\n\n\t\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t\t}\n\n\t\t\tvar position = this.attributes.position;\n\n\t\t\tif ( position ) {\n\n\t\t\t\tvar center = this.boundingSphere.center;\n\n\t\t\t\tbox.setFromBufferAttribute( position );\n\t\t\t\tbox.getCenter( center );\n\n\t\t\t\t// hoping to find a boundingSphere with a radius smaller than the\n\t\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\t\t\t\tvar maxRadiusSq = 0;\n\n\t\t\t\tfor ( var i = 0, il = position.count; i < il; i ++ ) {\n\n\t\t\t\t\tvector.x = position.getX( i );\n\t\t\t\t\tvector.y = position.getY( i );\n\t\t\t\t\tvector.z = position.getZ( i );\n\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\n\n\t\t\t\t}\n\n\t\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}(),\n\n\tcomputeFaceNormals: function () {\n\n\t\t// backwards compatibility\n\n\t},\n\n\tcomputeVertexNormals: function () {\n\n\t\tvar index = this.index;\n\t\tvar attributes = this.attributes;\n\t\tvar groups = this.groups;\n\n\t\tif ( attributes.position ) {\n\n\t\t\tvar positions = attributes.position.array;\n\n\t\t\tif ( attributes.normal === undefined ) {\n\n\t\t\t\tthis.addAttribute( 'normal', new BufferAttribute( new Float32Array( positions.length ), 3 ) );\n\n\t\t\t} else {\n\n\t\t\t\t// reset existing normals to zero\n\n\t\t\t\tvar array = attributes.normal.array;\n\n\t\t\t\tfor ( var i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t\t\tarray[ i ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar normals = attributes.normal.array;\n\n\t\t\tvar vA, vB, vC;\n\t\t\tvar pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\n\t\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\t\t// indexed elements\n\n\t\t\tif ( index ) {\n\n\t\t\t\tvar indices = index.array;\n\n\t\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\t\tthis.addGroup( 0, indices.length );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var j = 0, jl = groups.length; j < jl; ++ j ) {\n\n\t\t\t\t\tvar group = groups[ j ];\n\n\t\t\t\t\tvar start = group.start;\n\t\t\t\t\tvar count = group.count;\n\n\t\t\t\t\tfor ( var i = start, il = start + count; i < il; i += 3 ) {\n\n\t\t\t\t\t\tvA = indices[ i + 0 ] * 3;\n\t\t\t\t\t\tvB = indices[ i + 1 ] * 3;\n\t\t\t\t\t\tvC = indices[ i + 2 ] * 3;\n\n\t\t\t\t\t\tpA.fromArray( positions, vA );\n\t\t\t\t\t\tpB.fromArray( positions, vB );\n\t\t\t\t\t\tpC.fromArray( positions, vC );\n\n\t\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\t\tnormals[ vA ] += cb.x;\n\t\t\t\t\t\tnormals[ vA + 1 ] += cb.y;\n\t\t\t\t\t\tnormals[ vA + 2 ] += cb.z;\n\n\t\t\t\t\t\tnormals[ vB ] += cb.x;\n\t\t\t\t\t\tnormals[ vB + 1 ] += cb.y;\n\t\t\t\t\t\tnormals[ vB + 2 ] += cb.z;\n\n\t\t\t\t\t\tnormals[ vC ] += cb.x;\n\t\t\t\t\t\tnormals[ vC + 1 ] += cb.y;\n\t\t\t\t\t\tnormals[ vC + 2 ] += cb.z;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\n\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 9 ) {\n\n\t\t\t\t\tpA.fromArray( positions, i );\n\t\t\t\t\tpB.fromArray( positions, i + 3 );\n\t\t\t\t\tpC.fromArray( positions, i + 6 );\n\n\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tnormals[ i ] = cb.x;\n\t\t\t\t\tnormals[ i + 1 ] = cb.y;\n\t\t\t\t\tnormals[ i + 2 ] = cb.z;\n\n\t\t\t\t\tnormals[ i + 3 ] = cb.x;\n\t\t\t\t\tnormals[ i + 4 ] = cb.y;\n\t\t\t\t\tnormals[ i + 5 ] = cb.z;\n\n\t\t\t\t\tnormals[ i + 6 ] = cb.x;\n\t\t\t\t\tnormals[ i + 7 ] = cb.y;\n\t\t\t\t\tnormals[ i + 8 ] = cb.z;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.normalizeNormals();\n\n\t\t\tattributes.normal.needsUpdate = true;\n\n\t\t}\n\n\t},\n\n\tmerge: function ( geometry, offset ) {\n\n\t\tif ( ! ( geometry && geometry.isBufferGeometry ) ) {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tvar attributes = this.attributes;\n\n\t\tfor ( var key in attributes ) {\n\n\t\t\tif ( geometry.attributes[ key ] === undefined ) continue;\n\n\t\t\tvar attribute1 = attributes[ key ];\n\t\t\tvar attributeArray1 = attribute1.array;\n\n\t\t\tvar attribute2 = geometry.attributes[ key ];\n\t\t\tvar attributeArray2 = attribute2.array;\n\n\t\t\tvar attributeSize = attribute2.itemSize;\n\n\t\t\tfor ( var i = 0, j = attributeSize * offset; i < attributeArray2.length; i ++, j ++ ) {\n\n\t\t\t\tattributeArray1[ j ] = attributeArray2[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tnormalizeNormals: function () {\n\n\t\tvar vector = new Vector3();\n\n\t\treturn function normalizeNormals() {\n\n\t\t\tvar normals = this.attributes.normal;\n\n\t\t\tfor ( var i = 0, il = normals.count; i < il; i ++ ) {\n\n\t\t\t\tvector.x = normals.getX( i );\n\t\t\t\tvector.y = normals.getY( i );\n\t\t\t\tvector.z = normals.getZ( i );\n\n\t\t\t\tvector.normalize();\n\n\t\t\t\tnormals.setXYZ( i, vector.x, vector.y, vector.z );\n\n\t\t\t}\n\n\t\t};\n\n\t}(),\n\n\ttoNonIndexed: function () {\n\n\t\tif ( this.index === null ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed.' );\n\t\t\treturn this;\n\n\t\t}\n\n\t\tvar geometry2 = new BufferGeometry();\n\n\t\tvar indices = this.index.array;\n\t\tvar attributes = this.attributes;\n\n\t\tfor ( var name in attributes ) {\n\n\t\t\tvar attribute = attributes[ name ];\n\n\t\t\tvar array = attribute.array;\n\t\t\tvar itemSize = attribute.itemSize;\n\n\t\t\tvar array2 = new array.constructor( indices.length * itemSize );\n\n\t\t\tvar index = 0, index2 = 0;\n\n\t\t\tfor ( var i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\tindex = indices[ i ] * itemSize;\n\n\t\t\t\tfor ( var j = 0; j < itemSize; j ++ ) {\n\n\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tgeometry2.addAttribute( name, new BufferAttribute( array2, itemSize ) );\n\n\t\t}\n\n\t\treturn geometry2;\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar data = {\n\t\t\tmetadata: {\n\t\t\t\tversion: 4.5,\n\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t}\n\t\t};\n\n\t\t// standard BufferGeometry serialization\n\n\t\tdata.uuid = this.uuid;\n\t\tdata.type = this.type;\n\t\tif ( this.name !== '' ) data.name = this.name;\n\n\t\tif ( this.parameters !== undefined ) {\n\n\t\t\tvar parameters = this.parameters;\n\n\t\t\tfor ( var key in parameters ) {\n\n\t\t\t\tif ( parameters[ key ] !== undefined ) data[ key ] = parameters[ key ];\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t\tdata.data = { attributes: {} };\n\n\t\tvar index = this.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tvar array = Array.prototype.slice.call( index.array );\n\n\t\t\tdata.data.index = {\n\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\tarray: array\n\t\t\t};\n\n\t\t}\n\n\t\tvar attributes = this.attributes;\n\n\t\tfor ( var key in attributes ) {\n\n\t\t\tvar attribute = attributes[ key ];\n\n\t\t\tvar array = Array.prototype.slice.call( attribute.array );\n\n\t\t\tdata.data.attributes[ key ] = {\n\t\t\t\titemSize: attribute.itemSize,\n\t\t\t\ttype: attribute.array.constructor.name,\n\t\t\t\tarray: array,\n\t\t\t\tnormalized: attribute.normalized\n\t\t\t};\n\n\t\t}\n\n\t\tvar groups = this.groups;\n\n\t\tif ( groups.length > 0 ) {\n\n\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\n\n\t\t}\n\n\t\tvar boundingSphere = this.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tdata.data.boundingSphere = {\n\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\tradius: boundingSphere.radius\n\t\t\t};\n\n\t\t}\n\n\t\treturn data;\n\n\t},\n\n\tclone: function () {\n\n\t\t/*\n\t\t // Handle primitives\n\n\t\t var parameters = this.parameters;\n\n\t\t if ( parameters !== undefined ) {\n\n\t\t var values = [];\n\n\t\t for ( var key in parameters ) {\n\n\t\t values.push( parameters[ key ] );\n\n\t\t }\n\n\t\t var geometry = Object.create( this.constructor.prototype );\n\t\t this.constructor.apply( geometry, values );\n\t\t return geometry;\n\n\t\t }\n\n\t\t return new this.constructor().copy( this );\n\t\t */\n\n\t\treturn new BufferGeometry().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tvar name, i, l;\n\n\t\t// reset\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\t\tthis.morphAttributes = {};\n\t\tthis.groups = [];\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// name\n\n\t\tthis.name = source.name;\n\n\t\t// index\n\n\t\tvar index = source.index;\n\n\t\tif ( index !== null ) {\n\n\t\t\tthis.setIndex( index.clone() );\n\n\t\t}\n\n\t\t// attributes\n\n\t\tvar attributes = source.attributes;\n\n\t\tfor ( name in attributes ) {\n\n\t\t\tvar attribute = attributes[ name ];\n\t\t\tthis.addAttribute( name, attribute.clone() );\n\n\t\t}\n\n\t\t// morph attributes\n\n\t\tvar morphAttributes = source.morphAttributes;\n\n\t\tfor ( name in morphAttributes ) {\n\n\t\t\tvar array = [];\n\t\t\tvar morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\tfor ( i = 0, l = morphAttribute.length; i < l; i ++ ) {\n\n\t\t\t\tarray.push( morphAttribute[ i ].clone() );\n\n\t\t\t}\n\n\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t}\n\n\t\t// groups\n\n\t\tvar groups = source.groups;\n\n\t\tfor ( i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\tvar group = groups[ i ];\n\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t}\n\n\t\t// bounding box\n\n\t\tvar boundingBox = source.boundingBox;\n\n\t\tif ( boundingBox !== null ) {\n\n\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t}\n\n\t\t// bounding sphere\n\n\t\tvar boundingSphere = source.boundingSphere;\n\n\t\tif ( boundingSphere !== null ) {\n\n\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t}\n\n\t\t// draw range\n\n\t\tthis.drawRange.start = source.drawRange.start;\n\t\tthis.drawRange.count = source.drawRange.count;\n\n\t\treturn this;\n\n\t},\n\n\tdispose: function () {\n\n\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// BoxGeometry\n\nfunction BoxGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'BoxGeometry';\n\n\tthis.parameters = {\n\t\twidth: width,\n\t\theight: height,\n\t\tdepth: depth,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments,\n\t\tdepthSegments: depthSegments\n\t};\n\n\tthis.fromBufferGeometry( new BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) );\n\tthis.mergeVertices();\n\n}\n\nBoxGeometry.prototype = Object.create( Geometry.prototype );\nBoxGeometry.prototype.constructor = BoxGeometry;\n\n// BoxBufferGeometry\n\nfunction BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'BoxBufferGeometry';\n\n\tthis.parameters = {\n\t\twidth: width,\n\t\theight: height,\n\t\tdepth: depth,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments,\n\t\tdepthSegments: depthSegments\n\t};\n\n\tvar scope = this;\n\n\twidth = width || 1;\n\theight = height || 1;\n\tdepth = depth || 1;\n\n\t// segments\n\n\twidthSegments = Math.floor( widthSegments ) || 1;\n\theightSegments = Math.floor( heightSegments ) || 1;\n\tdepthSegments = Math.floor( depthSegments ) || 1;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar numberOfVertices = 0;\n\tvar groupStart = 0;\n\n\t// build each side of the box geometry\n\n\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0 ); // px\n\tbuildPlane( 'z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1 ); // nx\n\tbuildPlane( 'x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2 ); // py\n\tbuildPlane( 'x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3 ); // ny\n\tbuildPlane( 'x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4 ); // pz\n\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5 ); // nz\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n\n\t\tvar segmentWidth = width / gridX;\n\t\tvar segmentHeight = height / gridY;\n\n\t\tvar widthHalf = width / 2;\n\t\tvar heightHalf = height / 2;\n\t\tvar depthHalf = depth / 2;\n\n\t\tvar gridX1 = gridX + 1;\n\t\tvar gridY1 = gridY + 1;\n\n\t\tvar vertexCounter = 0;\n\t\tvar groupCount = 0;\n\n\t\tvar ix, iy;\n\n\t\tvar vector = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\tvar y = iy * segmentHeight - heightHalf;\n\n\t\t\tfor ( ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\tvar x = ix * segmentWidth - widthHalf;\n\n\t\t\t\t// set values to correct vector component\n\n\t\t\t\tvector[ u ] = x * udir;\n\t\t\t\tvector[ v ] = y * vdir;\n\t\t\t\tvector[ w ] = depthHalf;\n\n\t\t\t\t// now apply vector to vertex buffer\n\n\t\t\t\tvertices.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t// set values to correct vector component\n\n\t\t\t\tvector[ u ] = 0;\n\t\t\t\tvector[ v ] = 0;\n\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\n\n\t\t\t\t// now apply vector to normal buffer\n\n\t\t\t\tnormals.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t// uvs\n\n\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t\t// counters\n\n\t\t\t\tvertexCounter += 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// indices\n\n\t\t// 1. you need three indices to draw a single face\n\t\t// 2. a single segment consists of two faces\n\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\t\tfor ( iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\tvar a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\tvar b = numberOfVertices + ix + gridX1 * ( iy + 1 );\n\t\t\t\tvar c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\tvar d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t// increase counter\n\n\t\t\t\tgroupCount += 6;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\tscope.addGroup( groupStart, groupCount, materialIndex );\n\n\t\t// calculate new start value for groups\n\n\t\tgroupStart += groupCount;\n\n\t\t// update total number of vertices\n\n\t\tnumberOfVertices += vertexCounter;\n\n\t}\n\n}\n\nBoxBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nBoxBufferGeometry.prototype.constructor = BoxBufferGeometry;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// PlaneGeometry\n\nfunction PlaneGeometry( width, height, widthSegments, heightSegments ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'PlaneGeometry';\n\n\tthis.parameters = {\n\t\twidth: width,\n\t\theight: height,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments\n\t};\n\n\tthis.fromBufferGeometry( new PlaneBufferGeometry( width, height, widthSegments, heightSegments ) );\n\tthis.mergeVertices();\n\n}\n\nPlaneGeometry.prototype = Object.create( Geometry.prototype );\nPlaneGeometry.prototype.constructor = PlaneGeometry;\n\n// PlaneBufferGeometry\n\nfunction PlaneBufferGeometry( width, height, widthSegments, heightSegments ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'PlaneBufferGeometry';\n\n\tthis.parameters = {\n\t\twidth: width,\n\t\theight: height,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments\n\t};\n\n\twidth = width || 1;\n\theight = height || 1;\n\n\tvar width_half = width / 2;\n\tvar height_half = height / 2;\n\n\tvar gridX = Math.floor( widthSegments ) || 1;\n\tvar gridY = Math.floor( heightSegments ) || 1;\n\n\tvar gridX1 = gridX + 1;\n\tvar gridY1 = gridY + 1;\n\n\tvar segment_width = width / gridX;\n\tvar segment_height = height / gridY;\n\n\tvar ix, iy;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// generate vertices, normals and uvs\n\n\tfor ( iy = 0; iy < gridY1; iy ++ ) {\n\n\t\tvar y = iy * segment_height - height_half;\n\n\t\tfor ( ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\tvar x = ix * segment_width - width_half;\n\n\t\t\tvertices.push( x, - y, 0 );\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\tuvs.push( ix / gridX );\n\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t}\n\n\t}\n\n\t// indices\n\n\tfor ( iy = 0; iy < gridY; iy ++ ) {\n\n\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\tvar a = ix + gridX1 * iy;\n\t\t\tvar b = ix + gridX1 * ( iy + 1 );\n\t\t\tvar c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\tvar d = ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nPlaneBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nPlaneBufferGeometry.prototype.constructor = PlaneBufferGeometry;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  depthTest: <bool>,\n *  depthWrite: <bool>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>\n * }\n */\n\nfunction MeshBasicMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshBasicMaterial';\n\n\tthis.color = new Color( 0xffffff ); // emissive\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.specularMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.combine = MultiplyOperation;\n\tthis.reflectivity = 1;\n\tthis.refractionRatio = 0.98;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshBasicMaterial.prototype = Object.create( Material.prototype );\nMeshBasicMaterial.prototype.constructor = MeshBasicMaterial;\n\nMeshBasicMaterial.prototype.isMeshBasicMaterial = true;\n\nMeshBasicMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.map = source.map;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.specularMap = source.specularMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.envMap = source.envMap;\n\tthis.combine = source.combine;\n\tthis.reflectivity = source.reflectivity;\n\tthis.refractionRatio = source.refractionRatio;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\n\treturn this;\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  defines: { \"label\" : \"value\" },\n *  uniforms: { \"parameter1\": { value: 1.0 }, \"parameter2\": { value2: 2 } },\n *\n *  fragmentShader: <string>,\n *  vertexShader: <string>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  lights: <bool>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction ShaderMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'ShaderMaterial';\n\n\tthis.defines = {};\n\tthis.uniforms = {};\n\n\tthis.vertexShader = 'void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}';\n\tthis.fragmentShader = 'void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}';\n\n\tthis.linewidth = 1;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\n\tthis.fog = false; // set to use scene fog\n\tthis.lights = false; // set to use scene lights\n\tthis.clipping = false; // set to use user-defined clipping planes\n\n\tthis.skinning = false; // set to use skinning attribute streams\n\tthis.morphTargets = false; // set to use morph targets\n\tthis.morphNormals = false; // set to use morph normals\n\n\tthis.extensions = {\n\t\tderivatives: false, // set to use derivatives\n\t\tfragDepth: false, // set to use fragment depth values\n\t\tdrawBuffers: false, // set to use draw buffers\n\t\tshaderTextureLOD: false // set to use shader texture LOD\n\t};\n\n\t// When rendered geometry doesn't include these attributes but the material does,\n\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\tthis.defaultAttributeValues = {\n\t\t'color': [ 1, 1, 1 ],\n\t\t'uv': [ 0, 0 ],\n\t\t'uv2': [ 0, 0 ]\n\t};\n\n\tthis.index0AttributeName = undefined;\n\n\tif ( parameters !== undefined ) {\n\n\t\tif ( parameters.attributes !== undefined ) {\n\n\t\t\tconsole.error( 'THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.' );\n\n\t\t}\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n}\n\nShaderMaterial.prototype = Object.create( Material.prototype );\nShaderMaterial.prototype.constructor = ShaderMaterial;\n\nShaderMaterial.prototype.isShaderMaterial = true;\n\nShaderMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.fragmentShader = source.fragmentShader;\n\tthis.vertexShader = source.vertexShader;\n\n\tthis.uniforms = UniformsUtils.clone( source.uniforms );\n\n\tthis.defines = source.defines;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\tthis.lights = source.lights;\n\tthis.clipping = source.clipping;\n\n\tthis.skinning = source.skinning;\n\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\tthis.extensions = source.extensions;\n\n\treturn this;\n\n};\n\nShaderMaterial.prototype.toJSON = function ( meta ) {\n\n\tvar data = Material.prototype.toJSON.call( this, meta );\n\n\tdata.uniforms = this.uniforms;\n\tdata.vertexShader = this.vertexShader;\n\tdata.fragmentShader = this.fragmentShader;\n\n\treturn data;\n\n};\n\n/**\n * @author bhouston / http://clara.io\n */\n\nfunction Ray( origin, direction ) {\n\n\tthis.origin = ( origin !== undefined ) ? origin : new Vector3();\n\tthis.direction = ( direction !== undefined ) ? direction : new Vector3();\n\n}\n\nObject.assign( Ray.prototype, {\n\n\tset: function ( origin, direction ) {\n\n\t\tthis.origin.copy( origin );\n\t\tthis.direction.copy( direction );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( ray ) {\n\n\t\tthis.origin.copy( ray.origin );\n\t\tthis.direction.copy( ray.direction );\n\n\t\treturn this;\n\n\t},\n\n\tat: function ( t, optionalTarget ) {\n\n\t\tvar result = optionalTarget || new Vector3();\n\n\t\treturn result.copy( this.direction ).multiplyScalar( t ).add( this.origin );\n\n\t},\n\n\tlookAt: function ( v ) {\n\n\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\n\n\t\treturn this;\n\n\t},\n\n\trecast: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function recast( t ) {\n\n\t\t\tthis.origin.copy( this.at( t, v1 ) );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t}(),\n\n\tclosestPointToPoint: function ( point, optionalTarget ) {\n\n\t\tvar result = optionalTarget || new Vector3();\n\t\tresult.subVectors( point, this.origin );\n\t\tvar directionDistance = result.dot( this.direction );\n\n\t\tif ( directionDistance < 0 ) {\n\n\t\t\treturn result.copy( this.origin );\n\n\t\t}\n\n\t\treturn result.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t},\n\n\tdistanceToPoint: function ( point ) {\n\n\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\n\n\t},\n\n\tdistanceSqToPoint: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function distanceSqToPoint( point ) {\n\n\t\t\tvar directionDistance = v1.subVectors( point, this.origin ).dot( this.direction );\n\n\t\t\t// point behind the ray\n\n\t\t\tif ( directionDistance < 0 ) {\n\n\t\t\t\treturn this.origin.distanceToSquared( point );\n\n\t\t\t}\n\n\t\t\tv1.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t\t\treturn v1.distanceToSquared( point );\n\n\t\t};\n\n\t}(),\n\n\tdistanceSqToSegment: function () {\n\n\t\tvar segCenter = new Vector3();\n\t\tvar segDir = new Vector3();\n\t\tvar diff = new Vector3();\n\n\t\treturn function distanceSqToSegment( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n\t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t\t// It returns the min distance between the ray and the segment\n\t\t\t// defined by v0 and v1\n\t\t\t// It can also set two optional targets :\n\t\t\t// - The closest point on the ray\n\t\t\t// - The closest point on the segment\n\n\t\t\tsegCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n\t\t\tsegDir.copy( v1 ).sub( v0 ).normalize();\n\t\t\tdiff.copy( this.origin ).sub( segCenter );\n\n\t\t\tvar segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\t\tvar a01 = - this.direction.dot( segDir );\n\t\t\tvar b0 = diff.dot( this.direction );\n\t\t\tvar b1 = - diff.dot( segDir );\n\t\t\tvar c = diff.lengthSq();\n\t\t\tvar det = Math.abs( 1 - a01 * a01 );\n\t\t\tvar s0, s1, sqrDist, extDet;\n\n\t\t\tif ( det > 0 ) {\n\n\t\t\t\t// The ray and segment are not parallel.\n\n\t\t\t\ts0 = a01 * b1 - b0;\n\t\t\t\ts1 = a01 * b0 - b1;\n\t\t\t\textDet = segExtent * det;\n\n\t\t\t\tif ( s0 >= 0 ) {\n\n\t\t\t\t\tif ( s1 >= - extDet ) {\n\n\t\t\t\t\t\tif ( s1 <= extDet ) {\n\n\t\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\n\t\t\t\t\t\t\tvar invDet = 1 / det;\n\t\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// region 1\n\n\t\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 5\n\n\t\t\t\t\t\ts1 = - segExtent;\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( s1 <= - extDet ) {\n\n\t\t\t\t\t\t// region 4\n\n\t\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else if ( s1 <= extDet ) {\n\n\t\t\t\t\t\t// region 3\n\n\t\t\t\t\t\ts0 = 0;\n\t\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 2\n\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// Ray and segment are parallel.\n\n\t\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t}\n\n\t\t\tif ( optionalPointOnRay ) {\n\n\t\t\t\toptionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );\n\n\t\t\t}\n\n\t\t\tif ( optionalPointOnSegment ) {\n\n\t\t\t\toptionalPointOnSegment.copy( segDir ).multiplyScalar( s1 ).add( segCenter );\n\n\t\t\t}\n\n\t\t\treturn sqrDist;\n\n\t\t};\n\n\t}(),\n\n\tintersectSphere: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function intersectSphere( sphere, optionalTarget ) {\n\n\t\t\tv1.subVectors( sphere.center, this.origin );\n\t\t\tvar tca = v1.dot( this.direction );\n\t\t\tvar d2 = v1.dot( v1 ) - tca * tca;\n\t\t\tvar radius2 = sphere.radius * sphere.radius;\n\n\t\t\tif ( d2 > radius2 ) return null;\n\n\t\t\tvar thc = Math.sqrt( radius2 - d2 );\n\n\t\t\t// t0 = first intersect point - entrance on front of sphere\n\t\t\tvar t0 = tca - thc;\n\n\t\t\t// t1 = second intersect point - exit point on back of sphere\n\t\t\tvar t1 = tca + thc;\n\n\t\t\t// test to see if both t0 and t1 are behind the ray - if so, return null\n\t\t\tif ( t0 < 0 && t1 < 0 ) return null;\n\n\t\t\t// test to see if t0 is behind the ray:\n\t\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t\t// in order to always return an intersect point that is in front of the ray.\n\t\t\tif ( t0 < 0 ) return this.at( t1, optionalTarget );\n\n\t\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\n\t\t\treturn this.at( t0, optionalTarget );\n\n\t\t};\n\n\t}(),\n\n\tintersectsSphere: function ( sphere ) {\n\n\t\treturn this.distanceToPoint( sphere.center ) <= sphere.radius;\n\n\t},\n\n\tdistanceToPlane: function ( plane ) {\n\n\t\tvar denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator === 0 ) {\n\n\t\t\t// line is coplanar, return origin\n\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\n\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tvar t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n\t\t// Return if the ray never intersects the plane\n\n\t\treturn t >= 0 ? t : null;\n\n\t},\n\n\tintersectPlane: function ( plane, optionalTarget ) {\n\n\t\tvar t = this.distanceToPlane( plane );\n\n\t\tif ( t === null ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\treturn this.at( t, optionalTarget );\n\n\t},\n\n\tintersectsPlane: function ( plane ) {\n\n\t\t// check if the ray lies on the plane first\n\n\t\tvar distToPoint = plane.distanceToPoint( this.origin );\n\n\t\tif ( distToPoint === 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tvar denominator = plane.normal.dot( this.direction );\n\n\t\tif ( denominator * distToPoint < 0 ) {\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\t// ray origin is behind the plane (and is pointing behind it)\n\n\t\treturn false;\n\n\t},\n\n\tintersectBox: function ( box, optionalTarget ) {\n\n\t\tvar tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n\t\tvar invdirx = 1 / this.direction.x,\n\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\tinvdirz = 1 / this.direction.z;\n\n\t\tvar origin = this.origin;\n\n\t\tif ( invdirx >= 0 ) {\n\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\n\t\t} else {\n\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\n\t\t}\n\n\t\tif ( invdiry >= 0 ) {\n\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\n\t\t} else {\n\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\n\t\t}\n\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\n\n\t\t// These lines also handle the case where tmin or tmax is NaN\n\t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\n\n\t\tif ( tymin > tmin || tmin !== tmin ) tmin = tymin;\n\n\t\tif ( tymax < tmax || tmax !== tmax ) tmax = tymax;\n\n\t\tif ( invdirz >= 0 ) {\n\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\n\t\t} else {\n\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\n\t\t}\n\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\n\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\n\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\n\n\t\t//return point closest to the ray (positive side)\n\n\t\tif ( tmax < 0 ) return null;\n\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, optionalTarget );\n\n\t},\n\n\tintersectsBox: ( function () {\n\n\t\tvar v = new Vector3();\n\n\t\treturn function intersectsBox( box ) {\n\n\t\t\treturn this.intersectBox( box, v ) !== null;\n\n\t\t};\n\n\t} )(),\n\n\tintersectTriangle: function () {\n\n\t\t// Compute the offset origin, edges, and normal.\n\t\tvar diff = new Vector3();\n\t\tvar edge1 = new Vector3();\n\t\tvar edge2 = new Vector3();\n\t\tvar normal = new Vector3();\n\n\t\treturn function intersectTriangle( a, b, c, backfaceCulling, optionalTarget ) {\n\n\t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n\t\t\tedge1.subVectors( b, a );\n\t\t\tedge2.subVectors( c, a );\n\t\t\tnormal.crossVectors( edge1, edge2 );\n\n\t\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\t\tvar DdN = this.direction.dot( normal );\n\t\t\tvar sign;\n\n\t\t\tif ( DdN > 0 ) {\n\n\t\t\t\tif ( backfaceCulling ) return null;\n\t\t\t\tsign = 1;\n\n\t\t\t} else if ( DdN < 0 ) {\n\n\t\t\t\tsign = - 1;\n\t\t\t\tDdN = - DdN;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tdiff.subVectors( this.origin, a );\n\t\t\tvar DdQxE2 = sign * this.direction.dot( edge2.crossVectors( diff, edge2 ) );\n\n\t\t\t// b1 < 0, no intersection\n\t\t\tif ( DdQxE2 < 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tvar DdE1xQ = sign * this.direction.dot( edge1.cross( diff ) );\n\n\t\t\t// b2 < 0, no intersection\n\t\t\tif ( DdE1xQ < 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\t// b1+b2 > 1, no intersection\n\t\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\t// Line intersects triangle, check if ray does.\n\t\t\tvar QdN = - sign * diff.dot( normal );\n\n\t\t\t// t < 0, no intersection\n\t\t\tif ( QdN < 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\t// Ray intersects triangle.\n\t\t\treturn this.at( QdN / DdN, optionalTarget );\n\n\t\t};\n\n\t}(),\n\n\tapplyMatrix4: function ( matrix4 ) {\n\n\t\tthis.origin.applyMatrix4( matrix4 );\n\t\tthis.direction.transformDirection( matrix4 );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( ray ) {\n\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n */\n\nfunction Line3( start, end ) {\n\n\tthis.start = ( start !== undefined ) ? start : new Vector3();\n\tthis.end = ( end !== undefined ) ? end : new Vector3();\n\n}\n\nObject.assign( Line3.prototype, {\n\n\tset: function ( start, end ) {\n\n\t\tthis.start.copy( start );\n\t\tthis.end.copy( end );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( line ) {\n\n\t\tthis.start.copy( line.start );\n\t\tthis.end.copy( line.end );\n\n\t\treturn this;\n\n\t},\n\n\tgetCenter: function ( optionalTarget ) {\n\n\t\tvar result = optionalTarget || new Vector3();\n\t\treturn result.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\n\n\t},\n\n\tdelta: function ( optionalTarget ) {\n\n\t\tvar result = optionalTarget || new Vector3();\n\t\treturn result.subVectors( this.end, this.start );\n\n\t},\n\n\tdistanceSq: function () {\n\n\t\treturn this.start.distanceToSquared( this.end );\n\n\t},\n\n\tdistance: function () {\n\n\t\treturn this.start.distanceTo( this.end );\n\n\t},\n\n\tat: function ( t, optionalTarget ) {\n\n\t\tvar result = optionalTarget || new Vector3();\n\n\t\treturn this.delta( result ).multiplyScalar( t ).add( this.start );\n\n\t},\n\n\tclosestPointToPointParameter: function () {\n\n\t\tvar startP = new Vector3();\n\t\tvar startEnd = new Vector3();\n\n\t\treturn function closestPointToPointParameter( point, clampToLine ) {\n\n\t\t\tstartP.subVectors( point, this.start );\n\t\t\tstartEnd.subVectors( this.end, this.start );\n\n\t\t\tvar startEnd2 = startEnd.dot( startEnd );\n\t\t\tvar startEnd_startP = startEnd.dot( startP );\n\n\t\t\tvar t = startEnd_startP / startEnd2;\n\n\t\t\tif ( clampToLine ) {\n\n\t\t\t\tt = _Math.clamp( t, 0, 1 );\n\n\t\t\t}\n\n\t\t\treturn t;\n\n\t\t};\n\n\t}(),\n\n\tclosestPointToPoint: function ( point, clampToLine, optionalTarget ) {\n\n\t\tvar t = this.closestPointToPointParameter( point, clampToLine );\n\n\t\tvar result = optionalTarget || new Vector3();\n\n\t\treturn this.delta( result ).multiplyScalar( t ).add( this.start );\n\n\t},\n\n\tapplyMatrix4: function ( matrix ) {\n\n\t\tthis.start.applyMatrix4( matrix );\n\t\tthis.end.applyMatrix4( matrix );\n\n\t\treturn this;\n\n\t},\n\n\tequals: function ( line ) {\n\n\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Triangle( a, b, c ) {\n\n\tthis.a = ( a !== undefined ) ? a : new Vector3();\n\tthis.b = ( b !== undefined ) ? b : new Vector3();\n\tthis.c = ( c !== undefined ) ? c : new Vector3();\n\n}\n\nObject.assign( Triangle, {\n\n\tnormal: function () {\n\n\t\tvar v0 = new Vector3();\n\n\t\treturn function normal( a, b, c, optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\tresult.subVectors( c, b );\n\t\t\tv0.subVectors( a, b );\n\t\t\tresult.cross( v0 );\n\n\t\t\tvar resultLengthSq = result.lengthSq();\n\t\t\tif ( resultLengthSq > 0 ) {\n\n\t\t\t\treturn result.multiplyScalar( 1 / Math.sqrt( resultLengthSq ) );\n\n\t\t\t}\n\n\t\t\treturn result.set( 0, 0, 0 );\n\n\t\t};\n\n\t}(),\n\n\t// static/instance method to calculate barycentric coordinates\n\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\tbarycoordFromPoint: function () {\n\n\t\tvar v0 = new Vector3();\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\n\t\treturn function barycoordFromPoint( point, a, b, c, optionalTarget ) {\n\n\t\t\tv0.subVectors( c, a );\n\t\t\tv1.subVectors( b, a );\n\t\t\tv2.subVectors( point, a );\n\n\t\t\tvar dot00 = v0.dot( v0 );\n\t\t\tvar dot01 = v0.dot( v1 );\n\t\t\tvar dot02 = v0.dot( v2 );\n\t\t\tvar dot11 = v1.dot( v1 );\n\t\t\tvar dot12 = v1.dot( v2 );\n\n\t\t\tvar denom = ( dot00 * dot11 - dot01 * dot01 );\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\n\t\t\t// collinear or singular triangle\n\t\t\tif ( denom === 0 ) {\n\n\t\t\t\t// arbitrary location outside of triangle?\n\t\t\t\t// not sure if this is the best idea, maybe should be returning undefined\n\t\t\t\treturn result.set( - 2, - 1, - 1 );\n\n\t\t\t}\n\n\t\t\tvar invDenom = 1 / denom;\n\t\t\tvar u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n\t\t\tvar v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\n\t\t\t// barycentric coordinates must always sum to 1\n\t\t\treturn result.set( 1 - u - v, v, u );\n\n\t\t};\n\n\t}(),\n\n\tcontainsPoint: function () {\n\n\t\tvar v1 = new Vector3();\n\n\t\treturn function containsPoint( point, a, b, c ) {\n\n\t\t\tvar result = Triangle.barycoordFromPoint( point, a, b, c, v1 );\n\n\t\t\treturn ( result.x >= 0 ) && ( result.y >= 0 ) && ( ( result.x + result.y ) <= 1 );\n\n\t\t};\n\n\t}()\n\n} );\n\nObject.assign( Triangle.prototype, {\n\n\tset: function ( a, b, c ) {\n\n\t\tthis.a.copy( a );\n\t\tthis.b.copy( b );\n\t\tthis.c.copy( c );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromPointsAndIndices: function ( points, i0, i1, i2 ) {\n\n\t\tthis.a.copy( points[ i0 ] );\n\t\tthis.b.copy( points[ i1 ] );\n\t\tthis.c.copy( points[ i2 ] );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( triangle ) {\n\n\t\tthis.a.copy( triangle.a );\n\t\tthis.b.copy( triangle.b );\n\t\tthis.c.copy( triangle.c );\n\n\t\treturn this;\n\n\t},\n\n\tarea: function () {\n\n\t\tvar v0 = new Vector3();\n\t\tvar v1 = new Vector3();\n\n\t\treturn function area() {\n\n\t\t\tv0.subVectors( this.c, this.b );\n\t\t\tv1.subVectors( this.a, this.b );\n\n\t\t\treturn v0.cross( v1 ).length() * 0.5;\n\n\t\t};\n\n\t}(),\n\n\tmidpoint: function ( optionalTarget ) {\n\n\t\tvar result = optionalTarget || new Vector3();\n\t\treturn result.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\n\t},\n\n\tnormal: function ( optionalTarget ) {\n\n\t\treturn Triangle.normal( this.a, this.b, this.c, optionalTarget );\n\n\t},\n\n\tplane: function ( optionalTarget ) {\n\n\t\tvar result = optionalTarget || new Plane();\n\n\t\treturn result.setFromCoplanarPoints( this.a, this.b, this.c );\n\n\t},\n\n\tbarycoordFromPoint: function ( point, optionalTarget ) {\n\n\t\treturn Triangle.barycoordFromPoint( point, this.a, this.b, this.c, optionalTarget );\n\n\t},\n\n\tcontainsPoint: function ( point ) {\n\n\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\n\n\t},\n\n\tclosestPointToPoint: function () {\n\n\t\tvar plane = new Plane();\n\t\tvar edgeList = [ new Line3(), new Line3(), new Line3() ];\n\t\tvar projectedPoint = new Vector3();\n\t\tvar closestPoint = new Vector3();\n\n\t\treturn function closestPointToPoint( point, optionalTarget ) {\n\n\t\t\tvar result = optionalTarget || new Vector3();\n\t\t\tvar minDistance = Infinity;\n\n\t\t\t// project the point onto the plane of the triangle\n\n\t\t\tplane.setFromCoplanarPoints( this.a, this.b, this.c );\n\t\t\tplane.projectPoint( point, projectedPoint );\n\n\t\t\t// check if the projection lies within the triangle\n\n\t\t\tif ( this.containsPoint( projectedPoint ) === true ) {\n\n\t\t\t\t// if so, this is the closest point\n\n\t\t\t\tresult.copy( projectedPoint );\n\n\t\t\t} else {\n\n\t\t\t\t// if not, the point falls outside the triangle. the result is the closest point to the triangle's edges or vertices\n\n\t\t\t\tedgeList[ 0 ].set( this.a, this.b );\n\t\t\t\tedgeList[ 1 ].set( this.b, this.c );\n\t\t\t\tedgeList[ 2 ].set( this.c, this.a );\n\n\t\t\t\tfor ( var i = 0; i < edgeList.length; i ++ ) {\n\n\t\t\t\t\tedgeList[ i ].closestPointToPoint( projectedPoint, true, closestPoint );\n\n\t\t\t\t\tvar distance = projectedPoint.distanceToSquared( closestPoint );\n\n\t\t\t\t\tif ( distance < minDistance ) {\n\n\t\t\t\t\t\tminDistance = distance;\n\n\t\t\t\t\t\tresult.copy( closestPoint );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t};\n\n\t}(),\n\n\tequals: function ( triangle ) {\n\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author mikael emtinger / http://gomo.se/\n * @author jonobr1 / http://jonobr1.com/\n */\n\nfunction Mesh( geometry, material ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Mesh';\n\n\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\tthis.material = material !== undefined ? material : new MeshBasicMaterial( { color: Math.random() * 0xffffff } );\n\n\tthis.drawMode = TrianglesDrawMode;\n\n\tthis.updateMorphTargets();\n\n}\n\nMesh.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Mesh,\n\n\tisMesh: true,\n\n\tsetDrawMode: function ( value ) {\n\n\t\tthis.drawMode = value;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source );\n\n\t\tthis.drawMode = source.drawMode;\n\n\t\tif ( source.morphTargetInfluences !== undefined ) {\n\n\t\t\tthis.morphTargetInfluences = source.morphTargetInfluences.slice();\n\n\t\t}\n\n\t\tif ( source.morphTargetDictionary !== undefined ) {\n\n\t\t\tthis.morphTargetDictionary = Object.assign( {}, source.morphTargetDictionary );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tupdateMorphTargets: function () {\n\n\t\tvar geometry = this.geometry;\n\t\tvar m, ml, name;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tvar morphAttributes = geometry.morphAttributes;\n\t\t\tvar keys = Object.keys( morphAttributes );\n\n\t\t\tif ( keys.length > 0 ) {\n\n\t\t\t\tvar morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\t\tfor ( m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\t\tname = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tvar morphTargets = geometry.morphTargets;\n\n\t\t\tif ( morphTargets !== undefined && morphTargets.length > 0 ) {\n\n\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\tfor ( m = 0, ml = morphTargets.length; m < ml; m ++ ) {\n\n\t\t\t\t\tname = morphTargets[ m ].name || String( m );\n\n\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\traycast: ( function () {\n\n\t\tvar inverseMatrix = new Matrix4();\n\t\tvar ray = new Ray();\n\t\tvar sphere = new Sphere();\n\n\t\tvar vA = new Vector3();\n\t\tvar vB = new Vector3();\n\t\tvar vC = new Vector3();\n\n\t\tvar tempA = new Vector3();\n\t\tvar tempB = new Vector3();\n\t\tvar tempC = new Vector3();\n\n\t\tvar uvA = new Vector2();\n\t\tvar uvB = new Vector2();\n\t\tvar uvC = new Vector2();\n\n\t\tvar barycoord = new Vector3();\n\n\t\tvar intersectionPoint = new Vector3();\n\t\tvar intersectionPointWorld = new Vector3();\n\n\t\tfunction uvIntersection( point, p1, p2, p3, uv1, uv2, uv3 ) {\n\n\t\t\tTriangle.barycoordFromPoint( point, p1, p2, p3, barycoord );\n\n\t\t\tuv1.multiplyScalar( barycoord.x );\n\t\t\tuv2.multiplyScalar( barycoord.y );\n\t\t\tuv3.multiplyScalar( barycoord.z );\n\n\t\t\tuv1.add( uv2 ).add( uv3 );\n\n\t\t\treturn uv1.clone();\n\n\t\t}\n\n\t\tfunction checkIntersection( object, material, raycaster, ray, pA, pB, pC, point ) {\n\n\t\t\tvar intersect;\n\n\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\n\n\t\t\t} else {\n\n\t\t\t\tintersect = ray.intersectTriangle( pA, pB, pC, material.side !== DoubleSide, point );\n\n\t\t\t}\n\n\t\t\tif ( intersect === null ) return null;\n\n\t\t\tintersectionPointWorld.copy( point );\n\t\t\tintersectionPointWorld.applyMatrix4( object.matrixWorld );\n\n\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPointWorld );\n\n\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return null;\n\n\t\t\treturn {\n\t\t\t\tdistance: distance,\n\t\t\t\tpoint: intersectionPointWorld.clone(),\n\t\t\t\tobject: object\n\t\t\t};\n\n\t\t}\n\n\t\tfunction checkBufferGeometryIntersection( object, raycaster, ray, position, uv, a, b, c ) {\n\n\t\t\tvA.fromBufferAttribute( position, a );\n\t\t\tvB.fromBufferAttribute( position, b );\n\t\t\tvC.fromBufferAttribute( position, c );\n\n\t\t\tvar intersection = checkIntersection( object, object.material, raycaster, ray, vA, vB, vC, intersectionPoint );\n\n\t\t\tif ( intersection ) {\n\n\t\t\t\tif ( uv ) {\n\n\t\t\t\t\tuvA.fromBufferAttribute( uv, a );\n\t\t\t\t\tuvB.fromBufferAttribute( uv, b );\n\t\t\t\t\tuvC.fromBufferAttribute( uv, c );\n\n\t\t\t\t\tintersection.uv = uvIntersection( intersectionPoint, vA, vB, vC, uvA, uvB, uvC );\n\n\t\t\t\t}\n\n\t\t\t\tintersection.face = new Face3( a, b, c, Triangle.normal( vA, vB, vC ) );\n\t\t\t\tintersection.faceIndex = a;\n\n\t\t\t}\n\n\t\t\treturn intersection;\n\n\t\t}\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar material = this.material;\n\t\t\tvar matrixWorld = this.matrixWorld;\n\n\t\t\tif ( material === undefined ) return;\n\n\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\tsphere.copy( geometry.boundingSphere );\n\t\t\tsphere.applyMatrix4( matrixWorld );\n\n\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\n\n\t\t\t//\n\n\t\t\tinverseMatrix.getInverse( matrixWorld );\n\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n\t\t\t// Check boundingBox before continuing\n\n\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\tif ( ray.intersectsBox( geometry.boundingBox ) === false ) return;\n\n\t\t\t}\n\n\t\t\tvar intersection;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tvar a, b, c;\n\t\t\t\tvar index = geometry.index;\n\t\t\t\tvar position = geometry.attributes.position;\n\t\t\t\tvar uv = geometry.attributes.uv;\n\t\t\t\tvar i, l;\n\n\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\t// indexed buffer geometry\n\n\t\t\t\t\tfor ( i = 0, l = index.count; i < l; i += 3 ) {\n\n\t\t\t\t\t\ta = index.getX( i );\n\t\t\t\t\t\tb = index.getX( i + 1 );\n\t\t\t\t\t\tc = index.getX( i + 2 );\n\n\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, raycaster, ray, position, uv, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indices buffer semantics\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( position !== undefined ) {\n\n\t\t\t\t\t// non-indexed buffer geometry\n\n\t\t\t\t\tfor ( i = 0, l = position.count; i < l; i += 3 ) {\n\n\t\t\t\t\t\ta = i;\n\t\t\t\t\t\tb = i + 1;\n\t\t\t\t\t\tc = i + 2;\n\n\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, raycaster, ray, position, uv, a, b, c );\n\n\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\tintersection.index = a; // triangle number in positions buffer semantics\n\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tvar fvA, fvB, fvC;\n\t\t\t\tvar isMultiMaterial = Array.isArray( material );\n\n\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\tvar faces = geometry.faces;\n\t\t\t\tvar uvs;\n\n\t\t\t\tvar faceVertexUvs = geometry.faceVertexUvs[ 0 ];\n\t\t\t\tif ( faceVertexUvs.length > 0 ) uvs = faceVertexUvs;\n\n\t\t\t\tfor ( var f = 0, fl = faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\tvar face = faces[ f ];\n\t\t\t\t\tvar faceMaterial = isMultiMaterial ? material[ face.materialIndex ] : material;\n\n\t\t\t\t\tif ( faceMaterial === undefined ) continue;\n\n\t\t\t\t\tfvA = vertices[ face.a ];\n\t\t\t\t\tfvB = vertices[ face.b ];\n\t\t\t\t\tfvC = vertices[ face.c ];\n\n\t\t\t\t\tif ( faceMaterial.morphTargets === true ) {\n\n\t\t\t\t\t\tvar morphTargets = geometry.morphTargets;\n\t\t\t\t\t\tvar morphInfluences = this.morphTargetInfluences;\n\n\t\t\t\t\t\tvA.set( 0, 0, 0 );\n\t\t\t\t\t\tvB.set( 0, 0, 0 );\n\t\t\t\t\t\tvC.set( 0, 0, 0 );\n\n\t\t\t\t\t\tfor ( var t = 0, tl = morphTargets.length; t < tl; t ++ ) {\n\n\t\t\t\t\t\t\tvar influence = morphInfluences[ t ];\n\n\t\t\t\t\t\t\tif ( influence === 0 ) continue;\n\n\t\t\t\t\t\t\tvar targets = morphTargets[ t ].vertices;\n\n\t\t\t\t\t\t\tvA.addScaledVector( tempA.subVectors( targets[ face.a ], fvA ), influence );\n\t\t\t\t\t\t\tvB.addScaledVector( tempB.subVectors( targets[ face.b ], fvB ), influence );\n\t\t\t\t\t\t\tvC.addScaledVector( tempC.subVectors( targets[ face.c ], fvC ), influence );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvA.add( fvA );\n\t\t\t\t\t\tvB.add( fvB );\n\t\t\t\t\t\tvC.add( fvC );\n\n\t\t\t\t\t\tfvA = vA;\n\t\t\t\t\t\tfvB = vB;\n\t\t\t\t\t\tfvC = vC;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tintersection = checkIntersection( this, faceMaterial, raycaster, ray, fvA, fvB, fvC, intersectionPoint );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tif ( uvs && uvs[ f ] ) {\n\n\t\t\t\t\t\t\tvar uvs_f = uvs[ f ];\n\t\t\t\t\t\t\tuvA.copy( uvs_f[ 0 ] );\n\t\t\t\t\t\t\tuvB.copy( uvs_f[ 1 ] );\n\t\t\t\t\t\t\tuvC.copy( uvs_f[ 2 ] );\n\n\t\t\t\t\t\t\tintersection.uv = uvIntersection( intersectionPoint, fvA, fvB, fvC, uvA, uvB, uvC );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tintersection.face = face;\n\t\t\t\t\t\tintersection.faceIndex = f;\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}() ),\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLBackground( renderer, state, geometries, premultipliedAlpha ) {\n\n\tvar clearColor = new Color( 0x000000 );\n\tvar clearAlpha = 0;\n\n\tvar planeCamera, planeMesh;\n\tvar boxMesh;\n\n\tfunction render( renderList, scene, camera, forceClear ) {\n\n\t\tvar background = scene.background;\n\n\t\tif ( background === null ) {\n\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t} else if ( background && background.isColor ) {\n\n\t\t\tsetClear( background, 1 );\n\t\t\tforceClear = true;\n\n\t\t}\n\n\t\tif ( renderer.autoClear || forceClear ) {\n\n\t\t\trenderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\n\t\t}\n\n\t\tif ( background && background.isCubeTexture ) {\n\n\t\t\tif ( boxMesh === undefined ) {\n\n\t\t\t\tboxMesh = new Mesh(\n\t\t\t\t\tnew BoxBufferGeometry( 1, 1, 1 ),\n\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\tuniforms: ShaderLib.cube.uniforms,\n\t\t\t\t\t\tvertexShader: ShaderLib.cube.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.cube.fragmentShader,\n\t\t\t\t\t\tside: BackSide,\n\t\t\t\t\t\tdepthTest: true,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t} )\n\t\t\t\t);\n\n\t\t\t\tboxMesh.geometry.removeAttribute( 'normal' );\n\t\t\t\tboxMesh.geometry.removeAttribute( 'uv' );\n\n\t\t\t\tboxMesh.onBeforeRender = function ( renderer, scene, camera ) {\n\n\t\t\t\t\tthis.matrixWorld.copyPosition( camera.matrixWorld );\n\n\t\t\t\t};\n\n\t\t\t\tgeometries.update( boxMesh.geometry );\n\n\t\t\t}\n\n\t\t\tboxMesh.material.uniforms.tCube.value = background;\n\n\t\t\trenderList.push( boxMesh, boxMesh.geometry, boxMesh.material, 0, null );\n\n\t\t} else if ( background && background.isTexture ) {\n\n\t\t\tif ( planeCamera === undefined ) {\n\n\t\t\t\tplaneCamera = new OrthographicCamera( - 1, 1, 1, - 1, 0, 1 );\n\n\t\t\t\tplaneMesh = new Mesh(\n\t\t\t\t\tnew PlaneBufferGeometry( 2, 2 ),\n\t\t\t\t\tnew MeshBasicMaterial( { depthTest: false, depthWrite: false, fog: false } )\n\t\t\t\t);\n\n\t\t\t\tgeometries.update( planeMesh.geometry );\n\n\t\t\t}\n\n\t\t\tplaneMesh.material.map = background;\n\n\t\t\t// TODO Push this to renderList\n\n\t\t\trenderer.renderBufferDirect( planeCamera, null, planeMesh.geometry, planeMesh.material, planeMesh, null );\n\n\t\t}\n\n\t}\n\n\tfunction setClear( color, alpha ) {\n\n\t\tstate.buffers.color.setClear( color.r, color.g, color.b, alpha, premultipliedAlpha );\n\n\t}\n\n\treturn {\n\n\t\tgetClearColor: function () {\n\n\t\t\treturn clearColor;\n\n\t\t},\n\t\tsetClearColor: function ( color, alpha ) {\n\n\t\t\tclearColor.set( color );\n\t\t\tclearAlpha = alpha !== undefined ? alpha : 1;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\tgetClearAlpha: function () {\n\n\t\t\treturn clearAlpha;\n\n\t\t},\n\t\tsetClearAlpha: function ( alpha ) {\n\n\t\t\tclearAlpha = alpha;\n\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t},\n\t\trender: render\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction painterSortStable( a, b ) {\n\n\tif ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} else if ( a.program && b.program && a.program !== b.program ) {\n\n\t\treturn a.program.id - b.program.id;\n\n\t} else if ( a.material.id !== b.material.id ) {\n\n\t\treturn a.material.id - b.material.id;\n\n\t} else if ( a.z !== b.z ) {\n\n\t\treturn a.z - b.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\nfunction reversePainterSortStable( a, b ) {\n\n\tif ( a.renderOrder !== b.renderOrder ) {\n\n\t\treturn a.renderOrder - b.renderOrder;\n\n\t} if ( a.z !== b.z ) {\n\n\t\treturn b.z - a.z;\n\n\t} else {\n\n\t\treturn a.id - b.id;\n\n\t}\n\n}\n\nfunction WebGLRenderList() {\n\n\tvar renderItems = [];\n\tvar renderItemsIndex = 0;\n\n\tvar opaque = [];\n\tvar transparent = [];\n\n\tfunction init() {\n\n\t\trenderItemsIndex = 0;\n\n\t\topaque.length = 0;\n\t\ttransparent.length = 0;\n\n\t}\n\n\tfunction push( object, geometry, material, z, group ) {\n\n\t\tvar renderItem = renderItems[ renderItemsIndex ];\n\n\t\tif ( renderItem === undefined ) {\n\n\t\t\trenderItem = {\n\t\t\t\tid: object.id,\n\t\t\t\tobject: object,\n\t\t\t\tgeometry: geometry,\n\t\t\t\tmaterial: material,\n\t\t\t\tprogram: material.program,\n\t\t\t\trenderOrder: object.renderOrder,\n\t\t\t\tz: z,\n\t\t\t\tgroup: group\n\t\t\t};\n\n\t\t\trenderItems[ renderItemsIndex ] = renderItem;\n\n\t\t} else {\n\n\t\t\trenderItem.id = object.id;\n\t\t\trenderItem.object = object;\n\t\t\trenderItem.geometry = geometry;\n\t\t\trenderItem.material = material;\n\t\t\trenderItem.program = material.program;\n\t\t\trenderItem.renderOrder = object.renderOrder;\n\t\t\trenderItem.z = z;\n\t\t\trenderItem.group = group;\n\n\t\t}\n\n\t\t( material.transparent === true ? transparent : opaque ).push( renderItem );\n\n\t\trenderItemsIndex ++;\n\n\t}\n\n\tfunction sort() {\n\n\t\tif ( opaque.length > 1 ) opaque.sort( painterSortStable );\n\t\tif ( transparent.length > 1 ) transparent.sort( reversePainterSortStable );\n\n\t}\n\n\treturn {\n\t\topaque: opaque,\n\t\ttransparent: transparent,\n\n\t\tinit: init,\n\t\tpush: push,\n\n\t\tsort: sort\n\t};\n\n}\n\nfunction WebGLRenderLists() {\n\n\tvar lists = {};\n\n\tfunction get( scene, camera ) {\n\n\t\tvar hash = scene.id + ',' + camera.id;\n\t\tvar list = lists[ hash ];\n\n\t\tif ( list === undefined ) {\n\n\t\t\t// console.log( 'THREE.WebGLRenderLists:', hash );\n\n\t\t\tlist = new WebGLRenderList();\n\t\t\tlists[ hash ] = list;\n\n\t\t}\n\n\t\treturn list;\n\n\t}\n\n\tfunction dispose() {\n\n\t\tlists = {};\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tdispose: dispose\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction absNumericalSort( a, b ) {\n\n\treturn Math.abs( b[ 1 ] ) - Math.abs( a[ 1 ] );\n\n}\n\nfunction WebGLMorphtargets( gl ) {\n\n\tvar influencesList = {};\n\tvar morphInfluences = new Float32Array( 8 );\n\n\tfunction update( object, geometry, material, program ) {\n\n\t\tvar objectInfluences = object.morphTargetInfluences;\n\n\t\tvar length = objectInfluences.length;\n\n\t\tvar influences = influencesList[ geometry.id ];\n\n\t\tif ( influences === undefined ) {\n\n\t\t\t// initialise list\n\n\t\t\tinfluences = [];\n\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\t\tinfluences[ i ] = [ i, 0 ];\n\n\t\t\t}\n\n\t\t\tinfluencesList[ geometry.id ] = influences;\n\n\t\t}\n\n\t\tvar morphTargets = material.morphTargets && geometry.morphAttributes.position;\n\t\tvar morphNormals = material.morphNormals && geometry.morphAttributes.normal;\n\n\t\t// Remove current morphAttributes\n\n\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\tvar influence = influences[ i ];\n\n\t\t\tif ( influence[ 1 ] !== 0 ) {\n\n\t\t\t\tif ( morphTargets ) geometry.removeAttribute( 'morphTarget' + i );\n\t\t\t\tif ( morphNormals ) geometry.removeAttribute( 'morphNormal' + i );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Collect influences\n\n\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\tvar influence = influences[ i ];\n\n\t\t\tinfluence[ 0 ] = i;\n\t\t\tinfluence[ 1 ] = objectInfluences[ i ];\n\n\t\t}\n\n\t\tinfluences.sort( absNumericalSort );\n\n\t\t// Add morphAttributes\n\n\t\tfor ( var i = 0; i < 8; i ++ ) {\n\n\t\t\tvar influence = influences[ i ];\n\n\t\t\tif ( influence ) {\n\n\t\t\t\tvar index = influence[ 0 ];\n\t\t\t\tvar value = influence[ 1 ];\n\n\t\t\t\tif ( value ) {\n\n\t\t\t\t\tif ( morphTargets ) geometry.addAttribute( 'morphTarget' + i, morphTargets[ index ] );\n\t\t\t\t\tif ( morphNormals ) geometry.addAttribute( 'morphNormal' + i, morphNormals[ index ] );\n\n\t\t\t\t\tmorphInfluences[ i ] = value;\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tmorphInfluences[ i ] = 0;\n\n\t\t}\n\n\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', morphInfluences );\n\n\t}\n\n\treturn {\n\n\t\tupdate: update\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLIndexedBufferRenderer( gl, extensions, infoRender ) {\n\n\tvar mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tvar type, bytesPerElement;\n\n\tfunction setIndex( value ) {\n\n\t\ttype = value.type;\n\t\tbytesPerElement = value.bytesPerElement;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawElements( mode, count, type, start * bytesPerElement );\n\n\t\tinfoRender.calls ++;\n\t\tinfoRender.vertices += count;\n\n\t\tif ( mode === gl.TRIANGLES ) infoRender.faces += count / 3;\n\t\telse if ( mode === gl.POINTS ) infoRender.points += count;\n\n\t}\n\n\tfunction renderInstances( geometry, start, count ) {\n\n\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\tif ( extension === null ) {\n\n\t\t\tconsole.error( 'THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\textension.drawElementsInstancedANGLE( mode, count, type, start * bytesPerElement, geometry.maxInstancedCount );\n\n\t\tinfoRender.calls ++;\n\t\tinfoRender.vertices += count * geometry.maxInstancedCount;\n\n\t\tif ( mode === gl.TRIANGLES ) infoRender.faces += geometry.maxInstancedCount * count / 3;\n\t\telse if ( mode === gl.POINTS ) infoRender.points += geometry.maxInstancedCount * count;\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.setIndex = setIndex;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLBufferRenderer( gl, extensions, infoRender ) {\n\n\tvar mode;\n\n\tfunction setMode( value ) {\n\n\t\tmode = value;\n\n\t}\n\n\tfunction render( start, count ) {\n\n\t\tgl.drawArrays( mode, start, count );\n\n\t\tinfoRender.calls ++;\n\t\tinfoRender.vertices += count;\n\n\t\tif ( mode === gl.TRIANGLES ) infoRender.faces += count / 3;\n\t\telse if ( mode === gl.POINTS ) infoRender.points += count;\n\n\t}\n\n\tfunction renderInstances( geometry, start, count ) {\n\n\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\tif ( extension === null ) {\n\n\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar position = geometry.attributes.position;\n\n\t\tif ( position.isInterleavedBufferAttribute ) {\n\n\t\t\tcount = position.data.count;\n\n\t\t\textension.drawArraysInstancedANGLE( mode, 0, count, geometry.maxInstancedCount );\n\n\t\t} else {\n\n\t\t\textension.drawArraysInstancedANGLE( mode, start, count, geometry.maxInstancedCount );\n\n\t\t}\n\n\t\tinfoRender.calls ++;\n\t\tinfoRender.vertices += count * geometry.maxInstancedCount;\n\n\t\tif ( mode === gl.TRIANGLES ) infoRender.faces += geometry.maxInstancedCount * count / 3;\n\t\telse if ( mode === gl.POINTS ) infoRender.points += geometry.maxInstancedCount * count;\n\n\t}\n\n\t//\n\n\tthis.setMode = setMode;\n\tthis.render = render;\n\tthis.renderInstances = renderInstances;\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLGeometries( gl, attributes, infoMemory ) {\n\n\tvar geometries = {};\n\tvar wireframeAttributes = {};\n\n\tfunction onGeometryDispose( event ) {\n\n\t\tvar geometry = event.target;\n\t\tvar buffergeometry = geometries[ geometry.id ];\n\n\t\tif ( buffergeometry.index !== null ) {\n\n\t\t\tattributes.remove( buffergeometry.index );\n\n\t\t}\n\n\t\tfor ( var name in buffergeometry.attributes ) {\n\n\t\t\tattributes.remove( buffergeometry.attributes[ name ] );\n\n\t\t}\n\n\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\n\n\t\tdelete geometries[ geometry.id ];\n\n\t\t// TODO Remove duplicate code\n\n\t\tvar attribute = wireframeAttributes[ geometry.id ];\n\n\t\tif ( attribute ) {\n\n\t\t\tattributes.remove( attribute );\n\t\t\tdelete wireframeAttributes[ geometry.id ];\n\n\t\t}\n\n\t\tattribute = wireframeAttributes[ buffergeometry.id ];\n\n\t\tif ( attribute ) {\n\n\t\t\tattributes.remove( attribute );\n\t\t\tdelete wireframeAttributes[ buffergeometry.id ];\n\n\t\t}\n\n\t\t//\n\n\t\tinfoMemory.geometries --;\n\n\t}\n\n\tfunction get( object, geometry ) {\n\n\t\tvar buffergeometry = geometries[ geometry.id ];\n\n\t\tif ( buffergeometry ) return buffergeometry;\n\n\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tbuffergeometry = geometry;\n\n\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\tif ( geometry._bufferGeometry === undefined ) {\n\n\t\t\t\tgeometry._bufferGeometry = new BufferGeometry().setFromObject( object );\n\n\t\t\t}\n\n\t\t\tbuffergeometry = geometry._bufferGeometry;\n\n\t\t}\n\n\t\tgeometries[ geometry.id ] = buffergeometry;\n\n\t\tinfoMemory.geometries ++;\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction update( geometry ) {\n\n\t\tvar index = geometry.index;\n\t\tvar geometryAttributes = geometry.attributes;\n\n\t\tif ( index !== null ) {\n\n\t\t\tattributes.update( index, gl.ELEMENT_ARRAY_BUFFER );\n\n\t\t}\n\n\t\tfor ( var name in geometryAttributes ) {\n\n\t\t\tattributes.update( geometryAttributes[ name ], gl.ARRAY_BUFFER );\n\n\t\t}\n\n\t\t// morph targets\n\n\t\tvar morphAttributes = geometry.morphAttributes;\n\n\t\tfor ( var name in morphAttributes ) {\n\n\t\t\tvar array = morphAttributes[ name ];\n\n\t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\tattributes.update( array[ i ], gl.ARRAY_BUFFER );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction getWireframeAttribute( geometry ) {\n\n\t\tvar attribute = wireframeAttributes[ geometry.id ];\n\n\t\tif ( attribute ) return attribute;\n\n\t\tvar indices = [];\n\n\t\tvar geometryIndex = geometry.index;\n\t\tvar geometryAttributes = geometry.attributes;\n\n\t\t// console.time( 'wireframe' );\n\n\t\tif ( geometryIndex !== null ) {\n\n\t\t\tvar array = geometryIndex.array;\n\n\t\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\tvar a = array[ i + 0 ];\n\t\t\t\tvar b = array[ i + 1 ];\n\t\t\t\tvar c = array[ i + 2 ];\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tvar array = geometryAttributes.position.array;\n\n\t\t\tfor ( var i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\n\n\t\t\t\tvar a = i + 0;\n\t\t\t\tvar b = i + 1;\n\t\t\t\tvar c = i + 2;\n\n\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// console.timeEnd( 'wireframe' );\n\n\t\tattribute = new ( arrayMax( indices ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\n\n\t\tattributes.update( attribute, gl.ELEMENT_ARRAY_BUFFER );\n\n\t\twireframeAttributes[ geometry.id ] = attribute;\n\n\t\treturn attribute;\n\n\t}\n\n\treturn {\n\n\t\tget: get,\n\t\tupdate: update,\n\n\t\tgetWireframeAttribute: getWireframeAttribute\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction UniformsCache() {\n\n\tvar lights = {};\n\n\treturn {\n\n\t\tget: function ( light ) {\n\n\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\treturn lights[ light.id ];\n\n\t\t\t}\n\n\t\t\tvar uniforms;\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\n\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\tdecay: 0,\n\n\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\tdecay: 0,\n\n\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\tshadowMapSize: new Vector2(),\n\t\t\t\t\t\tshadowCameraNear: 1,\n\t\t\t\t\t\tshadowCameraFar: 1000\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\tskyColor: new Color(),\n\t\t\t\t\t\tgroundColor: new Color()\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\tuniforms = {\n\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\thalfWidth: new Vector3(),\n\t\t\t\t\t\thalfHeight: new Vector3()\n\t\t\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\n\t\t\t\t\t};\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\treturn uniforms;\n\n\t\t}\n\n\t};\n\n}\n\nfunction WebGLLights() {\n\n\tvar cache = new UniformsCache();\n\n\tvar state = {\n\n\t\thash: '',\n\n\t\tambient: [ 0, 0, 0 ],\n\t\tdirectional: [],\n\t\tdirectionalShadowMap: [],\n\t\tdirectionalShadowMatrix: [],\n\t\tspot: [],\n\t\tspotShadowMap: [],\n\t\tspotShadowMatrix: [],\n\t\trectArea: [],\n\t\tpoint: [],\n\t\tpointShadowMap: [],\n\t\tpointShadowMatrix: [],\n\t\themi: []\n\n\t};\n\n\tvar vector3 = new Vector3();\n\tvar matrix4 = new Matrix4();\n\tvar matrix42 = new Matrix4();\n\n\tfunction setup( lights, shadows, camera ) {\n\n\t\tvar r = 0, g = 0, b = 0;\n\n\t\tvar directionalLength = 0;\n\t\tvar pointLength = 0;\n\t\tvar spotLength = 0;\n\t\tvar rectAreaLength = 0;\n\t\tvar hemiLength = 0;\n\n\t\tvar viewMatrix = camera.matrixWorldInverse;\n\n\t\tfor ( var i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\tvar light = lights[ i ];\n\n\t\t\tvar color = light.color;\n\t\t\tvar intensity = light.intensity;\n\t\t\tvar distance = light.distance;\n\n\t\t\tvar shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\n\n\t\t\tif ( light.isAmbientLight ) {\n\n\t\t\t\tr += color.r * intensity;\n\t\t\t\tg += color.g * intensity;\n\t\t\t\tb += color.b * intensity;\n\n\t\t\t} else if ( light.isDirectionalLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tvar shadow = light.shadow;\n\n\t\t\t\t\tuniforms.shadowBias = shadow.bias;\n\t\t\t\t\tuniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tuniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t}\n\n\t\t\t\tstate.directionalShadowMap[ directionalLength ] = shadowMap;\n\t\t\t\tstate.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\n\t\t\t\tstate.directional[ directionalLength ] = uniforms;\n\n\t\t\t\tdirectionalLength ++;\n\n\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\t\t\t\tuniforms.distance = distance;\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\n\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\n\t\t\t\tuniforms.decay = ( light.distance === 0 ) ? 0.0 : light.decay;\n\n\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tvar shadow = light.shadow;\n\n\t\t\t\t\tuniforms.shadowBias = shadow.bias;\n\t\t\t\t\tuniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tuniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t}\n\n\t\t\t\tstate.spotShadowMap[ spotLength ] = shadowMap;\n\t\t\t\tstate.spotShadowMatrix[ spotLength ] = light.shadow.matrix;\n\t\t\t\tstate.spot[ spotLength ] = uniforms;\n\n\t\t\t\tspotLength ++;\n\n\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\t// (a) intensity controls irradiance of entire light\n\t\t\t\tuniforms.color\n\t\t\t\t\t.copy( color )\n\t\t\t\t\t.multiplyScalar( intensity / ( light.width * light.height ) );\n\n\t\t\t\t// (b) intensity controls the radiance per light area\n\t\t\t\t// uniforms.color.copy( color ).multiplyScalar( intensity );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t// extract local rotation of light to derive width/height half vectors\n\t\t\t\tmatrix42.identity();\n\t\t\t\tmatrix4.copy( light.matrixWorld );\n\t\t\t\tmatrix4.premultiply( viewMatrix );\n\t\t\t\tmatrix42.extractRotation( matrix4 );\n\n\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\tuniforms.halfWidth.applyMatrix4( matrix42 );\n\t\t\t\tuniforms.halfHeight.applyMatrix4( matrix42 );\n\n\t\t\t\t// TODO (abelnation): RectAreaLight distance?\n\t\t\t\t// uniforms.distance = distance;\n\n\t\t\t\tstate.rectArea[ rectAreaLength ] = uniforms;\n\n\t\t\t\trectAreaLength ++;\n\n\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\tuniforms.distance = light.distance;\n\t\t\t\tuniforms.decay = ( light.distance === 0 ) ? 0.0 : light.decay;\n\n\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\tvar shadow = light.shadow;\n\n\t\t\t\t\tuniforms.shadowBias = shadow.bias;\n\t\t\t\t\tuniforms.shadowRadius = shadow.radius;\n\t\t\t\t\tuniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\tuniforms.shadowCameraNear = shadow.camera.near;\n\t\t\t\t\tuniforms.shadowCameraFar = shadow.camera.far;\n\n\t\t\t\t}\n\n\t\t\t\tstate.pointShadowMap[ pointLength ] = shadowMap;\n\t\t\t\tstate.pointShadowMatrix[ pointLength ] = light.shadow.matrix;\n\t\t\t\tstate.point[ pointLength ] = uniforms;\n\n\t\t\t\tpointLength ++;\n\n\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\t\t\t\tuniforms.direction.normalize();\n\n\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity );\n\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity );\n\n\t\t\t\tstate.hemi[ hemiLength ] = uniforms;\n\n\t\t\t\themiLength ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.ambient[ 0 ] = r;\n\t\tstate.ambient[ 1 ] = g;\n\t\tstate.ambient[ 2 ] = b;\n\n\t\tstate.directional.length = directionalLength;\n\t\tstate.spot.length = spotLength;\n\t\tstate.rectArea.length = rectAreaLength;\n\t\tstate.point.length = pointLength;\n\t\tstate.hemi.length = hemiLength;\n\n\t\t// TODO (sam-g-steel) why aren't we using join\n\t\tstate.hash = directionalLength + ',' + pointLength + ',' + spotLength + ',' + rectAreaLength + ',' + hemiLength + ',' + shadows.length;\n\n\t}\n\n\treturn {\n\t\tsetup: setup,\n\t\tstate: state\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLObjects( geometries, infoRender ) {\n\n\tvar updateList = {};\n\n\tfunction update( object ) {\n\n\t\tvar frame = infoRender.frame;\n\n\t\tvar geometry = object.geometry;\n\t\tvar buffergeometry = geometries.get( object, geometry );\n\n\t\t// Update once per frame\n\n\t\tif ( updateList[ buffergeometry.id ] !== frame ) {\n\n\t\t\tif ( geometry.isGeometry ) {\n\n\t\t\t\tbuffergeometry.updateFromObject( object );\n\n\t\t\t}\n\n\t\t\tgeometries.update( buffergeometry );\n\n\t\t\tupdateList[ buffergeometry.id ] = frame;\n\n\t\t}\n\n\t\treturn buffergeometry;\n\n\t}\n\n\tfunction clear() {\n\n\t\tupdateList = {};\n\n\t}\n\n\treturn {\n\n\t\tupdate: update,\n\t\tclear: clear\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction addLineNumbers( string ) {\n\n\tvar lines = string.split( '\\n' );\n\n\tfor ( var i = 0; i < lines.length; i ++ ) {\n\n\t\tlines[ i ] = ( i + 1 ) + ': ' + lines[ i ];\n\n\t}\n\n\treturn lines.join( '\\n' );\n\n}\n\nfunction WebGLShader( gl, type, string ) {\n\n\tvar shader = gl.createShader( type );\n\n\tgl.shaderSource( shader, string );\n\tgl.compileShader( shader );\n\n\tif ( gl.getShaderParameter( shader, gl.COMPILE_STATUS ) === false ) {\n\n\t\tconsole.error( 'THREE.WebGLShader: Shader couldn\\'t compile.' );\n\n\t}\n\n\tif ( gl.getShaderInfoLog( shader ) !== '' ) {\n\n\t\tconsole.warn( 'THREE.WebGLShader: gl.getShaderInfoLog()', type === gl.VERTEX_SHADER ? 'vertex' : 'fragment', gl.getShaderInfoLog( shader ), addLineNumbers( string ) );\n\n\t}\n\n\t// --enable-privileged-webgl-extension\n\t// console.log( type, gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\treturn shader;\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar programIdCount = 0;\n\nfunction getEncodingComponents( encoding ) {\n\n\tswitch ( encoding ) {\n\n\t\tcase LinearEncoding:\n\t\t\treturn [ 'Linear', '( value )' ];\n\t\tcase sRGBEncoding:\n\t\t\treturn [ 'sRGB', '( value )' ];\n\t\tcase RGBEEncoding:\n\t\t\treturn [ 'RGBE', '( value )' ];\n\t\tcase RGBM7Encoding:\n\t\t\treturn [ 'RGBM', '( value, 7.0 )' ];\n\t\tcase RGBM16Encoding:\n\t\t\treturn [ 'RGBM', '( value, 16.0 )' ];\n\t\tcase RGBDEncoding:\n\t\t\treturn [ 'RGBD', '( value, 256.0 )' ];\n\t\tcase GammaEncoding:\n\t\t\treturn [ 'Gamma', '( value, float( GAMMA_FACTOR ) )' ];\n\t\tdefault:\n\t\t\tthrow new Error( 'unsupported encoding: ' + encoding );\n\n\t}\n\n}\n\nfunction getTexelDecodingFunction( functionName, encoding ) {\n\n\tvar components = getEncodingComponents( encoding );\n\treturn \"vec4 \" + functionName + \"( vec4 value ) { return \" + components[ 0 ] + \"ToLinear\" + components[ 1 ] + \"; }\";\n\n}\n\nfunction getTexelEncodingFunction( functionName, encoding ) {\n\n\tvar components = getEncodingComponents( encoding );\n\treturn \"vec4 \" + functionName + \"( vec4 value ) { return LinearTo\" + components[ 0 ] + components[ 1 ] + \"; }\";\n\n}\n\nfunction getToneMappingFunction( functionName, toneMapping ) {\n\n\tvar toneMappingName;\n\n\tswitch ( toneMapping ) {\n\n\t\tcase LinearToneMapping:\n\t\t\ttoneMappingName = \"Linear\";\n\t\t\tbreak;\n\n\t\tcase ReinhardToneMapping:\n\t\t\ttoneMappingName = \"Reinhard\";\n\t\t\tbreak;\n\n\t\tcase Uncharted2ToneMapping:\n\t\t\ttoneMappingName = \"Uncharted2\";\n\t\t\tbreak;\n\n\t\tcase CineonToneMapping:\n\t\t\ttoneMappingName = \"OptimizedCineon\";\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tthrow new Error( 'unsupported toneMapping: ' + toneMapping );\n\n\t}\n\n\treturn \"vec3 \" + functionName + \"( vec3 color ) { return \" + toneMappingName + \"ToneMapping( color ); }\";\n\n}\n\nfunction generateExtensions( extensions, parameters, rendererExtensions ) {\n\n\textensions = extensions || {};\n\n\tvar chunks = [\n\t\t( extensions.derivatives || parameters.envMapCubeUV || parameters.bumpMap || parameters.normalMap || parameters.flatShading ) ? '#extension GL_OES_standard_derivatives : enable' : '',\n\t\t( extensions.fragDepth || parameters.logarithmicDepthBuffer ) && rendererExtensions.get( 'EXT_frag_depth' ) ? '#extension GL_EXT_frag_depth : enable' : '',\n\t\t( extensions.drawBuffers ) && rendererExtensions.get( 'WEBGL_draw_buffers' ) ? '#extension GL_EXT_draw_buffers : require' : '',\n\t\t( extensions.shaderTextureLOD || parameters.envMap ) && rendererExtensions.get( 'EXT_shader_texture_lod' ) ? '#extension GL_EXT_shader_texture_lod : enable' : ''\n\t];\n\n\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n}\n\nfunction generateDefines( defines ) {\n\n\tvar chunks = [];\n\n\tfor ( var name in defines ) {\n\n\t\tvar value = defines[ name ];\n\n\t\tif ( value === false ) continue;\n\n\t\tchunks.push( '#define ' + name + ' ' + value );\n\n\t}\n\n\treturn chunks.join( '\\n' );\n\n}\n\nfunction fetchAttributeLocations( gl, program ) {\n\n\tvar attributes = {};\n\n\tvar n = gl.getProgramParameter( program, gl.ACTIVE_ATTRIBUTES );\n\n\tfor ( var i = 0; i < n; i ++ ) {\n\n\t\tvar info = gl.getActiveAttrib( program, i );\n\t\tvar name = info.name;\n\n\t\t// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n\t\tattributes[ name ] = gl.getAttribLocation( program, name );\n\n\t}\n\n\treturn attributes;\n\n}\n\nfunction filterEmptyLine( string ) {\n\n\treturn string !== '';\n\n}\n\nfunction replaceLightNums( string, parameters ) {\n\n\treturn string\n\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n\t\t.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\n\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights );\n\n}\n\nfunction parseIncludes( string ) {\n\n\tvar pattern = /^[ \\t]*#include +<([\\w\\d.]+)>/gm;\n\n\tfunction replace( match, include ) {\n\n\t\tvar replace = ShaderChunk[ include ];\n\n\t\tif ( replace === undefined ) {\n\n\t\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\n\n\t\t}\n\n\t\treturn parseIncludes( replace );\n\n\t}\n\n\treturn string.replace( pattern, replace );\n\n}\n\nfunction unrollLoops( string ) {\n\n\tvar pattern = /for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;\n\n\tfunction replace( match, start, end, snippet ) {\n\n\t\tvar unroll = '';\n\n\t\tfor ( var i = parseInt( start ); i < parseInt( end ); i ++ ) {\n\n\t\t\tunroll += snippet.replace( /\\[ i \\]/g, '[ ' + i + ' ]' );\n\n\t\t}\n\n\t\treturn unroll;\n\n\t}\n\n\treturn string.replace( pattern, replace );\n\n}\n\nfunction WebGLProgram( renderer, extensions, code, material, shader, parameters ) {\n\n\tvar gl = renderer.context;\n\n\tvar defines = material.defines;\n\n\tvar vertexShader = shader.vertexShader;\n\tvar fragmentShader = shader.fragmentShader;\n\n\tvar shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\tif ( parameters.shadowMapType === PCFShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\n\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\n\n\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\n\t}\n\n\tvar envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\tvar envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\tvar envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\n\tif ( parameters.envMap ) {\n\n\t\tswitch ( material.envMap.mapping ) {\n\n\t\t\tcase CubeReflectionMapping:\n\t\t\tcase CubeRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\tbreak;\n\n\t\t\tcase CubeUVReflectionMapping:\n\t\t\tcase CubeUVRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\tbreak;\n\n\t\t\tcase EquirectangularReflectionMapping:\n\t\t\tcase EquirectangularRefractionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_EQUIREC';\n\t\t\t\tbreak;\n\n\t\t\tcase SphericalReflectionMapping:\n\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_SPHERE';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tswitch ( material.envMap.mapping ) {\n\n\t\t\tcase CubeRefractionMapping:\n\t\t\tcase EquirectangularRefractionMapping:\n\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tswitch ( material.combine ) {\n\n\t\t\tcase MultiplyOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\tbreak;\n\n\t\t\tcase MixOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\tbreak;\n\n\t\t\tcase AddOperation:\n\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\tbreak;\n\n\t\t}\n\n\t}\n\n\tvar gammaFactorDefine = ( renderer.gammaFactor > 0 ) ? renderer.gammaFactor : 1.0;\n\n\t// console.log( 'building new program ' );\n\n\t//\n\n\tvar customExtensions = generateExtensions( material.extensions, parameters, extensions );\n\n\tvar customDefines = generateDefines( defines );\n\n\t//\n\n\tvar program = gl.createProgram();\n\n\tvar prefixVertex, prefixFragment;\n\n\tif ( material.isRawShaderMaterial ) {\n\n\t\tprefixVertex = [\n\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixVertex.length > 0 ) {\n\n\t\t\tprefixVertex += '\\n';\n\n\t\t}\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\t\t\tcustomDefines\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tif ( prefixFragment.length > 0 ) {\n\n\t\t\tprefixFragment += '\\n';\n\n\t\t}\n\n\t} else {\n\n\t\tprefixVertex = [\n\n\t\t\t'precision ' + parameters.precision + ' float;',\n\t\t\t'precision ' + parameters.precision + ' int;',\n\n\t\t\t'#define SHADER_NAME ' + shader.name,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\n\n\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n\t\t\t'#define MAX_BONES ' + parameters.maxBones,\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t( parameters.useFog && parameters.fogExp ) ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\tparameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\n\t\t\tparameters.useVertexTexture ? '#define BONE_TEXTURE' : '',\n\n\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\t'#define NUM_CLIPPING_PLANES ' + parameters.numClippingPlanes,\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\tparameters.logarithmicDepthBuffer && extensions.get( 'EXT_frag_depth' ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t'uniform mat4 modelMatrix;',\n\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform mat3 normalMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\n\t\t\t'attribute vec3 position;',\n\t\t\t'attribute vec3 normal;',\n\t\t\t'attribute vec2 uv;',\n\n\t\t\t'#ifdef USE_COLOR',\n\n\t\t\t'\tattribute vec3 color;',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_MORPHTARGETS',\n\n\t\t\t'\tattribute vec3 morphTarget0;',\n\t\t\t'\tattribute vec3 morphTarget1;',\n\t\t\t'\tattribute vec3 morphTarget2;',\n\t\t\t'\tattribute vec3 morphTarget3;',\n\n\t\t\t'\t#ifdef USE_MORPHNORMALS',\n\n\t\t\t'\t\tattribute vec3 morphNormal0;',\n\t\t\t'\t\tattribute vec3 morphNormal1;',\n\t\t\t'\t\tattribute vec3 morphNormal2;',\n\t\t\t'\t\tattribute vec3 morphNormal3;',\n\n\t\t\t'\t#else',\n\n\t\t\t'\t\tattribute vec3 morphTarget4;',\n\t\t\t'\t\tattribute vec3 morphTarget5;',\n\t\t\t'\t\tattribute vec3 morphTarget6;',\n\t\t\t'\t\tattribute vec3 morphTarget7;',\n\n\t\t\t'\t#endif',\n\n\t\t\t'#endif',\n\n\t\t\t'#ifdef USE_SKINNING',\n\n\t\t\t'\tattribute vec4 skinIndex;',\n\t\t\t'\tattribute vec4 skinWeight;',\n\n\t\t\t'#endif',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\tprefixFragment = [\n\n\t\t\tcustomExtensions,\n\n\t\t\t'precision ' + parameters.precision + ' float;',\n\t\t\t'precision ' + parameters.precision + ' int;',\n\n\t\t\t'#define SHADER_NAME ' + shader.name,\n\n\t\t\tcustomDefines,\n\n\t\t\tparameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest : '',\n\n\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t( parameters.useFog && parameters.fogExp ) ? '#define FOG_EXP2' : '',\n\n\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\n\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\n\t\t\tparameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\n\n\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\t'#define NUM_CLIPPING_PLANES ' + parameters.numClippingPlanes,\n\t\t\t'#define UNION_CLIPPING_PLANES ' + ( parameters.numClippingPlanes - parameters.numClipIntersection ),\n\n\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\tparameters.premultipliedAlpha ? \"#define PREMULTIPLIED_ALPHA\" : '',\n\n\t\t\tparameters.physicallyCorrectLights ? \"#define PHYSICALLY_CORRECT_LIGHTS\" : '',\n\n\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\tparameters.logarithmicDepthBuffer && extensions.get( 'EXT_frag_depth' ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\tparameters.envMap && extensions.get( 'EXT_shader_texture_lod' ) ? '#define TEXTURE_LOD_EXT' : '',\n\n\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t'uniform vec3 cameraPosition;',\n\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? \"#define TONE_MAPPING\" : '',\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '', // this code is required here because it is used by the toneMapping() function defined below\n\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( \"toneMapping\", parameters.toneMapping ) : '',\n\n\t\t\tparameters.dithering ? '#define DITHERING' : '',\n\n\t\t\t( parameters.outputEncoding || parameters.mapEncoding || parameters.envMapEncoding || parameters.emissiveMapEncoding ) ? ShaderChunk[ 'encodings_pars_fragment' ] : '', // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\tparameters.mapEncoding ? getTexelDecodingFunction( 'mapTexelToLinear', parameters.mapEncoding ) : '',\n\t\t\tparameters.envMapEncoding ? getTexelDecodingFunction( 'envMapTexelToLinear', parameters.envMapEncoding ) : '',\n\t\t\tparameters.emissiveMapEncoding ? getTexelDecodingFunction( 'emissiveMapTexelToLinear', parameters.emissiveMapEncoding ) : '',\n\t\t\tparameters.outputEncoding ? getTexelEncodingFunction( \"linearToOutputTexel\", parameters.outputEncoding ) : '',\n\n\t\t\tparameters.depthPacking ? \"#define DEPTH_PACKING \" + material.depthPacking : '',\n\n\t\t\t'\\n'\n\n\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t}\n\n\tvertexShader = parseIncludes( vertexShader );\n\tvertexShader = replaceLightNums( vertexShader, parameters );\n\n\tfragmentShader = parseIncludes( fragmentShader );\n\tfragmentShader = replaceLightNums( fragmentShader, parameters );\n\n\tif ( ! material.isShaderMaterial ) {\n\n\t\tvertexShader = unrollLoops( vertexShader );\n\t\tfragmentShader = unrollLoops( fragmentShader );\n\n\t}\n\n\tvar vertexGlsl = prefixVertex + vertexShader;\n\tvar fragmentGlsl = prefixFragment + fragmentShader;\n\n\t// console.log( '*VERTEX*', vertexGlsl );\n\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\tvar glVertexShader = WebGLShader( gl, gl.VERTEX_SHADER, vertexGlsl );\n\tvar glFragmentShader = WebGLShader( gl, gl.FRAGMENT_SHADER, fragmentGlsl );\n\n\tgl.attachShader( program, glVertexShader );\n\tgl.attachShader( program, glFragmentShader );\n\n\t// Force a particular attribute to index 0.\n\n\tif ( material.index0AttributeName !== undefined ) {\n\n\t\tgl.bindAttribLocation( program, 0, material.index0AttributeName );\n\n\t} else if ( parameters.morphTargets === true ) {\n\n\t\t// programs with morphTargets displace position out of attribute 0\n\t\tgl.bindAttribLocation( program, 0, 'position' );\n\n\t}\n\n\tgl.linkProgram( program );\n\n\tvar programLog = gl.getProgramInfoLog( program );\n\tvar vertexLog = gl.getShaderInfoLog( glVertexShader );\n\tvar fragmentLog = gl.getShaderInfoLog( glFragmentShader );\n\n\tvar runnable = true;\n\tvar haveDiagnostics = true;\n\n\t// console.log( '**VERTEX**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glVertexShader ) );\n\t// console.log( '**FRAGMENT**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glFragmentShader ) );\n\n\tif ( gl.getProgramParameter( program, gl.LINK_STATUS ) === false ) {\n\n\t\trunnable = false;\n\n\t\tconsole.error( 'THREE.WebGLProgram: shader error: ', gl.getError(), 'gl.VALIDATE_STATUS', gl.getProgramParameter( program, gl.VALIDATE_STATUS ), 'gl.getProgramInfoLog', programLog, vertexLog, fragmentLog );\n\n\t} else if ( programLog !== '' ) {\n\n\t\tconsole.warn( 'THREE.WebGLProgram: gl.getProgramInfoLog()', programLog );\n\n\t} else if ( vertexLog === '' || fragmentLog === '' ) {\n\n\t\thaveDiagnostics = false;\n\n\t}\n\n\tif ( haveDiagnostics ) {\n\n\t\tthis.diagnostics = {\n\n\t\t\trunnable: runnable,\n\t\t\tmaterial: material,\n\n\t\t\tprogramLog: programLog,\n\n\t\t\tvertexShader: {\n\n\t\t\t\tlog: vertexLog,\n\t\t\t\tprefix: prefixVertex\n\n\t\t\t},\n\n\t\t\tfragmentShader: {\n\n\t\t\t\tlog: fragmentLog,\n\t\t\t\tprefix: prefixFragment\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t// clean up\n\n\tgl.deleteShader( glVertexShader );\n\tgl.deleteShader( glFragmentShader );\n\n\t// set up caching for uniform locations\n\n\tvar cachedUniforms;\n\n\tthis.getUniforms = function () {\n\n\t\tif ( cachedUniforms === undefined ) {\n\n\t\t\tcachedUniforms = new WebGLUniforms( gl, program, renderer );\n\n\t\t}\n\n\t\treturn cachedUniforms;\n\n\t};\n\n\t// set up caching for attribute locations\n\n\tvar cachedAttributes;\n\n\tthis.getAttributes = function () {\n\n\t\tif ( cachedAttributes === undefined ) {\n\n\t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\n\n\t\t}\n\n\t\treturn cachedAttributes;\n\n\t};\n\n\t// free resource\n\n\tthis.destroy = function () {\n\n\t\tgl.deleteProgram( program );\n\t\tthis.program = undefined;\n\n\t};\n\n\t// DEPRECATED\n\n\tObject.defineProperties( this, {\n\n\t\tuniforms: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .uniforms is now .getUniforms().' );\n\t\t\t\treturn this.getUniforms();\n\n\t\t\t}\n\t\t},\n\n\t\tattributes: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram: .attributes is now .getAttributes().' );\n\t\t\t\treturn this.getAttributes();\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\n\t//\n\n\tthis.id = programIdCount ++;\n\tthis.code = code;\n\tthis.usedTimes = 1;\n\tthis.program = program;\n\tthis.vertexShader = glVertexShader;\n\tthis.fragmentShader = glFragmentShader;\n\n\treturn this;\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLPrograms( renderer, extensions, capabilities ) {\n\n\tvar programs = [];\n\n\tvar shaderIDs = {\n\t\tMeshDepthMaterial: 'depth',\n\t\tMeshDistanceMaterial: 'distanceRGBA',\n\t\tMeshNormalMaterial: 'normal',\n\t\tMeshBasicMaterial: 'basic',\n\t\tMeshLambertMaterial: 'lambert',\n\t\tMeshPhongMaterial: 'phong',\n\t\tMeshToonMaterial: 'phong',\n\t\tMeshStandardMaterial: 'physical',\n\t\tMeshPhysicalMaterial: 'physical',\n\t\tLineBasicMaterial: 'basic',\n\t\tLineDashedMaterial: 'dashed',\n\t\tPointsMaterial: 'points',\n\t\tShadowMaterial: 'shadow'\n\t};\n\n\tvar parameterNames = [\n\t\t\"precision\", \"supportsVertexTextures\", \"map\", \"mapEncoding\", \"envMap\", \"envMapMode\", \"envMapEncoding\",\n\t\t\"lightMap\", \"aoMap\", \"emissiveMap\", \"emissiveMapEncoding\", \"bumpMap\", \"normalMap\", \"displacementMap\", \"specularMap\",\n\t\t\"roughnessMap\", \"metalnessMap\", \"gradientMap\",\n\t\t\"alphaMap\", \"combine\", \"vertexColors\", \"fog\", \"useFog\", \"fogExp\",\n\t\t\"flatShading\", \"sizeAttenuation\", \"logarithmicDepthBuffer\", \"skinning\",\n\t\t\"maxBones\", \"useVertexTexture\", \"morphTargets\", \"morphNormals\",\n\t\t\"maxMorphTargets\", \"maxMorphNormals\", \"premultipliedAlpha\",\n\t\t\"numDirLights\", \"numPointLights\", \"numSpotLights\", \"numHemiLights\", \"numRectAreaLights\",\n\t\t\"shadowMapEnabled\", \"shadowMapType\", \"toneMapping\", 'physicallyCorrectLights',\n\t\t\"alphaTest\", \"doubleSided\", \"flipSided\", \"numClippingPlanes\", \"numClipIntersection\", \"depthPacking\", \"dithering\"\n\t];\n\n\n\tfunction allocateBones( object ) {\n\n\t\tvar skeleton = object.skeleton;\n\t\tvar bones = skeleton.bones;\n\n\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\treturn 1024;\n\n\t\t} else {\n\n\t\t\t// default for when object is not specified\n\t\t\t// ( for example when prebuilding shader to be used with multiple objects )\n\t\t\t//\n\t\t\t//  - leave some extra space for other uniforms\n\t\t\t//  - limit here is ANGLE's 254 max uniform vectors\n\t\t\t//    (up to 54 should be safe)\n\n\t\t\tvar nVertexUniforms = capabilities.maxVertexUniforms;\n\t\t\tvar nVertexMatrices = Math.floor( ( nVertexUniforms - 20 ) / 4 );\n\n\t\t\tvar maxBones = Math.min( nVertexMatrices, bones.length );\n\n\t\t\tif ( maxBones < bones.length ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Skeleton has ' + bones.length + ' bones. This GPU supports ' + maxBones + '.' );\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\treturn maxBones;\n\n\t\t}\n\n\t}\n\n\tfunction getTextureEncodingFromMap( map, gammaOverrideLinear ) {\n\n\t\tvar encoding;\n\n\t\tif ( ! map ) {\n\n\t\t\tencoding = LinearEncoding;\n\n\t\t} else if ( map.isTexture ) {\n\n\t\t\tencoding = map.encoding;\n\n\t\t} else if ( map.isWebGLRenderTarget ) {\n\n\t\t\tconsole.warn( \"THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead.\" );\n\t\t\tencoding = map.texture.encoding;\n\n\t\t}\n\n\t\t// add backwards compatibility for WebGLRenderer.gammaInput/gammaOutput parameter, should probably be removed at some point.\n\t\tif ( encoding === LinearEncoding && gammaOverrideLinear ) {\n\n\t\t\tencoding = GammaEncoding;\n\n\t\t}\n\n\t\treturn encoding;\n\n\t}\n\n\tthis.getParameters = function ( material, lights, shadows, fog, nClipPlanes, nClipIntersection, object ) {\n\n\t\tvar shaderID = shaderIDs[ material.type ];\n\n\t\t// heuristics to create shader parameters according to lights in the scene\n\t\t// (not to blow over maxLights budget)\n\n\t\tvar maxBones = object.isSkinnedMesh ? allocateBones( object ) : 0;\n\t\tvar precision = capabilities.precision;\n\n\t\tif ( material.precision !== null ) {\n\n\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\n\n\t\t\tif ( precision !== material.precision ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar currentRenderTarget = renderer.getRenderTarget();\n\n\t\tvar parameters = {\n\n\t\t\tshaderID: shaderID,\n\n\t\t\tprecision: precision,\n\t\t\tsupportsVertexTextures: capabilities.vertexTextures,\n\t\t\toutputEncoding: getTextureEncodingFromMap( ( ! currentRenderTarget ) ? null : currentRenderTarget.texture, renderer.gammaOutput ),\n\t\t\tmap: !! material.map,\n\t\t\tmapEncoding: getTextureEncodingFromMap( material.map, renderer.gammaInput ),\n\t\t\tenvMap: !! material.envMap,\n\t\t\tenvMapMode: material.envMap && material.envMap.mapping,\n\t\t\tenvMapEncoding: getTextureEncodingFromMap( material.envMap, renderer.gammaInput ),\n\t\t\tenvMapCubeUV: ( !! material.envMap ) && ( ( material.envMap.mapping === CubeUVReflectionMapping ) || ( material.envMap.mapping === CubeUVRefractionMapping ) ),\n\t\t\tlightMap: !! material.lightMap,\n\t\t\taoMap: !! material.aoMap,\n\t\t\temissiveMap: !! material.emissiveMap,\n\t\t\temissiveMapEncoding: getTextureEncodingFromMap( material.emissiveMap, renderer.gammaInput ),\n\t\t\tbumpMap: !! material.bumpMap,\n\t\t\tnormalMap: !! material.normalMap,\n\t\t\tdisplacementMap: !! material.displacementMap,\n\t\t\troughnessMap: !! material.roughnessMap,\n\t\t\tmetalnessMap: !! material.metalnessMap,\n\t\t\tspecularMap: !! material.specularMap,\n\t\t\talphaMap: !! material.alphaMap,\n\n\t\t\tgradientMap: !! material.gradientMap,\n\n\t\t\tcombine: material.combine,\n\n\t\t\tvertexColors: material.vertexColors,\n\n\t\t\tfog: !! fog,\n\t\t\tuseFog: material.fog,\n\t\t\tfogExp: ( fog && fog.isFogExp2 ),\n\n\t\t\tflatShading: material.flatShading,\n\n\t\t\tsizeAttenuation: material.sizeAttenuation,\n\t\t\tlogarithmicDepthBuffer: capabilities.logarithmicDepthBuffer,\n\n\t\t\tskinning: material.skinning && maxBones > 0,\n\t\t\tmaxBones: maxBones,\n\t\t\tuseVertexTexture: capabilities.floatVertexTextures,\n\n\t\t\tmorphTargets: material.morphTargets,\n\t\t\tmorphNormals: material.morphNormals,\n\t\t\tmaxMorphTargets: renderer.maxMorphTargets,\n\t\t\tmaxMorphNormals: renderer.maxMorphNormals,\n\n\t\t\tnumDirLights: lights.directional.length,\n\t\t\tnumPointLights: lights.point.length,\n\t\t\tnumSpotLights: lights.spot.length,\n\t\t\tnumRectAreaLights: lights.rectArea.length,\n\t\t\tnumHemiLights: lights.hemi.length,\n\n\t\t\tnumClippingPlanes: nClipPlanes,\n\t\t\tnumClipIntersection: nClipIntersection,\n\n\t\t\tdithering: material.dithering,\n\n\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && object.receiveShadow && shadows.length > 0,\n\t\t\tshadowMapType: renderer.shadowMap.type,\n\n\t\t\ttoneMapping: renderer.toneMapping,\n\t\t\tphysicallyCorrectLights: renderer.physicallyCorrectLights,\n\n\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\n\t\t\talphaTest: material.alphaTest,\n\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\tflipSided: material.side === BackSide,\n\n\t\t\tdepthPacking: ( material.depthPacking !== undefined ) ? material.depthPacking : false\n\n\t\t};\n\n\t\treturn parameters;\n\n\t};\n\n\tthis.getProgramCode = function ( material, parameters ) {\n\n\t\tvar array = [];\n\n\t\tif ( parameters.shaderID ) {\n\n\t\t\tarray.push( parameters.shaderID );\n\n\t\t} else {\n\n\t\t\tarray.push( material.fragmentShader );\n\t\t\tarray.push( material.vertexShader );\n\n\t\t}\n\n\t\tif ( material.defines !== undefined ) {\n\n\t\t\tfor ( var name in material.defines ) {\n\n\t\t\t\tarray.push( name );\n\t\t\t\tarray.push( material.defines[ name ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfor ( var i = 0; i < parameterNames.length; i ++ ) {\n\n\t\t\tarray.push( parameters[ parameterNames[ i ] ] );\n\n\t\t}\n\n\t\tarray.push( material.onBeforeCompile.toString() );\n\n\t\tarray.push( renderer.gammaOutput );\n\n\t\treturn array.join();\n\n\t};\n\n\tthis.acquireProgram = function ( material, shader, parameters, code ) {\n\n\t\tvar program;\n\n\t\t// Check if code has been already compiled\n\t\tfor ( var p = 0, pl = programs.length; p < pl; p ++ ) {\n\n\t\t\tvar programInfo = programs[ p ];\n\n\t\t\tif ( programInfo.code === code ) {\n\n\t\t\t\tprogram = programInfo;\n\t\t\t\t++ program.usedTimes;\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( program === undefined ) {\n\n\t\t\tprogram = new WebGLProgram( renderer, extensions, code, material, shader, parameters );\n\t\t\tprograms.push( program );\n\n\t\t}\n\n\t\treturn program;\n\n\t};\n\n\tthis.releaseProgram = function ( program ) {\n\n\t\tif ( -- program.usedTimes === 0 ) {\n\n\t\t\t// Remove from unordered set\n\t\t\tvar i = programs.indexOf( program );\n\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\n\t\t\tprograms.pop();\n\n\t\t\t// Free WebGL resources\n\t\t\tprogram.destroy();\n\n\t\t}\n\n\t};\n\n\t// Exposed for resource monitoring & error feedback via renderer.info:\n\tthis.programs = programs;\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLTextures( _gl, extensions, state, properties, capabilities, utils, infoMemory ) {\n\n\tvar _isWebGL2 = ( typeof WebGL2RenderingContext !== 'undefined' && _gl instanceof window.WebGL2RenderingContext );\n\n\t//\n\n\tfunction clampToMaxSize( image, maxSize ) {\n\n\t\tif ( image.width > maxSize || image.height > maxSize ) {\n\n\t\t\t// Warning: Scaling through the canvas will only work with images that use\n\t\t\t// premultiplied alpha.\n\n\t\t\tvar scale = maxSize / Math.max( image.width, image.height );\n\n\t\t\tvar canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\t\t\tcanvas.width = Math.floor( image.width * scale );\n\t\t\tcanvas.height = Math.floor( image.height * scale );\n\n\t\t\tvar context = canvas.getContext( '2d' );\n\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height, 0, 0, canvas.width, canvas.height );\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: image is too big (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height, image );\n\n\t\t\treturn canvas;\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction isPowerOfTwo( image ) {\n\n\t\treturn _Math.isPowerOfTwo( image.width ) && _Math.isPowerOfTwo( image.height );\n\n\t}\n\n\tfunction makePowerOfTwo( image ) {\n\n\t\tif ( image instanceof HTMLImageElement || image instanceof HTMLCanvasElement || image instanceof ImageBitmap ) {\n\n\t\t\tvar canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\t\t\tcanvas.width = _Math.floorPowerOfTwo( image.width );\n\t\t\tcanvas.height = _Math.floorPowerOfTwo( image.height );\n\n\t\t\tvar context = canvas.getContext( '2d' );\n\t\t\tcontext.drawImage( image, 0, 0, canvas.width, canvas.height );\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: image is not power of two (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height, image );\n\n\t\t\treturn canvas;\n\n\t\t}\n\n\t\treturn image;\n\n\t}\n\n\tfunction textureNeedsPowerOfTwo( texture ) {\n\n\t\treturn ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) ||\n\t\t\t( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter );\n\n\t}\n\n\tfunction textureNeedsGenerateMipmaps( texture, isPowerOfTwo ) {\n\n\t\treturn texture.generateMipmaps && isPowerOfTwo &&\n\t\t\ttexture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\n\t}\n\n\t// Fallback filters for non-power-of-2 textures\n\n\tfunction filterFallback( f ) {\n\n\t\tif ( f === NearestFilter || f === NearestMipMapNearestFilter || f === NearestMipMapLinearFilter ) {\n\n\t\t\treturn _gl.NEAREST;\n\n\t\t}\n\n\t\treturn _gl.LINEAR;\n\n\t}\n\n\t//\n\n\tfunction onTextureDispose( event ) {\n\n\t\tvar texture = event.target;\n\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\tdeallocateTexture( texture );\n\n\t\tinfoMemory.textures --;\n\n\n\t}\n\n\tfunction onRenderTargetDispose( event ) {\n\n\t\tvar renderTarget = event.target;\n\n\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\n\n\t\tdeallocateRenderTarget( renderTarget );\n\n\t\tinfoMemory.textures --;\n\n\t}\n\n\t//\n\n\tfunction deallocateTexture( texture ) {\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\tif ( texture.image && textureProperties.__image__webglTextureCube ) {\n\n\t\t\t// cube texture\n\n\t\t\t_gl.deleteTexture( textureProperties.__image__webglTextureCube );\n\n\t\t} else {\n\n\t\t\t// 2D texture\n\n\t\t\tif ( textureProperties.__webglInit === undefined ) return;\n\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t}\n\n\t\t// remove all webgl properties\n\t\tproperties.remove( texture );\n\n\t}\n\n\tfunction deallocateRenderTarget( renderTarget ) {\n\n\t\tvar renderTargetProperties = properties.get( renderTarget );\n\t\tvar textureProperties = properties.get( renderTarget.texture );\n\n\t\tif ( ! renderTarget ) return;\n\n\t\tif ( textureProperties.__webglTexture !== undefined ) {\n\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t}\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\trenderTarget.depthTexture.dispose();\n\n\t\t}\n\n\t\tif ( renderTarget.isWebGLRenderTargetCube ) {\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\n\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer );\n\n\t\t}\n\n\t\tproperties.remove( renderTarget.texture );\n\t\tproperties.remove( renderTarget );\n\n\t}\n\n\t//\n\n\n\n\tfunction setTexture2D( texture, slot ) {\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\tvar image = texture.image;\n\n\t\t\tif ( image === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is undefined', texture );\n\n\t\t\t} else if ( image.complete === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete', texture );\n\n\t\t\t} else {\n\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\n\n\t}\n\n\tfunction setTextureCube( texture, slot ) {\n\n\t\tvar textureProperties = properties.get( texture );\n\n\t\tif ( texture.image.length === 6 ) {\n\n\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\t\tif ( ! textureProperties.__image__webglTextureCube ) {\n\n\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\t\ttextureProperties.__image__webglTextureCube = _gl.createTexture();\n\n\t\t\t\t\tinfoMemory.textures ++;\n\n\t\t\t\t}\n\n\t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\n\n\t\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\n\t\t\t\tvar isCompressed = ( texture && texture.isCompressedTexture );\n\t\t\t\tvar isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );\n\n\t\t\t\tvar cubeImage = [];\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tif ( ! isCompressed && ! isDataTexture ) {\n\n\t\t\t\t\t\tcubeImage[ i ] = clampToMaxSize( texture.image[ i ], capabilities.maxCubemapSize );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar image = cubeImage[ 0 ],\n\t\t\t\t\tisPowerOfTwoImage = isPowerOfTwo( image ),\n\t\t\t\t\tglFormat = utils.convert( texture.format ),\n\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, isPowerOfTwoImage );\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tif ( ! isCompressed ) {\n\n\t\t\t\t\t\tif ( isDataTexture ) {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvar mipmap, mipmaps = cubeImage[ i ].mipmaps;\n\n\t\t\t\t\t\tfor ( var j = 0, jl = mipmaps.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tmipmap = mipmaps[ j ];\n\n\t\t\t\t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\n\n\t\t\t\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()' );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( textureNeedsGenerateMipmaps( texture, isPowerOfTwoImage ) ) {\n\n\t\t\t\t\t_gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\n\n\t\t\t\t}\n\n\t\t\t\ttextureProperties.__version = texture.version;\n\n\t\t\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t\t\t} else {\n\n\t\t\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__image__webglTextureCube );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction setTextureCubeDynamic( texture, slot ) {\n\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, properties.get( texture ).__webglTexture );\n\n\t}\n\n\tfunction setTextureParameters( textureType, texture, isPowerOfTwoImage ) {\n\n\t\tvar extension;\n\n\t\tif ( isPowerOfTwoImage ) {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, utils.convert( texture.wrapS ) );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, utils.convert( texture.wrapT ) );\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, utils.convert( texture.magFilter ) );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, utils.convert( texture.minFilter ) );\n\n\t\t} else {\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE );\n\n\t\t\tif ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.', texture );\n\n\t\t\t}\n\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterFallback( texture.magFilter ) );\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterFallback( texture.minFilter ) );\n\n\t\t\tif ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.', texture );\n\n\t\t\t}\n\n\t\t}\n\n\t\textension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\tif ( extension ) {\n\n\t\t\tif ( texture.type === FloatType && extensions.get( 'OES_texture_float_linear' ) === null ) return;\n\t\t\tif ( texture.type === HalfFloatType && extensions.get( 'OES_texture_half_float_linear' ) === null ) return;\n\n\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\n\n\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\n\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction uploadTexture( textureProperties, texture, slot ) {\n\n\t\tif ( textureProperties.__webglInit === undefined ) {\n\n\t\t\ttextureProperties.__webglInit = true;\n\n\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\tinfoMemory.textures ++;\n\n\t\t}\n\n\t\tstate.activeTexture( _gl.TEXTURE0 + slot );\n\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\n\n\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\n\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\n\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\n\n\t\tvar image = clampToMaxSize( texture.image, capabilities.maxTextureSize );\n\n\t\tif ( textureNeedsPowerOfTwo( texture ) && isPowerOfTwo( image ) === false ) {\n\n\t\t\timage = makePowerOfTwo( image );\n\n\t\t}\n\n\t\tvar isPowerOfTwoImage = isPowerOfTwo( image ),\n\t\t\tglFormat = utils.convert( texture.format ),\n\t\t\tglType = utils.convert( texture.type );\n\n\t\tsetTextureParameters( _gl.TEXTURE_2D, texture, isPowerOfTwoImage );\n\n\t\tvar mipmap, mipmaps = texture.mipmaps;\n\n\t\tif ( texture.isDepthTexture ) {\n\n\t\t\t// populate depth texture with dummy data\n\n\t\t\tvar internalFormat = _gl.DEPTH_COMPONENT;\n\n\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\tif ( ! _isWebGL2 ) throw new Error( 'Float Depth Texture only supported in WebGL2.0' );\n\t\t\t\tinternalFormat = _gl.DEPTH_COMPONENT32F;\n\n\t\t\t} else if ( _isWebGL2 ) {\n\n\t\t\t\t// WebGL 2.0 requires signed internalformat for glTexImage2D\n\t\t\t\tinternalFormat = _gl.DEPTH_COMPONENT16;\n\n\t\t\t}\n\n\t\t\tif ( texture.format === DepthFormat && internalFormat === _gl.DEPTH_COMPONENT ) {\n\n\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t// DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\tif ( texture.type !== UnsignedShortType && texture.type !== UnsignedIntType ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.' );\n\n\t\t\t\t\ttexture.type = UnsignedShortType;\n\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Depth stencil textures need the DEPTH_STENCIL internal format\n\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\tif ( texture.format === DepthStencilFormat ) {\n\n\t\t\t\tinternalFormat = _gl.DEPTH_STENCIL;\n\n\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\tif ( texture.type !== UnsignedInt248Type ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.' );\n\n\t\t\t\t\ttexture.type = UnsignedInt248Type;\n\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, internalFormat, image.width, image.height, 0, glFormat, glType, null );\n\n\t\t} else if ( texture.isDataTexture ) {\n\n\t\t\t// use manually created mipmaps if available\n\t\t\t// if there are no manual mipmaps\n\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\tif ( mipmaps.length > 0 && isPowerOfTwoImage ) {\n\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\tmipmap = mipmaps[ i ];\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t}\n\n\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, image.width, image.height, 0, glFormat, glType, image.data );\n\n\t\t\t}\n\n\t\t} else if ( texture.isCompressedTexture ) {\n\n\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\n\n\t\t\t\t\tif ( state.getCompressedTextureFormats().indexOf( glFormat ) > - 1 ) {\n\n\t\t\t\t\t\tstate.compressedTexImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// regular Texture (image, video, canvas)\n\n\t\t\t// use manually created mipmaps if available\n\t\t\t// if there are no manual mipmaps\n\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\tif ( mipmaps.length > 0 && isPowerOfTwoImage ) {\n\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\tmipmap = mipmaps[ i ];\n\t\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, i, glFormat, glFormat, glType, mipmap );\n\n\t\t\t\t}\n\n\t\t\t\ttexture.generateMipmaps = false;\n\n\t\t\t} else {\n\n\t\t\t\tstate.texImage2D( _gl.TEXTURE_2D, 0, glFormat, glFormat, glType, image );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, isPowerOfTwoImage ) ) _gl.generateMipmap( _gl.TEXTURE_2D );\n\n\t\ttextureProperties.__version = texture.version;\n\n\t\tif ( texture.onUpdate ) texture.onUpdate( texture );\n\n\t}\n\n\t// Render targets\n\n\t// Setup storage for target texture and bind it to correct framebuffer\n\tfunction setupFrameBufferTexture( framebuffer, renderTarget, attachment, textureTarget ) {\n\n\t\tvar glFormat = utils.convert( renderTarget.texture.format );\n\t\tvar glType = utils.convert( renderTarget.texture.type );\n\t\tstate.texImage2D( textureTarget, 0, glFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\n\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, attachment, textureTarget, properties.get( renderTarget.texture ).__webglTexture, 0 );\n\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t}\n\n\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\tfunction setupRenderBufferStorage( renderbuffer, renderTarget ) {\n\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\n\n\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\n\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_COMPONENT16, renderTarget.width, renderTarget.height );\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\n\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height );\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\n\n\t\t} else {\n\n\t\t\t// FIXME: We don't support !depth !stencil\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.RGBA4, renderTarget.width, renderTarget.height );\n\n\t\t}\n\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\n\n\t}\n\n\t// Setup resources for a Depth Texture for a FBO (needs an extension)\n\tfunction setupDepthTexture( framebuffer, renderTarget ) {\n\n\t\tvar isCube = ( renderTarget && renderTarget.isWebGLRenderTargetCube );\n\t\tif ( isCube ) throw new Error( 'Depth Texture with cube render targets is not supported' );\n\n\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\tif ( ! ( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {\n\n\t\t\tthrow new Error( 'renderTarget.depthTexture must be an instance of THREE.DepthTexture' );\n\n\t\t}\n\n\t\t// upload an empty depth texture with framebuffer size\n\t\tif ( ! properties.get( renderTarget.depthTexture ).__webglTexture ||\n\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\n\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\n\n\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\n\t\t}\n\n\t\tsetTexture2D( renderTarget.depthTexture, 0 );\n\n\t\tvar webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\n\n\t\tif ( renderTarget.depthTexture.format === DepthFormat ) {\n\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\n\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0 );\n\n\t\t} else {\n\n\t\t\tthrow new Error( 'Unknown depthTexture format' );\n\n\t\t}\n\n\t}\n\n\t// Setup GL resources for a non-texture depth buffer\n\tfunction setupDepthRenderbuffer( renderTarget ) {\n\n\t\tvar renderTargetProperties = properties.get( renderTarget );\n\n\t\tvar isCube = ( renderTarget.isWebGLRenderTargetCube === true );\n\n\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\tif ( isCube ) throw new Error( 'target.depthTexture not supported in Cube render targets' );\n\n\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\n\n\t\t} else {\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer );\n\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\n\n\t}\n\n\t// Set up GL resources for the render target\n\tfunction setupRenderTarget( renderTarget ) {\n\n\t\tvar renderTargetProperties = properties.get( renderTarget );\n\t\tvar textureProperties = properties.get( renderTarget.texture );\n\n\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\n\n\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\tinfoMemory.textures ++;\n\n\t\tvar isCube = ( renderTarget.isWebGLRenderTargetCube === true );\n\t\tvar isTargetPowerOfTwo = isPowerOfTwo( renderTarget );\n\n\t\t// Setup framebuffer\n\n\t\tif ( isCube ) {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t}\n\n\t\t// Setup color buffer\n\n\t\tif ( isCube ) {\n\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, renderTarget.texture, isTargetPowerOfTwo );\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i );\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( renderTarget.texture, isTargetPowerOfTwo ) ) _gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\n\t\t\tstate.bindTexture( _gl.TEXTURE_CUBE_MAP, null );\n\n\t\t} else {\n\n\t\t\tstate.bindTexture( _gl.TEXTURE_2D, textureProperties.__webglTexture );\n\t\t\tsetTextureParameters( _gl.TEXTURE_2D, renderTarget.texture, isTargetPowerOfTwo );\n\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_2D );\n\n\t\t\tif ( textureNeedsGenerateMipmaps( renderTarget.texture, isTargetPowerOfTwo ) ) _gl.generateMipmap( _gl.TEXTURE_2D );\n\t\t\tstate.bindTexture( _gl.TEXTURE_2D, null );\n\n\t\t}\n\n\t\t// Setup depth and stencil buffers\n\n\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t}\n\n\t}\n\n\tfunction updateRenderTargetMipmap( renderTarget ) {\n\n\t\tvar texture = renderTarget.texture;\n\t\tvar isTargetPowerOfTwo = isPowerOfTwo( renderTarget );\n\n\t\tif ( textureNeedsGenerateMipmaps( texture, isTargetPowerOfTwo ) ) {\n\n\t\t\tvar target = renderTarget.isWebGLRenderTargetCube ? _gl.TEXTURE_CUBE_MAP : _gl.TEXTURE_2D;\n\t\t\tvar webglTexture = properties.get( texture ).__webglTexture;\n\n\t\t\tstate.bindTexture( target, webglTexture );\n\t\t\t_gl.generateMipmap( target );\n\t\t\tstate.bindTexture( target, null );\n\n\t\t}\n\n\t}\n\n\tthis.setTexture2D = setTexture2D;\n\tthis.setTextureCube = setTextureCube;\n\tthis.setTextureCubeDynamic = setTextureCubeDynamic;\n\tthis.setupRenderTarget = setupRenderTarget;\n\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\n}\n\n/**\n * @author fordacious / fordacious.github.io\n */\n\nfunction WebGLProperties() {\n\n\tvar properties = {};\n\n\tfunction get( object ) {\n\n\t\tvar uuid = object.uuid;\n\t\tvar map = properties[ uuid ];\n\n\t\tif ( map === undefined ) {\n\n\t\t\tmap = {};\n\t\t\tproperties[ uuid ] = map;\n\n\t\t}\n\n\t\treturn map;\n\n\t}\n\n\tfunction remove( object ) {\n\n\t\tdelete properties[ object.uuid ];\n\n\t}\n\n\tfunction clear() {\n\n\t\tproperties = {};\n\n\t}\n\n\treturn {\n\t\tget: get,\n\t\tremove: remove,\n\t\tclear: clear\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLState( gl, extensions, utils ) {\n\n\tfunction ColorBuffer() {\n\n\t\tvar locked = false;\n\n\t\tvar color = new Vector4();\n\t\tvar currentColorMask = null;\n\t\tvar currentColorClear = new Vector4( 0, 0, 0, 0 );\n\n\t\treturn {\n\n\t\t\tsetMask: function ( colorMask ) {\n\n\t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\n\n\t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\n\t\t\t\t\tcurrentColorMask = colorMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( r, g, b, a, premultipliedAlpha ) {\n\n\t\t\t\tif ( premultipliedAlpha === true ) {\n\n\t\t\t\t\tr *= a; g *= a; b *= a;\n\n\t\t\t\t}\n\n\t\t\t\tcolor.set( r, g, b, a );\n\n\t\t\t\tif ( currentColorClear.equals( color ) === false ) {\n\n\t\t\t\t\tgl.clearColor( r, g, b, a );\n\t\t\t\t\tcurrentColorClear.copy( color );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentColorMask = null;\n\t\t\t\tcurrentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction DepthBuffer() {\n\n\t\tvar locked = false;\n\n\t\tvar currentDepthMask = null;\n\t\tvar currentDepthFunc = null;\n\t\tvar currentDepthClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( depthTest ) {\n\n\t\t\t\tif ( depthTest ) {\n\n\t\t\t\t\tenable( gl.DEPTH_TEST );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdisable( gl.DEPTH_TEST );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( depthMask ) {\n\n\t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\n\n\t\t\t\t\tgl.depthMask( depthMask );\n\t\t\t\t\tcurrentDepthMask = depthMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( depthFunc ) {\n\n\t\t\t\tif ( currentDepthFunc !== depthFunc ) {\n\n\t\t\t\t\tif ( depthFunc ) {\n\n\t\t\t\t\t\tswitch ( depthFunc ) {\n\n\t\t\t\t\t\t\tcase NeverDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.NEVER );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase AlwaysDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.ALWAYS );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase LessDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.LESS );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase LessEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase EqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.EQUAL );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase GreaterEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.GEQUAL );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase GreaterDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.GREATER );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase NotEqualDepth:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.NOTEQUAL );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tgl.depthFunc( gl.LEQUAL );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( depth ) {\n\n\t\t\t\tif ( currentDepthClear !== depth ) {\n\n\t\t\t\t\tgl.clearDepth( depth );\n\t\t\t\t\tcurrentDepthClear = depth;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentDepthMask = null;\n\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\tcurrentDepthClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tfunction StencilBuffer() {\n\n\t\tvar locked = false;\n\n\t\tvar currentStencilMask = null;\n\t\tvar currentStencilFunc = null;\n\t\tvar currentStencilRef = null;\n\t\tvar currentStencilFuncMask = null;\n\t\tvar currentStencilFail = null;\n\t\tvar currentStencilZFail = null;\n\t\tvar currentStencilZPass = null;\n\t\tvar currentStencilClear = null;\n\n\t\treturn {\n\n\t\t\tsetTest: function ( stencilTest ) {\n\n\t\t\t\tif ( stencilTest ) {\n\n\t\t\t\t\tenable( gl.STENCIL_TEST );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdisable( gl.STENCIL_TEST );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetMask: function ( stencilMask ) {\n\n\t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\n\n\t\t\t\t\tgl.stencilMask( stencilMask );\n\t\t\t\t\tcurrentStencilMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\n\n\t\t\t\tif ( currentStencilFunc !== stencilFunc ||\n\t\t\t\t     currentStencilRef \t!== stencilRef \t||\n\t\t\t\t     currentStencilFuncMask !== stencilMask ) {\n\n\t\t\t\t\tgl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n\n\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\tcurrentStencilRef = stencilRef;\n\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\t\t\tif ( currentStencilFail\t !== stencilFail \t||\n\t\t\t\t     currentStencilZFail !== stencilZFail ||\n\t\t\t\t     currentStencilZPass !== stencilZPass ) {\n\n\t\t\t\t\tgl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n\n\t\t\t\t\tcurrentStencilFail = stencilFail;\n\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\tlocked = lock;\n\n\t\t\t},\n\n\t\t\tsetClear: function ( stencil ) {\n\n\t\t\t\tif ( currentStencilClear !== stencil ) {\n\n\t\t\t\t\tgl.clearStencil( stencil );\n\t\t\t\t\tcurrentStencilClear = stencil;\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\treset: function () {\n\n\t\t\t\tlocked = false;\n\n\t\t\t\tcurrentStencilMask = null;\n\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\tcurrentStencilRef = null;\n\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\tcurrentStencilFail = null;\n\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\tcurrentStencilClear = null;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t//\n\n\tvar colorBuffer = new ColorBuffer();\n\tvar depthBuffer = new DepthBuffer();\n\tvar stencilBuffer = new StencilBuffer();\n\n\tvar maxVertexAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\tvar newAttributes = new Uint8Array( maxVertexAttributes );\n\tvar enabledAttributes = new Uint8Array( maxVertexAttributes );\n\tvar attributeDivisors = new Uint8Array( maxVertexAttributes );\n\n\tvar capabilities = {};\n\n\tvar compressedTextureFormats = null;\n\n\tvar currentProgram = null;\n\n\tvar currentBlending = null;\n\tvar currentBlendEquation = null;\n\tvar currentBlendSrc = null;\n\tvar currentBlendDst = null;\n\tvar currentBlendEquationAlpha = null;\n\tvar currentBlendSrcAlpha = null;\n\tvar currentBlendDstAlpha = null;\n\tvar currentPremultipledAlpha = false;\n\n\tvar currentFlipSided = null;\n\tvar currentCullFace = null;\n\n\tvar currentLineWidth = null;\n\n\tvar currentPolygonOffsetFactor = null;\n\tvar currentPolygonOffsetUnits = null;\n\n\tvar maxTextures = gl.getParameter( gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS );\n\n\tvar version = parseFloat( /^WebGL\\ ([0-9])/.exec( gl.getParameter( gl.VERSION ) )[ 1 ] );\n\tvar lineWidthAvailable = parseFloat( version ) >= 1.0;\n\n\tvar currentTextureSlot = null;\n\tvar currentBoundTextures = {};\n\n\tvar currentScissor = new Vector4();\n\tvar currentViewport = new Vector4();\n\n\tfunction createTexture( type, target, count ) {\n\n\t\tvar data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\n\t\tvar texture = gl.createTexture();\n\n\t\tgl.bindTexture( type, texture );\n\t\tgl.texParameteri( type, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\n\t\tgl.texParameteri( type, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\n\n\t\tfor ( var i = 0; i < count; i ++ ) {\n\n\t\t\tgl.texImage2D( target + i, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, data );\n\n\t\t}\n\n\t\treturn texture;\n\n\t}\n\n\tvar emptyTextures = {};\n\temptyTextures[ gl.TEXTURE_2D ] = createTexture( gl.TEXTURE_2D, gl.TEXTURE_2D, 1 );\n\temptyTextures[ gl.TEXTURE_CUBE_MAP ] = createTexture( gl.TEXTURE_CUBE_MAP, gl.TEXTURE_CUBE_MAP_POSITIVE_X, 6 );\n\n\t// init\n\n\tcolorBuffer.setClear( 0, 0, 0, 1 );\n\tdepthBuffer.setClear( 1 );\n\tstencilBuffer.setClear( 0 );\n\n\tenable( gl.DEPTH_TEST );\n\tdepthBuffer.setFunc( LessEqualDepth );\n\n\tsetFlipSided( false );\n\tsetCullFace( CullFaceBack );\n\tenable( gl.CULL_FACE );\n\n\tenable( gl.BLEND );\n\tsetBlending( NormalBlending );\n\n\t//\n\n\tfunction initAttributes() {\n\n\t\tfor ( var i = 0, l = newAttributes.length; i < l; i ++ ) {\n\n\t\t\tnewAttributes[ i ] = 0;\n\n\t\t}\n\n\t}\n\n\tfunction enableAttribute( attribute ) {\n\n\t\tnewAttributes[ attribute ] = 1;\n\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t}\n\n\t\tif ( attributeDivisors[ attribute ] !== 0 ) {\n\n\t\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\textension.vertexAttribDivisorANGLE( attribute, 0 );\n\t\t\tattributeDivisors[ attribute ] = 0;\n\n\t\t}\n\n\t}\n\n\tfunction enableAttributeAndDivisor( attribute, meshPerAttribute ) {\n\n\t\tnewAttributes[ attribute ] = 1;\n\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t}\n\n\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\n\n\t\t\tvar extension = extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\textension.vertexAttribDivisorANGLE( attribute, meshPerAttribute );\n\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\n\n\t\t}\n\n\t}\n\n\tfunction disableUnusedAttributes() {\n\n\t\tfor ( var i = 0, l = enabledAttributes.length; i !== l; ++ i ) {\n\n\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\n\n\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction enable( id ) {\n\n\t\tif ( capabilities[ id ] !== true ) {\n\n\t\t\tgl.enable( id );\n\t\t\tcapabilities[ id ] = true;\n\n\t\t}\n\n\t}\n\n\tfunction disable( id ) {\n\n\t\tif ( capabilities[ id ] !== false ) {\n\n\t\t\tgl.disable( id );\n\t\t\tcapabilities[ id ] = false;\n\n\t\t}\n\n\t}\n\n\tfunction getCompressedTextureFormats() {\n\n\t\tif ( compressedTextureFormats === null ) {\n\n\t\t\tcompressedTextureFormats = [];\n\n\t\t\tif ( extensions.get( 'WEBGL_compressed_texture_pvrtc' ) ||\n\t\t\t     extensions.get( 'WEBGL_compressed_texture_s3tc' ) ||\n\t\t\t     extensions.get( 'WEBGL_compressed_texture_etc1' ) ) {\n\n\t\t\t\tvar formats = gl.getParameter( gl.COMPRESSED_TEXTURE_FORMATS );\n\n\t\t\t\tfor ( var i = 0; i < formats.length; i ++ ) {\n\n\t\t\t\t\tcompressedTextureFormats.push( formats[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn compressedTextureFormats;\n\n\t}\n\n\tfunction useProgram( program ) {\n\n\t\tif ( currentProgram !== program ) {\n\n\t\t\tgl.useProgram( program );\n\n\t\t\tcurrentProgram = program;\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\treturn false;\n\n\t}\n\n\tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha ) {\n\n\t\tif ( blending !== NoBlending ) {\n\n\t\t\tenable( gl.BLEND );\n\n\t\t} else {\n\n\t\t\tdisable( gl.BLEND );\n\n\t\t}\n\n\t\tif ( blending !== CustomBlending ) {\n\n\t\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\n\n\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\tcase AdditiveBlending:\n\n\t\t\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE, gl.ONE, gl.ONE );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\t\t\t\t\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase SubtractiveBlending:\n\n\t\t\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ONE_MINUS_SRC_ALPHA );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\t\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.ONE_MINUS_SRC_COLOR );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase MultiplyBlending:\n\n\t\t\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ZERO, gl.SRC_COLOR, gl.ZERO, gl.SRC_ALPHA );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\n\t\t\t\t\t\t\tgl.blendFunc( gl.ZERO, gl.SRC_COLOR );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\n\t\t\t\t\t\t\tgl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tcurrentBlendEquation = null;\n\t\t\tcurrentBlendSrc = null;\n\t\t\tcurrentBlendDst = null;\n\t\t\tcurrentBlendEquationAlpha = null;\n\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\tcurrentBlendDstAlpha = null;\n\n\t\t} else {\n\n\t\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\n\n\t\t\t\tgl.blendEquationSeparate( utils.convert( blendEquation ), utils.convert( blendEquationAlpha ) );\n\n\t\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\n\t\t\t}\n\n\t\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\n\n\t\t\t\tgl.blendFuncSeparate( utils.convert( blendSrc ), utils.convert( blendDst ), utils.convert( blendSrcAlpha ), utils.convert( blendDstAlpha ) );\n\n\t\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\t\tcurrentBlendDst = blendDst;\n\t\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\n\t\t\t}\n\n\t\t}\n\n\t\tcurrentBlending = blending;\n\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\n\t}\n\n\tfunction setMaterial( material ) {\n\n\t\tmaterial.side === DoubleSide\n\t\t\t? disable( gl.CULL_FACE )\n\t\t\t: enable( gl.CULL_FACE );\n\n\t\tsetFlipSided( material.side === BackSide );\n\n\t\tmaterial.transparent === true\n\t\t\t? setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha )\n\t\t\t: setBlending( NoBlending );\n\n\t\tdepthBuffer.setFunc( material.depthFunc );\n\t\tdepthBuffer.setTest( material.depthTest );\n\t\tdepthBuffer.setMask( material.depthWrite );\n\t\tcolorBuffer.setMask( material.colorWrite );\n\n\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n\t}\n\n\t//\n\n\tfunction setFlipSided( flipSided ) {\n\n\t\tif ( currentFlipSided !== flipSided ) {\n\n\t\t\tif ( flipSided ) {\n\n\t\t\t\tgl.frontFace( gl.CW );\n\n\t\t\t} else {\n\n\t\t\t\tgl.frontFace( gl.CCW );\n\n\t\t\t}\n\n\t\t\tcurrentFlipSided = flipSided;\n\n\t\t}\n\n\t}\n\n\tfunction setCullFace( cullFace ) {\n\n\t\tif ( cullFace !== CullFaceNone ) {\n\n\t\t\tenable( gl.CULL_FACE );\n\n\t\t\tif ( cullFace !== currentCullFace ) {\n\n\t\t\t\tif ( cullFace === CullFaceBack ) {\n\n\t\t\t\t\tgl.cullFace( gl.BACK );\n\n\t\t\t\t} else if ( cullFace === CullFaceFront ) {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.cullFace( gl.FRONT_AND_BACK );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.CULL_FACE );\n\n\t\t}\n\n\t\tcurrentCullFace = cullFace;\n\n\t}\n\n\tfunction setLineWidth( width ) {\n\n\t\tif ( width !== currentLineWidth ) {\n\n\t\t\tif ( lineWidthAvailable ) gl.lineWidth( width );\n\n\t\t\tcurrentLineWidth = width;\n\n\t\t}\n\n\t}\n\n\tfunction setPolygonOffset( polygonOffset, factor, units ) {\n\n\t\tif ( polygonOffset ) {\n\n\t\t\tenable( gl.POLYGON_OFFSET_FILL );\n\n\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\n\n\t\t\t\tgl.polygonOffset( factor, units );\n\n\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\tcurrentPolygonOffsetUnits = units;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdisable( gl.POLYGON_OFFSET_FILL );\n\n\t\t}\n\n\t}\n\n\tfunction setScissorTest( scissorTest ) {\n\n\t\tif ( scissorTest ) {\n\n\t\t\tenable( gl.SCISSOR_TEST );\n\n\t\t} else {\n\n\t\t\tdisable( gl.SCISSOR_TEST );\n\n\t\t}\n\n\t}\n\n\t// texture\n\n\tfunction activeTexture( webglSlot ) {\n\n\t\tif ( webglSlot === undefined ) webglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\tgl.activeTexture( webglSlot );\n\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t}\n\n\t}\n\n\tfunction bindTexture( webglType, webglTexture ) {\n\n\t\tif ( currentTextureSlot === null ) {\n\n\t\t\tactiveTexture();\n\n\t\t}\n\n\t\tvar boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\tif ( boundTexture === undefined ) {\n\n\t\t\tboundTexture = { type: undefined, texture: undefined };\n\t\t\tcurrentBoundTextures[ currentTextureSlot ] = boundTexture;\n\n\t\t}\n\n\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n\n\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\n\n\t\t\tboundTexture.type = webglType;\n\t\t\tboundTexture.texture = webglTexture;\n\n\t\t}\n\n\t}\n\n\tfunction compressedTexImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\tfunction texImage2D() {\n\n\t\ttry {\n\n\t\t\tgl.texImage2D.apply( gl, arguments );\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction scissor( scissor ) {\n\n\t\tif ( currentScissor.equals( scissor ) === false ) {\n\n\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n\t\t\tcurrentScissor.copy( scissor );\n\n\t\t}\n\n\t}\n\n\tfunction viewport( viewport ) {\n\n\t\tif ( currentViewport.equals( viewport ) === false ) {\n\n\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n\t\t\tcurrentViewport.copy( viewport );\n\n\t\t}\n\n\t}\n\n\t//\n\n\tfunction reset() {\n\n\t\tfor ( var i = 0; i < enabledAttributes.length; i ++ ) {\n\n\t\t\tif ( enabledAttributes[ i ] === 1 ) {\n\n\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tcapabilities = {};\n\n\t\tcompressedTextureFormats = null;\n\n\t\tcurrentTextureSlot = null;\n\t\tcurrentBoundTextures = {};\n\n\t\tcurrentProgram = null;\n\n\t\tcurrentBlending = null;\n\n\t\tcurrentFlipSided = null;\n\t\tcurrentCullFace = null;\n\n\t\tcolorBuffer.reset();\n\t\tdepthBuffer.reset();\n\t\tstencilBuffer.reset();\n\n\t}\n\n\treturn {\n\n\t\tbuffers: {\n\t\t\tcolor: colorBuffer,\n\t\t\tdepth: depthBuffer,\n\t\t\tstencil: stencilBuffer\n\t\t},\n\n\t\tinitAttributes: initAttributes,\n\t\tenableAttribute: enableAttribute,\n\t\tenableAttributeAndDivisor: enableAttributeAndDivisor,\n\t\tdisableUnusedAttributes: disableUnusedAttributes,\n\t\tenable: enable,\n\t\tdisable: disable,\n\t\tgetCompressedTextureFormats: getCompressedTextureFormats,\n\n\t\tuseProgram: useProgram,\n\n\t\tsetBlending: setBlending,\n\t\tsetMaterial: setMaterial,\n\n\t\tsetFlipSided: setFlipSided,\n\t\tsetCullFace: setCullFace,\n\n\t\tsetLineWidth: setLineWidth,\n\t\tsetPolygonOffset: setPolygonOffset,\n\n\t\tsetScissorTest: setScissorTest,\n\n\t\tactiveTexture: activeTexture,\n\t\tbindTexture: bindTexture,\n\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\ttexImage2D: texImage2D,\n\n\t\tscissor: scissor,\n\t\tviewport: viewport,\n\n\t\treset: reset\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLCapabilities( gl, extensions, parameters ) {\n\n\tvar maxAnisotropy;\n\n\tfunction getMaxAnisotropy() {\n\n\t\tif ( maxAnisotropy !== undefined ) return maxAnisotropy;\n\n\t\tvar extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\tif ( extension !== null ) {\n\n\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n\n\t\t} else {\n\n\t\t\tmaxAnisotropy = 0;\n\n\t\t}\n\n\t\treturn maxAnisotropy;\n\n\t}\n\n\tfunction getMaxPrecision( precision ) {\n\n\t\tif ( precision === 'highp' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.HIGH_FLOAT ).precision > 0 &&\n\t\t\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.HIGH_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'highp';\n\n\t\t\t}\n\n\t\t\tprecision = 'mediump';\n\n\t\t}\n\n\t\tif ( precision === 'mediump' ) {\n\n\t\t\tif ( gl.getShaderPrecisionFormat( gl.VERTEX_SHADER, gl.MEDIUM_FLOAT ).precision > 0 &&\n\t\t\t     gl.getShaderPrecisionFormat( gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT ).precision > 0 ) {\n\n\t\t\t\treturn 'mediump';\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn 'lowp';\n\n\t}\n\n\tvar precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\tvar maxPrecision = getMaxPrecision( precision );\n\n\tif ( maxPrecision !== precision ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\n\t\tprecision = maxPrecision;\n\n\t}\n\n\tvar logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n\n\tvar maxTextures = gl.getParameter( gl.MAX_TEXTURE_IMAGE_UNITS );\n\tvar maxVertexTextures = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\n\tvar maxTextureSize = gl.getParameter( gl.MAX_TEXTURE_SIZE );\n\tvar maxCubemapSize = gl.getParameter( gl.MAX_CUBE_MAP_TEXTURE_SIZE );\n\n\tvar maxAttributes = gl.getParameter( gl.MAX_VERTEX_ATTRIBS );\n\tvar maxVertexUniforms = gl.getParameter( gl.MAX_VERTEX_UNIFORM_VECTORS );\n\tvar maxVaryings = gl.getParameter( gl.MAX_VARYING_VECTORS );\n\tvar maxFragmentUniforms = gl.getParameter( gl.MAX_FRAGMENT_UNIFORM_VECTORS );\n\n\tvar vertexTextures = maxVertexTextures > 0;\n\tvar floatFragmentTextures = !! extensions.get( 'OES_texture_float' );\n\tvar floatVertexTextures = vertexTextures && floatFragmentTextures;\n\n\treturn {\n\n\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\tgetMaxPrecision: getMaxPrecision,\n\n\t\tprecision: precision,\n\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\tmaxTextures: maxTextures,\n\t\tmaxVertexTextures: maxVertexTextures,\n\t\tmaxTextureSize: maxTextureSize,\n\t\tmaxCubemapSize: maxCubemapSize,\n\n\t\tmaxAttributes: maxAttributes,\n\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\tmaxVaryings: maxVaryings,\n\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\n\t\tvertexTextures: vertexTextures,\n\t\tfloatFragmentTextures: floatFragmentTextures,\n\t\tfloatVertexTextures: floatVertexTextures\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author greggman / http://games.greggman.com/\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author tschw\n */\n\nfunction PerspectiveCamera( fov, aspect, near, far ) {\n\n\tCamera.call( this );\n\n\tthis.type = 'PerspectiveCamera';\n\n\tthis.fov = fov !== undefined ? fov : 50;\n\tthis.zoom = 1;\n\n\tthis.near = near !== undefined ? near : 0.1;\n\tthis.far = far !== undefined ? far : 2000;\n\tthis.focus = 10;\n\n\tthis.aspect = aspect !== undefined ? aspect : 1;\n\tthis.view = null;\n\n\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\n\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\n\n\tthis.updateProjectionMatrix();\n\n}\n\nPerspectiveCamera.prototype = Object.assign( Object.create( Camera.prototype ), {\n\n\tconstructor: PerspectiveCamera,\n\n\tisPerspectiveCamera: true,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tCamera.prototype.copy.call( this, source, recursive );\n\n\t\tthis.fov = source.fov;\n\t\tthis.zoom = source.zoom;\n\n\t\tthis.near = source.near;\n\t\tthis.far = source.far;\n\t\tthis.focus = source.focus;\n\n\t\tthis.aspect = source.aspect;\n\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\tthis.filmGauge = source.filmGauge;\n\t\tthis.filmOffset = source.filmOffset;\n\n\t\treturn this;\n\n\t},\n\n\t/**\n\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t *\n\t * The default film gauge is 35, so that the focal length can be specified for\n\t * a 35mm (full frame) camera.\n\t *\n\t * Values for focal length and film gauge must have the same unit.\n\t */\n\tsetFocalLength: function ( focalLength ) {\n\n\t\t// see http://www.bobatkins.com/photography/technical/field_of_view.html\n\t\tvar vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\n\t\tthis.fov = _Math.RAD2DEG * 2 * Math.atan( vExtentSlope );\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\t/**\n\t * Calculates the focal length from the current .fov and .filmGauge.\n\t */\n\tgetFocalLength: function () {\n\n\t\tvar vExtentSlope = Math.tan( _Math.DEG2RAD * 0.5 * this.fov );\n\n\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\n\t},\n\n\tgetEffectiveFOV: function () {\n\n\t\treturn _Math.RAD2DEG * 2 * Math.atan(\n\t\t\tMath.tan( _Math.DEG2RAD * 0.5 * this.fov ) / this.zoom );\n\n\t},\n\n\tgetFilmWidth: function () {\n\n\t\t// film not completely covered in portrait format (aspect < 1)\n\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\n\n\t},\n\n\tgetFilmHeight: function () {\n\n\t\t// film not completely covered in landscape format (aspect > 1)\n\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\n\n\t},\n\n\t/**\n\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t * multi-monitor/multi-machine setups.\n\t *\n\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t * the monitors are in grid like this\n\t *\n\t *   +---+---+---+\n\t *   | A | B | C |\n\t *   +---+---+---+\n\t *   | D | E | F |\n\t *   +---+---+---+\n\t *\n\t * then for each monitor you would call it like this\n\t *\n\t *   var w = 1920;\n\t *   var h = 1080;\n\t *   var fullWidth = w * 3;\n\t *   var fullHeight = h * 2;\n\t *\n\t *   --A--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t *   --B--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t *   --C--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t *   --D--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t *   --E--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t *   --F--\n\t *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t *\n\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t */\n\tsetViewOffset: function ( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\tif ( this.view === null ) {\n\n\t\t\tthis.view = {\n\t\t\t\tenabled: true,\n\t\t\t\tfullWidth: 1,\n\t\t\t\tfullHeight: 1,\n\t\t\t\toffsetX: 0,\n\t\t\t\toffsetY: 0,\n\t\t\t\twidth: 1,\n\t\t\t\theight: 1\n\t\t\t};\n\n\t\t}\n\n\t\tthis.view.enabled = true;\n\t\tthis.view.fullWidth = fullWidth;\n\t\tthis.view.fullHeight = fullHeight;\n\t\tthis.view.offsetX = x;\n\t\tthis.view.offsetY = y;\n\t\tthis.view.width = width;\n\t\tthis.view.height = height;\n\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tclearViewOffset: function () {\n\n\t\tif ( this.view !== null ) {\n\n\t\t\tthis.view.enabled = false;\n\n\t\t}\n\n\t\tthis.updateProjectionMatrix();\n\n\t},\n\n\tupdateProjectionMatrix: function () {\n\n\t\tvar near = this.near,\n\t\t\ttop = near * Math.tan(\n\t\t\t\t_Math.DEG2RAD * 0.5 * this.fov ) / this.zoom,\n\t\t\theight = 2 * top,\n\t\t\twidth = this.aspect * height,\n\t\t\tleft = - 0.5 * width,\n\t\t\tview = this.view;\n\n\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\tvar fullWidth = view.fullWidth,\n\t\t\t\tfullHeight = view.fullHeight;\n\n\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\twidth *= view.width / fullWidth;\n\t\t\theight *= view.height / fullHeight;\n\n\t\t}\n\n\t\tvar skew = this.filmOffset;\n\t\tif ( skew !== 0 ) left += near * skew / this.getFilmWidth();\n\n\t\tthis.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far );\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.fov = this.fov;\n\t\tdata.object.zoom = this.zoom;\n\n\t\tdata.object.near = this.near;\n\t\tdata.object.far = this.far;\n\t\tdata.object.focus = this.focus;\n\n\t\tdata.object.aspect = this.aspect;\n\n\t\tif ( this.view !== null ) data.object.view = Object.assign( {}, this.view );\n\n\t\tdata.object.filmGauge = this.filmGauge;\n\t\tdata.object.filmOffset = this.filmOffset;\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction ArrayCamera( array ) {\n\n\tPerspectiveCamera.call( this );\n\n\tthis.cameras = array || [];\n\n}\n\nArrayCamera.prototype = Object.assign( Object.create( PerspectiveCamera.prototype ), {\n\n\tconstructor: ArrayCamera,\n\n\tisArrayCamera: true\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebVRManager( renderer ) {\n\n\tvar scope = this;\n\n\tvar device = null;\n\tvar frameData = null;\n\n\tif ( typeof window !== 'undefined' && 'VRFrameData' in window ) {\n\n\t\tframeData = new window.VRFrameData();\n\n\t}\n\n\tvar matrixWorldInverse = new Matrix4();\n\n\tvar standingMatrix = new Matrix4();\n\tvar standingMatrixInverse = new Matrix4();\n\n\tvar cameraL = new PerspectiveCamera();\n\tcameraL.bounds = new Vector4( 0.0, 0.0, 0.5, 1.0 );\n\tcameraL.layers.enable( 1 );\n\n\tvar cameraR = new PerspectiveCamera();\n\tcameraR.bounds = new Vector4( 0.5, 0.0, 0.5, 1.0 );\n\tcameraR.layers.enable( 2 );\n\n\tvar cameraVR = new ArrayCamera( [ cameraL, cameraR ] );\n\tcameraVR.layers.enable( 1 );\n\tcameraVR.layers.enable( 2 );\n\n\t//\n\n\tvar currentSize, currentPixelRatio;\n\n\tfunction onVRDisplayPresentChange() {\n\n\t\tif ( device !== null && device.isPresenting ) {\n\n\t\t\tvar eyeParameters = device.getEyeParameters( 'left' );\n\t\t\tvar renderWidth = eyeParameters.renderWidth;\n\t\t\tvar renderHeight = eyeParameters.renderHeight;\n\n\t\t\tcurrentPixelRatio = renderer.getPixelRatio();\n\t\t\tcurrentSize = renderer.getSize();\n\n\t\t\trenderer.setDrawingBufferSize( renderWidth * 2, renderHeight, 1 );\n\n\t\t} else if ( scope.enabled ) {\n\n\t\t\trenderer.setDrawingBufferSize( currentSize.width, currentSize.height, currentPixelRatio );\n\n\t\t}\n\n\t}\n\n\tif ( typeof window !== 'undefined' ) {\n\n\t\twindow.addEventListener( 'vrdisplaypresentchange', onVRDisplayPresentChange, false );\n\n\t}\n\n\t//\n\n\tthis.enabled = false;\n\tthis.standing = false;\n\n\tthis.getDevice = function () {\n\n\t\treturn device;\n\n\t};\n\n\tthis.setDevice = function ( value ) {\n\n\t\tif ( value !== undefined ) device = value;\n\n\t};\n\n\tthis.getCamera = function ( camera ) {\n\n\t\tif ( device === null ) return camera;\n\n\t\tdevice.depthNear = camera.near;\n\t\tdevice.depthFar = camera.far;\n\n\t\tdevice.getFrameData( frameData );\n\n\t\t//\n\n\t\tvar pose = frameData.pose;\n\n\t\tif ( pose.position !== null ) {\n\n\t\t\tcamera.position.fromArray( pose.position );\n\n\t\t} else {\n\n\t\t\tcamera.position.set( 0, 0, 0 );\n\n\t\t}\n\n\t\tif ( pose.orientation !== null ) {\n\n\t\t\tcamera.quaternion.fromArray( pose.orientation );\n\n\t\t}\n\n\t\tcamera.updateMatrixWorld();\n\n\t\tvar stageParameters = device.stageParameters;\n\n\t\tif ( this.standing && stageParameters ) {\n\n\t\t\tstandingMatrix.fromArray( stageParameters.sittingToStandingTransform );\n\t\t\tstandingMatrixInverse.getInverse( standingMatrix );\n\n\t\t\tcamera.matrixWorld.multiply( standingMatrix );\n\t\t\tcamera.matrixWorldInverse.multiply( standingMatrixInverse );\n\n\t\t}\n\n\t\tif ( device.isPresenting === false ) return camera;\n\n\t\t//\n\n\t\tcameraL.near = camera.near;\n\t\tcameraR.near = camera.near;\n\n\t\tcameraL.far = camera.far;\n\t\tcameraR.far = camera.far;\n\n\t\tcameraVR.matrixWorld.copy( camera.matrixWorld );\n\t\tcameraVR.matrixWorldInverse.copy( camera.matrixWorldInverse );\n\n\t\tcameraL.matrixWorldInverse.fromArray( frameData.leftViewMatrix );\n\t\tcameraR.matrixWorldInverse.fromArray( frameData.rightViewMatrix );\n\n\t\tif ( this.standing && stageParameters ) {\n\n\t\t\tcameraL.matrixWorldInverse.multiply( standingMatrixInverse );\n\t\t\tcameraR.matrixWorldInverse.multiply( standingMatrixInverse );\n\n\t\t}\n\n\t\tvar parent = camera.parent;\n\n\t\tif ( parent !== null ) {\n\n\t\t\tmatrixWorldInverse.getInverse( parent.matrixWorld );\n\n\t\t\tcameraL.matrixWorldInverse.multiply( matrixWorldInverse );\n\t\t\tcameraR.matrixWorldInverse.multiply( matrixWorldInverse );\n\n\t\t}\n\n\t\t// envMap and Mirror needs camera.matrixWorld\n\n\t\tcameraL.matrixWorld.getInverse( cameraL.matrixWorldInverse );\n\t\tcameraR.matrixWorld.getInverse( cameraR.matrixWorldInverse );\n\n\t\tcameraL.projectionMatrix.fromArray( frameData.leftProjectionMatrix );\n\t\tcameraR.projectionMatrix.fromArray( frameData.rightProjectionMatrix );\n\n\t\t// HACK @mrdoob\n\t\t// https://github.com/w3c/webvr/issues/203\n\n\t\tcameraVR.projectionMatrix.copy( cameraL.projectionMatrix );\n\n\t\t//\n\n\t\tvar layers = device.getLayers();\n\n\t\tif ( layers.length ) {\n\n\t\t\tvar layer = layers[ 0 ];\n\n\t\t\tif ( layer.leftBounds !== null && layer.leftBounds.length === 4 ) {\n\n\t\t\t\tcameraL.bounds.fromArray( layer.leftBounds );\n\n\t\t\t}\n\n\t\t\tif ( layer.rightBounds !== null && layer.rightBounds.length === 4 ) {\n\n\t\t\t\tcameraR.bounds.fromArray( layer.rightBounds );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn cameraVR;\n\n\t};\n\n\tthis.getStandingMatrix = function () {\n\n\t\treturn standingMatrix;\n\n\t};\n\n\tthis.submitFrame = function () {\n\n\t\tif ( device && device.isPresenting ) device.submitFrame();\n\n\t};\n\n\tthis.dispose = function () {\n\n\t\tif ( typeof window !== 'undefined' ) {\n\n\t\t\twindow.removeEventListener( 'vrdisplaypresentchange', onVRDisplayPresentChange );\n\n\t\t}\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction WebGLExtensions( gl ) {\n\n\tvar extensions = {};\n\n\treturn {\n\n\t\tget: function ( name ) {\n\n\t\t\tif ( extensions[ name ] !== undefined ) {\n\n\t\t\t\treturn extensions[ name ];\n\n\t\t\t}\n\n\t\t\tvar extension;\n\n\t\t\tswitch ( name ) {\n\n\t\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'WEBGL_compressed_texture_etc1':\n\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_etc1' );\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\textension = gl.getExtension( name );\n\n\t\t\t}\n\n\t\t\tif ( extension === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\n\n\t\t\t}\n\n\t\t\textensions[ name ] = extension;\n\n\t\t\treturn extension;\n\n\t\t}\n\n\t};\n\n}\n\n/**\n * @author tschw\n */\n\nfunction WebGLClipping() {\n\n\tvar scope = this,\n\n\t\tglobalState = null,\n\t\tnumGlobalPlanes = 0,\n\t\tlocalClippingEnabled = false,\n\t\trenderingShadows = false,\n\n\t\tplane = new Plane(),\n\t\tviewNormalMatrix = new Matrix3(),\n\n\t\tuniform = { value: null, needsUpdate: false };\n\n\tthis.uniform = uniform;\n\tthis.numPlanes = 0;\n\tthis.numIntersection = 0;\n\n\tthis.init = function ( planes, enableLocalClipping, camera ) {\n\n\t\tvar enabled =\n\t\t\tplanes.length !== 0 ||\n\t\t\tenableLocalClipping ||\n\t\t\t// enable state of previous frame - the clipping code has to\n\t\t\t// run another frame in order to reset the state:\n\t\t\tnumGlobalPlanes !== 0 ||\n\t\t\tlocalClippingEnabled;\n\n\t\tlocalClippingEnabled = enableLocalClipping;\n\n\t\tglobalState = projectPlanes( planes, camera, 0 );\n\t\tnumGlobalPlanes = planes.length;\n\n\t\treturn enabled;\n\n\t};\n\n\tthis.beginShadows = function () {\n\n\t\trenderingShadows = true;\n\t\tprojectPlanes( null );\n\n\t};\n\n\tthis.endShadows = function () {\n\n\t\trenderingShadows = false;\n\t\tresetGlobalState();\n\n\t};\n\n\tthis.setState = function ( planes, clipIntersection, clipShadows, camera, cache, fromCache ) {\n\n\t\tif ( ! localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && ! clipShadows ) {\n\n\t\t\t// there's no local clipping\n\n\t\t\tif ( renderingShadows ) {\n\n\t\t\t\t// there's no global clipping\n\n\t\t\t\tprojectPlanes( null );\n\n\t\t\t} else {\n\n\t\t\t\tresetGlobalState();\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tvar nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\tlGlobal = nGlobal * 4,\n\n\t\t\t\tdstArray = cache.clippingState || null;\n\n\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, fromCache );\n\n\t\t\tfor ( var i = 0; i !== lGlobal; ++ i ) {\n\n\t\t\t\tdstArray[ i ] = globalState[ i ];\n\n\t\t\t}\n\n\t\t\tcache.clippingState = dstArray;\n\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\n\t\t\tthis.numPlanes += nGlobal;\n\n\t\t}\n\n\n\t};\n\n\tfunction resetGlobalState() {\n\n\t\tif ( uniform.value !== globalState ) {\n\n\t\t\tuniform.value = globalState;\n\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\n\t\t}\n\n\t\tscope.numPlanes = numGlobalPlanes;\n\t\tscope.numIntersection = 0;\n\n\t}\n\n\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\n\n\t\tvar nPlanes = planes !== null ? planes.length : 0,\n\t\t\tdstArray = null;\n\n\t\tif ( nPlanes !== 0 ) {\n\n\t\t\tdstArray = uniform.value;\n\n\t\t\tif ( skipTransform !== true || dstArray === null ) {\n\n\t\t\t\tvar flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\n\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\n\n\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\n\n\t\t\t\t\tdstArray = new Float32Array( flatSize );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var i = 0, i4 = dstOffset; i !== nPlanes; ++ i, i4 += 4 ) {\n\n\t\t\t\t\tplane.copy( planes[ i ] ).applyMatrix4( viewMatrix, viewNormalMatrix );\n\n\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\n\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tuniform.value = dstArray;\n\t\t\tuniform.needsUpdate = true;\n\n\t\t}\n\n\t\tscope.numPlanes = nPlanes;\n\n\t\treturn dstArray;\n\n\t}\n\n}\n\n/**\n * @author thespite / http://www.twitter.com/thespite\n */\n\nfunction WebGLUtils( gl, extensions ) {\n\n\tfunction convert( p ) {\n\n\t\tvar extension;\n\n\t\tif ( p === RepeatWrapping ) return gl.REPEAT;\n\t\tif ( p === ClampToEdgeWrapping ) return gl.CLAMP_TO_EDGE;\n\t\tif ( p === MirroredRepeatWrapping ) return gl.MIRRORED_REPEAT;\n\n\t\tif ( p === NearestFilter ) return gl.NEAREST;\n\t\tif ( p === NearestMipMapNearestFilter ) return gl.NEAREST_MIPMAP_NEAREST;\n\t\tif ( p === NearestMipMapLinearFilter ) return gl.NEAREST_MIPMAP_LINEAR;\n\n\t\tif ( p === LinearFilter ) return gl.LINEAR;\n\t\tif ( p === LinearMipMapNearestFilter ) return gl.LINEAR_MIPMAP_NEAREST;\n\t\tif ( p === LinearMipMapLinearFilter ) return gl.LINEAR_MIPMAP_LINEAR;\n\n\t\tif ( p === UnsignedByteType ) return gl.UNSIGNED_BYTE;\n\t\tif ( p === UnsignedShort4444Type ) return gl.UNSIGNED_SHORT_4_4_4_4;\n\t\tif ( p === UnsignedShort5551Type ) return gl.UNSIGNED_SHORT_5_5_5_1;\n\t\tif ( p === UnsignedShort565Type ) return gl.UNSIGNED_SHORT_5_6_5;\n\n\t\tif ( p === ByteType ) return gl.BYTE;\n\t\tif ( p === ShortType ) return gl.SHORT;\n\t\tif ( p === UnsignedShortType ) return gl.UNSIGNED_SHORT;\n\t\tif ( p === IntType ) return gl.INT;\n\t\tif ( p === UnsignedIntType ) return gl.UNSIGNED_INT;\n\t\tif ( p === FloatType ) return gl.FLOAT;\n\n\t\tif ( p === HalfFloatType ) {\n\n\t\t\textension = extensions.get( 'OES_texture_half_float' );\n\n\t\t\tif ( extension !== null ) return extension.HALF_FLOAT_OES;\n\n\t\t}\n\n\t\tif ( p === AlphaFormat ) return gl.ALPHA;\n\t\tif ( p === RGBFormat ) return gl.RGB;\n\t\tif ( p === RGBAFormat ) return gl.RGBA;\n\t\tif ( p === LuminanceFormat ) return gl.LUMINANCE;\n\t\tif ( p === LuminanceAlphaFormat ) return gl.LUMINANCE_ALPHA;\n\t\tif ( p === DepthFormat ) return gl.DEPTH_COMPONENT;\n\t\tif ( p === DepthStencilFormat ) return gl.DEPTH_STENCIL;\n\n\t\tif ( p === AddEquation ) return gl.FUNC_ADD;\n\t\tif ( p === SubtractEquation ) return gl.FUNC_SUBTRACT;\n\t\tif ( p === ReverseSubtractEquation ) return gl.FUNC_REVERSE_SUBTRACT;\n\n\t\tif ( p === ZeroFactor ) return gl.ZERO;\n\t\tif ( p === OneFactor ) return gl.ONE;\n\t\tif ( p === SrcColorFactor ) return gl.SRC_COLOR;\n\t\tif ( p === OneMinusSrcColorFactor ) return gl.ONE_MINUS_SRC_COLOR;\n\t\tif ( p === SrcAlphaFactor ) return gl.SRC_ALPHA;\n\t\tif ( p === OneMinusSrcAlphaFactor ) return gl.ONE_MINUS_SRC_ALPHA;\n\t\tif ( p === DstAlphaFactor ) return gl.DST_ALPHA;\n\t\tif ( p === OneMinusDstAlphaFactor ) return gl.ONE_MINUS_DST_ALPHA;\n\n\t\tif ( p === DstColorFactor ) return gl.DST_COLOR;\n\t\tif ( p === OneMinusDstColorFactor ) return gl.ONE_MINUS_DST_COLOR;\n\t\tif ( p === SrcAlphaSaturateFactor ) return gl.SRC_ALPHA_SATURATE;\n\n\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format ||\n\t\t\tp === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format ||\n\t\t\tp === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === RGB_ETC1_Format ) {\n\n\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc1' );\n\n\t\t\tif ( extension !== null ) return extension.COMPRESSED_RGB_ETC1_WEBGL;\n\n\t\t}\n\n\t\tif ( p === MinEquation || p === MaxEquation ) {\n\n\t\t\textension = extensions.get( 'EXT_blend_minmax' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tif ( p === MinEquation ) return extension.MIN_EXT;\n\t\t\t\tif ( p === MaxEquation ) return extension.MAX_EXT;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( p === UnsignedInt248Type ) {\n\n\t\t\textension = extensions.get( 'WEBGL_depth_texture' );\n\n\t\t\tif ( extension !== null ) return extension.UNSIGNED_INT_24_8_WEBGL;\n\n\t\t}\n\n\t\treturn 0;\n\n\t}\n\n\treturn { convert: convert };\n\n}\n\n/**\n * @author supereggbert / http://www.paulbrunt.co.uk/\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n * @author szimek / https://github.com/szimek/\n * @author tschw\n */\n\nfunction WebGLRenderer( parameters ) {\n\n\tconsole.log( 'THREE.WebGLRenderer', REVISION );\n\n\tparameters = parameters || {};\n\n\tvar _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' ),\n\t\t_context = parameters.context !== undefined ? parameters.context : null,\n\n\t\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false,\n\t\t_depth = parameters.depth !== undefined ? parameters.depth : true,\n\t\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\n\t\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\n\t\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\n\t\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false;\n\n\tvar lightsArray = [];\n\tvar shadowsArray = [];\n\n\tvar currentRenderList = null;\n\n\tvar spritesArray = [];\n\tvar flaresArray = [];\n\n\t// public properties\n\n\tthis.domElement = _canvas;\n\tthis.context = null;\n\n\t// clearing\n\n\tthis.autoClear = true;\n\tthis.autoClearColor = true;\n\tthis.autoClearDepth = true;\n\tthis.autoClearStencil = true;\n\n\t// scene graph\n\n\tthis.sortObjects = true;\n\n\t// user-defined clipping\n\n\tthis.clippingPlanes = [];\n\tthis.localClippingEnabled = false;\n\n\t// physically based shading\n\n\tthis.gammaFactor = 2.0;\t// for backwards compatibility\n\tthis.gammaInput = false;\n\tthis.gammaOutput = false;\n\n\t// physical lights\n\n\tthis.physicallyCorrectLights = false;\n\n\t// tone mapping\n\n\tthis.toneMapping = LinearToneMapping;\n\tthis.toneMappingExposure = 1.0;\n\tthis.toneMappingWhitePoint = 1.0;\n\n\t// morphs\n\n\tthis.maxMorphTargets = 8;\n\tthis.maxMorphNormals = 4;\n\n\t// internal properties\n\n\tvar _this = this,\n\n\t\t_isContextLost = false,\n\n\t\t// internal state cache\n\n\t\t_currentRenderTarget = null,\n\t\t_currentFramebuffer = null,\n\t\t_currentMaterialId = - 1,\n\t\t_currentGeometryProgram = '',\n\n\t\t_currentCamera = null,\n\t\t_currentArrayCamera = null,\n\n\t\t_currentViewport = new Vector4(),\n\t\t_currentScissor = new Vector4(),\n\t\t_currentScissorTest = null,\n\n\t\t//\n\n\t\t_usedTextureUnits = 0,\n\n\t\t//\n\n\t\t_width = _canvas.width,\n\t\t_height = _canvas.height,\n\n\t\t_pixelRatio = 1,\n\n\t\t_viewport = new Vector4( 0, 0, _width, _height ),\n\t\t_scissor = new Vector4( 0, 0, _width, _height ),\n\t\t_scissorTest = false,\n\n\t\t// frustum\n\n\t\t_frustum = new Frustum(),\n\n\t\t// clipping\n\n\t\t_clipping = new WebGLClipping(),\n\t\t_clippingEnabled = false,\n\t\t_localClippingEnabled = false,\n\n\t\t// camera matrices cache\n\n\t\t_projScreenMatrix = new Matrix4(),\n\n\t\t_vector3 = new Vector3(),\n\n\t\t// info\n\n\t\t_infoMemory = {\n\t\t\tgeometries: 0,\n\t\t\ttextures: 0\n\t\t},\n\n\t\t_infoRender = {\n\n\t\t\tframe: 0,\n\t\t\tcalls: 0,\n\t\t\tvertices: 0,\n\t\t\tfaces: 0,\n\t\t\tpoints: 0\n\n\t\t};\n\n\tthis.info = {\n\n\t\trender: _infoRender,\n\t\tmemory: _infoMemory,\n\t\tprograms: null\n\n\t};\n\n\tfunction getTargetPixelRatio() {\n\n\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\n\t}\n\n\t// initialize\n\n\tvar _gl;\n\n\ttry {\n\n\t\tvar contextAttributes = {\n\t\t\talpha: _alpha,\n\t\t\tdepth: _depth,\n\t\t\tstencil: _stencil,\n\t\t\tantialias: _antialias,\n\t\t\tpremultipliedAlpha: _premultipliedAlpha,\n\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer\n\t\t};\n\n\t\t_gl = _context || _canvas.getContext( 'webgl', contextAttributes ) || _canvas.getContext( 'experimental-webgl', contextAttributes );\n\n\t\tif ( _gl === null ) {\n\n\t\t\tif ( _canvas.getContext( 'webgl' ) !== null ) {\n\n\t\t\t\tthrow 'Error creating WebGL context with your selected attributes.';\n\n\t\t\t} else {\n\n\t\t\t\tthrow 'Error creating WebGL context.';\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\t\tif ( _gl.getShaderPrecisionFormat === undefined ) {\n\n\t\t\t_gl.getShaderPrecisionFormat = function () {\n\n\t\t\t\treturn { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };\n\n\t\t\t};\n\n\t\t}\n\n\t\t_canvas.addEventListener( 'webglcontextlost', onContextLost, false );\n\t\t_canvas.addEventListener( 'webglcontextrestored', onContextRestore, false );\n\n\t} catch ( error ) {\n\n\t\tconsole.error( 'THREE.WebGLRenderer: ' + error );\n\n\t}\n\n\tvar extensions, capabilities, state;\n\tvar properties, textures, attributes, geometries, objects, lights;\n\tvar programCache, renderLists;\n\n\tvar background, morphtargets, bufferRenderer, indexedBufferRenderer;\n\tvar flareRenderer, spriteRenderer;\n\n\tvar utils;\n\n\tfunction initGLContext() {\n\n\t\textensions = new WebGLExtensions( _gl );\n\t\textensions.get( 'WEBGL_depth_texture' );\n\t\textensions.get( 'OES_texture_float' );\n\t\textensions.get( 'OES_texture_float_linear' );\n\t\textensions.get( 'OES_texture_half_float' );\n\t\textensions.get( 'OES_texture_half_float_linear' );\n\t\textensions.get( 'OES_standard_derivatives' );\n\t\textensions.get( 'OES_element_index_uint' );\n\t\textensions.get( 'ANGLE_instanced_arrays' );\n\n\t\tutils = new WebGLUtils( _gl, extensions );\n\n\t\tcapabilities = new WebGLCapabilities( _gl, extensions, parameters );\n\n\t\tstate = new WebGLState( _gl, extensions, utils );\n\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ) );\n\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ) );\n\n\t\tproperties = new WebGLProperties();\n\t\ttextures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, _infoMemory );\n\t\tattributes = new WebGLAttributes( _gl );\n\t\tgeometries = new WebGLGeometries( _gl, attributes, _infoMemory );\n\t\tobjects = new WebGLObjects( geometries, _infoRender );\n\t\tmorphtargets = new WebGLMorphtargets( _gl );\n\t\tprogramCache = new WebGLPrograms( _this, extensions, capabilities );\n\t\tlights = new WebGLLights();\n\t\trenderLists = new WebGLRenderLists();\n\n\t\tbackground = new WebGLBackground( _this, state, geometries, _premultipliedAlpha );\n\n\t\tbufferRenderer = new WebGLBufferRenderer( _gl, extensions, _infoRender );\n\t\tindexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, _infoRender );\n\n\t\tflareRenderer = new WebGLFlareRenderer( _this, _gl, state, textures, capabilities );\n\t\tspriteRenderer = new WebGLSpriteRenderer( _this, _gl, state, textures, capabilities );\n\n\t\t_this.info.programs = programCache.programs;\n\n\t\t_this.context = _gl;\n\t\t_this.capabilities = capabilities;\n\t\t_this.extensions = extensions;\n\t\t_this.properties = properties;\n\t\t_this.renderLists = renderLists;\n\t\t_this.state = state;\n\n\t}\n\n\tinitGLContext();\n\n\t// vr\n\n\tvar vr = new WebVRManager( _this );\n\n\tthis.vr = vr;\n\n\t// shadow map\n\n\tvar shadowMap = new WebGLShadowMap( _this, objects, capabilities.maxTextureSize );\n\n\tthis.shadowMap = shadowMap;\n\n\t// API\n\n\tthis.getContext = function () {\n\n\t\treturn _gl;\n\n\t};\n\n\tthis.getContextAttributes = function () {\n\n\t\treturn _gl.getContextAttributes();\n\n\t};\n\n\tthis.forceContextLoss = function () {\n\n\t\tvar extension = extensions.get( 'WEBGL_lose_context' );\n\t\tif ( extension ) extension.loseContext();\n\n\t};\n\n\tthis.forceContextRestore = function () {\n\n\t\tvar extension = extensions.get( 'WEBGL_lose_context' );\n\t\tif ( extension ) extension.restoreContext();\n\n\t};\n\n\tthis.getPixelRatio = function () {\n\n\t\treturn _pixelRatio;\n\n\t};\n\n\tthis.setPixelRatio = function ( value ) {\n\n\t\tif ( value === undefined ) return;\n\n\t\t_pixelRatio = value;\n\n\t\tthis.setSize( _width, _height, false );\n\n\t};\n\n\tthis.getSize = function () {\n\n\t\treturn {\n\t\t\twidth: _width,\n\t\t\theight: _height\n\t\t};\n\n\t};\n\n\tthis.setSize = function ( width, height, updateStyle ) {\n\n\t\tvar device = vr.getDevice();\n\n\t\tif ( device && device.isPresenting ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\t_width = width;\n\t\t_height = height;\n\n\t\t_canvas.width = width * _pixelRatio;\n\t\t_canvas.height = height * _pixelRatio;\n\n\t\tif ( updateStyle !== false ) {\n\n\t\t\t_canvas.style.width = width + 'px';\n\t\t\t_canvas.style.height = height + 'px';\n\n\t\t}\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.getDrawingBufferSize = function () {\n\n\t\treturn {\n\t\t\twidth: _width * _pixelRatio,\n\t\t\theight: _height * _pixelRatio\n\t\t};\n\n\t};\n\n\tthis.setDrawingBufferSize = function ( width, height, pixelRatio ) {\n\n\t\t_width = width;\n\t\t_height = height;\n\n\t\t_pixelRatio = pixelRatio;\n\n\t\t_canvas.width = width * pixelRatio;\n\t\t_canvas.height = height * pixelRatio;\n\n\t\tthis.setViewport( 0, 0, width, height );\n\n\t};\n\n\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\t_viewport.set( x, _height - y - height, width, height );\n\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ) );\n\n\t};\n\n\tthis.setScissor = function ( x, y, width, height ) {\n\n\t\t_scissor.set( x, _height - y - height, width, height );\n\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ) );\n\n\t};\n\n\tthis.setScissorTest = function ( boolean ) {\n\n\t\tstate.setScissorTest( _scissorTest = boolean );\n\n\t};\n\n\t// Clearing\n\n\tthis.getClearColor = function () {\n\n\t\treturn background.getClearColor();\n\n\t};\n\n\tthis.setClearColor = function () {\n\n\t\tbackground.setClearColor.apply( background, arguments );\n\n\t};\n\n\tthis.getClearAlpha = function () {\n\n\t\treturn background.getClearAlpha();\n\n\t};\n\n\tthis.setClearAlpha = function () {\n\n\t\tbackground.setClearAlpha.apply( background, arguments );\n\n\t};\n\n\tthis.clear = function ( color, depth, stencil ) {\n\n\t\tvar bits = 0;\n\n\t\tif ( color === undefined || color ) bits |= _gl.COLOR_BUFFER_BIT;\n\t\tif ( depth === undefined || depth ) bits |= _gl.DEPTH_BUFFER_BIT;\n\t\tif ( stencil === undefined || stencil ) bits |= _gl.STENCIL_BUFFER_BIT;\n\n\t\t_gl.clear( bits );\n\n\t};\n\n\tthis.clearColor = function () {\n\n\t\tthis.clear( true, false, false );\n\n\t};\n\n\tthis.clearDepth = function () {\n\n\t\tthis.clear( false, true, false );\n\n\t};\n\n\tthis.clearStencil = function () {\n\n\t\tthis.clear( false, false, true );\n\n\t};\n\n\tthis.clearTarget = function ( renderTarget, color, depth, stencil ) {\n\n\t\tthis.setRenderTarget( renderTarget );\n\t\tthis.clear( color, depth, stencil );\n\n\t};\n\n\t//\n\n\tthis.dispose = function () {\n\n\t\t_canvas.removeEventListener( 'webglcontextlost', onContextLost, false );\n\t\t_canvas.removeEventListener( 'webglcontextrestored', onContextRestore, false );\n\n\t\trenderLists.dispose();\n\n\t\tvr.dispose();\n\n\t};\n\n\t// Events\n\n\tfunction onContextLost( event ) {\n\n\t\tevent.preventDefault();\n\n\t\tconsole.log( 'THREE.WebGLRenderer: Context Lost.' );\n\n\t\t_isContextLost = true;\n\n\t}\n\n\tfunction onContextRestore( /* event */ ) {\n\n\t\tconsole.log( 'THREE.WebGLRenderer: Context Restored.' );\n\n\t\t_isContextLost = false;\n\n\t\tinitGLContext();\n\n\t}\n\n\tfunction onMaterialDispose( event ) {\n\n\t\tvar material = event.target;\n\n\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\tdeallocateMaterial( material );\n\n\t}\n\n\t// Buffer deallocation\n\n\tfunction deallocateMaterial( material ) {\n\n\t\treleaseMaterialProgramReference( material );\n\n\t\tproperties.remove( material );\n\n\t}\n\n\n\tfunction releaseMaterialProgramReference( material ) {\n\n\t\tvar programInfo = properties.get( material ).program;\n\n\t\tmaterial.program = undefined;\n\n\t\tif ( programInfo !== undefined ) {\n\n\t\t\tprogramCache.releaseProgram( programInfo );\n\n\t\t}\n\n\t}\n\n\t// Buffer rendering\n\n\tfunction renderObjectImmediate( object, program, material ) {\n\n\t\tobject.render( function ( object ) {\n\n\t\t\t_this.renderBufferImmediate( object, program, material );\n\n\t\t} );\n\n\t}\n\n\tthis.renderBufferImmediate = function ( object, program, material ) {\n\n\t\tstate.initAttributes();\n\n\t\tvar buffers = properties.get( object );\n\n\t\tif ( object.hasPositions && ! buffers.position ) buffers.position = _gl.createBuffer();\n\t\tif ( object.hasNormals && ! buffers.normal ) buffers.normal = _gl.createBuffer();\n\t\tif ( object.hasUvs && ! buffers.uv ) buffers.uv = _gl.createBuffer();\n\t\tif ( object.hasColors && ! buffers.color ) buffers.color = _gl.createBuffer();\n\n\t\tvar programAttributes = program.getAttributes();\n\n\t\tif ( object.hasPositions ) {\n\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.position );\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.positionArray, _gl.DYNAMIC_DRAW );\n\n\t\t\tstate.enableAttribute( programAttributes.position );\n\t\t\t_gl.vertexAttribPointer( programAttributes.position, 3, _gl.FLOAT, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasNormals ) {\n\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.normal );\n\n\t\t\tif ( ! material.isMeshPhongMaterial &&\n\t\t\t\t! material.isMeshStandardMaterial &&\n\t\t\t\t! material.isMeshNormalMaterial &&\n\t\t\t\tmaterial.flatShading === true ) {\n\n\t\t\t\tfor ( var i = 0, l = object.count * 3; i < l; i += 9 ) {\n\n\t\t\t\t\tvar array = object.normalArray;\n\n\t\t\t\t\tvar nx = ( array[ i + 0 ] + array[ i + 3 ] + array[ i + 6 ] ) / 3;\n\t\t\t\t\tvar ny = ( array[ i + 1 ] + array[ i + 4 ] + array[ i + 7 ] ) / 3;\n\t\t\t\t\tvar nz = ( array[ i + 2 ] + array[ i + 5 ] + array[ i + 8 ] ) / 3;\n\n\t\t\t\t\tarray[ i + 0 ] = nx;\n\t\t\t\t\tarray[ i + 1 ] = ny;\n\t\t\t\t\tarray[ i + 2 ] = nz;\n\n\t\t\t\t\tarray[ i + 3 ] = nx;\n\t\t\t\t\tarray[ i + 4 ] = ny;\n\t\t\t\t\tarray[ i + 5 ] = nz;\n\n\t\t\t\t\tarray[ i + 6 ] = nx;\n\t\t\t\t\tarray[ i + 7 ] = ny;\n\t\t\t\t\tarray[ i + 8 ] = nz;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.normalArray, _gl.DYNAMIC_DRAW );\n\n\t\t\tstate.enableAttribute( programAttributes.normal );\n\n\t\t\t_gl.vertexAttribPointer( programAttributes.normal, 3, _gl.FLOAT, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasUvs && material.map ) {\n\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.uv );\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.uvArray, _gl.DYNAMIC_DRAW );\n\n\t\t\tstate.enableAttribute( programAttributes.uv );\n\n\t\t\t_gl.vertexAttribPointer( programAttributes.uv, 2, _gl.FLOAT, false, 0, 0 );\n\n\t\t}\n\n\t\tif ( object.hasColors && material.vertexColors !== NoColors ) {\n\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffers.color );\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.colorArray, _gl.DYNAMIC_DRAW );\n\n\t\t\tstate.enableAttribute( programAttributes.color );\n\n\t\t\t_gl.vertexAttribPointer( programAttributes.color, 3, _gl.FLOAT, false, 0, 0 );\n\n\t\t}\n\n\t\tstate.disableUnusedAttributes();\n\n\t\t_gl.drawArrays( _gl.TRIANGLES, 0, object.count );\n\n\t\tobject.count = 0;\n\n\t};\n\n\tthis.renderBufferDirect = function ( camera, fog, geometry, material, object, group ) {\n\n\t\tstate.setMaterial( material );\n\n\t\tvar program = setProgram( camera, fog, material, object );\n\t\tvar geometryProgram = geometry.id + '_' + program.id + '_' + ( material.wireframe === true );\n\n\t\tvar updateBuffers = false;\n\n\t\tif ( geometryProgram !== _currentGeometryProgram ) {\n\n\t\t\t_currentGeometryProgram = geometryProgram;\n\t\t\tupdateBuffers = true;\n\n\t\t}\n\n\t\tif ( object.morphTargetInfluences ) {\n\n\t\t\tmorphtargets.update( object, geometry, material, program );\n\n\t\t\tupdateBuffers = true;\n\n\t\t}\n\n\t\t//\n\n\t\tvar index = geometry.index;\n\t\tvar position = geometry.attributes.position;\n\t\tvar rangeFactor = 1;\n\n\t\tif ( material.wireframe === true ) {\n\n\t\t\tindex = geometries.getWireframeAttribute( geometry );\n\t\t\trangeFactor = 2;\n\n\t\t}\n\n\t\tvar attribute;\n\t\tvar renderer = bufferRenderer;\n\n\t\tif ( index !== null ) {\n\n\t\t\tattribute = attributes.get( index );\n\n\t\t\trenderer = indexedBufferRenderer;\n\t\t\trenderer.setIndex( attribute );\n\n\t\t}\n\n\t\tif ( updateBuffers ) {\n\n\t\t\tsetupVertexAttributes( material, program, geometry );\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\t_gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, attribute.buffer );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tvar dataCount = 0;\n\n\t\tif ( index !== null ) {\n\n\t\t\tdataCount = index.count;\n\n\t\t} else if ( position !== undefined ) {\n\n\t\t\tdataCount = position.count;\n\n\t\t}\n\n\t\tvar rangeStart = geometry.drawRange.start * rangeFactor;\n\t\tvar rangeCount = geometry.drawRange.count * rangeFactor;\n\n\t\tvar groupStart = group !== null ? group.start * rangeFactor : 0;\n\t\tvar groupCount = group !== null ? group.count * rangeFactor : Infinity;\n\n\t\tvar drawStart = Math.max( rangeStart, groupStart );\n\t\tvar drawEnd = Math.min( dataCount, rangeStart + rangeCount, groupStart + groupCount ) - 1;\n\n\t\tvar drawCount = Math.max( 0, drawEnd - drawStart + 1 );\n\n\t\tif ( drawCount === 0 ) return;\n\n\t\t//\n\n\t\tif ( object.isMesh ) {\n\n\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\n\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t} else {\n\n\t\t\t\tswitch ( object.drawMode ) {\n\n\t\t\t\t\tcase TrianglesDrawMode:\n\t\t\t\t\t\trenderer.setMode( _gl.TRIANGLES );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase TriangleStripDrawMode:\n\t\t\t\t\t\trenderer.setMode( _gl.TRIANGLE_STRIP );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase TriangleFanDrawMode:\n\t\t\t\t\t\trenderer.setMode( _gl.TRIANGLE_FAN );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t} else if ( object.isLine ) {\n\n\t\t\tvar lineWidth = material.linewidth;\n\n\t\t\tif ( lineWidth === undefined ) lineWidth = 1; // Not using Line*Material\n\n\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\n\n\t\t\tif ( object.isLineSegments ) {\n\n\t\t\t\trenderer.setMode( _gl.LINES );\n\n\t\t\t} else if ( object.isLineLoop ) {\n\n\t\t\t\trenderer.setMode( _gl.LINE_LOOP );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.setMode( _gl.LINE_STRIP );\n\n\t\t\t}\n\n\t\t} else if ( object.isPoints ) {\n\n\t\t\trenderer.setMode( _gl.POINTS );\n\n\t\t}\n\n\t\tif ( geometry && geometry.isInstancedBufferGeometry ) {\n\n\t\t\tif ( geometry.maxInstancedCount > 0 ) {\n\n\t\t\t\trenderer.renderInstances( geometry, drawStart, drawCount );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\trenderer.render( drawStart, drawCount );\n\n\t\t}\n\n\t};\n\n\tfunction setupVertexAttributes( material, program, geometry, startIndex ) {\n\n\t\tif ( geometry && geometry.isInstancedBufferGeometry ) {\n\n\t\t\tif ( extensions.get( 'ANGLE_instanced_arrays' ) === null ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( startIndex === undefined ) startIndex = 0;\n\n\t\tstate.initAttributes();\n\n\t\tvar geometryAttributes = geometry.attributes;\n\n\t\tvar programAttributes = program.getAttributes();\n\n\t\tvar materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\tfor ( var name in programAttributes ) {\n\n\t\t\tvar programAttribute = programAttributes[ name ];\n\n\t\t\tif ( programAttribute >= 0 ) {\n\n\t\t\t\tvar geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\tif ( geometryAttribute !== undefined ) {\n\n\t\t\t\t\tvar normalized = geometryAttribute.normalized;\n\t\t\t\t\tvar size = geometryAttribute.itemSize;\n\n\t\t\t\t\tvar attribute = attributes.get( geometryAttribute );\n\n\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\tif ( attribute === undefined ) continue;\n\n\t\t\t\t\tvar buffer = attribute.buffer;\n\t\t\t\t\tvar type = attribute.type;\n\t\t\t\t\tvar bytesPerElement = attribute.bytesPerElement;\n\n\t\t\t\t\tif ( geometryAttribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\tvar data = geometryAttribute.data;\n\t\t\t\t\t\tvar stride = data.stride;\n\t\t\t\t\t\tvar offset = geometryAttribute.offset;\n\n\t\t\t\t\t\tif ( data && data.isInstancedInterleavedBuffer ) {\n\n\t\t\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute, data.meshPerAttribute );\n\n\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = data.meshPerAttribute * data.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.enableAttribute( programAttribute );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\n\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, type, normalized, stride * bytesPerElement, ( startIndex * stride + offset ) * bytesPerElement );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( geometryAttribute.isInstancedBufferAttribute ) {\n\n\t\t\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute, geometryAttribute.meshPerAttribute );\n\n\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\n\n\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.enableAttribute( programAttribute );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, buffer );\n\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, type, normalized, 0, startIndex * size * bytesPerElement );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\n\n\t\t\t\t\tvar value = materialDefaultAttributeValues[ name ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\tswitch ( value.length ) {\n\n\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\t_gl.vertexAttrib2fv( programAttribute, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\t_gl.vertexAttrib3fv( programAttribute, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\t_gl.vertexAttrib4fv( programAttribute, value );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t_gl.vertexAttrib1fv( programAttribute, value );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.disableUnusedAttributes();\n\n\t}\n\n\t// Compile\n\n\tthis.compile = function ( scene, camera ) {\n\n\t\tlightsArray.length = 0;\n\t\tshadowsArray.length = 0;\n\n\t\tscene.traverse( function ( object ) {\n\n\t\t\tif ( object.isLight ) {\n\n\t\t\t\tlightsArray.push( object );\n\n\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\tshadowsArray.push( object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t\tlights.setup( lightsArray, shadowsArray, camera );\n\n\t\tscene.traverse( function ( object ) {\n\n\t\t\tif ( object.material ) {\n\n\t\t\t\tif ( Array.isArray( object.material ) ) {\n\n\t\t\t\t\tfor ( var i = 0; i < object.material.length; i ++ ) {\n\n\t\t\t\t\t\tinitMaterial( object.material[ i ], scene.fog, object );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tinitMaterial( object.material, scene.fog, object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} );\n\n\t};\n\n\t// Animation Loop\n\n\tvar isAnimating = false;\n\tvar onAnimationFrame = null;\n\n\tfunction start() {\n\n\t\tif ( isAnimating ) return;\n\n\t\tvar device = vr.getDevice();\n\t\t\n\t\tif ( device && device.isPresenting ) {\n\n\t\t\tdevice.requestAnimationFrame( loop );\n\n\t\t} else {\n\n\t\t\twindow.requestAnimationFrame( loop );\n\n\t\t}\n\n\t\tisAnimating = true;\n\n\t}\n\n\tfunction loop( time ) {\n\n\t\tif ( onAnimationFrame !== null ) onAnimationFrame( time );\n\n\t\tvar device = vr.getDevice();\n\t\t\n\t\tif ( device && device.isPresenting ) {\n\n\t\t\tdevice.requestAnimationFrame( loop );\n\n\t\t} else {\n\n\t\t\twindow.requestAnimationFrame( loop );\n\n\t\t}\n\n\t}\n\n\tthis.animate = function ( callback ) {\n\n\t\tonAnimationFrame = callback;\n\t\tstart();\n\n\t};\n\n\t// Rendering\n\n\tthis.render = function ( scene, camera, renderTarget, forceClear ) {\n\n\t\tif ( ! ( camera && camera.isCamera ) ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( _isContextLost ) return;\n\n\t\t// reset caching for this frame\n\n\t\t_currentGeometryProgram = '';\n\t\t_currentMaterialId = - 1;\n\t\t_currentCamera = null;\n\n\t\t// update scene graph\n\n\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\n\n\t\t// update camera matrices and frustum\n\n\t\tif ( camera.parent === null ) camera.updateMatrixWorld();\n\n\t\tif ( vr.enabled ) {\n\n\t\t\tcamera = vr.getCamera( camera );\n\n\t\t}\n\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t_frustum.setFromMatrix( _projScreenMatrix );\n\n\t\tlightsArray.length = 0;\n\t\tshadowsArray.length = 0;\n\n\t\tspritesArray.length = 0;\n\t\tflaresArray.length = 0;\n\n\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t_clippingEnabled = _clipping.init( this.clippingPlanes, _localClippingEnabled, camera );\n\n\t\tcurrentRenderList = renderLists.get( scene, camera );\n\t\tcurrentRenderList.init();\n\n\t\tprojectObject( scene, camera, _this.sortObjects );\n\n\t\tif ( _this.sortObjects === true ) {\n\n\t\t\tcurrentRenderList.sort();\n\n\t\t}\n\n\t\t//\n\n\t\tif ( _clippingEnabled ) _clipping.beginShadows();\n\n\t\tshadowMap.render( shadowsArray, scene, camera );\n\n\t\tlights.setup( lightsArray, shadowsArray, camera );\n\n\t\tif ( _clippingEnabled ) _clipping.endShadows();\n\n\t\t//\n\n\t\t_infoRender.frame ++;\n\t\t_infoRender.calls = 0;\n\t\t_infoRender.vertices = 0;\n\t\t_infoRender.faces = 0;\n\t\t_infoRender.points = 0;\n\n\t\tif ( renderTarget === undefined ) {\n\n\t\t\trenderTarget = null;\n\n\t\t}\n\n\t\tthis.setRenderTarget( renderTarget );\n\n\t\t//\n\n\t\tbackground.render( currentRenderList, scene, camera, forceClear );\n\n\t\t// render scene\n\n\t\tvar opaqueObjects = currentRenderList.opaque;\n\t\tvar transparentObjects = currentRenderList.transparent;\n\n\t\tif ( scene.overrideMaterial ) {\n\n\t\t\tvar overrideMaterial = scene.overrideMaterial;\n\n\t\t\tif ( opaqueObjects.length ) renderObjects( opaqueObjects, scene, camera, overrideMaterial );\n\t\t\tif ( transparentObjects.length ) renderObjects( transparentObjects, scene, camera, overrideMaterial );\n\n\t\t} else {\n\n\t\t\t// opaque pass (front-to-back order)\n\n\t\t\tif ( opaqueObjects.length ) renderObjects( opaqueObjects, scene, camera );\n\n\t\t\t// transparent pass (back-to-front order)\n\n\t\t\tif ( transparentObjects.length ) renderObjects( transparentObjects, scene, camera );\n\n\t\t}\n\n\t\t// custom renderers\n\n\t\tspriteRenderer.render( spritesArray, scene, camera );\n\t\tflareRenderer.render( flaresArray, scene, camera, _currentViewport );\n\n\t\t// Generate mipmap if we're using any kind of mipmap filtering\n\n\t\tif ( renderTarget ) {\n\n\t\t\ttextures.updateRenderTargetMipmap( renderTarget );\n\n\t\t}\n\n\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\tstate.buffers.depth.setTest( true );\n\t\tstate.buffers.depth.setMask( true );\n\t\tstate.buffers.color.setMask( true );\n\n\t\tstate.setPolygonOffset( false );\n\n\t\tif ( vr.enabled ) {\n\n\t\t\tvr.submitFrame();\n\n\t\t}\n\n\t\t// _gl.finish();\n\n\t};\n\n\t/*\n\t// TODO Duplicated code (Frustum)\n\n\tvar _sphere = new Sphere();\n\n\tfunction isObjectViewable( object ) {\n\n\t\tvar geometry = object.geometry;\n\n\t\tif ( geometry.boundingSphere === null )\n\t\t\tgeometry.computeBoundingSphere();\n\n\t\t_sphere.copy( geometry.boundingSphere ).\n\t\tapplyMatrix4( object.matrixWorld );\n\n\t\treturn isSphereViewable( _sphere );\n\n\t}\n\n\tfunction isSpriteViewable( sprite ) {\n\n\t\t_sphere.center.set( 0, 0, 0 );\n\t\t_sphere.radius = 0.7071067811865476;\n\t\t_sphere.applyMatrix4( sprite.matrixWorld );\n\n\t\treturn isSphereViewable( _sphere );\n\n\t}\n\n\tfunction isSphereViewable( sphere ) {\n\n\t\tif ( ! _frustum.intersectsSphere( sphere ) ) return false;\n\n\t\tvar numPlanes = _clipping.numPlanes;\n\n\t\tif ( numPlanes === 0 ) return true;\n\n\t\tvar planes = _this.clippingPlanes,\n\n\t\t\tcenter = sphere.center,\n\t\t\tnegRad = - sphere.radius,\n\t\t\ti = 0;\n\n\t\tdo {\n\n\t\t\t// out when deeper than radius in the negative halfspace\n\t\t\tif ( planes[ i ].distanceToPoint( center ) < negRad ) return false;\n\n\t\t} while ( ++ i !== numPlanes );\n\n\t\treturn true;\n\n\t}\n\t*/\n\n\tfunction projectObject( object, camera, sortObjects ) {\n\n\t\tif ( object.visible === false ) return;\n\n\t\tvar visible = object.layers.test( camera.layers );\n\n\t\tif ( visible ) {\n\n\t\t\tif ( object.isLight ) {\n\n\t\t\t\tlightsArray.push( object );\n\n\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\tshadowsArray.push( object );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {\n\n\t\t\t\t\tspritesArray.push( object );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isLensFlare ) {\n\n\t\t\t\tflaresArray.push( object );\n\n\t\t\t} else if ( object.isImmediateRenderObject ) {\n\n\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t}\n\n\t\t\t\tcurrentRenderList.push( object, null, object.material, _vector3.z, null );\n\n\t\t\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\n\n\t\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\t\tobject.skeleton.update();\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {\n\n\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar geometry = objects.update( object );\n\t\t\t\t\tvar material = object.material;\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tvar groups = geometry.groups;\n\n\t\t\t\t\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tvar group = groups[ i ];\n\t\t\t\t\t\t\tvar groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, groupMaterial, _vector3.z, group );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, _vector3.z, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar children = object.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tprojectObject( children[ i ], camera, sortObjects );\n\n\t\t}\n\n\t}\n\n\tfunction renderObjects( renderList, scene, camera, overrideMaterial ) {\n\n\t\tfor ( var i = 0, l = renderList.length; i < l; i ++ ) {\n\n\t\t\tvar renderItem = renderList[ i ];\n\n\t\t\tvar object = renderItem.object;\n\t\t\tvar geometry = renderItem.geometry;\n\t\t\tvar material = overrideMaterial === undefined ? renderItem.material : overrideMaterial;\n\t\t\tvar group = renderItem.group;\n\n\t\t\tif ( camera.isArrayCamera ) {\n\n\t\t\t\t_currentArrayCamera = camera;\n\n\t\t\t\tvar cameras = camera.cameras;\n\n\t\t\t\tfor ( var j = 0, jl = cameras.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar camera2 = cameras[ j ];\n\n\t\t\t\t\tif ( object.layers.test( camera2.layers ) ) {\n\n\t\t\t\t\t\tvar bounds = camera2.bounds;\n\n\t\t\t\t\t\tvar x = bounds.x * _width;\n\t\t\t\t\t\tvar y = bounds.y * _height;\n\t\t\t\t\t\tvar width = bounds.z * _width;\n\t\t\t\t\t\tvar height = bounds.w * _height;\n\n\t\t\t\t\t\tstate.viewport( _currentViewport.set( x, y, width, height ).multiplyScalar( _pixelRatio ) );\n\n\t\t\t\t\t\trenderObject( object, scene, camera2, geometry, material, group );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_currentArrayCamera = null;\n\n\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction renderObject( object, scene, camera, geometry, material, group ) {\n\n\t\tobject.onBeforeRender( _this, scene, camera, geometry, material, group );\n\n\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\n\n\t\tif ( object.isImmediateRenderObject ) {\n\n\t\t\tstate.setMaterial( material );\n\n\t\t\tvar program = setProgram( camera, scene.fog, material, object );\n\n\t\t\t_currentGeometryProgram = '';\n\n\t\t\trenderObjectImmediate( object, program, material );\n\n\t\t} else {\n\n\t\t\t_this.renderBufferDirect( camera, scene.fog, geometry, material, object, group );\n\n\t\t}\n\n\t\tobject.onAfterRender( _this, scene, camera, geometry, material, group );\n\n\t}\n\n\tfunction initMaterial( material, fog, object ) {\n\n\t\tvar materialProperties = properties.get( material );\n\n\t\tvar parameters = programCache.getParameters(\n\t\t\tmaterial, lights.state, shadowsArray, fog, _clipping.numPlanes, _clipping.numIntersection, object );\n\n\t\tvar code = programCache.getProgramCode( material, parameters );\n\n\t\tvar program = materialProperties.program;\n\t\tvar programChange = true;\n\n\t\tif ( program === undefined ) {\n\n\t\t\t// new material\n\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t} else if ( program.code !== code ) {\n\n\t\t\t// changed glsl or parameters\n\t\t\treleaseMaterialProgramReference( material );\n\n\t\t} else if ( parameters.shaderID !== undefined ) {\n\n\t\t\t// same glsl and uniform list\n\t\t\treturn;\n\n\t\t} else {\n\n\t\t\t// only rebuild uniform list\n\t\t\tprogramChange = false;\n\n\t\t}\n\n\t\tif ( programChange ) {\n\n\t\t\tif ( parameters.shaderID ) {\n\n\t\t\t\tvar shader = ShaderLib[ parameters.shaderID ];\n\n\t\t\t\tmaterialProperties.shader = {\n\t\t\t\t\tname: material.type,\n\t\t\t\t\tuniforms: UniformsUtils.clone( shader.uniforms ),\n\t\t\t\t\tvertexShader: shader.vertexShader,\n\t\t\t\t\tfragmentShader: shader.fragmentShader\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\tmaterialProperties.shader = {\n\t\t\t\t\tname: material.type,\n\t\t\t\t\tuniforms: material.uniforms,\n\t\t\t\t\tvertexShader: material.vertexShader,\n\t\t\t\t\tfragmentShader: material.fragmentShader\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tmaterial.onBeforeCompile( materialProperties.shader );\n\n\t\t\tprogram = programCache.acquireProgram( material, materialProperties.shader, parameters, code );\n\n\t\t\tmaterialProperties.program = program;\n\t\t\tmaterial.program = program;\n\n\t\t}\n\n\t\tvar programAttributes = program.getAttributes();\n\n\t\tif ( material.morphTargets ) {\n\n\t\t\tmaterial.numSupportedMorphTargets = 0;\n\n\t\t\tfor ( var i = 0; i < _this.maxMorphTargets; i ++ ) {\n\n\t\t\t\tif ( programAttributes[ 'morphTarget' + i ] >= 0 ) {\n\n\t\t\t\t\tmaterial.numSupportedMorphTargets ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.morphNormals ) {\n\n\t\t\tmaterial.numSupportedMorphNormals = 0;\n\n\t\t\tfor ( var i = 0; i < _this.maxMorphNormals; i ++ ) {\n\n\t\t\t\tif ( programAttributes[ 'morphNormal' + i ] >= 0 ) {\n\n\t\t\t\t\tmaterial.numSupportedMorphNormals ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar uniforms = materialProperties.shader.uniforms;\n\n\t\tif ( ! material.isShaderMaterial &&\n\t\t\t! material.isRawShaderMaterial ||\n\t\t\tmaterial.clipping === true ) {\n\n\t\t\tmaterialProperties.numClippingPlanes = _clipping.numPlanes;\n\t\t\tmaterialProperties.numIntersection = _clipping.numIntersection;\n\t\t\tuniforms.clippingPlanes = _clipping.uniform;\n\n\t\t}\n\n\t\tmaterialProperties.fog = fog;\n\n\t\t// store the light setup it was created for\n\n\t\tmaterialProperties.lightsHash = lights.state.hash;\n\n\t\tif ( material.lights ) {\n\n\t\t\t// wire up the material to this renderer's lighting state\n\n\t\t\tuniforms.ambientLightColor.value = lights.state.ambient;\n\t\t\tuniforms.directionalLights.value = lights.state.directional;\n\t\t\tuniforms.spotLights.value = lights.state.spot;\n\t\t\tuniforms.rectAreaLights.value = lights.state.rectArea;\n\t\t\tuniforms.pointLights.value = lights.state.point;\n\t\t\tuniforms.hemisphereLights.value = lights.state.hemi;\n\n\t\t\tuniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n\t\t\tuniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n\t\t\tuniforms.spotShadowMap.value = lights.state.spotShadowMap;\n\t\t\tuniforms.spotShadowMatrix.value = lights.state.spotShadowMatrix;\n\t\t\tuniforms.pointShadowMap.value = lights.state.pointShadowMap;\n\t\t\tuniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;\n\t\t\t// TODO (abelnation): add area lights shadow info to uniforms\n\n\t\t}\n\n\t\tvar progUniforms = materialProperties.program.getUniforms(),\n\t\t\tuniformsList =\n\t\t\t\tWebGLUniforms.seqWithValue( progUniforms.seq, uniforms );\n\n\t\tmaterialProperties.uniformsList = uniformsList;\n\n\t}\n\n\tfunction setProgram( camera, fog, material, object ) {\n\n\t\t_usedTextureUnits = 0;\n\n\t\tvar materialProperties = properties.get( material );\n\n\t\tif ( _clippingEnabled ) {\n\n\t\t\tif ( _localClippingEnabled || camera !== _currentCamera ) {\n\n\t\t\t\tvar useCache =\n\t\t\t\t\tcamera === _currentCamera &&\n\t\t\t\t\tmaterial.id === _currentMaterialId;\n\n\t\t\t\t// we might want to call this function with some ClippingGroup\n\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t// (#8465, #8379)\n\t\t\t\t_clipping.setState(\n\t\t\t\t\tmaterial.clippingPlanes, material.clipIntersection, material.clipShadows,\n\t\t\t\t\tcamera, materialProperties, useCache );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.needsUpdate === false ) {\n\n\t\t\tif ( materialProperties.program === undefined ) {\n\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t} else if ( material.fog && materialProperties.fog !== fog ) {\n\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t} else if ( material.lights && materialProperties.lightsHash !== lights.state.hash ) {\n\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t} else if ( materialProperties.numClippingPlanes !== undefined &&\n\t\t\t\t( materialProperties.numClippingPlanes !== _clipping.numPlanes ||\n\t\t\t\tmaterialProperties.numIntersection !== _clipping.numIntersection ) ) {\n\n\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( material.needsUpdate ) {\n\n\t\t\tinitMaterial( material, fog, object );\n\t\t\tmaterial.needsUpdate = false;\n\n\t\t}\n\n\t\tvar refreshProgram = false;\n\t\tvar refreshMaterial = false;\n\t\tvar refreshLights = false;\n\n\t\tvar program = materialProperties.program,\n\t\t\tp_uniforms = program.getUniforms(),\n\t\t\tm_uniforms = materialProperties.shader.uniforms;\n\n\t\tif ( state.useProgram( program.program ) ) {\n\n\t\t\trefreshProgram = true;\n\t\t\trefreshMaterial = true;\n\t\t\trefreshLights = true;\n\n\t\t}\n\n\t\tif ( material.id !== _currentMaterialId ) {\n\n\t\t\t_currentMaterialId = material.id;\n\n\t\t\trefreshMaterial = true;\n\n\t\t}\n\n\t\tif ( refreshProgram || camera !== _currentCamera ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );\n\n\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\n\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\n\n\t\t\t}\n\n\t\t\t// Avoid unneeded uniform updates per ArrayCamera's sub-camera\n\n\t\t\tif ( _currentCamera !== ( _currentArrayCamera || camera ) ) {\n\n\t\t\t\t_currentCamera = ( _currentArrayCamera || camera );\n\n\t\t\t\t// lighting uniforms depend on the camera so enforce an update\n\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\n\t\t\t\trefreshLights = true;\t\t// remains set until update done\n\n\t\t\t}\n\n\t\t\t// load material specific uniforms\n\t\t\t// (shader material also gets them for the sake of genericity)\n\n\t\t\tif ( material.isShaderMaterial ||\n\t\t\t\tmaterial.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.envMap ) {\n\n\t\t\t\tvar uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\tif ( uCamPos !== undefined ) {\n\n\t\t\t\t\tuCamPos.setValue( _gl,\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\tmaterial.isShaderMaterial ||\n\t\t\t\tmaterial.skinning ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// skinning uniforms must be set even if material didn't change\n\t\t// auto-setting of texture unit for bone texture must go before other textures\n\t\t// not sure why, but otherwise weird things happen\n\n\t\tif ( material.skinning ) {\n\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\n\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\n\n\t\t\tvar skeleton = object.skeleton;\n\n\t\t\tif ( skeleton ) {\n\n\t\t\t\tvar bones = skeleton.bones;\n\n\t\t\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\t\t\tif ( skeleton.boneTexture === undefined ) {\n\n\t\t\t\t\t\t// layout (1 matrix = 4 pixels)\n\t\t\t\t\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t\t\t\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n\t\t\t\t\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n\t\t\t\t\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n\t\t\t\t\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\n\n\t\t\t\t\t\tvar size = Math.sqrt( bones.length * 4 ); // 4 pixels needed for 1 matrix\n\t\t\t\t\t\tsize = _Math.ceilPowerOfTwo( size );\n\t\t\t\t\t\tsize = Math.max( size, 4 );\n\n\t\t\t\t\t\tvar boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\t\t\t\t\tboneMatrices.set( skeleton.boneMatrices ); // copy current values\n\n\t\t\t\t\t\tvar boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );\n\n\t\t\t\t\t\tskeleton.boneMatrices = boneMatrices;\n\t\t\t\t\t\tskeleton.boneTexture = boneTexture;\n\t\t\t\t\t\tskeleton.boneTextureSize = size;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture );\n\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTextureSize', skeleton.boneTextureSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tp_uniforms.setOptional( _gl, skeleton, 'boneMatrices' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( refreshMaterial ) {\n\n\t\t\tp_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );\n\t\t\tp_uniforms.setValue( _gl, 'toneMappingWhitePoint', _this.toneMappingWhitePoint );\n\n\t\t\tif ( material.lights ) {\n\n\t\t\t\t// the current material requires lighting info\n\n\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t// values\n\t\t\t\t//\n\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t// the GL state when required\n\n\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\n\n\t\t\t}\n\n\t\t\t// refresh uniforms common to several materials\n\n\t\t\tif ( fog && material.fog ) {\n\n\t\t\t\trefreshUniformsFog( m_uniforms, fog );\n\n\t\t\t}\n\n\t\t\tif ( material.isMeshBasicMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshLambertMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\trefreshUniformsLambert( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshPhongMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n\t\t\t\tif ( material.isMeshToonMaterial ) {\n\n\t\t\t\t\trefreshUniformsToon( m_uniforms, material );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trefreshUniformsPhong( m_uniforms, material );\n\n\t\t\t\t}\n\n\t\t\t} else if ( material.isMeshStandardMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n\t\t\t\tif ( material.isMeshPhysicalMaterial ) {\n\n\t\t\t\t\trefreshUniformsPhysical( m_uniforms, material );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trefreshUniformsStandard( m_uniforms, material );\n\n\t\t\t\t}\n\n\t\t\t} else if ( material.isMeshDepthMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\trefreshUniformsDepth( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshDistanceMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\trefreshUniformsDistance( m_uniforms, material );\n\n\t\t\t} else if ( material.isMeshNormalMaterial ) {\n\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\trefreshUniformsNormal( m_uniforms, material );\n\n\t\t\t} else if ( material.isLineBasicMaterial ) {\n\n\t\t\t\trefreshUniformsLine( m_uniforms, material );\n\n\t\t\t\tif ( material.isLineDashedMaterial ) {\n\n\t\t\t\t\trefreshUniformsDash( m_uniforms, material );\n\n\t\t\t\t}\n\n\t\t\t} else if ( material.isPointsMaterial ) {\n\n\t\t\t\trefreshUniformsPoints( m_uniforms, material );\n\n\t\t\t} else if ( material.isShadowMaterial ) {\n\n\t\t\t\tm_uniforms.color.value = material.color;\n\t\t\t\tm_uniforms.opacity.value = material.opacity;\n\n\t\t\t}\n\n\t\t\t// RectAreaLight Texture\n\t\t\t// TODO (mrdoob): Find a nicer implementation\n\n\t\t\tif ( m_uniforms.ltcMat !== undefined ) m_uniforms.ltcMat.value = UniformsLib.LTC_MAT_TEXTURE;\n\t\t\tif ( m_uniforms.ltcMag !== undefined ) m_uniforms.ltcMag.value = UniformsLib.LTC_MAG_TEXTURE;\n\n\t\t\tWebGLUniforms.upload(\n\t\t\t\t_gl, materialProperties.uniformsList, m_uniforms, _this );\n\n\t\t}\n\n\n\t\t// common matrices\n\n\t\tp_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );\n\t\tp_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );\n\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\n\n\t\treturn program;\n\n\t}\n\n\t// Uniforms (refresh uniforms objects)\n\n\tfunction refreshUniformsCommon( uniforms, material ) {\n\n\t\tuniforms.opacity.value = material.opacity;\n\n\t\tif ( material.color ) {\n\n\t\t\tuniforms.diffuse.value = material.color;\n\n\t\t}\n\n\t\tif ( material.emissive ) {\n\n\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t}\n\n\t\tif ( material.map ) {\n\n\t\t\tuniforms.map.value = material.map;\n\n\t\t}\n\n\t\tif ( material.alphaMap ) {\n\n\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t}\n\n\t\tif ( material.specularMap ) {\n\n\t\t\tuniforms.specularMap.value = material.specularMap;\n\n\t\t}\n\n\t\tif ( material.envMap ) {\n\n\t\t\tuniforms.envMap.value = material.envMap;\n\n\t\t\t// don't flip CubeTexture envMaps, flip everything else:\n\t\t\t//  WebGLRenderTargetCube will be flipped for backwards compatibility\n\t\t\t//  WebGLRenderTargetCube.texture will be flipped because it's a Texture and NOT a CubeTexture\n\t\t\t// this check must be handled differently, or removed entirely, if WebGLRenderTargetCube uses a CubeTexture in the future\n\t\t\tuniforms.flipEnvMap.value = ( ! ( material.envMap && material.envMap.isCubeTexture ) ) ? 1 : - 1;\n\n\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t}\n\n\t\tif ( material.lightMap ) {\n\n\t\t\tuniforms.lightMap.value = material.lightMap;\n\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\n\n\t\t}\n\n\t\tif ( material.aoMap ) {\n\n\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t}\n\n\t\t// uv repeat and offset setting priorities\n\t\t// 1. color map\n\t\t// 2. specular map\n\t\t// 3. normal map\n\t\t// 4. bump map\n\t\t// 5. alpha map\n\t\t// 6. emissive map\n\n\t\tvar uvScaleMap;\n\n\t\tif ( material.map ) {\n\n\t\t\tuvScaleMap = material.map;\n\n\t\t} else if ( material.specularMap ) {\n\n\t\t\tuvScaleMap = material.specularMap;\n\n\t\t} else if ( material.displacementMap ) {\n\n\t\t\tuvScaleMap = material.displacementMap;\n\n\t\t} else if ( material.normalMap ) {\n\n\t\t\tuvScaleMap = material.normalMap;\n\n\t\t} else if ( material.bumpMap ) {\n\n\t\t\tuvScaleMap = material.bumpMap;\n\n\t\t} else if ( material.roughnessMap ) {\n\n\t\t\tuvScaleMap = material.roughnessMap;\n\n\t\t} else if ( material.metalnessMap ) {\n\n\t\t\tuvScaleMap = material.metalnessMap;\n\n\t\t} else if ( material.alphaMap ) {\n\n\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t} else if ( material.emissiveMap ) {\n\n\t\t\tuvScaleMap = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\t// backwards compatibility\n\t\t\tif ( uvScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\tuvScaleMap = uvScaleMap.texture;\n\n\t\t\t}\n\n\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\tvar offset = uvScaleMap.offset;\n\t\t\t\tvar repeat = uvScaleMap.repeat;\n\t\t\t\tvar rotation = uvScaleMap.rotation;\n\t\t\t\tvar center = uvScaleMap.center;\n\n\t\t\t\tuvScaleMap.matrix.setUvTransform( offset.x, offset.y, repeat.x, repeat.y, rotation, center.x, center.y );\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLine( uniforms, material ) {\n\n\t\tuniforms.diffuse.value = material.color;\n\t\tuniforms.opacity.value = material.opacity;\n\n\t}\n\n\tfunction refreshUniformsDash( uniforms, material ) {\n\n\t\tuniforms.dashSize.value = material.dashSize;\n\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\tuniforms.scale.value = material.scale;\n\n\t}\n\n\tfunction refreshUniformsPoints( uniforms, material ) {\n\n\t\tuniforms.diffuse.value = material.color;\n\t\tuniforms.opacity.value = material.opacity;\n\t\tuniforms.size.value = material.size * _pixelRatio;\n\t\tuniforms.scale.value = _height * 0.5;\n\n\t\tuniforms.map.value = material.map;\n\n\t\tif ( material.map !== null ) {\n\n\t\t\tif ( material.map.matrixAutoUpdate === true ) {\n\n\t\t\t\tvar offset = material.map.offset;\n\t\t\t\tvar repeat = material.map.repeat;\n\t\t\t\tvar rotation = material.map.rotation;\n\t\t\t\tvar center = material.map.center;\n\n\t\t\t\tmaterial.map.matrix.setUvTransform( offset.x, offset.y, repeat.x, repeat.y, rotation, center.x, center.y );\n\n\t\t\t}\n\n\t\t\tuniforms.uvTransform.value.copy( material.map.matrix );\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsFog( uniforms, fog ) {\n\n\t\tuniforms.fogColor.value = fog.color;\n\n\t\tif ( fog.isFog ) {\n\n\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\tuniforms.fogFar.value = fog.far;\n\n\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\tuniforms.fogDensity.value = fog.density;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsLambert( uniforms, material ) {\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhong( uniforms, material ) {\n\n\t\tuniforms.specular.value = material.specular;\n\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsToon( uniforms, material ) {\n\n\t\trefreshUniformsPhong( uniforms, material );\n\n\t\tif ( material.gradientMap ) {\n\n\t\t\tuniforms.gradientMap.value = material.gradientMap;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsStandard( uniforms, material ) {\n\n\t\tuniforms.roughness.value = material.roughness;\n\t\tuniforms.metalness.value = material.metalness;\n\n\t\tif ( material.roughnessMap ) {\n\n\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\n\t\t}\n\n\t\tif ( material.metalnessMap ) {\n\n\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\n\t\t}\n\n\t\tif ( material.emissiveMap ) {\n\n\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t}\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tif ( material.envMap ) {\n\n\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsPhysical( uniforms, material ) {\n\n\t\tuniforms.clearCoat.value = material.clearCoat;\n\t\tuniforms.clearCoatRoughness.value = material.clearCoatRoughness;\n\n\t\trefreshUniformsStandard( uniforms, material );\n\n\t}\n\n\tfunction refreshUniformsDepth( uniforms, material ) {\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\tfunction refreshUniformsDistance( uniforms, material ) {\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t\tuniforms.referencePosition.value.copy( material.referencePosition );\n\t\tuniforms.nearDistance.value = material.nearDistance;\n\t\tuniforms.farDistance.value = material.farDistance;\n\n\t}\n\n\tfunction refreshUniformsNormal( uniforms, material ) {\n\n\t\tif ( material.bumpMap ) {\n\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\n\t\t}\n\n\t\tif ( material.normalMap ) {\n\n\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\n\t\t}\n\n\t\tif ( material.displacementMap ) {\n\n\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t}\n\n\t}\n\n\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\tfunction markUniformsLightsNeedsUpdate( uniforms, value ) {\n\n\t\tuniforms.ambientLightColor.needsUpdate = value;\n\n\t\tuniforms.directionalLights.needsUpdate = value;\n\t\tuniforms.pointLights.needsUpdate = value;\n\t\tuniforms.spotLights.needsUpdate = value;\n\t\tuniforms.rectAreaLights.needsUpdate = value;\n\t\tuniforms.hemisphereLights.needsUpdate = value;\n\n\t}\n\n\t// GL state setting\n\n\tthis.setFaceCulling = function ( cullFace, frontFaceDirection ) {\n\n\t\tstate.setCullFace( cullFace );\n\t\tstate.setFlipSided( frontFaceDirection === FrontFaceDirectionCW );\n\n\t};\n\n\t// Textures\n\n\tfunction allocTextureUnit() {\n\n\t\tvar textureUnit = _usedTextureUnits;\n\n\t\tif ( textureUnit >= capabilities.maxTextures ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + capabilities.maxTextures );\n\n\t\t}\n\n\t\t_usedTextureUnits += 1;\n\n\t\treturn textureUnit;\n\n\t}\n\n\tthis.allocTextureUnit = allocTextureUnit;\n\n\t// this.setTexture2D = setTexture2D;\n\tthis.setTexture2D = ( function () {\n\n\t\tvar warned = false;\n\n\t\t// backwards compatibility: peel texture.texture\n\t\treturn function setTexture2D( texture, slot ) {\n\n\t\t\tif ( texture && texture.isWebGLRenderTarget ) {\n\n\t\t\t\tif ( ! warned ) {\n\n\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer.setTexture2D: don't use render targets as textures. Use their .texture property instead.\" );\n\t\t\t\t\twarned = true;\n\n\t\t\t\t}\n\n\t\t\t\ttexture = texture.texture;\n\n\t\t\t}\n\n\t\t\ttextures.setTexture2D( texture, slot );\n\n\t\t};\n\n\t}() );\n\n\tthis.setTexture = ( function () {\n\n\t\tvar warned = false;\n\n\t\treturn function setTexture( texture, slot ) {\n\n\t\t\tif ( ! warned ) {\n\n\t\t\t\tconsole.warn( \"THREE.WebGLRenderer: .setTexture is deprecated, use setTexture2D instead.\" );\n\t\t\t\twarned = true;\n\n\t\t\t}\n\n\t\t\ttextures.setTexture2D( texture, slot );\n\n\t\t};\n\n\t}() );\n\n\tthis.setTextureCube = ( function () {\n\n\t\tvar warned = false;\n\n\t\treturn function setTextureCube( texture, slot ) {\n\n\t\t\t// backwards compatibility: peel texture.texture\n\t\t\tif ( texture && texture.isWebGLRenderTargetCube ) {\n\n\t\t\t\tif ( ! warned ) {\n\n\t\t\t\t\tconsole.warn( \"THREE.WebGLRenderer.setTextureCube: don't use cube render targets as textures. Use their .texture property instead.\" );\n\t\t\t\t\twarned = true;\n\n\t\t\t\t}\n\n\t\t\t\ttexture = texture.texture;\n\n\t\t\t}\n\n\t\t\t// currently relying on the fact that WebGLRenderTargetCube.texture is a Texture and NOT a CubeTexture\n\t\t\t// TODO: unify these code paths\n\t\t\tif ( ( texture && texture.isCubeTexture ) ||\n\t\t\t\t( Array.isArray( texture.image ) && texture.image.length === 6 ) ) {\n\n\t\t\t\t// CompressedTexture can have Array in image :/\n\n\t\t\t\t// this function alone should take care of cube textures\n\t\t\t\ttextures.setTextureCube( texture, slot );\n\n\t\t\t} else {\n\n\t\t\t\t// assumed: texture property of THREE.WebGLRenderTargetCube\n\n\t\t\t\ttextures.setTextureCubeDynamic( texture, slot );\n\n\t\t\t}\n\n\t\t};\n\n\t}() );\n\n\tthis.getRenderTarget = function () {\n\n\t\treturn _currentRenderTarget;\n\n\t};\n\n\tthis.setRenderTarget = function ( renderTarget ) {\n\n\t\t_currentRenderTarget = renderTarget;\n\n\t\tif ( renderTarget && properties.get( renderTarget ).__webglFramebuffer === undefined ) {\n\n\t\t\ttextures.setupRenderTarget( renderTarget );\n\n\t\t}\n\n\t\tvar framebuffer = null;\n\t\tvar isCube = false;\n\n\t\tif ( renderTarget ) {\n\n\t\t\tvar __webglFramebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\tif ( renderTarget.isWebGLRenderTargetCube ) {\n\n\t\t\t\tframebuffer = __webglFramebuffer[ renderTarget.activeCubeFace ];\n\t\t\t\tisCube = true;\n\n\t\t\t} else {\n\n\t\t\t\tframebuffer = __webglFramebuffer;\n\n\t\t\t}\n\n\t\t\t_currentViewport.copy( renderTarget.viewport );\n\t\t\t_currentScissor.copy( renderTarget.scissor );\n\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\n\t\t} else {\n\n\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio );\n\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio );\n\t\t\t_currentScissorTest = _scissorTest;\n\n\t\t}\n\n\t\tif ( _currentFramebuffer !== framebuffer ) {\n\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\t\t\t_currentFramebuffer = framebuffer;\n\n\t\t}\n\n\t\tstate.viewport( _currentViewport );\n\t\tstate.scissor( _currentScissor );\n\t\tstate.setScissorTest( _currentScissorTest );\n\n\t\tif ( isCube ) {\n\n\t\t\tvar textureProperties = properties.get( renderTarget.texture );\n\t\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + renderTarget.activeCubeFace, textureProperties.__webglTexture, renderTarget.activeMipMapLevel );\n\n\t\t}\n\n\t};\n\n\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer ) {\n\n\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\tif ( framebuffer ) {\n\n\t\t\tvar restore = false;\n\n\t\t\tif ( framebuffer !== _currentFramebuffer ) {\n\n\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\n\n\t\t\t\trestore = true;\n\n\t\t\t}\n\n\t\t\ttry {\n\n\t\t\t\tvar texture = renderTarget.texture;\n\t\t\t\tvar textureFormat = texture.format;\n\t\t\t\tvar textureType = texture.type;\n\n\t\t\t\tif ( textureFormat !== RGBAFormat && utils.convert( textureFormat ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_FORMAT ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( textureType !== UnsignedByteType && utils.convert( textureType ) !== _gl.getParameter( _gl.IMPLEMENTATION_COLOR_READ_TYPE ) && // IE11, Edge and Chrome Mac < 52 (#9513)\n\t\t\t\t\t! ( textureType === FloatType && ( extensions.get( 'OES_texture_float' ) || extensions.get( 'WEBGL_color_buffer_float' ) ) ) && // Chrome Mac >= 52 and Firefox\n\t\t\t\t\t! ( textureType === HalfFloatType && extensions.get( 'EXT_color_buffer_half_float' ) ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( _gl.checkFramebufferStatus( _gl.FRAMEBUFFER ) === _gl.FRAMEBUFFER_COMPLETE ) {\n\n\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\n\t\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), buffer );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.' );\n\n\t\t\t\t}\n\n\t\t\t} finally {\n\n\t\t\t\tif ( restore ) {\n\n\t\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, _currentFramebuffer );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n}\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction FogExp2( color, density ) {\n\n\tthis.name = '';\n\n\tthis.color = new Color( color );\n\tthis.density = ( density !== undefined ) ? density : 0.00025;\n\n}\n\nFogExp2.prototype.isFogExp2 = true;\n\nFogExp2.prototype.clone = function () {\n\n\treturn new FogExp2( this.color.getHex(), this.density );\n\n};\n\nFogExp2.prototype.toJSON = function ( /* meta */ ) {\n\n\treturn {\n\t\ttype: 'FogExp2',\n\t\tcolor: this.color.getHex(),\n\t\tdensity: this.density\n\t};\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Fog( color, near, far ) {\n\n\tthis.name = '';\n\n\tthis.color = new Color( color );\n\n\tthis.near = ( near !== undefined ) ? near : 1;\n\tthis.far = ( far !== undefined ) ? far : 1000;\n\n}\n\nFog.prototype.isFog = true;\n\nFog.prototype.clone = function () {\n\n\treturn new Fog( this.color.getHex(), this.near, this.far );\n\n};\n\nFog.prototype.toJSON = function ( /* meta */ ) {\n\n\treturn {\n\t\ttype: 'Fog',\n\t\tcolor: this.color.getHex(),\n\t\tnear: this.near,\n\t\tfar: this.far\n\t};\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Scene() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Scene';\n\n\tthis.background = null;\n\tthis.fog = null;\n\tthis.overrideMaterial = null;\n\n\tthis.autoUpdate = true; // checked by the renderer\n\n}\n\nScene.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Scene,\n\n\tcopy: function ( source, recursive ) {\n\n\t\tObject3D.prototype.copy.call( this, source, recursive );\n\n\t\tif ( source.background !== null ) this.background = source.background.clone();\n\t\tif ( source.fog !== null ) this.fog = source.fog.clone();\n\t\tif ( source.overrideMaterial !== null ) this.overrideMaterial = source.overrideMaterial.clone();\n\n\t\tthis.autoUpdate = source.autoUpdate;\n\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tif ( this.background !== null ) data.object.background = this.background.toJSON( meta );\n\t\tif ( this.fog !== null ) data.object.fog = this.fog.toJSON();\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction LensFlare( texture, size, distance, blending, color ) {\n\n\tObject3D.call( this );\n\n\tthis.lensFlares = [];\n\n\tthis.positionScreen = new Vector3();\n\tthis.customUpdateCallback = undefined;\n\n\tif ( texture !== undefined ) {\n\n\t\tthis.add( texture, size, distance, blending, color );\n\n\t}\n\n}\n\nLensFlare.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: LensFlare,\n\n\tisLensFlare: true,\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source );\n\n\t\tthis.positionScreen.copy( source.positionScreen );\n\t\tthis.customUpdateCallback = source.customUpdateCallback;\n\n\t\tfor ( var i = 0, l = source.lensFlares.length; i < l; i ++ ) {\n\n\t\t\tthis.lensFlares.push( source.lensFlares[ i ] );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tadd: function ( texture, size, distance, blending, color, opacity ) {\n\n\t\tif ( size === undefined ) size = - 1;\n\t\tif ( distance === undefined ) distance = 0;\n\t\tif ( opacity === undefined ) opacity = 1;\n\t\tif ( color === undefined ) color = new Color( 0xffffff );\n\t\tif ( blending === undefined ) blending = NormalBlending;\n\n\t\tdistance = Math.min( distance, Math.max( 0, distance ) );\n\n\t\tthis.lensFlares.push( {\n\t\t\ttexture: texture,\t// THREE.Texture\n\t\t\tsize: size, \t\t// size in pixels (-1 = use texture.width)\n\t\t\tdistance: distance, \t// distance (0-1) from light source (0=at light source)\n\t\t\tx: 0, y: 0, z: 0,\t// screen position (-1 => 1) z = 0 is in front z = 1 is back\n\t\t\tscale: 1, \t\t// scale\n\t\t\trotation: 0, \t\t// rotation\n\t\t\topacity: opacity,\t// opacity\n\t\t\tcolor: color,\t\t// color\n\t\t\tblending: blending\t// blending\n\t\t} );\n\n\t},\n\n\t/*\n\t * Update lens flares update positions on all flares based on the screen position\n\t * Set myLensFlare.customUpdateCallback to alter the flares in your project specific way.\n\t */\n\n\tupdateLensFlares: function () {\n\n\t\tvar f, fl = this.lensFlares.length;\n\t\tvar flare;\n\t\tvar vecX = - this.positionScreen.x * 2;\n\t\tvar vecY = - this.positionScreen.y * 2;\n\n\t\tfor ( f = 0; f < fl; f ++ ) {\n\n\t\t\tflare = this.lensFlares[ f ];\n\n\t\t\tflare.x = this.positionScreen.x + vecX * flare.distance;\n\t\t\tflare.y = this.positionScreen.y + vecY * flare.distance;\n\n\t\t\tflare.wantedRotation = flare.x * Math.PI * 0.25;\n\t\t\tflare.rotation += ( flare.wantedRotation - flare.rotation ) * 0.25;\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *\n *\tuvOffset: new THREE.Vector2(),\n *\tuvScale: new THREE.Vector2()\n * }\n */\n\nfunction SpriteMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'SpriteMaterial';\n\n\tthis.color = new Color( 0xffffff );\n\tthis.map = null;\n\n\tthis.rotation = 0;\n\n\tthis.fog = false;\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nSpriteMaterial.prototype = Object.create( Material.prototype );\nSpriteMaterial.prototype.constructor = SpriteMaterial;\nSpriteMaterial.prototype.isSpriteMaterial = true;\n\nSpriteMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\tthis.map = source.map;\n\n\tthis.rotation = source.rotation;\n\n\treturn this;\n\n};\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Sprite( material ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Sprite';\n\n\tthis.material = ( material !== undefined ) ? material : new SpriteMaterial();\n\n}\n\nSprite.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Sprite,\n\n\tisSprite: true,\n\n\traycast: ( function () {\n\n\t\tvar intersectPoint = new Vector3();\n\t\tvar worldPosition = new Vector3();\n\t\tvar worldScale = new Vector3();\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tworldPosition.setFromMatrixPosition( this.matrixWorld );\n\t\t\traycaster.ray.closestPointToPoint( worldPosition, intersectPoint );\n\n\t\t\tworldScale.setFromMatrixScale( this.matrixWorld );\n\t\t\tvar guessSizeSq = worldScale.x * worldScale.y / 4;\n\n\t\t\tif ( worldPosition.distanceToSquared( intersectPoint ) > guessSizeSq ) return;\n\n\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\t\tintersects.push( {\n\n\t\t\t\tdistance: distance,\n\t\t\t\tpoint: intersectPoint.clone(),\n\t\t\t\tface: null,\n\t\t\t\tobject: this\n\n\t\t\t} );\n\n\t\t};\n\n\t}() ),\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.material ).copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction LOD() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'LOD';\n\n\tObject.defineProperties( this, {\n\t\tlevels: {\n\t\t\tenumerable: true,\n\t\t\tvalue: []\n\t\t}\n\t} );\n\n}\n\nLOD.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: LOD,\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source, false );\n\n\t\tvar levels = source.levels;\n\n\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tvar level = levels[ i ];\n\n\t\t\tthis.addLevel( level.object.clone(), level.distance );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\taddLevel: function ( object, distance ) {\n\n\t\tif ( distance === undefined ) distance = 0;\n\n\t\tdistance = Math.abs( distance );\n\n\t\tvar levels = this.levels;\n\n\t\tfor ( var l = 0; l < levels.length; l ++ ) {\n\n\t\t\tif ( distance < levels[ l ].distance ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tlevels.splice( l, 0, { distance: distance, object: object } );\n\n\t\tthis.add( object );\n\n\t},\n\n\tgetObjectForDistance: function ( distance ) {\n\n\t\tvar levels = this.levels;\n\n\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\tif ( distance < levels[ i ].distance ) {\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn levels[ i - 1 ].object;\n\n\t},\n\n\traycast: ( function () {\n\n\t\tvar matrixPosition = new Vector3();\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tmatrixPosition.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tvar distance = raycaster.ray.origin.distanceTo( matrixPosition );\n\n\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\n\n\t\t};\n\n\t}() ),\n\n\tupdate: function () {\n\n\t\tvar v1 = new Vector3();\n\t\tvar v2 = new Vector3();\n\n\t\treturn function update( camera ) {\n\n\t\t\tvar levels = this.levels;\n\n\t\t\tif ( levels.length > 1 ) {\n\n\t\t\t\tv1.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t\tv2.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\t\tvar distance = v1.distanceTo( v2 );\n\n\t\t\t\tlevels[ 0 ].object.visible = true;\n\n\t\t\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\t\tif ( distance >= levels[ i ].distance ) {\n\n\t\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\n\t\t\t\t\t\tlevels[ i ].object.visible = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tfor ( ; i < l; i ++ ) {\n\n\t\t\t\t\tlevels[ i ].object.visible = false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}(),\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.levels = [];\n\n\t\tvar levels = this.levels;\n\n\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\tvar level = levels[ i ];\n\n\t\t\tdata.object.levels.push( {\n\t\t\t\tobject: level.object.uuid,\n\t\t\t\tdistance: level.distance\n\t\t\t} );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author michael guerrero / http://realitymeltdown.com\n * @author ikerr / http://verold.com\n */\n\nfunction Skeleton( bones, boneInverses ) {\n\n\t// copy the bone array\n\n\tbones = bones || [];\n\n\tthis.bones = bones.slice( 0 );\n\tthis.boneMatrices = new Float32Array( this.bones.length * 16 );\n\n\t// use the supplied bone inverses or calculate the inverses\n\n\tif ( boneInverses === undefined ) {\n\n\t\tthis.calculateInverses();\n\n\t} else {\n\n\t\tif ( this.bones.length === boneInverses.length ) {\n\n\t\t\tthis.boneInverses = boneInverses.slice( 0 );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Skeleton boneInverses is the wrong length.' );\n\n\t\t\tthis.boneInverses = [];\n\n\t\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\tthis.boneInverses.push( new Matrix4() );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nObject.assign( Skeleton.prototype, {\n\n\tcalculateInverses: function () {\n\n\t\tthis.boneInverses = [];\n\n\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tvar inverse = new Matrix4();\n\n\t\t\tif ( this.bones[ i ] ) {\n\n\t\t\t\tinverse.getInverse( this.bones[ i ].matrixWorld );\n\n\t\t\t}\n\n\t\t\tthis.boneInverses.push( inverse );\n\n\t\t}\n\n\t},\n\n\tpose: function () {\n\n\t\tvar bone, i, il;\n\n\t\t// recover the bind-time world matrices\n\n\t\tfor ( i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tbone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tbone.matrixWorld.getInverse( this.boneInverses[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// compute the local matrices, positions, rotations and scales\n\n\t\tfor ( i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\tbone = this.bones[ i ];\n\n\t\t\tif ( bone ) {\n\n\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t\tbone.matrix.getInverse( bone.parent.matrixWorld );\n\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tupdate: ( function () {\n\n\t\tvar offsetMatrix = new Matrix4();\n\t\tvar identityMatrix = new Matrix4();\n\n\t\treturn function update() {\n\n\t\t\tvar bones = this.bones;\n\t\t\tvar boneInverses = this.boneInverses;\n\t\t\tvar boneMatrices = this.boneMatrices;\n\t\t\tvar boneTexture = this.boneTexture;\n\n\t\t\t// flatten bone matrices to array\n\n\t\t\tfor ( var i = 0, il = bones.length; i < il; i ++ ) {\n\n\t\t\t\t// compute the offset between the current and the original transform\n\n\t\t\t\tvar matrix = bones[ i ] ? bones[ i ].matrixWorld : identityMatrix;\n\n\t\t\t\toffsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );\n\t\t\t\toffsetMatrix.toArray( boneMatrices, i * 16 );\n\n\t\t\t}\n\n\t\t\tif ( boneTexture !== undefined ) {\n\n\t\t\t\tboneTexture.needsUpdate = true;\n\n\t\t\t}\n\n\t\t};\n\n\t} )(),\n\n\tclone: function () {\n\n\t\treturn new Skeleton( this.bones, this.boneInverses );\n\n\t}\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author ikerr / http://verold.com\n */\n\nfunction Bone() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Bone';\n\n}\n\nBone.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Bone,\n\n\tisBone: true\n\n} );\n\n/**\n * @author mikael emtinger / http://gomo.se/\n * @author alteredq / http://alteredqualia.com/\n * @author ikerr / http://verold.com\n */\n\nfunction SkinnedMesh( geometry, material ) {\n\n\tMesh.call( this, geometry, material );\n\n\tthis.type = 'SkinnedMesh';\n\n\tthis.bindMode = 'attached';\n\tthis.bindMatrix = new Matrix4();\n\tthis.bindMatrixInverse = new Matrix4();\n\n\tvar bones = this.initBones();\n\tvar skeleton = new Skeleton( bones );\n\n\tthis.bind( skeleton, this.matrixWorld );\n\n\tthis.normalizeSkinWeights();\n\n}\n\nSkinnedMesh.prototype = Object.assign( Object.create( Mesh.prototype ), {\n\n\tconstructor: SkinnedMesh,\n\n\tisSkinnedMesh: true,\n\n\tinitBones: function () {\n\n\t\tvar bones = [], bone, gbone;\n\t\tvar i, il;\n\n\t\tif ( this.geometry && this.geometry.bones !== undefined ) {\n\n\t\t\t// first, create array of 'Bone' objects from geometry data\n\n\t\t\tfor ( i = 0, il = this.geometry.bones.length; i < il; i ++ ) {\n\n\t\t\t\tgbone = this.geometry.bones[ i ];\n\n\t\t\t\t// create new 'Bone' object\n\n\t\t\t\tbone = new Bone();\n\t\t\t\tbones.push( bone );\n\n\t\t\t\t// apply values\n\n\t\t\t\tbone.name = gbone.name;\n\t\t\t\tbone.position.fromArray( gbone.pos );\n\t\t\t\tbone.quaternion.fromArray( gbone.rotq );\n\t\t\t\tif ( gbone.scl !== undefined ) bone.scale.fromArray( gbone.scl );\n\n\t\t\t}\n\n\t\t\t// second, create bone hierarchy\n\n\t\t\tfor ( i = 0, il = this.geometry.bones.length; i < il; i ++ ) {\n\n\t\t\t\tgbone = this.geometry.bones[ i ];\n\n\t\t\t\tif ( ( gbone.parent !== - 1 ) && ( gbone.parent !== null ) && ( bones[ gbone.parent ] !== undefined ) ) {\n\n\t\t\t\t\t// subsequent bones in the hierarchy\n\n\t\t\t\t\tbones[ gbone.parent ].add( bones[ i ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// topmost bone, immediate child of the skinned mesh\n\n\t\t\t\t\tthis.add( bones[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// now the bones are part of the scene graph and children of the skinned mesh.\n\t\t// let's update the corresponding matrices\n\n\t\tthis.updateMatrixWorld( true );\n\n\t\treturn bones;\n\n\t},\n\n\tbind: function ( skeleton, bindMatrix ) {\n\n\t\tthis.skeleton = skeleton;\n\n\t\tif ( bindMatrix === undefined ) {\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.skeleton.calculateInverses();\n\n\t\t\tbindMatrix = this.matrixWorld;\n\n\t\t}\n\n\t\tthis.bindMatrix.copy( bindMatrix );\n\t\tthis.bindMatrixInverse.getInverse( bindMatrix );\n\n\t},\n\n\tpose: function () {\n\n\t\tthis.skeleton.pose();\n\n\t},\n\n\tnormalizeSkinWeights: function () {\n\n\t\tvar scale, i;\n\n\t\tif ( this.geometry && this.geometry.isGeometry ) {\n\n\t\t\tfor ( i = 0; i < this.geometry.skinWeights.length; i ++ ) {\n\n\t\t\t\tvar sw = this.geometry.skinWeights[ i ];\n\n\t\t\t\tscale = 1.0 / sw.manhattanLength();\n\n\t\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\t\tsw.multiplyScalar( scale );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsw.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( this.geometry && this.geometry.isBufferGeometry ) {\n\n\t\t\tvar vec = new Vector4();\n\n\t\t\tvar skinWeight = this.geometry.attributes.skinWeight;\n\n\t\t\tfor ( i = 0; i < skinWeight.count; i ++ ) {\n\n\t\t\t\tvec.x = skinWeight.getX( i );\n\t\t\t\tvec.y = skinWeight.getY( i );\n\t\t\t\tvec.z = skinWeight.getZ( i );\n\t\t\t\tvec.w = skinWeight.getW( i );\n\n\t\t\t\tscale = 1.0 / vec.manhattanLength();\n\n\t\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\t\tvec.multiplyScalar( scale );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvec.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t\t}\n\n\t\t\t\tskinWeight.setXYZW( i, vec.x, vec.y, vec.z, vec.w );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\tupdateMatrixWorld: function ( force ) {\n\n\t\tMesh.prototype.updateMatrixWorld.call( this, force );\n\n\t\tif ( this.bindMode === 'attached' ) {\n\n\t\t\tthis.bindMatrixInverse.getInverse( this.matrixWorld );\n\n\t\t} else if ( this.bindMode === 'detached' ) {\n\n\t\t\tthis.bindMatrixInverse.getInverse( this.bindMatrix );\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );\n\n\t\t}\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  linewidth: <float>,\n *  linecap: \"round\",\n *  linejoin: \"round\"\n * }\n */\n\nfunction LineBasicMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'LineBasicMaterial';\n\n\tthis.color = new Color( 0xffffff );\n\n\tthis.linewidth = 1;\n\tthis.linecap = 'round';\n\tthis.linejoin = 'round';\n\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nLineBasicMaterial.prototype = Object.create( Material.prototype );\nLineBasicMaterial.prototype.constructor = LineBasicMaterial;\n\nLineBasicMaterial.prototype.isLineBasicMaterial = true;\n\nLineBasicMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.linewidth = source.linewidth;\n\tthis.linecap = source.linecap;\n\tthis.linejoin = source.linejoin;\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Line( geometry, material, mode ) {\n\n\tif ( mode === 1 ) {\n\n\t\tconsole.warn( 'THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead.' );\n\t\treturn new LineSegments( geometry, material );\n\n\t}\n\n\tObject3D.call( this );\n\n\tthis.type = 'Line';\n\n\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\tthis.material = material !== undefined ? material : new LineBasicMaterial( { color: Math.random() * 0xffffff } );\n\n}\n\nLine.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Line,\n\n\tisLine: true,\n\n\traycast: ( function () {\n\n\t\tvar inverseMatrix = new Matrix4();\n\t\tvar ray = new Ray();\n\t\tvar sphere = new Sphere();\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tvar precision = raycaster.linePrecision;\n\t\t\tvar precisionSq = precision * precision;\n\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar matrixWorld = this.matrixWorld;\n\n\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\tsphere.copy( geometry.boundingSphere );\n\t\t\tsphere.applyMatrix4( matrixWorld );\n\n\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\n\n\t\t\t//\n\n\t\t\tinverseMatrix.getInverse( matrixWorld );\n\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n\t\t\tvar vStart = new Vector3();\n\t\t\tvar vEnd = new Vector3();\n\t\t\tvar interSegment = new Vector3();\n\t\t\tvar interRay = new Vector3();\n\t\t\tvar step = ( this && this.isLineSegments ) ? 2 : 1;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tvar index = geometry.index;\n\t\t\t\tvar attributes = geometry.attributes;\n\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\tvar indices = index.array;\n\n\t\t\t\t\tfor ( var i = 0, l = indices.length - 1; i < l; i += step ) {\n\n\t\t\t\t\t\tvar a = indices[ i ];\n\t\t\t\t\t\tvar b = indices[ i + 1 ];\n\n\t\t\t\t\t\tvStart.fromArray( positions, a * 3 );\n\t\t\t\t\t\tvEnd.fromArray( positions, b * 3 );\n\n\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\t\t\tif ( distSq > precisionSq ) continue;\n\n\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( var i = 0, l = positions.length / 3 - 1; i < l; i += step ) {\n\n\t\t\t\t\t\tvStart.fromArray( positions, 3 * i );\n\t\t\t\t\t\tvEnd.fromArray( positions, 3 * i + 3 );\n\n\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\t\t\tif ( distSq > precisionSq ) continue;\n\n\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\tvar nbVertices = vertices.length;\n\n\t\t\t\tfor ( var i = 0; i < nbVertices - 1; i += step ) {\n\n\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vertices[ i ], vertices[ i + 1 ], interRay, interSegment );\n\n\t\t\t\t\tif ( distSq > precisionSq ) continue;\n\n\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\n\n\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\tface: null,\n\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}() ),\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction LineSegments( geometry, material ) {\n\n\tLine.call( this, geometry, material );\n\n\tthis.type = 'LineSegments';\n\n}\n\nLineSegments.prototype = Object.assign( Object.create( Line.prototype ), {\n\n\tconstructor: LineSegments,\n\n\tisLineSegments: true\n\n} );\n\n/**\n * @author mgreter / http://github.com/mgreter\n */\n\nfunction LineLoop( geometry, material ) {\n\n\tLine.call( this, geometry, material );\n\n\tthis.type = 'LineLoop';\n\n}\n\nLineLoop.prototype = Object.assign( Object.create( Line.prototype ), {\n\n\tconstructor: LineLoop,\n\n\tisLineLoop: true,\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *  map: new THREE.Texture( <Image> ),\n *\n *  size: <float>,\n *  sizeAttenuation: <bool>\n * }\n */\n\nfunction PointsMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'PointsMaterial';\n\n\tthis.color = new Color( 0xffffff );\n\n\tthis.map = null;\n\n\tthis.size = 1;\n\tthis.sizeAttenuation = true;\n\n\tthis.lights = false;\n\n\tthis.setValues( parameters );\n\n}\n\nPointsMaterial.prototype = Object.create( Material.prototype );\nPointsMaterial.prototype.constructor = PointsMaterial;\n\nPointsMaterial.prototype.isPointsMaterial = true;\n\nPointsMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.map = source.map;\n\n\tthis.size = source.size;\n\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\treturn this;\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Points( geometry, material ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Points';\n\n\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\tthis.material = material !== undefined ? material : new PointsMaterial( { color: Math.random() * 0xffffff } );\n\n}\n\nPoints.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Points,\n\n\tisPoints: true,\n\n\traycast: ( function () {\n\n\t\tvar inverseMatrix = new Matrix4();\n\t\tvar ray = new Ray();\n\t\tvar sphere = new Sphere();\n\n\t\treturn function raycast( raycaster, intersects ) {\n\n\t\t\tvar object = this;\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar matrixWorld = this.matrixWorld;\n\t\t\tvar threshold = raycaster.params.Points.threshold;\n\n\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\n\n\t\t\tsphere.copy( geometry.boundingSphere );\n\t\t\tsphere.applyMatrix4( matrixWorld );\n\t\t\tsphere.radius += threshold;\n\n\t\t\tif ( raycaster.ray.intersectsSphere( sphere ) === false ) return;\n\n\t\t\t//\n\n\t\t\tinverseMatrix.getInverse( matrixWorld );\n\t\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\n\n\t\t\tvar localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\t\tvar localThresholdSq = localThreshold * localThreshold;\n\t\t\tvar position = new Vector3();\n\n\t\t\tfunction testPoint( point, index ) {\n\n\t\t\t\tvar rayPointDistanceSq = ray.distanceSqToPoint( point );\n\n\t\t\t\tif ( rayPointDistanceSq < localThresholdSq ) {\n\n\t\t\t\t\tvar intersectPoint = ray.closestPointToPoint( point );\n\t\t\t\t\tintersectPoint.applyMatrix4( matrixWorld );\n\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) return;\n\n\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\n\t\t\t\t\t\tpoint: intersectPoint.clone(),\n\t\t\t\t\t\tindex: index,\n\t\t\t\t\t\tface: null,\n\t\t\t\t\t\tobject: object\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tvar index = geometry.index;\n\t\t\t\tvar attributes = geometry.attributes;\n\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\tvar indices = index.array;\n\n\t\t\t\t\tfor ( var i = 0, il = indices.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar a = indices[ i ];\n\n\t\t\t\t\t\tposition.fromArray( positions, a * 3 );\n\n\t\t\t\t\t\ttestPoint( position, a );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( var i = 0, l = positions.length / 3; i < l; i ++ ) {\n\n\t\t\t\t\t\tposition.fromArray( positions, i * 3 );\n\n\t\t\t\t\t\ttestPoint( position, i );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tvar vertices = geometry.vertices;\n\n\t\t\t\tfor ( var i = 0, l = vertices.length; i < l; i ++ ) {\n\n\t\t\t\t\ttestPoint( vertices[ i ], i );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}() ),\n\n\tclone: function () {\n\n\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Group() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Group';\n\n}\n\nGroup.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Group\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction VideoTexture( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\tTexture.call( this, video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\tthis.generateMipmaps = false;\n\n\tvar scope = this;\n\n\tfunction update() {\n\n\t\tvar video = scope.image;\n\n\t\tif ( video.readyState >= video.HAVE_CURRENT_DATA ) {\n\n\t\t\tscope.needsUpdate = true;\n\n\t\t}\n\n\t\trequestAnimationFrame( update );\n\n\t}\n\n\trequestAnimationFrame( update );\n\n}\n\nVideoTexture.prototype = Object.create( Texture.prototype );\nVideoTexture.prototype.constructor = VideoTexture;\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction CompressedTexture( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\tthis.image = { width: width, height: height };\n\tthis.mipmaps = mipmaps;\n\n\t// no flipping for cube textures\n\t// (also flipping doesn't work for compressed textures )\n\n\tthis.flipY = false;\n\n\t// can't generate mipmaps for compressed textures\n\t// mips must be embedded in DDS files\n\n\tthis.generateMipmaps = false;\n\n}\n\nCompressedTexture.prototype = Object.create( Texture.prototype );\nCompressedTexture.prototype.constructor = CompressedTexture;\n\nCompressedTexture.prototype.isCompressedTexture = true;\n\n/**\n * @author Matt DesLauriers / @mattdesl\n * @author atix / arthursilber.de\n */\n\nfunction DepthTexture( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format ) {\n\n\tformat = format !== undefined ? format : DepthFormat;\n\n\tif ( format !== DepthFormat && format !== DepthStencilFormat ) {\n\n\t\tthrow new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' );\n\n\t}\n\n\tif ( type === undefined && format === DepthFormat ) type = UnsignedShortType;\n\tif ( type === undefined && format === DepthStencilFormat ) type = UnsignedInt248Type;\n\n\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\tthis.image = { width: width, height: height };\n\n\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\tthis.flipY = false;\n\tthis.generateMipmaps\t= false;\n\n}\n\nDepthTexture.prototype = Object.create( Texture.prototype );\nDepthTexture.prototype.constructor = DepthTexture;\nDepthTexture.prototype.isDepthTexture = true;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction WireframeGeometry( geometry ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'WireframeGeometry';\n\n\t// buffer\n\n\tvar vertices = [];\n\n\t// helper variables\n\n\tvar i, j, l, o, ol;\n\tvar edge = [ 0, 0 ], edges = {}, e, edge1, edge2;\n\tvar key, keys = [ 'a', 'b', 'c' ];\n\tvar vertex;\n\n\t// different logic for Geometry and BufferGeometry\n\n\tif ( geometry && geometry.isGeometry ) {\n\n\t\t// create a data structure that contains all edges without duplicates\n\n\t\tvar faces = geometry.faces;\n\n\t\tfor ( i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\tedge1 = face[ keys[ j ] ];\n\t\t\t\tedge2 = face[ keys[ ( j + 1 ) % 3 ] ];\n\t\t\t\tedge[ 0 ] = Math.min( edge1, edge2 ); // sorting prevents duplicates\n\t\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\n\t\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\t\tif ( edges[ key ] === undefined ) {\n\n\t\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ] };\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate vertices\n\n\t\tfor ( key in edges ) {\n\n\t\t\te = edges[ key ];\n\n\t\t\tvertex = geometry.vertices[ e.index1 ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\tvertex = geometry.vertices[ e.index2 ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t} else if ( geometry && geometry.isBufferGeometry ) {\n\n\t\tvar position, indices, groups;\n\t\tvar group, start, count;\n\t\tvar index1, index2;\n\n\t\tvertex = new Vector3();\n\n\t\tif ( geometry.index !== null ) {\n\n\t\t\t// indexed BufferGeometry\n\n\t\t\tposition = geometry.attributes.position;\n\t\t\tindices = geometry.index;\n\t\t\tgroups = geometry.groups;\n\n\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\tgroups = [ { start: 0, count: indices.count, materialIndex: 0 } ];\n\n\t\t\t}\n\n\t\t\t// create a data structure that contains all eges without duplicates\n\n\t\t\tfor ( o = 0, ol = groups.length; o < ol; ++ o ) {\n\n\t\t\t\tgroup = groups[ o ];\n\n\t\t\t\tstart = group.start;\n\t\t\t\tcount = group.count;\n\n\t\t\t\tfor ( i = start, l = ( start + count ); i < l; i += 3 ) {\n\n\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\tedge1 = indices.getX( i + j );\n\t\t\t\t\t\tedge2 = indices.getX( i + ( j + 1 ) % 3 );\n\t\t\t\t\t\tedge[ 0 ] = Math.min( edge1, edge2 ); // sorting prevents duplicates\n\t\t\t\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\n\t\t\t\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\t\t\t\tif ( edges[ key ] === undefined ) {\n\n\t\t\t\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ] };\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// generate vertices\n\n\t\t\tfor ( key in edges ) {\n\n\t\t\t\te = edges[ key ];\n\n\t\t\t\tvertex.fromBufferAttribute( position, e.index1 );\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\tvertex.fromBufferAttribute( position, e.index2 );\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// non-indexed BufferGeometry\n\n\t\t\tposition = geometry.attributes.position;\n\n\t\t\tfor ( i = 0, l = ( position.count / 3 ); i < l; i ++ ) {\n\n\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t// three edges per triangle, an edge is represented as (index1, index2)\n\t\t\t\t\t// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n\n\t\t\t\t\tindex1 = 3 * i + j;\n\t\t\t\t\tvertex.fromBufferAttribute( position, index1 );\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\tindex2 = 3 * i + ( ( j + 1 ) % 3 );\n\t\t\t\t\tvertex.fromBufferAttribute( position, index2 );\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n}\n\nWireframeGeometry.prototype = Object.create( BufferGeometry.prototype );\nWireframeGeometry.prototype.constructor = WireframeGeometry;\n\n/**\n * @author zz85 / https://github.com/zz85\n * @author Mugen87 / https://github.com/Mugen87\n *\n * Parametric Surfaces Geometry\n * based on the brilliant article by @prideout http://prideout.net/blog/?p=44\n */\n\n// ParametricGeometry\n\nfunction ParametricGeometry( func, slices, stacks ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'ParametricGeometry';\n\n\tthis.parameters = {\n\t\tfunc: func,\n\t\tslices: slices,\n\t\tstacks: stacks\n\t};\n\n\tthis.fromBufferGeometry( new ParametricBufferGeometry( func, slices, stacks ) );\n\tthis.mergeVertices();\n\n}\n\nParametricGeometry.prototype = Object.create( Geometry.prototype );\nParametricGeometry.prototype.constructor = ParametricGeometry;\n\n// ParametricBufferGeometry\n\nfunction ParametricBufferGeometry( func, slices, stacks ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'ParametricBufferGeometry';\n\n\tthis.parameters = {\n\t\tfunc: func,\n\t\tslices: slices,\n\t\tstacks: stacks\n\t};\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\tvar EPS = 0.00001;\n\n\tvar normal = new Vector3();\n\n\tvar p0 = new Vector3(), p1 = new Vector3();\n\tvar pu = new Vector3(), pv = new Vector3();\n\n\tvar i, j;\n\n\t// generate vertices, normals and uvs\n\n\tvar sliceCount = slices + 1;\n\n\tfor ( i = 0; i <= stacks; i ++ ) {\n\n\t\tvar v = i / stacks;\n\n\t\tfor ( j = 0; j <= slices; j ++ ) {\n\n\t\t\tvar u = j / slices;\n\n\t\t\t// vertex\n\n\t\t\tp0 = func( u, v, p0 );\n\t\t\tvertices.push( p0.x, p0.y, p0.z );\n\n\t\t\t// normal\n\n\t\t\t// approximate tangent vectors via finite differences\n\n\t\t\tif ( u - EPS >= 0 ) {\n\n\t\t\t\tp1 = func( u - EPS, v, p1 );\n\t\t\t\tpu.subVectors( p0, p1 );\n\n\t\t\t} else {\n\n\t\t\t\tp1 = func( u + EPS, v, p1 );\n\t\t\t\tpu.subVectors( p1, p0 );\n\n\t\t\t}\n\n\t\t\tif ( v - EPS >= 0 ) {\n\n\t\t\t\tp1 = func( u, v - EPS, p1 );\n\t\t\t\tpv.subVectors( p0, p1 );\n\n\t\t\t} else {\n\n\t\t\t\tp1 = func( u, v + EPS, p1 );\n\t\t\t\tpv.subVectors( p1, p0 );\n\n\t\t\t}\n\n\t\t\t// cross product of tangent vectors returns surface normal\n\n\t\t\tnormal.crossVectors( pu, pv ).normalize();\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( u, v );\n\n\t\t}\n\n\t}\n\n\t// generate indices\n\n\tfor ( i = 0; i < stacks; i ++ ) {\n\n\t\tfor ( j = 0; j < slices; j ++ ) {\n\n\t\t\tvar a = i * sliceCount + j;\n\t\t\tvar b = i * sliceCount + j + 1;\n\t\t\tvar c = ( i + 1 ) * sliceCount + j + 1;\n\t\t\tvar d = ( i + 1 ) * sliceCount + j;\n\n\t\t\t// faces one and two\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nParametricBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nParametricBufferGeometry.prototype.constructor = ParametricBufferGeometry;\n\n/**\n * @author clockworkgeek / https://github.com/clockworkgeek\n * @author timothypratley / https://github.com/timothypratley\n * @author WestLangley / http://github.com/WestLangley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// PolyhedronGeometry\n\nfunction PolyhedronGeometry( vertices, indices, radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'PolyhedronGeometry';\n\n\tthis.parameters = {\n\t\tvertices: vertices,\n\t\tindices: indices,\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new PolyhedronBufferGeometry( vertices, indices, radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nPolyhedronGeometry.prototype = Object.create( Geometry.prototype );\nPolyhedronGeometry.prototype.constructor = PolyhedronGeometry;\n\n// PolyhedronBufferGeometry\n\nfunction PolyhedronBufferGeometry( vertices, indices, radius, detail ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'PolyhedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tvertices: vertices,\n\t\tindices: indices,\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tradius = radius || 1;\n\tdetail = detail || 0;\n\n\t// default buffer data\n\n\tvar vertexBuffer = [];\n\tvar uvBuffer = [];\n\n\t// the subdivision creates the vertex buffer data\n\n\tsubdivide( detail );\n\n\t// all vertices should lie on a conceptual sphere with a given radius\n\n\tappplyRadius( radius );\n\n\t// finally, create the uv data\n\n\tgenerateUVs();\n\n\t// build non-indexed geometry\n\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) );\n\n\tif ( detail === 0 ) {\n\n\t\tthis.computeVertexNormals(); // flat normals\n\n\t} else {\n\n\t\tthis.normalizeNormals(); // smooth normals\n\n\t}\n\n\t// helper functions\n\n\tfunction subdivide( detail ) {\n\n\t\tvar a = new Vector3();\n\t\tvar b = new Vector3();\n\t\tvar c = new Vector3();\n\n\t\t// iterate over all faces and apply a subdivison with the given detail value\n\n\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t// get the vertices of the face\n\n\t\t\tgetVertexByIndex( indices[ i + 0 ], a );\n\t\t\tgetVertexByIndex( indices[ i + 1 ], b );\n\t\t\tgetVertexByIndex( indices[ i + 2 ], c );\n\n\t\t\t// perform subdivision\n\n\t\t\tsubdivideFace( a, b, c, detail );\n\n\t\t}\n\n\t}\n\n\tfunction subdivideFace( a, b, c, detail ) {\n\n\t\tvar cols = Math.pow( 2, detail );\n\n\t\t// we use this multidimensional array as a data structure for creating the subdivision\n\n\t\tvar v = [];\n\n\t\tvar i, j;\n\n\t\t// construct all of the vertices for this subdivision\n\n\t\tfor ( i = 0; i <= cols; i ++ ) {\n\n\t\t\tv[ i ] = [];\n\n\t\t\tvar aj = a.clone().lerp( c, i / cols );\n\t\t\tvar bj = b.clone().lerp( c, i / cols );\n\n\t\t\tvar rows = cols - i;\n\n\t\t\tfor ( j = 0; j <= rows; j ++ ) {\n\n\t\t\t\tif ( j === 0 && i === cols ) {\n\n\t\t\t\t\tv[ i ][ j ] = aj;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv[ i ][ j ] = aj.clone().lerp( bj, j / rows );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// construct all of the faces\n\n\t\tfor ( i = 0; i < cols; i ++ ) {\n\n\t\t\tfor ( j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\n\n\t\t\t\tvar k = Math.floor( j / 2 );\n\n\t\t\t\tif ( j % 2 === 0 ) {\n\n\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\t\t\t\t\tpushVertex( v[ i ][ k ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\tpushVertex( v[ i + 1 ][ k + 1 ] );\n\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction appplyRadius( radius ) {\n\n\t\tvar vertex = new Vector3();\n\n\t\t// iterate over the entire buffer and apply the radius to each vertex\n\n\t\tfor ( var i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\tvertex.normalize().multiplyScalar( radius );\n\n\t\t\tvertexBuffer[ i + 0 ] = vertex.x;\n\t\t\tvertexBuffer[ i + 1 ] = vertex.y;\n\t\t\tvertexBuffer[ i + 2 ] = vertex.z;\n\n\t\t}\n\n\t}\n\n\tfunction generateUVs() {\n\n\t\tvar vertex = new Vector3();\n\n\t\tfor ( var i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\tvar u = azimuth( vertex ) / 2 / Math.PI + 0.5;\n\t\t\tvar v = inclination( vertex ) / Math.PI + 0.5;\n\t\t\tuvBuffer.push( u, 1 - v );\n\n\t\t}\n\n\t\tcorrectUVs();\n\n\t\tcorrectSeam();\n\n\t}\n\n\tfunction correctSeam() {\n\n\t\t// handle case when face straddles the seam, see #3269\n\n\t\tfor ( var i = 0; i < uvBuffer.length; i += 6 ) {\n\n\t\t\t// uv data of a single face\n\n\t\t\tvar x0 = uvBuffer[ i + 0 ];\n\t\t\tvar x1 = uvBuffer[ i + 2 ];\n\t\t\tvar x2 = uvBuffer[ i + 4 ];\n\n\t\t\tvar max = Math.max( x0, x1, x2 );\n\t\t\tvar min = Math.min( x0, x1, x2 );\n\n\t\t\t// 0.9 is somewhat arbitrary\n\n\t\t\tif ( max > 0.9 && min < 0.1 ) {\n\n\t\t\t\tif ( x0 < 0.2 ) uvBuffer[ i + 0 ] += 1;\n\t\t\t\tif ( x1 < 0.2 ) uvBuffer[ i + 2 ] += 1;\n\t\t\t\tif ( x2 < 0.2 ) uvBuffer[ i + 4 ] += 1;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction pushVertex( vertex ) {\n\n\t\tvertexBuffer.push( vertex.x, vertex.y, vertex.z );\n\n\t}\n\n\tfunction getVertexByIndex( index, vertex ) {\n\n\t\tvar stride = index * 3;\n\n\t\tvertex.x = vertices[ stride + 0 ];\n\t\tvertex.y = vertices[ stride + 1 ];\n\t\tvertex.z = vertices[ stride + 2 ];\n\n\t}\n\n\tfunction correctUVs() {\n\n\t\tvar a = new Vector3();\n\t\tvar b = new Vector3();\n\t\tvar c = new Vector3();\n\n\t\tvar centroid = new Vector3();\n\n\t\tvar uvA = new Vector2();\n\t\tvar uvB = new Vector2();\n\t\tvar uvC = new Vector2();\n\n\t\tfor ( var i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {\n\n\t\t\ta.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );\n\t\t\tb.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );\n\t\t\tc.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );\n\n\t\t\tuvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );\n\t\t\tuvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );\n\t\t\tuvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );\n\n\t\t\tcentroid.copy( a ).add( b ).add( c ).divideScalar( 3 );\n\n\t\t\tvar azi = azimuth( centroid );\n\n\t\t\tcorrectUV( uvA, j + 0, a, azi );\n\t\t\tcorrectUV( uvB, j + 2, b, azi );\n\t\t\tcorrectUV( uvC, j + 4, c, azi );\n\n\t\t}\n\n\t}\n\n\tfunction correctUV( uv, stride, vector, azimuth ) {\n\n\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {\n\n\t\t\tuvBuffer[ stride ] = uv.x - 1;\n\n\t\t}\n\n\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {\n\n\t\t\tuvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;\n\n\t\t}\n\n\t}\n\n\t// Angle around the Y axis, counter-clockwise when looking from above.\n\n\tfunction azimuth( vector ) {\n\n\t\treturn Math.atan2( vector.z, - vector.x );\n\n\t}\n\n\n\t// Angle above the XZ plane.\n\n\tfunction inclination( vector ) {\n\n\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n\n\t}\n\n}\n\nPolyhedronBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nPolyhedronBufferGeometry.prototype.constructor = PolyhedronBufferGeometry;\n\n/**\n * @author timothypratley / https://github.com/timothypratley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// TetrahedronGeometry\n\nfunction TetrahedronGeometry( radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TetrahedronGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new TetrahedronBufferGeometry( radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nTetrahedronGeometry.prototype = Object.create( Geometry.prototype );\nTetrahedronGeometry.prototype.constructor = TetrahedronGeometry;\n\n// TetrahedronBufferGeometry\n\nfunction TetrahedronBufferGeometry( radius, detail ) {\n\n\tvar vertices = [\n\t\t1, 1, 1, \t- 1, - 1, 1, \t- 1, 1, - 1, \t1, - 1, - 1\n\t];\n\n\tvar indices = [\n\t\t2, 1, 0, \t0, 3, 2,\t1, 3, 0,\t2, 3, 1\n\t];\n\n\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\tthis.type = 'TetrahedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n}\n\nTetrahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\nTetrahedronBufferGeometry.prototype.constructor = TetrahedronBufferGeometry;\n\n/**\n * @author timothypratley / https://github.com/timothypratley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// OctahedronGeometry\n\nfunction OctahedronGeometry( radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'OctahedronGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new OctahedronBufferGeometry( radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nOctahedronGeometry.prototype = Object.create( Geometry.prototype );\nOctahedronGeometry.prototype.constructor = OctahedronGeometry;\n\n// OctahedronBufferGeometry\n\nfunction OctahedronBufferGeometry( radius, detail ) {\n\n\tvar vertices = [\n\t\t1, 0, 0, \t- 1, 0, 0,\t0, 1, 0,\n\t\t0, - 1, 0, \t0, 0, 1,\t0, 0, - 1\n\t];\n\n\tvar indices = [\n\t\t0, 2, 4,\t0, 4, 3,\t0, 3, 5,\n\t\t0, 5, 2,\t1, 2, 5,\t1, 5, 3,\n\t\t1, 3, 4,\t1, 4, 2\n\t];\n\n\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\tthis.type = 'OctahedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n}\n\nOctahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\nOctahedronBufferGeometry.prototype.constructor = OctahedronBufferGeometry;\n\n/**\n * @author timothypratley / https://github.com/timothypratley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// IcosahedronGeometry\n\nfunction IcosahedronGeometry( radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'IcosahedronGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new IcosahedronBufferGeometry( radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nIcosahedronGeometry.prototype = Object.create( Geometry.prototype );\nIcosahedronGeometry.prototype.constructor = IcosahedronGeometry;\n\n// IcosahedronBufferGeometry\n\nfunction IcosahedronBufferGeometry( radius, detail ) {\n\n\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\n\tvar vertices = [\n\t\t- 1, t, 0, \t1, t, 0, \t- 1, - t, 0, \t1, - t, 0,\n\t\t 0, - 1, t, \t0, 1, t,\t0, - 1, - t, \t0, 1, - t,\n\t\t t, 0, - 1, \tt, 0, 1, \t- t, 0, - 1, \t- t, 0, 1\n\t];\n\n\tvar indices = [\n\t\t 0, 11, 5, \t0, 5, 1, \t0, 1, 7, \t0, 7, 10, \t0, 10, 11,\n\t\t 1, 5, 9, \t5, 11, 4,\t11, 10, 2,\t10, 7, 6,\t7, 1, 8,\n\t\t 3, 9, 4, \t3, 4, 2,\t3, 2, 6,\t3, 6, 8,\t3, 8, 9,\n\t\t 4, 9, 5, \t2, 4, 11,\t6, 2, 10,\t8, 6, 7,\t9, 8, 1\n\t];\n\n\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\tthis.type = 'IcosahedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n}\n\nIcosahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\nIcosahedronBufferGeometry.prototype.constructor = IcosahedronBufferGeometry;\n\n/**\n * @author Abe Pazos / https://hamoid.com\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// DodecahedronGeometry\n\nfunction DodecahedronGeometry( radius, detail ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'DodecahedronGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n\tthis.fromBufferGeometry( new DodecahedronBufferGeometry( radius, detail ) );\n\tthis.mergeVertices();\n\n}\n\nDodecahedronGeometry.prototype = Object.create( Geometry.prototype );\nDodecahedronGeometry.prototype.constructor = DodecahedronGeometry;\n\n// DodecahedronBufferGeometry\n\nfunction DodecahedronBufferGeometry( radius, detail ) {\n\n\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\tvar r = 1 / t;\n\n\tvar vertices = [\n\n\t\t// (±1, ±1, ±1)\n\t\t- 1, - 1, - 1,\t- 1, - 1, 1,\n\t\t- 1, 1, - 1, - 1, 1, 1,\n\t\t1, - 1, - 1, 1, - 1, 1,\n\t\t1, 1, - 1, 1, 1, 1,\n\n\t\t// (0, ±1/φ, ±φ)\n\t\t 0, - r, - t, 0, - r, t,\n\t\t 0, r, - t, 0, r, t,\n\n\t\t// (±1/φ, ±φ, 0)\n\t\t- r, - t, 0, - r, t, 0,\n\t\t r, - t, 0, r, t, 0,\n\n\t\t// (±φ, 0, ±1/φ)\n\t\t- t, 0, - r, t, 0, - r,\n\t\t- t, 0, r, t, 0, r\n\t];\n\n\tvar indices = [\n\t\t3, 11, 7, \t3, 7, 15, \t3, 15, 13,\n\t\t7, 19, 17, \t7, 17, 6, \t7, 6, 15,\n\t\t17, 4, 8, \t17, 8, 10, \t17, 10, 6,\n\t\t8, 0, 16, \t8, 16, 2, \t8, 2, 10,\n\t\t0, 12, 1, \t0, 1, 18, \t0, 18, 16,\n\t\t6, 10, 2, \t6, 2, 13, \t6, 13, 15,\n\t\t2, 16, 18, \t2, 18, 3, \t2, 3, 13,\n\t\t18, 1, 9, \t18, 9, 11, \t18, 11, 3,\n\t\t4, 14, 12, \t4, 12, 0, \t4, 0, 8,\n\t\t11, 9, 5, \t11, 5, 19, \t11, 19, 7,\n\t\t19, 5, 14, \t19, 14, 4, \t19, 4, 17,\n\t\t1, 12, 14, \t1, 14, 5, \t1, 5, 9\n\t];\n\n\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\tthis.type = 'DodecahedronBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tdetail: detail\n\t};\n\n}\n\nDodecahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\nDodecahedronBufferGeometry.prototype.constructor = DodecahedronBufferGeometry;\n\n/**\n * @author oosmoxiecode / https://github.com/oosmoxiecode\n * @author WestLangley / https://github.com/WestLangley\n * @author zz85 / https://github.com/zz85\n * @author miningold / https://github.com/miningold\n * @author jonobr1 / https://github.com/jonobr1\n * @author Mugen87 / https://github.com/Mugen87\n *\n */\n\n// TubeGeometry\n\nfunction TubeGeometry( path, tubularSegments, radius, radialSegments, closed, taper ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TubeGeometry';\n\n\tthis.parameters = {\n\t\tpath: path,\n\t\ttubularSegments: tubularSegments,\n\t\tradius: radius,\n\t\tradialSegments: radialSegments,\n\t\tclosed: closed\n\t};\n\n\tif ( taper !== undefined ) console.warn( 'THREE.TubeGeometry: taper has been removed.' );\n\n\tvar bufferGeometry = new TubeBufferGeometry( path, tubularSegments, radius, radialSegments, closed );\n\n\t// expose internals\n\n\tthis.tangents = bufferGeometry.tangents;\n\tthis.normals = bufferGeometry.normals;\n\tthis.binormals = bufferGeometry.binormals;\n\n\t// create geometry\n\n\tthis.fromBufferGeometry( bufferGeometry );\n\tthis.mergeVertices();\n\n}\n\nTubeGeometry.prototype = Object.create( Geometry.prototype );\nTubeGeometry.prototype.constructor = TubeGeometry;\n\n// TubeBufferGeometry\n\nfunction TubeBufferGeometry( path, tubularSegments, radius, radialSegments, closed ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'TubeBufferGeometry';\n\n\tthis.parameters = {\n\t\tpath: path,\n\t\ttubularSegments: tubularSegments,\n\t\tradius: radius,\n\t\tradialSegments: radialSegments,\n\t\tclosed: closed\n\t};\n\n\ttubularSegments = tubularSegments || 64;\n\tradius = radius || 1;\n\tradialSegments = radialSegments || 8;\n\tclosed = closed || false;\n\n\tvar frames = path.computeFrenetFrames( tubularSegments, closed );\n\n\t// expose internals\n\n\tthis.tangents = frames.tangents;\n\tthis.normals = frames.normals;\n\tthis.binormals = frames.binormals;\n\n\t// helper variables\n\n\tvar vertex = new Vector3();\n\tvar normal = new Vector3();\n\tvar uv = new Vector2();\n\tvar P = new Vector3();\n\n\tvar i, j;\n\n\t// buffer\n\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\tvar indices = [];\n\n\t// create buffer data\n\n\tgenerateBufferData();\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t// functions\n\n\tfunction generateBufferData() {\n\n\t\tfor ( i = 0; i < tubularSegments; i ++ ) {\n\n\t\t\tgenerateSegment( i );\n\n\t\t}\n\n\t\t// if the geometry is not closed, generate the last row of vertices and normals\n\t\t// at the regular position on the given path\n\t\t//\n\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\t\tgenerateSegment( ( closed === false ) ? tubularSegments : 0 );\n\n\t\t// uvs are generated in a separate function.\n\t\t// this makes it easy compute correct values for closed geometries\n\n\t\tgenerateUVs();\n\n\t\t// finally create faces\n\n\t\tgenerateIndices();\n\n\t}\n\n\tfunction generateSegment( i ) {\n\n\t\t// we use getPointAt to sample evenly distributed points from the given path\n\n\t\tP = path.getPointAt( i / tubularSegments, P );\n\n\t\t// retrieve corresponding normal and binormal\n\n\t\tvar N = frames.normals[ i ];\n\t\tvar B = frames.binormals[ i ];\n\n\t\t// generate normals and vertices for the current segment\n\n\t\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\n\t\t\tvar sin = Math.sin( v );\n\t\t\tvar cos = - Math.cos( v );\n\n\t\t\t// normal\n\n\t\t\tnormal.x = ( cos * N.x + sin * B.x );\n\t\t\tnormal.y = ( cos * N.y + sin * B.y );\n\t\t\tnormal.z = ( cos * N.z + sin * B.z );\n\t\t\tnormal.normalize();\n\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = P.x + radius * normal.x;\n\t\t\tvertex.y = P.y + radius * normal.y;\n\t\t\tvertex.z = P.z + radius * normal.z;\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t}\n\n\tfunction generateIndices() {\n\n\t\tfor ( j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\tfor ( i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\tvar a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\tvar b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\tvar c = ( radialSegments + 1 ) * j + i;\n\t\t\t\tvar d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction generateUVs() {\n\n\t\tfor ( i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\tuv.y = j / radialSegments;\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n}\n\nTubeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nTubeBufferGeometry.prototype.constructor = TubeBufferGeometry;\n\n/**\n * @author oosmoxiecode\n * @author Mugen87 / https://github.com/Mugen87\n *\n * based on http://www.blackpawn.com/texts/pqtorus/\n */\n\n// TorusKnotGeometry\n\nfunction TorusKnotGeometry( radius, tube, tubularSegments, radialSegments, p, q, heightScale ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TorusKnotGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\ttube: tube,\n\t\ttubularSegments: tubularSegments,\n\t\tradialSegments: radialSegments,\n\t\tp: p,\n\t\tq: q\n\t};\n\n\tif ( heightScale !== undefined ) console.warn( 'THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead.' );\n\n\tthis.fromBufferGeometry( new TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) );\n\tthis.mergeVertices();\n\n}\n\nTorusKnotGeometry.prototype = Object.create( Geometry.prototype );\nTorusKnotGeometry.prototype.constructor = TorusKnotGeometry;\n\n// TorusKnotBufferGeometry\n\nfunction TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'TorusKnotBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\ttube: tube,\n\t\ttubularSegments: tubularSegments,\n\t\tradialSegments: radialSegments,\n\t\tp: p,\n\t\tq: q\n\t};\n\n\tradius = radius || 1;\n\ttube = tube || 0.4;\n\ttubularSegments = Math.floor( tubularSegments ) || 64;\n\tradialSegments = Math.floor( radialSegments ) || 8;\n\tp = p || 2;\n\tq = q || 3;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar i, j;\n\n\tvar vertex = new Vector3();\n\tvar normal = new Vector3();\n\n\tvar P1 = new Vector3();\n\tvar P2 = new Vector3();\n\n\tvar B = new Vector3();\n\tvar T = new Vector3();\n\tvar N = new Vector3();\n\n\t// generate vertices, normals and uvs\n\n\tfor ( i = 0; i <= tubularSegments; ++ i ) {\n\n\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segement\n\n\t\tvar u = i / tubularSegments * p * Math.PI * 2;\n\n\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\n\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\n\n\t\t// calculate orthonormal basis\n\n\t\tT.subVectors( P2, P1 );\n\t\tN.addVectors( P2, P1 );\n\t\tB.crossVectors( T, N );\n\t\tN.crossVectors( B, T );\n\n\t\t// normalize B, N. T can be ignored, we don't use it\n\n\t\tB.normalize();\n\t\tN.normalize();\n\n\t\tfor ( j = 0; j <= radialSegments; ++ j ) {\n\n\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\n\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\t\t\tvar cx = - tube * Math.cos( v );\n\t\t\tvar cy = tube * Math.sin( v );\n\n\t\t\t// now calculate the final vertex position.\n\t\t\t// first we orient the extrusion with our basis vectos, then we add it to the current position on the curve\n\n\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\n\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\n\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n\t\t\tnormal.subVectors( vertex, P1 ).normalize();\n\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( i / tubularSegments );\n\t\t\tuvs.push( j / radialSegments );\n\n\t\t}\n\n\t}\n\n\t// generate indices\n\n\tfor ( j = 1; j <= tubularSegments; j ++ ) {\n\n\t\tfor ( i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t// indices\n\n\t\t\tvar a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\tvar b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\tvar c = ( radialSegments + 1 ) * j + i;\n\t\t\tvar d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t// this function calculates the current position on the torus curve\n\n\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\n\n\t\tvar cu = Math.cos( u );\n\t\tvar su = Math.sin( u );\n\t\tvar quOverP = q / p * u;\n\t\tvar cs = Math.cos( quOverP );\n\n\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\n\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\n\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\n\n\t}\n\n}\n\nTorusKnotBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nTorusKnotBufferGeometry.prototype.constructor = TorusKnotBufferGeometry;\n\n/**\n * @author oosmoxiecode\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// TorusGeometry\n\nfunction TorusGeometry( radius, tube, radialSegments, tubularSegments, arc ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TorusGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\ttube: tube,\n\t\tradialSegments: radialSegments,\n\t\ttubularSegments: tubularSegments,\n\t\tarc: arc\n\t};\n\n\tthis.fromBufferGeometry( new TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) );\n\tthis.mergeVertices();\n\n}\n\nTorusGeometry.prototype = Object.create( Geometry.prototype );\nTorusGeometry.prototype.constructor = TorusGeometry;\n\n// TorusBufferGeometry\n\nfunction TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'TorusBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\ttube: tube,\n\t\tradialSegments: radialSegments,\n\t\ttubularSegments: tubularSegments,\n\t\tarc: arc\n\t};\n\n\tradius = radius || 1;\n\ttube = tube || 0.4;\n\tradialSegments = Math.floor( radialSegments ) || 8;\n\ttubularSegments = Math.floor( tubularSegments ) || 6;\n\tarc = arc || Math.PI * 2;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar center = new Vector3();\n\tvar vertex = new Vector3();\n\tvar normal = new Vector3();\n\n\tvar j, i;\n\n\t// generate vertices, normals and uvs\n\n\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\n\t\tfor ( i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\tvar u = i / tubularSegments * arc;\n\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n\t\t\tvertex.z = tube * Math.sin( v );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tcenter.x = radius * Math.cos( u );\n\t\t\tcenter.y = radius * Math.sin( u );\n\t\t\tnormal.subVectors( vertex, center ).normalize();\n\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( i / tubularSegments );\n\t\t\tuvs.push( j / radialSegments );\n\n\t\t}\n\n\t}\n\n\t// generate indices\n\n\tfor ( j = 1; j <= radialSegments; j ++ ) {\n\n\t\tfor ( i = 1; i <= tubularSegments; i ++ ) {\n\n\t\t\t// indices\n\n\t\t\tvar a = ( tubularSegments + 1 ) * j + i - 1;\n\t\t\tvar b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n\t\t\tvar c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n\t\t\tvar d = ( tubularSegments + 1 ) * j + i;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nTorusBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nTorusBufferGeometry.prototype.constructor = TorusBufferGeometry;\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n */\n\nvar ShapeUtils = {\n\n\t// calculate area of the contour polygon\n\n\tarea: function ( contour ) {\n\n\t\tvar n = contour.length;\n\t\tvar a = 0.0;\n\n\t\tfor ( var p = n - 1, q = 0; q < n; p = q ++ ) {\n\n\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\n\n\t\t}\n\n\t\treturn a * 0.5;\n\n\t},\n\n\ttriangulate: ( function () {\n\n\t\t/**\n\t\t * This code is a quick port of code written in C++ which was submitted to\n\t\t * flipcode.com by John W. Ratcliff  // July 22, 2000\n\t\t * See original code and more information here:\n\t\t * http://www.flipcode.com/archives/Efficient_Polygon_Triangulation.shtml\n\t\t *\n\t\t * ported to actionscript by Zevan Rosser\n\t\t * www.actionsnippet.com\n\t\t *\n\t\t * ported to javascript by Joshua Koo\n\t\t * http://www.lab4games.net/zz85/blog\n\t\t *\n\t\t */\n\n\t\tfunction snip( contour, u, v, w, n, verts ) {\n\n\t\t\tvar p;\n\t\t\tvar ax, ay, bx, by;\n\t\t\tvar cx, cy, px, py;\n\n\t\t\tax = contour[ verts[ u ] ].x;\n\t\t\tay = contour[ verts[ u ] ].y;\n\n\t\t\tbx = contour[ verts[ v ] ].x;\n\t\t\tby = contour[ verts[ v ] ].y;\n\n\t\t\tcx = contour[ verts[ w ] ].x;\n\t\t\tcy = contour[ verts[ w ] ].y;\n\n\t\t\tif ( ( bx - ax ) * ( cy - ay ) - ( by - ay ) * ( cx - ax ) <= 0 ) return false;\n\n\t\t\tvar aX, aY, bX, bY, cX, cY;\n\t\t\tvar apx, apy, bpx, bpy, cpx, cpy;\n\t\t\tvar cCROSSap, bCROSScp, aCROSSbp;\n\n\t\t\taX = cx - bx; aY = cy - by;\n\t\t\tbX = ax - cx; bY = ay - cy;\n\t\t\tcX = bx - ax; cY = by - ay;\n\n\t\t\tfor ( p = 0; p < n; p ++ ) {\n\n\t\t\t\tpx = contour[ verts[ p ] ].x;\n\t\t\t\tpy = contour[ verts[ p ] ].y;\n\n\t\t\t\tif ( ( ( px === ax ) && ( py === ay ) ) ||\n\t\t\t\t\t ( ( px === bx ) && ( py === by ) ) ||\n\t\t\t\t\t ( ( px === cx ) && ( py === cy ) ) )\tcontinue;\n\n\t\t\t\tapx = px - ax; apy = py - ay;\n\t\t\t\tbpx = px - bx; bpy = py - by;\n\t\t\t\tcpx = px - cx; cpy = py - cy;\n\n\t\t\t\t// see if p is inside triangle abc\n\n\t\t\t\taCROSSbp = aX * bpy - aY * bpx;\n\t\t\t\tcCROSSap = cX * apy - cY * apx;\n\t\t\t\tbCROSScp = bX * cpy - bY * cpx;\n\n\t\t\t\tif ( ( aCROSSbp >= - Number.EPSILON ) && ( bCROSScp >= - Number.EPSILON ) && ( cCROSSap >= - Number.EPSILON ) ) return false;\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\t// takes in an contour array and returns\n\n\t\treturn function triangulate( contour, indices ) {\n\n\t\t\tvar n = contour.length;\n\n\t\t\tif ( n < 3 ) return null;\n\n\t\t\tvar result = [],\n\t\t\t\tverts = [],\n\t\t\t\tvertIndices = [];\n\n\t\t\t/* we want a counter-clockwise polygon in verts */\n\n\t\t\tvar u, v, w;\n\n\t\t\tif ( ShapeUtils.area( contour ) > 0.0 ) {\n\n\t\t\t\tfor ( v = 0; v < n; v ++ ) verts[ v ] = v;\n\n\t\t\t} else {\n\n\t\t\t\tfor ( v = 0; v < n; v ++ ) verts[ v ] = ( n - 1 ) - v;\n\n\t\t\t}\n\n\t\t\tvar nv = n;\n\n\t\t\t/*  remove nv - 2 vertices, creating 1 triangle every time */\n\n\t\t\tvar count = 2 * nv; /* error detection */\n\n\t\t\tfor ( v = nv - 1; nv > 2; ) {\n\n\t\t\t\t/* if we loop, it is probably a non-simple polygon */\n\n\t\t\t\tif ( ( count -- ) <= 0 ) {\n\n\t\t\t\t\t//** Triangulate: ERROR - probable bad polygon!\n\n\t\t\t\t\t//throw ( \"Warning, unable to triangulate polygon!\" );\n\t\t\t\t\t//return null;\n\t\t\t\t\t// Sometimes warning is fine, especially polygons are triangulated in reverse.\n\t\t\t\t\tconsole.warn( 'THREE.ShapeUtils: Unable to triangulate polygon! in triangulate()' );\n\n\t\t\t\t\tif ( indices ) return vertIndices;\n\t\t\t\t\treturn result;\n\n\t\t\t\t}\n\n\t\t\t\t/* three consecutive vertices in current polygon, <u,v,w> */\n\n\t\t\t\tu = v; if ( nv <= u ) u = 0; /* previous */\n\t\t\t\tv = u + 1; if ( nv <= v ) v = 0; /* new v    */\n\t\t\t\tw = v + 1; if ( nv <= w ) w = 0; /* next     */\n\n\t\t\t\tif ( snip( contour, u, v, w, nv, verts ) ) {\n\n\t\t\t\t\tvar a, b, c, s, t;\n\n\t\t\t\t\t/* true names of the vertices */\n\n\t\t\t\t\ta = verts[ u ];\n\t\t\t\t\tb = verts[ v ];\n\t\t\t\t\tc = verts[ w ];\n\n\t\t\t\t\t/* output Triangle */\n\n\t\t\t\t\tresult.push( [ contour[ a ],\n\t\t\t\t\t\tcontour[ b ],\n\t\t\t\t\t\tcontour[ c ] ] );\n\n\n\t\t\t\t\tvertIndices.push( [ verts[ u ], verts[ v ], verts[ w ] ] );\n\n\t\t\t\t\t/* remove v from the remaining polygon */\n\n\t\t\t\t\tfor ( s = v, t = v + 1; t < nv; s ++, t ++ ) {\n\n\t\t\t\t\t\tverts[ s ] = verts[ t ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tnv --;\n\n\t\t\t\t\t/* reset error detection counter */\n\n\t\t\t\t\tcount = 2 * nv;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( indices ) return vertIndices;\n\t\t\treturn result;\n\n\t\t};\n\n\t} )(),\n\n\ttriangulateShape: function ( contour, holes ) {\n\n\t\tfunction removeDupEndPts( points ) {\n\n\t\t\tvar l = points.length;\n\n\t\t\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\t\tpoints.pop();\n\n\t\t\t}\n\n\t\t}\n\n\t\tremoveDupEndPts( contour );\n\t\tholes.forEach( removeDupEndPts );\n\n\t\tfunction point_in_segment_2D_colin( inSegPt1, inSegPt2, inOtherPt ) {\n\n\t\t\t// inOtherPt needs to be collinear to the inSegment\n\t\t\tif ( inSegPt1.x !== inSegPt2.x ) {\n\n\t\t\t\tif ( inSegPt1.x < inSegPt2.x ) {\n\n\t\t\t\t\treturn\t( ( inSegPt1.x <= inOtherPt.x ) && ( inOtherPt.x <= inSegPt2.x ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn\t( ( inSegPt2.x <= inOtherPt.x ) && ( inOtherPt.x <= inSegPt1.x ) );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( inSegPt1.y < inSegPt2.y ) {\n\n\t\t\t\t\treturn\t( ( inSegPt1.y <= inOtherPt.y ) && ( inOtherPt.y <= inSegPt2.y ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn\t( ( inSegPt2.y <= inOtherPt.y ) && ( inOtherPt.y <= inSegPt1.y ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction intersect_segments_2D( inSeg1Pt1, inSeg1Pt2, inSeg2Pt1, inSeg2Pt2, inExcludeAdjacentSegs ) {\n\n\t\t\tvar seg1dx = inSeg1Pt2.x - inSeg1Pt1.x, seg1dy = inSeg1Pt2.y - inSeg1Pt1.y;\n\t\t\tvar seg2dx = inSeg2Pt2.x - inSeg2Pt1.x, seg2dy = inSeg2Pt2.y - inSeg2Pt1.y;\n\n\t\t\tvar seg1seg2dx = inSeg1Pt1.x - inSeg2Pt1.x;\n\t\t\tvar seg1seg2dy = inSeg1Pt1.y - inSeg2Pt1.y;\n\n\t\t\tvar limit\t\t= seg1dy * seg2dx - seg1dx * seg2dy;\n\t\t\tvar perpSeg1\t= seg1dy * seg1seg2dx - seg1dx * seg1seg2dy;\n\n\t\t\tif ( Math.abs( limit ) > Number.EPSILON ) {\n\n\t\t\t\t// not parallel\n\n\t\t\t\tvar perpSeg2;\n\t\t\t\tif ( limit > 0 ) {\n\n\t\t\t\t\tif ( ( perpSeg1 < 0 ) || ( perpSeg1 > limit ) ) \t\treturn [];\n\t\t\t\t\tperpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\n\t\t\t\t\tif ( ( perpSeg2 < 0 ) || ( perpSeg2 > limit ) ) \t\treturn [];\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( ( perpSeg1 > 0 ) || ( perpSeg1 < limit ) ) \t\treturn [];\n\t\t\t\t\tperpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\n\t\t\t\t\tif ( ( perpSeg2 > 0 ) || ( perpSeg2 < limit ) ) \t\treturn [];\n\n\t\t\t\t}\n\n\t\t\t\t// i.e. to reduce rounding errors\n\t\t\t\t// intersection at endpoint of segment#1?\n\t\t\t\tif ( perpSeg2 === 0 ) {\n\n\t\t\t\t\tif ( ( inExcludeAdjacentSegs ) &&\n\t\t\t\t\t\t ( ( perpSeg1 === 0 ) || ( perpSeg1 === limit ) ) )\t\treturn [];\n\t\t\t\t\treturn [ inSeg1Pt1 ];\n\n\t\t\t\t}\n\t\t\t\tif ( perpSeg2 === limit ) {\n\n\t\t\t\t\tif ( ( inExcludeAdjacentSegs ) &&\n\t\t\t\t\t\t ( ( perpSeg1 === 0 ) || ( perpSeg1 === limit ) ) )\t\treturn [];\n\t\t\t\t\treturn [ inSeg1Pt2 ];\n\n\t\t\t\t}\n\t\t\t\t// intersection at endpoint of segment#2?\n\t\t\t\tif ( perpSeg1 === 0 )\t\treturn [ inSeg2Pt1 ];\n\t\t\t\tif ( perpSeg1 === limit )\treturn [ inSeg2Pt2 ];\n\n\t\t\t\t// return real intersection point\n\t\t\t\tvar factorSeg1 = perpSeg2 / limit;\n\t\t\t\treturn\t[ { x: inSeg1Pt1.x + factorSeg1 * seg1dx, y: inSeg1Pt1.y + factorSeg1 * seg1dy } ];\n\n\t\t\t} else {\n\n\t\t\t\t// parallel or collinear\n\t\t\t\tif ( ( perpSeg1 !== 0 ) ||\n\t\t\t\t\t ( seg2dy * seg1seg2dx !== seg2dx * seg1seg2dy ) ) \t\t\treturn [];\n\n\t\t\t\t// they are collinear or degenerate\n\t\t\t\tvar seg1Pt = ( ( seg1dx === 0 ) && ( seg1dy === 0 ) );\t// segment1 is just a point?\n\t\t\t\tvar seg2Pt = ( ( seg2dx === 0 ) && ( seg2dy === 0 ) );\t// segment2 is just a point?\n\t\t\t\t// both segments are points\n\t\t\t\tif ( seg1Pt && seg2Pt ) {\n\n\t\t\t\t\tif ( ( inSeg1Pt1.x !== inSeg2Pt1.x ) ||\n\t\t\t\t\t\t ( inSeg1Pt1.y !== inSeg2Pt1.y ) )\t\treturn [];\t// they are distinct  points\n\t\t\t\t\treturn [ inSeg1Pt1 ];\t// they are the same point\n\n\t\t\t\t}\n\t\t\t\t// segment#1  is a single point\n\t\t\t\tif ( seg1Pt ) {\n\n\t\t\t\t\tif ( ! point_in_segment_2D_colin( inSeg2Pt1, inSeg2Pt2, inSeg1Pt1 ) )\t\treturn [];\t\t// but not in segment#2\n\t\t\t\t\treturn [ inSeg1Pt1 ];\n\n\t\t\t\t}\n\t\t\t\t// segment#2  is a single point\n\t\t\t\tif ( seg2Pt ) {\n\n\t\t\t\t\tif ( ! point_in_segment_2D_colin( inSeg1Pt1, inSeg1Pt2, inSeg2Pt1 ) )\t\treturn [];\t\t// but not in segment#1\n\t\t\t\t\treturn [ inSeg2Pt1 ];\n\n\t\t\t\t}\n\n\t\t\t\t// they are collinear segments, which might overlap\n\t\t\t\tvar seg1min, seg1max, seg1minVal, seg1maxVal;\n\t\t\t\tvar seg2min, seg2max, seg2minVal, seg2maxVal;\n\t\t\t\tif ( seg1dx !== 0 ) {\n\n\t\t\t\t\t// the segments are NOT on a vertical line\n\t\t\t\t\tif ( inSeg1Pt1.x < inSeg1Pt2.x ) {\n\n\t\t\t\t\t\tseg1min = inSeg1Pt1; seg1minVal = inSeg1Pt1.x;\n\t\t\t\t\t\tseg1max = inSeg1Pt2; seg1maxVal = inSeg1Pt2.x;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tseg1min = inSeg1Pt2; seg1minVal = inSeg1Pt2.x;\n\t\t\t\t\t\tseg1max = inSeg1Pt1; seg1maxVal = inSeg1Pt1.x;\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( inSeg2Pt1.x < inSeg2Pt2.x ) {\n\n\t\t\t\t\t\tseg2min = inSeg2Pt1; seg2minVal = inSeg2Pt1.x;\n\t\t\t\t\t\tseg2max = inSeg2Pt2; seg2maxVal = inSeg2Pt2.x;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tseg2min = inSeg2Pt2; seg2minVal = inSeg2Pt2.x;\n\t\t\t\t\t\tseg2max = inSeg2Pt1; seg2maxVal = inSeg2Pt1.x;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// the segments are on a vertical line\n\t\t\t\t\tif ( inSeg1Pt1.y < inSeg1Pt2.y ) {\n\n\t\t\t\t\t\tseg1min = inSeg1Pt1; seg1minVal = inSeg1Pt1.y;\n\t\t\t\t\t\tseg1max = inSeg1Pt2; seg1maxVal = inSeg1Pt2.y;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tseg1min = inSeg1Pt2; seg1minVal = inSeg1Pt2.y;\n\t\t\t\t\t\tseg1max = inSeg1Pt1; seg1maxVal = inSeg1Pt1.y;\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( inSeg2Pt1.y < inSeg2Pt2.y ) {\n\n\t\t\t\t\t\tseg2min = inSeg2Pt1; seg2minVal = inSeg2Pt1.y;\n\t\t\t\t\t\tseg2max = inSeg2Pt2; seg2maxVal = inSeg2Pt2.y;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tseg2min = inSeg2Pt2; seg2minVal = inSeg2Pt2.y;\n\t\t\t\t\t\tseg2max = inSeg2Pt1; seg2maxVal = inSeg2Pt1.y;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t\tif ( seg1minVal <= seg2minVal ) {\n\n\t\t\t\t\tif ( seg1maxVal < seg2minVal )\treturn [];\n\t\t\t\t\tif ( seg1maxVal === seg2minVal )\t{\n\n\t\t\t\t\t\tif ( inExcludeAdjacentSegs )\t\treturn [];\n\t\t\t\t\t\treturn [ seg2min ];\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( seg1maxVal <= seg2maxVal )\treturn [ seg2min, seg1max ];\n\t\t\t\t\treturn\t[ seg2min, seg2max ];\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( seg1minVal > seg2maxVal )\treturn [];\n\t\t\t\t\tif ( seg1minVal === seg2maxVal )\t{\n\n\t\t\t\t\t\tif ( inExcludeAdjacentSegs )\t\treturn [];\n\t\t\t\t\t\treturn [ seg1min ];\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( seg1maxVal <= seg2maxVal )\treturn [ seg1min, seg1max ];\n\t\t\t\t\treturn\t[ seg1min, seg2max ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction isPointInsideAngle( inVertex, inLegFromPt, inLegToPt, inOtherPt ) {\n\n\t\t\t// The order of legs is important\n\n\t\t\t// translation of all points, so that Vertex is at (0,0)\n\t\t\tvar legFromPtX\t= inLegFromPt.x - inVertex.x, legFromPtY = inLegFromPt.y - inVertex.y;\n\t\t\tvar legToPtX\t= inLegToPt.x\t- inVertex.x, legToPtY = inLegToPt.y\t- inVertex.y;\n\t\t\tvar otherPtX\t= inOtherPt.x\t- inVertex.x, otherPtY = inOtherPt.y\t- inVertex.y;\n\n\t\t\t// main angle >0: < 180 deg.; 0: 180 deg.; <0: > 180 deg.\n\t\t\tvar from2toAngle\t= legFromPtX * legToPtY - legFromPtY * legToPtX;\n\t\t\tvar from2otherAngle\t= legFromPtX * otherPtY - legFromPtY * otherPtX;\n\n\t\t\tif ( Math.abs( from2toAngle ) > Number.EPSILON ) {\n\n\t\t\t\t// angle != 180 deg.\n\n\t\t\t\tvar other2toAngle\t\t= otherPtX * legToPtY - otherPtY * legToPtX;\n\t\t\t\t// console.log( \"from2to: \" + from2toAngle + \", from2other: \" + from2otherAngle + \", other2to: \" + other2toAngle );\n\n\t\t\t\tif ( from2toAngle > 0 ) {\n\n\t\t\t\t\t// main angle < 180 deg.\n\t\t\t\t\treturn\t( ( from2otherAngle >= 0 ) && ( other2toAngle >= 0 ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// main angle > 180 deg.\n\t\t\t\t\treturn\t( ( from2otherAngle >= 0 ) || ( other2toAngle >= 0 ) );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// angle == 180 deg.\n\t\t\t\t// console.log( \"from2to: 180 deg., from2other: \" + from2otherAngle  );\n\t\t\t\treturn\t( from2otherAngle > 0 );\n\n\t\t\t}\n\n\t\t}\n\n\n\t\tfunction removeHoles( contour, holes ) {\n\n\t\t\tvar shape = contour.concat(); // work on this shape\n\t\t\tvar hole;\n\n\t\t\tfunction isCutLineInsideAngles( inShapeIdx, inHoleIdx ) {\n\n\t\t\t\t// Check if hole point lies within angle around shape point\n\t\t\t\tvar lastShapeIdx = shape.length - 1;\n\n\t\t\t\tvar prevShapeIdx = inShapeIdx - 1;\n\t\t\t\tif ( prevShapeIdx < 0 )\t\t\tprevShapeIdx = lastShapeIdx;\n\n\t\t\t\tvar nextShapeIdx = inShapeIdx + 1;\n\t\t\t\tif ( nextShapeIdx > lastShapeIdx )\tnextShapeIdx = 0;\n\n\t\t\t\tvar insideAngle = isPointInsideAngle( shape[ inShapeIdx ], shape[ prevShapeIdx ], shape[ nextShapeIdx ], hole[ inHoleIdx ] );\n\t\t\t\tif ( ! insideAngle ) {\n\n\t\t\t\t\t// console.log( \"Vertex (Shape): \" + inShapeIdx + \", Point: \" + hole[inHoleIdx].x + \"/\" + hole[inHoleIdx].y );\n\t\t\t\t\treturn\tfalse;\n\n\t\t\t\t}\n\n\t\t\t\t// Check if shape point lies within angle around hole point\n\t\t\t\tvar lastHoleIdx = hole.length - 1;\n\n\t\t\t\tvar prevHoleIdx = inHoleIdx - 1;\n\t\t\t\tif ( prevHoleIdx < 0 )\t\t\tprevHoleIdx = lastHoleIdx;\n\n\t\t\t\tvar nextHoleIdx = inHoleIdx + 1;\n\t\t\t\tif ( nextHoleIdx > lastHoleIdx )\tnextHoleIdx = 0;\n\n\t\t\t\tinsideAngle = isPointInsideAngle( hole[ inHoleIdx ], hole[ prevHoleIdx ], hole[ nextHoleIdx ], shape[ inShapeIdx ] );\n\t\t\t\tif ( ! insideAngle ) {\n\n\t\t\t\t\t// console.log( \"Vertex (Hole): \" + inHoleIdx + \", Point: \" + shape[inShapeIdx].x + \"/\" + shape[inShapeIdx].y );\n\t\t\t\t\treturn\tfalse;\n\n\t\t\t\t}\n\n\t\t\t\treturn\ttrue;\n\n\t\t\t}\n\n\t\t\tfunction intersectsShapeEdge( inShapePt, inHolePt ) {\n\n\t\t\t\t// checks for intersections with shape edges\n\t\t\t\tvar sIdx, nextIdx, intersection;\n\t\t\t\tfor ( sIdx = 0; sIdx < shape.length; sIdx ++ ) {\n\n\t\t\t\t\tnextIdx = sIdx + 1; nextIdx %= shape.length;\n\t\t\t\t\tintersection = intersect_segments_2D( inShapePt, inHolePt, shape[ sIdx ], shape[ nextIdx ], true );\n\t\t\t\t\tif ( intersection.length > 0 )\t\treturn\ttrue;\n\n\t\t\t\t}\n\n\t\t\t\treturn\tfalse;\n\n\t\t\t}\n\n\t\t\tvar indepHoles = [];\n\n\t\t\tfunction intersectsHoleEdge( inShapePt, inHolePt ) {\n\n\t\t\t\t// checks for intersections with hole edges\n\t\t\t\tvar ihIdx, chkHole,\n\t\t\t\t\thIdx, nextIdx, intersection;\n\t\t\t\tfor ( ihIdx = 0; ihIdx < indepHoles.length; ihIdx ++ ) {\n\n\t\t\t\t\tchkHole = holes[ indepHoles[ ihIdx ] ];\n\t\t\t\t\tfor ( hIdx = 0; hIdx < chkHole.length; hIdx ++ ) {\n\n\t\t\t\t\t\tnextIdx = hIdx + 1; nextIdx %= chkHole.length;\n\t\t\t\t\t\tintersection = intersect_segments_2D( inShapePt, inHolePt, chkHole[ hIdx ], chkHole[ nextIdx ], true );\n\t\t\t\t\t\tif ( intersection.length > 0 )\t\treturn\ttrue;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t\treturn\tfalse;\n\n\t\t\t}\n\n\t\t\tvar holeIndex, shapeIndex,\n\t\t\t\tshapePt, holePt,\n\t\t\t\tholeIdx, cutKey, failedCuts = [],\n\t\t\t\ttmpShape1, tmpShape2,\n\t\t\t\ttmpHole1, tmpHole2;\n\n\t\t\tfor ( var h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tindepHoles.push( h );\n\n\t\t\t}\n\n\t\t\tvar minShapeIndex = 0;\n\t\t\tvar counter = indepHoles.length * 2;\n\t\t\twhile ( indepHoles.length > 0 ) {\n\n\t\t\t\tcounter --;\n\t\t\t\tif ( counter < 0 ) {\n\n\t\t\t\t\tconsole.log( 'THREE.ShapeUtils: Infinite Loop! Holes left:\" + indepHoles.length + \", Probably Hole outside Shape!' );\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\t// search for shape-vertex and hole-vertex,\n\t\t\t\t// which can be connected without intersections\n\t\t\t\tfor ( shapeIndex = minShapeIndex; shapeIndex < shape.length; shapeIndex ++ ) {\n\n\t\t\t\t\tshapePt = shape[ shapeIndex ];\n\t\t\t\t\tholeIndex\t= - 1;\n\n\t\t\t\t\t// search for hole which can be reached without intersections\n\t\t\t\t\tfor ( var h = 0; h < indepHoles.length; h ++ ) {\n\n\t\t\t\t\t\tholeIdx = indepHoles[ h ];\n\n\t\t\t\t\t\t// prevent multiple checks\n\t\t\t\t\t\tcutKey = shapePt.x + ':' + shapePt.y + ':' + holeIdx;\n\t\t\t\t\t\tif ( failedCuts[ cutKey ] !== undefined )\t\t\tcontinue;\n\n\t\t\t\t\t\thole = holes[ holeIdx ];\n\t\t\t\t\t\tfor ( var h2 = 0; h2 < hole.length; h2 ++ ) {\n\n\t\t\t\t\t\t\tholePt = hole[ h2 ];\n\t\t\t\t\t\t\tif ( ! isCutLineInsideAngles( shapeIndex, h2 ) )\t\tcontinue;\n\t\t\t\t\t\t\tif ( intersectsShapeEdge( shapePt, holePt ) )\t\tcontinue;\n\t\t\t\t\t\t\tif ( intersectsHoleEdge( shapePt, holePt ) )\t\tcontinue;\n\n\t\t\t\t\t\t\tholeIndex = h2;\n\t\t\t\t\t\t\tindepHoles.splice( h, 1 );\n\n\t\t\t\t\t\t\ttmpShape1 = shape.slice( 0, shapeIndex + 1 );\n\t\t\t\t\t\t\ttmpShape2 = shape.slice( shapeIndex );\n\t\t\t\t\t\t\ttmpHole1 = hole.slice( holeIndex );\n\t\t\t\t\t\t\ttmpHole2 = hole.slice( 0, holeIndex + 1 );\n\n\t\t\t\t\t\t\tshape = tmpShape1.concat( tmpHole1 ).concat( tmpHole2 ).concat( tmpShape2 );\n\n\t\t\t\t\t\t\tminShapeIndex = shapeIndex;\n\n\t\t\t\t\t\t\t// Debug only, to show the selected cuts\n\t\t\t\t\t\t\t// glob_CutLines.push( [ shapePt, holePt ] );\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( holeIndex >= 0 )\tbreak;\t\t// hole-vertex found\n\n\t\t\t\t\t\tfailedCuts[ cutKey ] = true;\t\t\t// remember failure\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( holeIndex >= 0 )\tbreak;\t\t// hole-vertex found\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn shape; \t\t\t/* shape with no holes */\n\n\t\t}\n\n\n\t\tvar i, il, f, face,\n\t\t\tkey, index,\n\t\t\tallPointsMap = {};\n\n\t\t// To maintain reference to old shape, one must match coordinates, or offset the indices from original arrays. It's probably easier to do the first.\n\n\t\tvar allpoints = contour.concat();\n\n\t\tfor ( var h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\tArray.prototype.push.apply( allpoints, holes[ h ] );\n\n\t\t}\n\n\t\t//console.log( \"allpoints\",allpoints, allpoints.length );\n\n\t\t// prepare all points map\n\n\t\tfor ( i = 0, il = allpoints.length; i < il; i ++ ) {\n\n\t\t\tkey = allpoints[ i ].x + ':' + allpoints[ i ].y;\n\n\t\t\tif ( allPointsMap[ key ] !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ShapeUtils: Duplicate point', key, i );\n\n\t\t\t}\n\n\t\t\tallPointsMap[ key ] = i;\n\n\t\t}\n\n\t\t// remove holes by cutting paths to holes and adding them to the shape\n\t\tvar shapeWithoutHoles = removeHoles( contour, holes );\n\n\t\tvar triangles = ShapeUtils.triangulate( shapeWithoutHoles, false ); // True returns indices for points of spooled shape\n\t\t//console.log( \"triangles\",triangles, triangles.length );\n\n\t\t// check all face vertices against all points map\n\n\t\tfor ( i = 0, il = triangles.length; i < il; i ++ ) {\n\n\t\t\tface = triangles[ i ];\n\n\t\t\tfor ( f = 0; f < 3; f ++ ) {\n\n\t\t\t\tkey = face[ f ].x + ':' + face[ f ].y;\n\n\t\t\t\tindex = allPointsMap[ key ];\n\n\t\t\t\tif ( index !== undefined ) {\n\n\t\t\t\t\tface[ f ] = index;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn triangles.concat();\n\n\t},\n\n\tisClockWise: function ( pts ) {\n\n\t\treturn ShapeUtils.area( pts ) < 0;\n\n\t}\n\n};\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n *\n * Creates extruded geometry from a path shape.\n *\n * parameters = {\n *\n *  curveSegments: <int>, // number of points on the curves\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n *  amount: <int>, // Depth to extrude the shape\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\n *  bevelSize: <float>, // how far from shape outline is bevel\n *  bevelSegments: <int>, // number of bevel layers\n *\n *  extrudePath: <THREE.Curve> // curve to extrude shape along\n *  frames: <Object> // containing arrays of tangents, normals, binormals\n *\n *  UVGenerator: <Object> // object that provides UV generator functions\n *\n * }\n */\n\n// ExtrudeGeometry\n\nfunction ExtrudeGeometry( shapes, options ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'ExtrudeGeometry';\n\n\tthis.parameters = {\n\t\tshapes: shapes,\n\t\toptions: options\n\t};\n\n\tthis.fromBufferGeometry( new ExtrudeBufferGeometry( shapes, options ) );\n\tthis.mergeVertices();\n\n}\n\nExtrudeGeometry.prototype = Object.create( Geometry.prototype );\nExtrudeGeometry.prototype.constructor = ExtrudeGeometry;\n\n// ExtrudeBufferGeometry\n\nfunction ExtrudeBufferGeometry( shapes, options ) {\n\n\tif ( typeof ( shapes ) === \"undefined\" ) {\n\n\t\treturn;\n\n\t}\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'ExtrudeBufferGeometry';\n\n\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\n\n\tthis.addShapeList( shapes, options );\n\n\tthis.computeVertexNormals();\n\n\t// can't really use automatic vertex normals\n\t// as then front and back sides get smoothed too\n\t// should do separate smoothing just for sides\n\n\t//this.computeVertexNormals();\n\n\t//console.log( \"took\", ( Date.now() - startTime ) );\n\n}\n\nExtrudeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nExtrudeBufferGeometry.prototype.constructor = ExtrudeBufferGeometry;\n\nExtrudeBufferGeometry.prototype.getArrays = function () {\n\n\tvar positionAttribute = this.getAttribute( \"position\" );\n\tvar verticesArray = positionAttribute ? Array.prototype.slice.call( positionAttribute.array ) : [];\n\n\tvar uvAttribute = this.getAttribute( \"uv\" );\n\tvar uvArray = uvAttribute ? Array.prototype.slice.call( uvAttribute.array ) : [];\n\n\tvar IndexAttribute = this.index;\n\tvar indicesArray = IndexAttribute ? Array.prototype.slice.call( IndexAttribute.array ) : [];\n\n\treturn {\n\t\tposition: verticesArray,\n\t\tuv: uvArray,\n\t\tindex: indicesArray\n\t};\n\n};\n\nExtrudeBufferGeometry.prototype.addShapeList = function ( shapes, options ) {\n\n\tvar sl = shapes.length;\n\toptions.arrays = this.getArrays();\n\n\tfor ( var s = 0; s < sl; s ++ ) {\n\n\t\tvar shape = shapes[ s ];\n\t\tthis.addShape( shape, options );\n\n\t}\n\n\tthis.setIndex( options.arrays.index );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( options.arrays.position, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( options.arrays.uv, 2 ) );\n\n};\n\nExtrudeBufferGeometry.prototype.addShape = function ( shape, options ) {\n\n\tvar arrays = options.arrays ? options.arrays : this.getArrays();\n\tvar verticesArray = arrays.position;\n\tvar indicesArray = arrays.index;\n\tvar uvArray = arrays.uv;\n\n\tvar placeholder = [];\n\n\n\tvar amount = options.amount !== undefined ? options.amount : 100;\n\n\tvar bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6; // 10\n\tvar bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2; // 8\n\tvar bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\n\tvar bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true; // false\n\n\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\n\tvar steps = options.steps !== undefined ? options.steps : 1;\n\n\tvar extrudePath = options.extrudePath;\n\tvar extrudePts, extrudeByPath = false;\n\n\t// Use default WorldUVGenerator if no UV generators are specified.\n\tvar uvgen = options.UVGenerator !== undefined ? options.UVGenerator : ExtrudeGeometry.WorldUVGenerator;\n\n\tvar splineTube, binormal, normal, position2;\n\tif ( extrudePath ) {\n\n\t\textrudePts = extrudePath.getSpacedPoints( steps );\n\n\t\textrudeByPath = true;\n\t\tbevelEnabled = false; // bevels not supported for path extrusion\n\n\t\t// SETUP TNB variables\n\n\t\t// TODO1 - have a .isClosed in spline?\n\n\t\tsplineTube = options.frames !== undefined ? options.frames : extrudePath.computeFrenetFrames( steps, false );\n\n\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n\t\tbinormal = new Vector3();\n\t\tnormal = new Vector3();\n\t\tposition2 = new Vector3();\n\n\t}\n\n\t// Safeguards if bevels are not enabled\n\n\tif ( ! bevelEnabled ) {\n\n\t\tbevelSegments = 0;\n\t\tbevelThickness = 0;\n\t\tbevelSize = 0;\n\n\t}\n\n\t// Variables initialization\n\n\tvar ahole, h, hl; // looping of holes\n\tvar scope = this;\n\n\tvar shapePoints = shape.extractPoints( curveSegments );\n\n\tvar vertices = shapePoints.shape;\n\tvar holes = shapePoints.holes;\n\n\tvar reverse = ! ShapeUtils.isClockWise( vertices );\n\n\tif ( reverse ) {\n\n\t\tvertices = vertices.reverse();\n\n\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\tahole = holes[ h ];\n\n\t\t\tif ( ShapeUtils.isClockWise( ahole ) ) {\n\n\t\t\t\tholes[ h ] = ahole.reverse();\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\n\tvar faces = ShapeUtils.triangulateShape( vertices, holes );\n\n\t/* Vertices */\n\n\tvar contour = vertices; // vertices has all points but contour has only points of circumference\n\n\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\tahole = holes[ h ];\n\n\t\tvertices = vertices.concat( ahole );\n\n\t}\n\n\n\tfunction scalePt2( pt, vec, size ) {\n\n\t\tif ( ! vec ) console.error( \"THREE.ExtrudeGeometry: vec does not exist\" );\n\n\t\treturn vec.clone().multiplyScalar( size ).add( pt );\n\n\t}\n\n\tvar b, bs, t, z,\n\t\tvert, vlen = vertices.length,\n\t\tface, flen = faces.length;\n\n\n\t// Find directions for point movement\n\n\n\tfunction getBevelVec( inPt, inPrev, inNext ) {\n\n\t\t// computes for inPt the corresponding point inPt' on a new contour\n\t\t//   shifted by 1 unit (length of normalized vector) to the left\n\t\t// if we walk along contour clockwise, this new contour is outside the old one\n\t\t//\n\t\t// inPt' is the intersection of the two lines parallel to the two\n\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\n\n\t\tvar v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n\n\t\t// good reading for geometry algorithms (here: line-line intersection)\n\t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\n\t\tvar v_prev_x = inPt.x - inPrev.x,\n\t\t\tv_prev_y = inPt.y - inPrev.y;\n\t\tvar v_next_x = inNext.x - inPt.x,\n\t\t\tv_next_y = inNext.y - inPt.y;\n\n\t\tvar v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\n\n\t\t// check for collinear edges\n\t\tvar collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\n\n\t\t\t// not collinear\n\n\t\t\t// length of vectors for normalizing\n\n\t\t\tvar v_prev_len = Math.sqrt( v_prev_lensq );\n\t\t\tvar v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\n\n\t\t\t// shift adjacent points by unit vectors to the left\n\n\t\t\tvar ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\n\t\t\tvar ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\n\n\t\t\tvar ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\n\t\t\tvar ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\n\n\t\t\t// scaling factor for v_prev to intersection point\n\n\t\t\tvar sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\n\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x ) /\n\t\t\t\t( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t// vector from inPt to intersection point\n\n\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\n\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\n\n\t\t\t// Don't normalize!, otherwise sharp corners become ugly\n\t\t\t//  but prevent crazy spikes\n\t\t\tvar v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\n\t\t\tif ( v_trans_lensq <= 2 ) {\n\n\t\t\t\treturn new Vector2( v_trans_x, v_trans_y );\n\n\t\t\t} else {\n\n\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// handle special case of collinear edges\n\n\t\t\tvar direction_eq = false; // assumes: opposite\n\t\t\tif ( v_prev_x > Number.EPSILON ) {\n\n\t\t\t\tif ( v_next_x > Number.EPSILON ) {\n\n\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\n\n\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\n\n\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( direction_eq ) {\n\n\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\tv_trans_x = - v_prev_y;\n\t\t\t\tv_trans_y = v_prev_x;\n\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\n\n\t\t\t} else {\n\n\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n\t\t\t\tv_trans_x = v_prev_x;\n\t\t\t\tv_trans_y = v_prev_y;\n\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\n\n\t}\n\n\n\tvar contourMovements = [];\n\n\tfor ( var i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\tif ( j === il ) j = 0;\n\t\tif ( k === il ) k = 0;\n\n\t\t//  (j)---(i)---(k)\n\t\t// console.log('i,j,k', i, j , k)\n\n\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\n\n\t}\n\n\tvar holesMovements = [],\n\t\toneHoleMovements, verticesMovements = contourMovements.concat();\n\n\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\tahole = holes[ h ];\n\n\t\toneHoleMovements = [];\n\n\t\tfor ( i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\tif ( j === il ) j = 0;\n\t\t\tif ( k === il ) k = 0;\n\n\t\t\t//  (j)---(i)---(k)\n\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\n\n\t\t}\n\n\t\tholesMovements.push( oneHoleMovements );\n\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\n\n\t}\n\n\n\t// Loop bevelSegments, 1 for the front, 1 for the back\n\n\tfor ( b = 0; b < bevelSegments; b ++ ) {\n\n\t\t//for ( b = bevelSegments; b > 0; b -- ) {\n\n\t\tt = b / bevelSegments;\n\t\tz = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\tbs = bevelSize * Math.sin( t * Math.PI / 2 );\n\n\t\t// contract shape\n\n\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\n\t\t\tv( vert.x, vert.y, - z );\n\n\t\t}\n\n\t\t// expand holes\n\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\tahole = holes[ h ];\n\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tbs = bevelSize;\n\n\t// Back facing vertices\n\n\tfor ( i = 0; i < vlen; i ++ ) {\n\n\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\tif ( ! extrudeByPath ) {\n\n\t\t\tv( vert.x, vert.y, 0 );\n\n\t\t} else {\n\n\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\n\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\n\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\n\n\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\n\n\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t}\n\n\t}\n\n\t// Add stepped vertices...\n\t// Including front facing vertices\n\n\tvar s;\n\n\tfor ( s = 1; s <= steps; s ++ ) {\n\n\t\tfor ( i = 0; i < vlen; i ++ ) {\n\n\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\tv( vert.x, vert.y, amount / steps * s );\n\n\t\t\t} else {\n\n\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\n\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\n\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\n\n\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\n\n\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\n\t// Add bevel segments planes\n\n\t//for ( b = 1; b <= bevelSegments; b ++ ) {\n\tfor ( b = bevelSegments - 1; b >= 0; b -- ) {\n\n\t\tt = b / bevelSegments;\n\t\tz = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\tbs = bevelSize * Math.sin( t * Math.PI / 2 );\n\n\t\t// contract shape\n\n\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\t\t\tv( vert.x, vert.y, amount + z );\n\n\t\t}\n\n\t\t// expand holes\n\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\tahole = holes[ h ];\n\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\tv( vert.x, vert.y, amount + z );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/* Faces */\n\n\t// Top and bottom faces\n\n\tbuildLidFaces();\n\n\t// Sides faces\n\n\tbuildSideFaces();\n\n\n\t/////  Internal functions\n\n\tfunction buildLidFaces() {\n\n\t\tvar start = verticesArray.length / 3;\n\n\t\tif ( bevelEnabled ) {\n\n\t\t\tvar layer = 0; // steps + 1\n\t\t\tvar offset = vlen * layer;\n\n\t\t\t// Bottom faces\n\n\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\tface = faces[ i ];\n\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\n\n\t\t\t}\n\n\t\t\tlayer = steps + bevelSegments * 2;\n\t\t\toffset = vlen * layer;\n\n\t\t\t// Top faces\n\n\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\tface = faces[ i ];\n\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// Bottom faces\n\n\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\tface = faces[ i ];\n\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\n\n\t\t\t}\n\n\t\t\t// Top faces\n\n\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\tface = faces[ i ];\n\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\n\n\t\t\t}\n\n\t\t}\n\n\t\tscope.addGroup( start, verticesArray.length / 3 - start, options.material !== undefined ? options.material : 0 );\n\n\t}\n\n\t// Create faces for the z-sides of the shape\n\n\tfunction buildSideFaces() {\n\n\t\tvar start = verticesArray.length / 3;\n\t\tvar layeroffset = 0;\n\t\tsidewalls( contour, layeroffset );\n\t\tlayeroffset += contour.length;\n\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\tahole = holes[ h ];\n\t\t\tsidewalls( ahole, layeroffset );\n\n\t\t\t//, true\n\t\t\tlayeroffset += ahole.length;\n\n\t\t}\n\n\n\t\tscope.addGroup( start, verticesArray.length / 3 - start, options.extrudeMaterial !== undefined ? options.extrudeMaterial : 1 );\n\n\n\t}\n\n\tfunction sidewalls( contour, layeroffset ) {\n\n\t\tvar j, k;\n\t\ti = contour.length;\n\n\t\twhile ( -- i >= 0 ) {\n\n\t\t\tj = i;\n\t\t\tk = i - 1;\n\t\t\tif ( k < 0 ) k = contour.length - 1;\n\n\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\n\n\t\t\tvar s = 0,\n\t\t\t\tsl = steps + bevelSegments * 2;\n\n\t\t\tfor ( s = 0; s < sl; s ++ ) {\n\n\t\t\t\tvar slen1 = vlen * s;\n\t\t\t\tvar slen2 = vlen * ( s + 1 );\n\n\t\t\t\tvar a = layeroffset + j + slen1,\n\t\t\t\t\tb = layeroffset + k + slen1,\n\t\t\t\t\tc = layeroffset + k + slen2,\n\t\t\t\t\td = layeroffset + j + slen2;\n\n\t\t\t\tf4( a, b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction v( x, y, z ) {\n\n\t\tplaceholder.push( x );\n\t\tplaceholder.push( y );\n\t\tplaceholder.push( z );\n\n\t}\n\n\n\tfunction f3( a, b, c ) {\n\n\t\taddVertex( a );\n\t\taddVertex( b );\n\t\taddVertex( c );\n\n\t\tvar nextIndex = verticesArray.length / 3;\n\t\tvar uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\taddUV( uvs[ 0 ] );\n\t\taddUV( uvs[ 1 ] );\n\t\taddUV( uvs[ 2 ] );\n\n\t}\n\n\tfunction f4( a, b, c, d ) {\n\n\t\taddVertex( a );\n\t\taddVertex( b );\n\t\taddVertex( d );\n\n\t\taddVertex( b );\n\t\taddVertex( c );\n\t\taddVertex( d );\n\n\n\t\tvar nextIndex = verticesArray.length / 3;\n\t\tvar uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\taddUV( uvs[ 0 ] );\n\t\taddUV( uvs[ 1 ] );\n\t\taddUV( uvs[ 3 ] );\n\n\t\taddUV( uvs[ 1 ] );\n\t\taddUV( uvs[ 2 ] );\n\t\taddUV( uvs[ 3 ] );\n\n\t}\n\n\tfunction addVertex( index ) {\n\n\t\tindicesArray.push( verticesArray.length / 3 );\n\t\tverticesArray.push( placeholder[ index * 3 + 0 ] );\n\t\tverticesArray.push( placeholder[ index * 3 + 1 ] );\n\t\tverticesArray.push( placeholder[ index * 3 + 2 ] );\n\n\t}\n\n\n\tfunction addUV( vector2 ) {\n\n\t\tuvArray.push( vector2.x );\n\t\tuvArray.push( vector2.y );\n\n\t}\n\n\tif ( ! options.arrays ) {\n\n\t\tthis.setIndex( indicesArray );\n\t\tthis.addAttribute( 'position', new Float32BufferAttribute( verticesArray, 3 ) );\n\t\tthis.addAttribute( 'uv', new Float32BufferAttribute( options.arrays.uv, 2 ) );\n\n\t}\n\n};\n\nExtrudeGeometry.WorldUVGenerator = {\n\n\tgenerateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {\n\n\t\tvar a_x = vertices[ indexA * 3 ];\n\t\tvar a_y = vertices[ indexA * 3 + 1 ];\n\t\tvar b_x = vertices[ indexB * 3 ];\n\t\tvar b_y = vertices[ indexB * 3 + 1 ];\n\t\tvar c_x = vertices[ indexC * 3 ];\n\t\tvar c_y = vertices[ indexC * 3 + 1 ];\n\n\t\treturn [\n\t\t\tnew Vector2( a_x, a_y ),\n\t\t\tnew Vector2( b_x, b_y ),\n\t\t\tnew Vector2( c_x, c_y )\n\t\t];\n\n\t},\n\n\tgenerateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {\n\n\t\tvar a_x = vertices[ indexA * 3 ];\n\t\tvar a_y = vertices[ indexA * 3 + 1 ];\n\t\tvar a_z = vertices[ indexA * 3 + 2 ];\n\t\tvar b_x = vertices[ indexB * 3 ];\n\t\tvar b_y = vertices[ indexB * 3 + 1 ];\n\t\tvar b_z = vertices[ indexB * 3 + 2 ];\n\t\tvar c_x = vertices[ indexC * 3 ];\n\t\tvar c_y = vertices[ indexC * 3 + 1 ];\n\t\tvar c_z = vertices[ indexC * 3 + 2 ];\n\t\tvar d_x = vertices[ indexD * 3 ];\n\t\tvar d_y = vertices[ indexD * 3 + 1 ];\n\t\tvar d_z = vertices[ indexD * 3 + 2 ];\n\n\t\tif ( Math.abs( a_y - b_y ) < 0.01 ) {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_x, 1 - a_z ),\n\t\t\t\tnew Vector2( b_x, 1 - b_z ),\n\t\t\t\tnew Vector2( c_x, 1 - c_z ),\n\t\t\t\tnew Vector2( d_x, 1 - d_z )\n\t\t\t];\n\n\t\t} else {\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_y, 1 - a_z ),\n\t\t\t\tnew Vector2( b_y, 1 - b_z ),\n\t\t\t\tnew Vector2( c_y, 1 - c_z ),\n\t\t\t\tnew Vector2( d_y, 1 - d_z )\n\t\t\t];\n\n\t\t}\n\n\t}\n};\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author alteredq / http://alteredqualia.com/\n *\n * Text = 3D Text\n *\n * parameters = {\n *  font: <THREE.Font>, // font\n *\n *  size: <float>, // size of the text\n *  height: <float>, // thickness to extrude text\n *  curveSegments: <int>, // number of points on the curves\n *\n *  bevelEnabled: <bool>, // turn on bevel\n *  bevelThickness: <float>, // how deep into text bevel goes\n *  bevelSize: <float> // how far from text outline is bevel\n * }\n */\n\n// TextGeometry\n\nfunction TextGeometry( text, parameters ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'TextGeometry';\n\n\tthis.parameters = {\n\t\ttext: text,\n\t\tparameters: parameters\n\t};\n\n\tthis.fromBufferGeometry( new TextBufferGeometry( text, parameters ) );\n\tthis.mergeVertices();\n\n}\n\nTextGeometry.prototype = Object.create( Geometry.prototype );\nTextGeometry.prototype.constructor = TextGeometry;\n\n// TextBufferGeometry\n\nfunction TextBufferGeometry( text, parameters ) {\n\n\tparameters = parameters || {};\n\n\tvar font = parameters.font;\n\n\tif ( ! ( font && font.isFont ) ) {\n\n\t\tconsole.error( 'THREE.TextGeometry: font parameter is not an instance of THREE.Font.' );\n\t\treturn new Geometry();\n\n\t}\n\n\tvar shapes = font.generateShapes( text, parameters.size, parameters.curveSegments );\n\n\t// translate parameters to ExtrudeGeometry API\n\n\tparameters.amount = parameters.height !== undefined ? parameters.height : 50;\n\n\t// defaults\n\n\tif ( parameters.bevelThickness === undefined ) parameters.bevelThickness = 10;\n\tif ( parameters.bevelSize === undefined ) parameters.bevelSize = 8;\n\tif ( parameters.bevelEnabled === undefined ) parameters.bevelEnabled = false;\n\n\tExtrudeBufferGeometry.call( this, shapes, parameters );\n\n\tthis.type = 'TextBufferGeometry';\n\n}\n\nTextBufferGeometry.prototype = Object.create( ExtrudeBufferGeometry.prototype );\nTextBufferGeometry.prototype.constructor = TextBufferGeometry;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author benaadams / https://twitter.com/ben_a_adams\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// SphereGeometry\n\nfunction SphereGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'SphereGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments,\n\t\tphiStart: phiStart,\n\t\tphiLength: phiLength,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tthis.fromBufferGeometry( new SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) );\n\tthis.mergeVertices();\n\n}\n\nSphereGeometry.prototype = Object.create( Geometry.prototype );\nSphereGeometry.prototype.constructor = SphereGeometry;\n\n// SphereBufferGeometry\n\nfunction SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'SphereBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\twidthSegments: widthSegments,\n\t\theightSegments: heightSegments,\n\t\tphiStart: phiStart,\n\t\tphiLength: phiLength,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tradius = radius || 1;\n\n\twidthSegments = Math.max( 3, Math.floor( widthSegments ) || 8 );\n\theightSegments = Math.max( 2, Math.floor( heightSegments ) || 6 );\n\n\tphiStart = phiStart !== undefined ? phiStart : 0;\n\tphiLength = phiLength !== undefined ? phiLength : Math.PI * 2;\n\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI;\n\n\tvar thetaEnd = thetaStart + thetaLength;\n\n\tvar ix, iy;\n\n\tvar index = 0;\n\tvar grid = [];\n\n\tvar vertex = new Vector3();\n\tvar normal = new Vector3();\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// generate vertices, normals and uvs\n\n\tfor ( iy = 0; iy <= heightSegments; iy ++ ) {\n\n\t\tvar verticesRow = [];\n\n\t\tvar v = iy / heightSegments;\n\n\t\tfor ( ix = 0; ix <= widthSegments; ix ++ ) {\n\n\t\t\tvar u = ix / widthSegments;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\t\t\tvertex.y = radius * Math.cos( thetaStart + v * thetaLength );\n\t\t\tvertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormal.set( vertex.x, vertex.y, vertex.z ).normalize();\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( u, 1 - v );\n\n\t\t\tverticesRow.push( index ++ );\n\n\t\t}\n\n\t\tgrid.push( verticesRow );\n\n\t}\n\n\t// indices\n\n\tfor ( iy = 0; iy < heightSegments; iy ++ ) {\n\n\t\tfor ( ix = 0; ix < widthSegments; ix ++ ) {\n\n\t\t\tvar a = grid[ iy ][ ix + 1 ];\n\t\t\tvar b = grid[ iy ][ ix ];\n\t\t\tvar c = grid[ iy + 1 ][ ix ];\n\t\t\tvar d = grid[ iy + 1 ][ ix + 1 ];\n\n\t\t\tif ( iy !== 0 || thetaStart > 0 ) indices.push( a, b, d );\n\t\t\tif ( iy !== heightSegments - 1 || thetaEnd < Math.PI ) indices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nSphereBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nSphereBufferGeometry.prototype.constructor = SphereBufferGeometry;\n\n/**\n * @author Kaleb Murphy\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// RingGeometry\n\nfunction RingGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'RingGeometry';\n\n\tthis.parameters = {\n\t\tinnerRadius: innerRadius,\n\t\touterRadius: outerRadius,\n\t\tthetaSegments: thetaSegments,\n\t\tphiSegments: phiSegments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tthis.fromBufferGeometry( new RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) );\n\tthis.mergeVertices();\n\n}\n\nRingGeometry.prototype = Object.create( Geometry.prototype );\nRingGeometry.prototype.constructor = RingGeometry;\n\n// RingBufferGeometry\n\nfunction RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'RingBufferGeometry';\n\n\tthis.parameters = {\n\t\tinnerRadius: innerRadius,\n\t\touterRadius: outerRadius,\n\t\tthetaSegments: thetaSegments,\n\t\tphiSegments: phiSegments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tinnerRadius = innerRadius || 0.5;\n\touterRadius = outerRadius || 1;\n\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\tthetaSegments = thetaSegments !== undefined ? Math.max( 3, thetaSegments ) : 8;\n\tphiSegments = phiSegments !== undefined ? Math.max( 1, phiSegments ) : 1;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// some helper variables\n\n\tvar segment;\n\tvar radius = innerRadius;\n\tvar radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\tvar vertex = new Vector3();\n\tvar uv = new Vector2();\n\tvar j, i;\n\n\t// generate vertices, normals and uvs\n\n\tfor ( j = 0; j <= phiSegments; j ++ ) {\n\n\t\tfor ( i = 0; i <= thetaSegments; i ++ ) {\n\n\t\t\t// values are generate from the inside of the ring to the outside\n\n\t\t\tsegment = thetaStart + i / thetaSegments * thetaLength;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t// uv\n\n\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\n\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t}\n\n\t\t// increase the radius for next row of vertices\n\n\t\tradius += radiusStep;\n\n\t}\n\n\t// indices\n\n\tfor ( j = 0; j < phiSegments; j ++ ) {\n\n\t\tvar thetaSegmentLevel = j * ( thetaSegments + 1 );\n\n\t\tfor ( i = 0; i < thetaSegments; i ++ ) {\n\n\t\t\tsegment = i + thetaSegmentLevel;\n\n\t\t\tvar a = segment;\n\t\t\tvar b = segment + thetaSegments + 1;\n\t\t\tvar c = segment + thetaSegments + 2;\n\t\t\tvar d = segment + 1;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nRingBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nRingBufferGeometry.prototype.constructor = RingBufferGeometry;\n\n/**\n * @author astrodud / http://astrodud.isgreat.org/\n * @author zz85 / https://github.com/zz85\n * @author bhouston / http://clara.io\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// LatheGeometry\n\nfunction LatheGeometry( points, segments, phiStart, phiLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'LatheGeometry';\n\n\tthis.parameters = {\n\t\tpoints: points,\n\t\tsegments: segments,\n\t\tphiStart: phiStart,\n\t\tphiLength: phiLength\n\t};\n\n\tthis.fromBufferGeometry( new LatheBufferGeometry( points, segments, phiStart, phiLength ) );\n\tthis.mergeVertices();\n\n}\n\nLatheGeometry.prototype = Object.create( Geometry.prototype );\nLatheGeometry.prototype.constructor = LatheGeometry;\n\n// LatheBufferGeometry\n\nfunction LatheBufferGeometry( points, segments, phiStart, phiLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'LatheBufferGeometry';\n\n\tthis.parameters = {\n\t\tpoints: points,\n\t\tsegments: segments,\n\t\tphiStart: phiStart,\n\t\tphiLength: phiLength\n\t};\n\n\tsegments = Math.floor( segments ) || 12;\n\tphiStart = phiStart || 0;\n\tphiLength = phiLength || Math.PI * 2;\n\n\t// clamp phiLength so it's in range of [ 0, 2PI ]\n\n\tphiLength = _Math.clamp( phiLength, 0, Math.PI * 2 );\n\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar base;\n\tvar inverseSegments = 1.0 / segments;\n\tvar vertex = new Vector3();\n\tvar uv = new Vector2();\n\tvar i, j;\n\n\t// generate vertices and uvs\n\n\tfor ( i = 0; i <= segments; i ++ ) {\n\n\t\tvar phi = phiStart + i * inverseSegments * phiLength;\n\n\t\tvar sin = Math.sin( phi );\n\t\tvar cos = Math.cos( phi );\n\n\t\tfor ( j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = points[ j ].x * sin;\n\t\t\tvertex.y = points[ j ].y;\n\t\t\tvertex.z = points[ j ].x * cos;\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// uv\n\n\t\t\tuv.x = i / segments;\n\t\t\tuv.y = j / ( points.length - 1 );\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\n\t\t}\n\n\t}\n\n\t// indices\n\n\tfor ( i = 0; i < segments; i ++ ) {\n\n\t\tfor ( j = 0; j < ( points.length - 1 ); j ++ ) {\n\n\t\t\tbase = j + i * points.length;\n\n\t\t\tvar a = base;\n\t\t\tvar b = base + points.length;\n\t\t\tvar c = base + points.length + 1;\n\t\t\tvar d = base + 1;\n\n\t\t\t// faces\n\n\t\t\tindices.push( a, b, d );\n\t\t\tindices.push( b, c, d );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t// generate normals\n\n\tthis.computeVertexNormals();\n\n\t// if the geometry is closed, we need to average the normals along the seam.\n\t// because the corresponding vertices are identical (but still have different UVs).\n\n\tif ( phiLength === Math.PI * 2 ) {\n\n\t\tvar normals = this.attributes.normal.array;\n\t\tvar n1 = new Vector3();\n\t\tvar n2 = new Vector3();\n\t\tvar n = new Vector3();\n\n\t\t// this is the buffer offset for the last line of vertices\n\n\t\tbase = segments * points.length * 3;\n\n\t\tfor ( i = 0, j = 0; i < points.length; i ++, j += 3 ) {\n\n\t\t\t// select the normal of the vertex in the first line\n\n\t\t\tn1.x = normals[ j + 0 ];\n\t\t\tn1.y = normals[ j + 1 ];\n\t\t\tn1.z = normals[ j + 2 ];\n\n\t\t\t// select the normal of the vertex in the last line\n\n\t\t\tn2.x = normals[ base + j + 0 ];\n\t\t\tn2.y = normals[ base + j + 1 ];\n\t\t\tn2.z = normals[ base + j + 2 ];\n\n\t\t\t// average normals\n\n\t\t\tn.addVectors( n1, n2 ).normalize();\n\n\t\t\t// assign the new values to both normals\n\n\t\t\tnormals[ j + 0 ] = normals[ base + j + 0 ] = n.x;\n\t\t\tnormals[ j + 1 ] = normals[ base + j + 1 ] = n.y;\n\t\t\tnormals[ j + 2 ] = normals[ base + j + 2 ] = n.z;\n\n\t\t}\n\n\t}\n\n}\n\nLatheBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nLatheBufferGeometry.prototype.constructor = LatheBufferGeometry;\n\n/**\n * @author jonobr1 / http://jonobr1.com\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// ShapeGeometry\n\nfunction ShapeGeometry( shapes, curveSegments ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'ShapeGeometry';\n\n\tif ( typeof curveSegments === 'object' ) {\n\n\t\tconsole.warn( 'THREE.ShapeGeometry: Options parameter has been removed.' );\n\n\t\tcurveSegments = curveSegments.curveSegments;\n\n\t}\n\n\tthis.parameters = {\n\t\tshapes: shapes,\n\t\tcurveSegments: curveSegments\n\t};\n\n\tthis.fromBufferGeometry( new ShapeBufferGeometry( shapes, curveSegments ) );\n\tthis.mergeVertices();\n\n}\n\nShapeGeometry.prototype = Object.create( Geometry.prototype );\nShapeGeometry.prototype.constructor = ShapeGeometry;\n\n// ShapeBufferGeometry\n\nfunction ShapeBufferGeometry( shapes, curveSegments ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'ShapeBufferGeometry';\n\n\tthis.parameters = {\n\t\tshapes: shapes,\n\t\tcurveSegments: curveSegments\n\t};\n\n\tcurveSegments = curveSegments || 12;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar groupStart = 0;\n\tvar groupCount = 0;\n\n\t// allow single and array values for \"shapes\" parameter\n\n\tif ( Array.isArray( shapes ) === false ) {\n\n\t\taddShape( shapes );\n\n\t} else {\n\n\t\tfor ( var i = 0; i < shapes.length; i ++ ) {\n\n\t\t\taddShape( shapes[ i ] );\n\n\t\t\tthis.addGroup( groupStart, groupCount, i ); // enables MultiMaterial support\n\n\t\t\tgroupStart += groupCount;\n\t\t\tgroupCount = 0;\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\n\t// helper functions\n\n\tfunction addShape( shape ) {\n\n\t\tvar i, l, shapeHole;\n\n\t\tvar indexOffset = vertices.length / 3;\n\t\tvar points = shape.extractPoints( curveSegments );\n\n\t\tvar shapeVertices = points.shape;\n\t\tvar shapeHoles = points.holes;\n\n\t\t// check direction of vertices\n\n\t\tif ( ShapeUtils.isClockWise( shapeVertices ) === false ) {\n\n\t\t\tshapeVertices = shapeVertices.reverse();\n\n\t\t\t// also check if holes are in the opposite direction\n\n\t\t\tfor ( i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tshapeHole = shapeHoles[ i ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( shapeHole ) === true ) {\n\n\t\t\t\t\tshapeHoles[ i ] = shapeHole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles );\n\n\t\t// join vertices of inner and outer paths to a single array\n\n\t\tfor ( i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\tshapeHole = shapeHoles[ i ];\n\t\t\tshapeVertices = shapeVertices.concat( shapeHole );\n\n\t\t}\n\n\t\t// vertices, normals, uvs\n\n\t\tfor ( i = 0, l = shapeVertices.length; i < l; i ++ ) {\n\n\t\t\tvar vertex = shapeVertices[ i ];\n\n\t\t\tvertices.push( vertex.x, vertex.y, 0 );\n\t\t\tnormals.push( 0, 0, 1 );\n\t\t\tuvs.push( vertex.x, vertex.y ); // world uvs\n\n\t\t}\n\n\t\t// incides\n\n\t\tfor ( i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tvar a = face[ 0 ] + indexOffset;\n\t\t\tvar b = face[ 1 ] + indexOffset;\n\t\t\tvar c = face[ 2 ] + indexOffset;\n\n\t\t\tindices.push( a, b, c );\n\t\t\tgroupCount += 3;\n\n\t\t}\n\n\t}\n\n}\n\nShapeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nShapeBufferGeometry.prototype.constructor = ShapeBufferGeometry;\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction EdgesGeometry( geometry, thresholdAngle ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'EdgesGeometry';\n\n\tthis.parameters = {\n\t\tthresholdAngle: thresholdAngle\n\t};\n\n\tthresholdAngle = ( thresholdAngle !== undefined ) ? thresholdAngle : 1;\n\n\t// buffer\n\n\tvar vertices = [];\n\n\t// helper variables\n\n\tvar thresholdDot = Math.cos( _Math.DEG2RAD * thresholdAngle );\n\tvar edge = [ 0, 0 ], edges = {}, edge1, edge2;\n\tvar key, keys = [ 'a', 'b', 'c' ];\n\n\t// prepare source geometry\n\n\tvar geometry2;\n\n\tif ( geometry.isBufferGeometry ) {\n\n\t\tgeometry2 = new Geometry();\n\t\tgeometry2.fromBufferGeometry( geometry );\n\n\t} else {\n\n\t\tgeometry2 = geometry.clone();\n\n\t}\n\n\tgeometry2.mergeVertices();\n\tgeometry2.computeFaceNormals();\n\n\tvar sourceVertices = geometry2.vertices;\n\tvar faces = geometry2.faces;\n\n\t// now create a data structure where each entry represents an edge with its adjoining faces\n\n\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\tvar face = faces[ i ];\n\n\t\tfor ( var j = 0; j < 3; j ++ ) {\n\n\t\t\tedge1 = face[ keys[ j ] ];\n\t\t\tedge2 = face[ keys[ ( j + 1 ) % 3 ] ];\n\t\t\tedge[ 0 ] = Math.min( edge1, edge2 );\n\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\n\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\tif ( edges[ key ] === undefined ) {\n\n\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ], face1: i, face2: undefined };\n\n\t\t\t} else {\n\n\t\t\t\tedges[ key ].face2 = i;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// generate vertices\n\n\tfor ( key in edges ) {\n\n\t\tvar e = edges[ key ];\n\n\t\t// an edge is only rendered if the angle (in degrees) between the face normals of the adjoining faces exceeds this value. default = 1 degree.\n\n\t\tif ( e.face2 === undefined || faces[ e.face1 ].normal.dot( faces[ e.face2 ].normal ) <= thresholdDot ) {\n\n\t\t\tvar vertex = sourceVertices[ e.index1 ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\tvertex = sourceVertices[ e.index2 ];\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t}\n\n\t// build geometry\n\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n}\n\nEdgesGeometry.prototype = Object.create( BufferGeometry.prototype );\nEdgesGeometry.prototype.constructor = EdgesGeometry;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\n// CylinderGeometry\n\nfunction CylinderGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'CylinderGeometry';\n\n\tthis.parameters = {\n\t\tradiusTop: radiusTop,\n\t\tradiusBottom: radiusBottom,\n\t\theight: height,\n\t\tradialSegments: radialSegments,\n\t\theightSegments: heightSegments,\n\t\topenEnded: openEnded,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tthis.fromBufferGeometry( new CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) );\n\tthis.mergeVertices();\n\n}\n\nCylinderGeometry.prototype = Object.create( Geometry.prototype );\nCylinderGeometry.prototype.constructor = CylinderGeometry;\n\n// CylinderBufferGeometry\n\nfunction CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'CylinderBufferGeometry';\n\n\tthis.parameters = {\n\t\tradiusTop: radiusTop,\n\t\tradiusBottom: radiusBottom,\n\t\theight: height,\n\t\tradialSegments: radialSegments,\n\t\theightSegments: heightSegments,\n\t\topenEnded: openEnded,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tvar scope = this;\n\n\tradiusTop = radiusTop !== undefined ? radiusTop : 1;\n\tradiusBottom = radiusBottom !== undefined ? radiusBottom : 1;\n\theight = height || 1;\n\n\tradialSegments = Math.floor( radialSegments ) || 8;\n\theightSegments = Math.floor( heightSegments ) || 1;\n\n\topenEnded = openEnded !== undefined ? openEnded : false;\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0.0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar index = 0;\n\tvar indexArray = [];\n\tvar halfHeight = height / 2;\n\tvar groupStart = 0;\n\n\t// generate geometry\n\n\tgenerateTorso();\n\n\tif ( openEnded === false ) {\n\n\t\tif ( radiusTop > 0 ) generateCap( true );\n\t\tif ( radiusBottom > 0 ) generateCap( false );\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\tfunction generateTorso() {\n\n\t\tvar x, y;\n\t\tvar normal = new Vector3();\n\t\tvar vertex = new Vector3();\n\n\t\tvar groupCount = 0;\n\n\t\t// this will be used to calculate the normal\n\t\tvar slope = ( radiusBottom - radiusTop ) / height;\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( y = 0; y <= heightSegments; y ++ ) {\n\n\t\t\tvar indexRow = [];\n\n\t\t\tvar v = y / heightSegments;\n\n\t\t\t// calculate the radius of the current row\n\n\t\t\tvar radius = v * ( radiusBottom - radiusTop ) + radiusTop;\n\n\t\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\tvar u = x / radialSegments;\n\n\t\t\t\tvar theta = u * thetaLength + thetaStart;\n\n\t\t\t\tvar sinTheta = Math.sin( theta );\n\t\t\t\tvar cosTheta = Math.cos( theta );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\tvertex.y = - v * height + halfHeight;\n\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.set( sinTheta, slope, cosTheta ).normalize();\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( u, 1 - v );\n\n\t\t\t\t// save index of vertex in respective row\n\n\t\t\t\tindexRow.push( index ++ );\n\n\t\t\t}\n\n\t\t\t// now save vertices of the row in our index array\n\n\t\t\tindexArray.push( indexRow );\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( x = 0; x < radialSegments; x ++ ) {\n\n\t\t\tfor ( y = 0; y < heightSegments; y ++ ) {\n\n\t\t\t\t// we use the index array to access the correct indices\n\n\t\t\t\tvar a = indexArray[ y ][ x ];\n\t\t\t\tvar b = indexArray[ y + 1 ][ x ];\n\t\t\t\tvar c = indexArray[ y + 1 ][ x + 1 ];\n\t\t\t\tvar d = indexArray[ y ][ x + 1 ];\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t// update group counter\n\n\t\t\t\tgroupCount += 6;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\tscope.addGroup( groupStart, groupCount, 0 );\n\n\t\t// calculate new start value for groups\n\n\t\tgroupStart += groupCount;\n\n\t}\n\n\tfunction generateCap( top ) {\n\n\t\tvar x, centerIndexStart, centerIndexEnd;\n\n\t\tvar uv = new Vector2();\n\t\tvar vertex = new Vector3();\n\n\t\tvar groupCount = 0;\n\n\t\tvar radius = ( top === true ) ? radiusTop : radiusBottom;\n\t\tvar sign = ( top === true ) ? 1 : - 1;\n\n\t\t// save the index of the first center vertex\n\t\tcenterIndexStart = index;\n\n\t\t// first we generate the center vertex data of the cap.\n\t\t// because the geometry needs one set of uvs per face,\n\t\t// we must generate a center vertex per face/segment\n\n\t\tfor ( x = 1; x <= radialSegments; x ++ ) {\n\n\t\t\t// vertex\n\n\t\t\tvertices.push( 0, halfHeight * sign, 0 );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t// uv\n\n\t\t\tuvs.push( 0.5, 0.5 );\n\n\t\t\t// increase index\n\n\t\t\tindex ++;\n\n\t\t}\n\n\t\t// save the index of the last center vertex\n\n\t\tcenterIndexEnd = index;\n\n\t\t// now we generate the surrounding vertices, normals and uvs\n\n\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\tvar u = x / radialSegments;\n\t\t\tvar theta = u * thetaLength + thetaStart;\n\n\t\t\tvar cosTheta = Math.cos( theta );\n\t\t\tvar sinTheta = Math.sin( theta );\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * sinTheta;\n\t\t\tvertex.y = halfHeight * sign;\n\t\t\tvertex.z = radius * cosTheta;\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t// uv\n\n\t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\n\t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t// increase index\n\n\t\t\tindex ++;\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( x = 0; x < radialSegments; x ++ ) {\n\n\t\t\tvar c = centerIndexStart + x;\n\t\t\tvar i = centerIndexEnd + x;\n\n\t\t\tif ( top === true ) {\n\n\t\t\t\t// face top\n\n\t\t\t\tindices.push( i, i + 1, c );\n\n\t\t\t} else {\n\n\t\t\t\t// face bottom\n\n\t\t\t\tindices.push( i + 1, i, c );\n\n\t\t\t}\n\n\t\t\tgroupCount += 3;\n\n\t\t}\n\n\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\n\n\t\t// calculate new start value for groups\n\n\t\tgroupStart += groupCount;\n\n\t}\n\n}\n\nCylinderBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nCylinderBufferGeometry.prototype.constructor = CylinderBufferGeometry;\n\n/**\n * @author abelnation / http://github.com/abelnation\n */\n\n// ConeGeometry\n\nfunction ConeGeometry( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\tCylinderGeometry.call( this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\tthis.type = 'ConeGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\theight: height,\n\t\tradialSegments: radialSegments,\n\t\theightSegments: heightSegments,\n\t\topenEnded: openEnded,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n}\n\nConeGeometry.prototype = Object.create( CylinderGeometry.prototype );\nConeGeometry.prototype.constructor = ConeGeometry;\n\n// ConeBufferGeometry\n\nfunction ConeBufferGeometry( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\tCylinderBufferGeometry.call( this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\tthis.type = 'ConeBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\theight: height,\n\t\tradialSegments: radialSegments,\n\t\theightSegments: heightSegments,\n\t\topenEnded: openEnded,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n}\n\nConeBufferGeometry.prototype = Object.create( CylinderBufferGeometry.prototype );\nConeBufferGeometry.prototype.constructor = ConeBufferGeometry;\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n * @author Mugen87 / https://github.com/Mugen87\n * @author hughes\n */\n\n// CircleGeometry\n\nfunction CircleGeometry( radius, segments, thetaStart, thetaLength ) {\n\n\tGeometry.call( this );\n\n\tthis.type = 'CircleGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tsegments: segments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tthis.fromBufferGeometry( new CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) );\n\tthis.mergeVertices();\n\n}\n\nCircleGeometry.prototype = Object.create( Geometry.prototype );\nCircleGeometry.prototype.constructor = CircleGeometry;\n\n// CircleBufferGeometry\n\nfunction CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'CircleBufferGeometry';\n\n\tthis.parameters = {\n\t\tradius: radius,\n\t\tsegments: segments,\n\t\tthetaStart: thetaStart,\n\t\tthetaLength: thetaLength\n\t};\n\n\tradius = radius || 1;\n\tsegments = segments !== undefined ? Math.max( 3, segments ) : 8;\n\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\t// buffers\n\n\tvar indices = [];\n\tvar vertices = [];\n\tvar normals = [];\n\tvar uvs = [];\n\n\t// helper variables\n\n\tvar i, s;\n\tvar vertex = new Vector3();\n\tvar uv = new Vector2();\n\n\t// center point\n\n\tvertices.push( 0, 0, 0 );\n\tnormals.push( 0, 0, 1 );\n\tuvs.push( 0.5, 0.5 );\n\n\tfor ( s = 0, i = 3; s <= segments; s ++, i += 3 ) {\n\n\t\tvar segment = thetaStart + s / segments * thetaLength;\n\n\t\t// vertex\n\n\t\tvertex.x = radius * Math.cos( segment );\n\t\tvertex.y = radius * Math.sin( segment );\n\n\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t// normal\n\n\t\tnormals.push( 0, 0, 1 );\n\n\t\t// uvs\n\n\t\tuv.x = ( vertices[ i ] / radius + 1 ) / 2;\n\t\tuv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2;\n\n\t\tuvs.push( uv.x, uv.y );\n\n\t}\n\n\t// indices\n\n\tfor ( i = 1; i <= segments; i ++ ) {\n\n\t\tindices.push( i, i + 1, 0 );\n\n\t}\n\n\t// build geometry\n\n\tthis.setIndex( indices );\n\tthis.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tthis.addAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\tthis.addAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n}\n\nCircleBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\nCircleBufferGeometry.prototype.constructor = CircleBufferGeometry;\n\n\n\nvar Geometries = Object.freeze({\n\tWireframeGeometry: WireframeGeometry,\n\tParametricGeometry: ParametricGeometry,\n\tParametricBufferGeometry: ParametricBufferGeometry,\n\tTetrahedronGeometry: TetrahedronGeometry,\n\tTetrahedronBufferGeometry: TetrahedronBufferGeometry,\n\tOctahedronGeometry: OctahedronGeometry,\n\tOctahedronBufferGeometry: OctahedronBufferGeometry,\n\tIcosahedronGeometry: IcosahedronGeometry,\n\tIcosahedronBufferGeometry: IcosahedronBufferGeometry,\n\tDodecahedronGeometry: DodecahedronGeometry,\n\tDodecahedronBufferGeometry: DodecahedronBufferGeometry,\n\tPolyhedronGeometry: PolyhedronGeometry,\n\tPolyhedronBufferGeometry: PolyhedronBufferGeometry,\n\tTubeGeometry: TubeGeometry,\n\tTubeBufferGeometry: TubeBufferGeometry,\n\tTorusKnotGeometry: TorusKnotGeometry,\n\tTorusKnotBufferGeometry: TorusKnotBufferGeometry,\n\tTorusGeometry: TorusGeometry,\n\tTorusBufferGeometry: TorusBufferGeometry,\n\tTextGeometry: TextGeometry,\n\tTextBufferGeometry: TextBufferGeometry,\n\tSphereGeometry: SphereGeometry,\n\tSphereBufferGeometry: SphereBufferGeometry,\n\tRingGeometry: RingGeometry,\n\tRingBufferGeometry: RingBufferGeometry,\n\tPlaneGeometry: PlaneGeometry,\n\tPlaneBufferGeometry: PlaneBufferGeometry,\n\tLatheGeometry: LatheGeometry,\n\tLatheBufferGeometry: LatheBufferGeometry,\n\tShapeGeometry: ShapeGeometry,\n\tShapeBufferGeometry: ShapeBufferGeometry,\n\tExtrudeGeometry: ExtrudeGeometry,\n\tExtrudeBufferGeometry: ExtrudeBufferGeometry,\n\tEdgesGeometry: EdgesGeometry,\n\tConeGeometry: ConeGeometry,\n\tConeBufferGeometry: ConeBufferGeometry,\n\tCylinderGeometry: CylinderGeometry,\n\tCylinderBufferGeometry: CylinderBufferGeometry,\n\tCircleGeometry: CircleGeometry,\n\tCircleBufferGeometry: CircleBufferGeometry,\n\tBoxGeometry: BoxGeometry,\n\tBoxBufferGeometry: BoxBufferGeometry\n});\n\n/**\n * @author mrdoob / http://mrdoob.com/\n *\n * parameters = {\n *  color: <THREE.Color>,\n *  opacity: <float>\n * }\n */\n\nfunction ShadowMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'ShadowMaterial';\n\n\tthis.color = new Color( 0x000000 );\n\tthis.opacity = 1.0;\n\n\tthis.lights = true;\n\tthis.transparent = true;\n\n\tthis.setValues( parameters );\n\n}\n\nShadowMaterial.prototype = Object.create( Material.prototype );\nShadowMaterial.prototype.constructor = ShadowMaterial;\n\nShadowMaterial.prototype.isShadowMaterial = true;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction RawShaderMaterial( parameters ) {\n\n\tShaderMaterial.call( this, parameters );\n\n\tthis.type = 'RawShaderMaterial';\n\n}\n\nRawShaderMaterial.prototype = Object.create( ShaderMaterial.prototype );\nRawShaderMaterial.prototype.constructor = RawShaderMaterial;\n\nRawShaderMaterial.prototype.isRawShaderMaterial = true;\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *  color: <hex>,\n *  roughness: <float>,\n *  metalness: <float>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  roughnessMap: new THREE.Texture( <Image> ),\n *\n *  metalnessMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n *  envMapIntensity: <float>\n *\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshStandardMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.defines = { 'STANDARD': '' };\n\n\tthis.type = 'MeshStandardMaterial';\n\n\tthis.color = new Color( 0xffffff ); // diffuse\n\tthis.roughness = 0.5;\n\tthis.metalness = 0.5;\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.emissive = new Color( 0x000000 );\n\tthis.emissiveIntensity = 1.0;\n\tthis.emissiveMap = null;\n\n\tthis.bumpMap = null;\n\tthis.bumpScale = 1;\n\n\tthis.normalMap = null;\n\tthis.normalScale = new Vector2( 1, 1 );\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.roughnessMap = null;\n\n\tthis.metalnessMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.envMapIntensity = 1.0;\n\n\tthis.refractionRatio = 0.98;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshStandardMaterial.prototype = Object.create( Material.prototype );\nMeshStandardMaterial.prototype.constructor = MeshStandardMaterial;\n\nMeshStandardMaterial.prototype.isMeshStandardMaterial = true;\n\nMeshStandardMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.defines = { 'STANDARD': '' };\n\n\tthis.color.copy( source.color );\n\tthis.roughness = source.roughness;\n\tthis.metalness = source.metalness;\n\n\tthis.map = source.map;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.emissive.copy( source.emissive );\n\tthis.emissiveMap = source.emissiveMap;\n\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\tthis.bumpMap = source.bumpMap;\n\tthis.bumpScale = source.bumpScale;\n\n\tthis.normalMap = source.normalMap;\n\tthis.normalScale.copy( source.normalScale );\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.roughnessMap = source.roughnessMap;\n\n\tthis.metalnessMap = source.metalnessMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.envMap = source.envMap;\n\tthis.envMapIntensity = source.envMapIntensity;\n\n\tthis.refractionRatio = source.refractionRatio;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *  reflectivity: <float>\n * }\n */\n\nfunction MeshPhysicalMaterial( parameters ) {\n\n\tMeshStandardMaterial.call( this );\n\n\tthis.defines = { 'PHYSICAL': '' };\n\n\tthis.type = 'MeshPhysicalMaterial';\n\n\tthis.reflectivity = 0.5; // maps to F0 = 0.04\n\n\tthis.clearCoat = 0.0;\n\tthis.clearCoatRoughness = 0.0;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshPhysicalMaterial.prototype = Object.create( MeshStandardMaterial.prototype );\nMeshPhysicalMaterial.prototype.constructor = MeshPhysicalMaterial;\n\nMeshPhysicalMaterial.prototype.isMeshPhysicalMaterial = true;\n\nMeshPhysicalMaterial.prototype.copy = function ( source ) {\n\n\tMeshStandardMaterial.prototype.copy.call( this, source );\n\n\tthis.defines = { 'PHYSICAL': '' };\n\n\tthis.reflectivity = source.reflectivity;\n\n\tthis.clearCoat = source.clearCoat;\n\tthis.clearCoatRoughness = source.clearCoatRoughness;\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  specular: <hex>,\n *  shininess: <float>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshPhongMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshPhongMaterial';\n\n\tthis.color = new Color( 0xffffff ); // diffuse\n\tthis.specular = new Color( 0x111111 );\n\tthis.shininess = 30;\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.emissive = new Color( 0x000000 );\n\tthis.emissiveIntensity = 1.0;\n\tthis.emissiveMap = null;\n\n\tthis.bumpMap = null;\n\tthis.bumpScale = 1;\n\n\tthis.normalMap = null;\n\tthis.normalScale = new Vector2( 1, 1 );\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.specularMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.combine = MultiplyOperation;\n\tthis.reflectivity = 1;\n\tthis.refractionRatio = 0.98;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshPhongMaterial.prototype = Object.create( Material.prototype );\nMeshPhongMaterial.prototype.constructor = MeshPhongMaterial;\n\nMeshPhongMaterial.prototype.isMeshPhongMaterial = true;\n\nMeshPhongMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\tthis.specular.copy( source.specular );\n\tthis.shininess = source.shininess;\n\n\tthis.map = source.map;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.emissive.copy( source.emissive );\n\tthis.emissiveMap = source.emissiveMap;\n\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\tthis.bumpMap = source.bumpMap;\n\tthis.bumpScale = source.bumpScale;\n\n\tthis.normalMap = source.normalMap;\n\tthis.normalScale.copy( source.normalScale );\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.specularMap = source.specularMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.envMap = source.envMap;\n\tthis.combine = source.combine;\n\tthis.reflectivity = source.reflectivity;\n\tthis.refractionRatio = source.refractionRatio;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author takahirox / http://github.com/takahirox\n *\n * parameters = {\n *  gradientMap: new THREE.Texture( <Image> )\n * }\n */\n\nfunction MeshToonMaterial( parameters ) {\n\n\tMeshPhongMaterial.call( this );\n\n\tthis.defines = { 'TOON': '' };\n\n\tthis.type = 'MeshToonMaterial';\n\n\tthis.gradientMap = null;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshToonMaterial.prototype = Object.create( MeshPhongMaterial.prototype );\nMeshToonMaterial.prototype.constructor = MeshToonMaterial;\n\nMeshToonMaterial.prototype.isMeshToonMaterial = true;\n\nMeshToonMaterial.prototype.copy = function ( source ) {\n\n\tMeshPhongMaterial.prototype.copy.call( this, source );\n\n\tthis.gradientMap = source.gradientMap;\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n *\n * parameters = {\n *  opacity: <float>,\n *\n *  bumpMap: new THREE.Texture( <Image> ),\n *  bumpScale: <float>,\n *\n *  normalMap: new THREE.Texture( <Image> ),\n *  normalScale: <Vector2>,\n *\n *  displacementMap: new THREE.Texture( <Image> ),\n *  displacementScale: <float>,\n *  displacementBias: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshNormalMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshNormalMaterial';\n\n\tthis.bumpMap = null;\n\tthis.bumpScale = 1;\n\n\tthis.normalMap = null;\n\tthis.normalScale = new Vector2( 1, 1 );\n\n\tthis.displacementMap = null;\n\tthis.displacementScale = 1;\n\tthis.displacementBias = 0;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\n\tthis.fog = false;\n\tthis.lights = false;\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshNormalMaterial.prototype = Object.create( Material.prototype );\nMeshNormalMaterial.prototype.constructor = MeshNormalMaterial;\n\nMeshNormalMaterial.prototype.isMeshNormalMaterial = true;\n\nMeshNormalMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.bumpMap = source.bumpMap;\n\tthis.bumpScale = source.bumpScale;\n\n\tthis.normalMap = source.normalMap;\n\tthis.normalScale.copy( source.normalScale );\n\n\tthis.displacementMap = source.displacementMap;\n\tthis.displacementScale = source.displacementScale;\n\tthis.displacementBias = source.displacementBias;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  map: new THREE.Texture( <Image> ),\n *\n *  lightMap: new THREE.Texture( <Image> ),\n *  lightMapIntensity: <float>\n *\n *  aoMap: new THREE.Texture( <Image> ),\n *  aoMapIntensity: <float>\n *\n *  emissive: <hex>,\n *  emissiveIntensity: <float>\n *  emissiveMap: new THREE.Texture( <Image> ),\n *\n *  specularMap: new THREE.Texture( <Image> ),\n *\n *  alphaMap: new THREE.Texture( <Image> ),\n *\n *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\n *  combine: THREE.Multiply,\n *  reflectivity: <float>,\n *  refractionRatio: <float>,\n *\n *  wireframe: <boolean>,\n *  wireframeLinewidth: <float>,\n *\n *  skinning: <bool>,\n *  morphTargets: <bool>,\n *  morphNormals: <bool>\n * }\n */\n\nfunction MeshLambertMaterial( parameters ) {\n\n\tMaterial.call( this );\n\n\tthis.type = 'MeshLambertMaterial';\n\n\tthis.color = new Color( 0xffffff ); // diffuse\n\n\tthis.map = null;\n\n\tthis.lightMap = null;\n\tthis.lightMapIntensity = 1.0;\n\n\tthis.aoMap = null;\n\tthis.aoMapIntensity = 1.0;\n\n\tthis.emissive = new Color( 0x000000 );\n\tthis.emissiveIntensity = 1.0;\n\tthis.emissiveMap = null;\n\n\tthis.specularMap = null;\n\n\tthis.alphaMap = null;\n\n\tthis.envMap = null;\n\tthis.combine = MultiplyOperation;\n\tthis.reflectivity = 1;\n\tthis.refractionRatio = 0.98;\n\n\tthis.wireframe = false;\n\tthis.wireframeLinewidth = 1;\n\tthis.wireframeLinecap = 'round';\n\tthis.wireframeLinejoin = 'round';\n\n\tthis.skinning = false;\n\tthis.morphTargets = false;\n\tthis.morphNormals = false;\n\n\tthis.setValues( parameters );\n\n}\n\nMeshLambertMaterial.prototype = Object.create( Material.prototype );\nMeshLambertMaterial.prototype.constructor = MeshLambertMaterial;\n\nMeshLambertMaterial.prototype.isMeshLambertMaterial = true;\n\nMeshLambertMaterial.prototype.copy = function ( source ) {\n\n\tMaterial.prototype.copy.call( this, source );\n\n\tthis.color.copy( source.color );\n\n\tthis.map = source.map;\n\n\tthis.lightMap = source.lightMap;\n\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\tthis.aoMap = source.aoMap;\n\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\tthis.emissive.copy( source.emissive );\n\tthis.emissiveMap = source.emissiveMap;\n\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\tthis.specularMap = source.specularMap;\n\n\tthis.alphaMap = source.alphaMap;\n\n\tthis.envMap = source.envMap;\n\tthis.combine = source.combine;\n\tthis.reflectivity = source.reflectivity;\n\tthis.refractionRatio = source.refractionRatio;\n\n\tthis.wireframe = source.wireframe;\n\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\tthis.wireframeLinecap = source.wireframeLinecap;\n\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\tthis.skinning = source.skinning;\n\tthis.morphTargets = source.morphTargets;\n\tthis.morphNormals = source.morphNormals;\n\n\treturn this;\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n *\n * parameters = {\n *  color: <hex>,\n *  opacity: <float>,\n *\n *  linewidth: <float>,\n *\n *  scale: <float>,\n *  dashSize: <float>,\n *  gapSize: <float>\n * }\n */\n\nfunction LineDashedMaterial( parameters ) {\n\n\tLineBasicMaterial.call( this );\n\n\tthis.type = 'LineDashedMaterial';\n\n\tthis.scale = 1;\n\tthis.dashSize = 3;\n\tthis.gapSize = 1;\n\n\tthis.setValues( parameters );\n\n}\n\nLineDashedMaterial.prototype = Object.create( LineBasicMaterial.prototype );\nLineDashedMaterial.prototype.constructor = LineDashedMaterial;\n\nLineDashedMaterial.prototype.isLineDashedMaterial = true;\n\nLineDashedMaterial.prototype.copy = function ( source ) {\n\n\tLineBasicMaterial.prototype.copy.call( this, source );\n\n\tthis.scale = source.scale;\n\tthis.dashSize = source.dashSize;\n\tthis.gapSize = source.gapSize;\n\n\treturn this;\n\n};\n\n\n\nvar Materials = Object.freeze({\n\tShadowMaterial: ShadowMaterial,\n\tSpriteMaterial: SpriteMaterial,\n\tRawShaderMaterial: RawShaderMaterial,\n\tShaderMaterial: ShaderMaterial,\n\tPointsMaterial: PointsMaterial,\n\tMeshPhysicalMaterial: MeshPhysicalMaterial,\n\tMeshStandardMaterial: MeshStandardMaterial,\n\tMeshPhongMaterial: MeshPhongMaterial,\n\tMeshToonMaterial: MeshToonMaterial,\n\tMeshNormalMaterial: MeshNormalMaterial,\n\tMeshLambertMaterial: MeshLambertMaterial,\n\tMeshDepthMaterial: MeshDepthMaterial,\n\tMeshDistanceMaterial: MeshDistanceMaterial,\n\tMeshBasicMaterial: MeshBasicMaterial,\n\tLineDashedMaterial: LineDashedMaterial,\n\tLineBasicMaterial: LineBasicMaterial,\n\tMaterial: Material\n});\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar Cache = {\n\n\tenabled: false,\n\n\tfiles: {},\n\n\tadd: function ( key, file ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\tthis.files[ key ] = file;\n\n\t},\n\n\tget: function ( key ) {\n\n\t\tif ( this.enabled === false ) return;\n\n\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\treturn this.files[ key ];\n\n\t},\n\n\tremove: function ( key ) {\n\n\t\tdelete this.files[ key ];\n\n\t},\n\n\tclear: function () {\n\n\t\tthis.files = {};\n\n\t}\n\n};\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction LoadingManager( onLoad, onProgress, onError ) {\n\n\tvar scope = this;\n\n\tvar isLoading = false;\n\tvar itemsLoaded = 0;\n\tvar itemsTotal = 0;\n\tvar urlModifier = undefined;\n\n\tthis.onStart = undefined;\n\tthis.onLoad = onLoad;\n\tthis.onProgress = onProgress;\n\tthis.onError = onError;\n\n\tthis.itemStart = function ( url ) {\n\n\t\titemsTotal ++;\n\n\t\tif ( isLoading === false ) {\n\n\t\t\tif ( scope.onStart !== undefined ) {\n\n\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\n\n\t\t\t}\n\n\t\t}\n\n\t\tisLoading = true;\n\n\t};\n\n\tthis.itemEnd = function ( url ) {\n\n\t\titemsLoaded ++;\n\n\t\tif ( scope.onProgress !== undefined ) {\n\n\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\n\n\t\t}\n\n\t\tif ( itemsLoaded === itemsTotal ) {\n\n\t\t\tisLoading = false;\n\n\t\t\tif ( scope.onLoad !== undefined ) {\n\n\t\t\t\tscope.onLoad();\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tthis.itemError = function ( url ) {\n\n\t\tif ( scope.onError !== undefined ) {\n\n\t\t\tscope.onError( url );\n\n\t\t}\n\n\t};\n\n\tthis.resolveURL = function ( url ) {\n\n\t\tif ( urlModifier ) {\n\n\t\t\treturn urlModifier( url );\n\n\t\t}\n\n\t\treturn url;\n\n\t};\n\n\tthis.setURLModifier = function ( transform ) {\n\n\t\turlModifier = transform;\n\n\t};\n\n}\n\nvar DefaultLoadingManager = new LoadingManager();\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nvar loading = {};\n\nfunction FileLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( FileLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tvar scope = this;\n\n\t\tvar cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\t// Check if request is duplicate\n\n\t\tif ( loading[ url ] !== undefined ) {\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\t// Check for data: URI\n\t\tvar dataUriRegex = /^data:(.*?)(;base64)?,(.*)$/;\n\t\tvar dataUriRegexResult = url.match( dataUriRegex );\n\n\t\t// Safari can not handle Data URIs through XMLHttpRequest so process manually\n\t\tif ( dataUriRegexResult ) {\n\n\t\t\tvar mimeType = dataUriRegexResult[ 1 ];\n\t\t\tvar isBase64 = !! dataUriRegexResult[ 2 ];\n\t\t\tvar data = dataUriRegexResult[ 3 ];\n\n\t\t\tdata = window.decodeURIComponent( data );\n\n\t\t\tif ( isBase64 ) data = window.atob( data );\n\n\t\t\ttry {\n\n\t\t\t\tvar response;\n\t\t\t\tvar responseType = ( this.responseType || '' ).toLowerCase();\n\n\t\t\t\tswitch ( responseType ) {\n\n\t\t\t\t\tcase 'arraybuffer':\n\t\t\t\t\tcase 'blob':\n\n\t\t\t\t\t\tvar view = new Uint8Array( data.length );\n\n\t\t\t\t\t\tfor ( var i = 0; i < data.length; i ++ ) {\n\n\t\t\t\t\t\t\tview[ i ] = data.charCodeAt( i );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( responseType === 'blob' ) {\n\n\t\t\t\t\t\t\tresponse = new Blob( [ view.buffer ], { type: mimeType } );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tresponse = view.buffer;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'document':\n\n\t\t\t\t\t\tvar parser = new DOMParser();\n\t\t\t\t\t\tresponse = parser.parseFromString( data, mimeType );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'json':\n\n\t\t\t\t\t\tresponse = JSON.parse( data );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault: // 'text' or other\n\n\t\t\t\t\t\tresponse = data;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\t// Wait for next browser tick like standard XMLHttpRequest event dispatching does\n\t\t\t\twindow.setTimeout( function () {\n\n\t\t\t\t\tif ( onLoad ) onLoad( response );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, 0 );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\t// Wait for next browser tick like standard XMLHttpRequest event dispatching does\n\t\t\t\twindow.setTimeout( function () {\n\n\t\t\t\t\tif ( onError ) onError( error );\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\t\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t\t}, 0 );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// Initialise array for duplicate requests\n\n\t\t\tloading[ url ] = [];\n\n\t\t\tloading[ url ].push( {\n\n\t\t\t\tonLoad: onLoad,\n\t\t\t\tonProgress: onProgress,\n\t\t\t\tonError: onError\n\n\t\t\t} );\n\n\t\t\tvar request = new XMLHttpRequest();\n\n\t\t\trequest.open( 'GET', url, true );\n\n\t\t\trequest.addEventListener( 'load', function ( event ) {\n\n\t\t\t\tvar response = event.target.response;\n\n\t\t\t\tCache.add( url, response );\n\n\t\t\t\tvar callbacks = loading[ url ];\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tif ( this.status === 200 ) {\n\n\t\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\t\tif ( callback.onLoad ) callback.onLoad( response );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t} else if ( this.status === 0 ) {\n\n\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\n\t\t\t\t\tconsole.warn( 'THREE.FileLoader: HTTP Status 0 received.' );\n\n\t\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\t\tif ( callback.onLoad ) callback.onLoad( response );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\t\tif ( callback.onError ) callback.onError( event );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\t\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t\t}\n\n\t\t\t}, false );\n\n\t\t\trequest.addEventListener( 'progress', function ( event ) {\n\n\t\t\t\tvar callbacks = loading[ url ];\n\n\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onProgress ) callback.onProgress( event );\n\n\t\t\t\t}\n\n\t\t\t}, false );\n\n\t\t\trequest.addEventListener( 'error', function ( event ) {\n\n\t\t\t\tvar callbacks = loading[ url ];\n\n\t\t\t\tdelete loading[ url ];\n\n\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\tif ( callback.onError ) callback.onError( event );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemEnd( url );\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}, false );\n\n\t\t\tif ( this.responseType !== undefined ) request.responseType = this.responseType;\n\t\t\tif ( this.withCredentials !== undefined ) request.withCredentials = this.withCredentials;\n\n\t\t\tif ( request.overrideMimeType ) request.overrideMimeType( this.mimeType !== undefined ? this.mimeType : 'text/plain' );\n\n\t\t\tfor ( var header in this.requestHeader ) {\n\n\t\t\t\trequest.setRequestHeader( header, this.requestHeader[ header ] );\n\n\t\t\t}\n\n\t\t\trequest.send( null );\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\treturn request;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t},\n\n\tsetResponseType: function ( value ) {\n\n\t\tthis.responseType = value;\n\t\treturn this;\n\n\t},\n\n\tsetWithCredentials: function ( value ) {\n\n\t\tthis.withCredentials = value;\n\t\treturn this;\n\n\t},\n\n\tsetMimeType: function ( value ) {\n\n\t\tthis.mimeType = value;\n\t\treturn this;\n\n\t},\n\n\tsetRequestHeader: function ( value ) {\n\n\t\tthis.requestHeader = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n *\n * Abstract Base class to block based textures loader (dds, pvr, ...)\n */\n\nfunction CompressedTextureLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t// override in sub classes\n\tthis._parser = null;\n\n}\n\nObject.assign( CompressedTextureLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar images = [];\n\n\t\tvar texture = new CompressedTexture();\n\t\ttexture.image = images;\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setResponseType( 'arraybuffer' );\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( url[ i ], function ( buffer ) {\n\n\t\t\t\tvar texDatas = scope._parser( buffer, true );\n\n\t\t\t\timages[ i ] = {\n\t\t\t\t\twidth: texDatas.width,\n\t\t\t\t\theight: texDatas.height,\n\t\t\t\t\tformat: texDatas.format,\n\t\t\t\t\tmipmaps: texDatas.mipmaps\n\t\t\t\t};\n\n\t\t\t\tloaded += 1;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 )\n\t\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\tif ( Array.isArray( url ) ) {\n\n\t\t\tvar loaded = 0;\n\n\t\t\tfor ( var i = 0, il = url.length; i < il; ++ i ) {\n\n\t\t\t\tloadTexture( i );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// compressed cubemap texture stored in a single DDS file\n\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tvar texDatas = scope._parser( buffer, true );\n\n\t\t\t\tif ( texDatas.isCubemap ) {\n\n\t\t\t\t\tvar faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n\t\t\t\t\tfor ( var f = 0; f < faces; f ++ ) {\n\n\t\t\t\t\t\timages[ f ] = { mipmaps: [] };\n\n\t\t\t\t\t\tfor ( var i = 0; i < texDatas.mipmapCount; i ++ ) {\n\n\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\n\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\n\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\n\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttexture.image.width = texDatas.width;\n\t\t\t\t\ttexture.image.height = texDatas.height;\n\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\n\t\t\t\t}\n\n\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\n\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t\treturn texture;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author Nikos M. / https://github.com/foo123/\n *\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n */\n\nfunction DataTextureLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t// override in sub classes\n\tthis._parser = null;\n\n}\n\nObject.assign( DataTextureLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar texture = new DataTexture();\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\tvar texData = scope._parser( buffer );\n\n\t\t\tif ( ! texData ) return;\n\n\t\t\tif ( undefined !== texData.image ) {\n\n\t\t\t\ttexture.image = texData.image;\n\n\t\t\t} else if ( undefined !== texData.data ) {\n\n\t\t\t\ttexture.image.width = texData.width;\n\t\t\t\ttexture.image.height = texData.height;\n\t\t\t\ttexture.image.data = texData.data;\n\n\t\t\t}\n\n\t\t\ttexture.wrapS = undefined !== texData.wrapS ? texData.wrapS : ClampToEdgeWrapping;\n\t\t\ttexture.wrapT = undefined !== texData.wrapT ? texData.wrapT : ClampToEdgeWrapping;\n\n\t\t\ttexture.magFilter = undefined !== texData.magFilter ? texData.magFilter : LinearFilter;\n\t\t\ttexture.minFilter = undefined !== texData.minFilter ? texData.minFilter : LinearMipMapLinearFilter;\n\n\t\t\ttexture.anisotropy = undefined !== texData.anisotropy ? texData.anisotropy : 1;\n\n\t\t\tif ( undefined !== texData.format ) {\n\n\t\t\t\ttexture.format = texData.format;\n\n\t\t\t}\n\t\t\tif ( undefined !== texData.type ) {\n\n\t\t\t\ttexture.type = texData.type;\n\n\t\t\t}\n\n\t\t\tif ( undefined !== texData.mipmaps ) {\n\n\t\t\t\ttexture.mipmaps = texData.mipmaps;\n\n\t\t\t}\n\n\t\t\tif ( 1 === texData.mipmapCount ) {\n\n\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t}\n\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad ) onLoad( texture, texData );\n\n\t\t}, onProgress, onError );\n\n\n\t\treturn texture;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction ImageLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( ImageLoader.prototype, {\n\n\tcrossOrigin: 'Anonymous',\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tif ( url === undefined ) url = '';\n\n\t\tif ( this.path !== undefined ) url = this.path + url;\n\n\t\turl = this.manager.resolveURL( url );\n\n\t\tvar scope = this;\n\n\t\tvar cached = Cache.get( url );\n\n\t\tif ( cached !== undefined ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\tsetTimeout( function () {\n\n\t\t\t\tif ( onLoad ) onLoad( cached );\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, 0 );\n\n\t\t\treturn cached;\n\n\t\t}\n\n\t\tvar image = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'img' );\n\n\t\timage.addEventListener( 'load', function () {\n\n\t\t\tCache.add( url, this );\n\n\t\t\tif ( onLoad ) onLoad( this );\n\n\t\t\tscope.manager.itemEnd( url );\n\n\t\t}, false );\n\n\t\t/*\n\t\timage.addEventListener( 'progress', function ( event ) {\n\n\t\t\tif ( onProgress ) onProgress( event );\n\n\t\t}, false );\n\t\t*/\n\n\t\timage.addEventListener( 'error', function ( event ) {\n\n\t\t\tif ( onError ) onError( event );\n\n\t\t\tscope.manager.itemEnd( url );\n\t\t\tscope.manager.itemError( url );\n\n\t\t}, false );\n\n\t\tif ( url.substr( 0, 5 ) !== 'data:' ) {\n\n\t\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\n\n\t\t}\n\n\t\tscope.manager.itemStart( url );\n\n\t\timage.src = url;\n\n\t\treturn image;\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\t\treturn this;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction CubeTextureLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( CubeTextureLoader.prototype, {\n\n\tcrossOrigin: 'Anonymous',\n\n\tload: function ( urls, onLoad, onProgress, onError ) {\n\n\t\tvar texture = new CubeTexture();\n\n\t\tvar loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tvar loaded = 0;\n\n\t\tfunction loadTexture( i ) {\n\n\t\t\tloader.load( urls[ i ], function ( image ) {\n\n\t\t\t\ttexture.images[ i ] = image;\n\n\t\t\t\tloaded ++;\n\n\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, undefined, onError );\n\n\t\t}\n\n\t\tfor ( var i = 0; i < urls.length; ++ i ) {\n\n\t\t\tloadTexture( i );\n\n\t\t}\n\n\t\treturn texture;\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\t\treturn this;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction TextureLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( TextureLoader.prototype, {\n\n\tcrossOrigin: 'Anonymous',\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar loader = new ImageLoader( this.manager );\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\tloader.setPath( this.path );\n\n\t\tvar texture = new Texture();\n\t\ttexture.image = loader.load( url, function () {\n\n\t\t\t// JPEGs can't have an alpha channel, so memory can be saved by storing them as RGB.\n\t\t\tvar isJPEG = url.search( /\\.(jpg|jpeg)$/ ) > 0 || url.search( /^data\\:image\\/jpeg/ ) === 0;\n\n\t\t\ttexture.format = isJPEG ? RGBFormat : RGBAFormat;\n\t\t\ttexture.needsUpdate = true;\n\n\t\t\tif ( onLoad !== undefined ) {\n\n\t\t\t\tonLoad( texture );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t\treturn texture;\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\t\treturn this;\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Light( color, intensity ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Light';\n\n\tthis.color = new Color( color );\n\tthis.intensity = intensity !== undefined ? intensity : 1;\n\n\tthis.receiveShadow = undefined;\n\n}\n\nLight.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Light,\n\n\tisLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.intensity = source.intensity;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.color = this.color.getHex();\n\t\tdata.object.intensity = this.intensity;\n\n\t\tif ( this.groundColor !== undefined ) data.object.groundColor = this.groundColor.getHex();\n\n\t\tif ( this.distance !== undefined ) data.object.distance = this.distance;\n\t\tif ( this.angle !== undefined ) data.object.angle = this.angle;\n\t\tif ( this.decay !== undefined ) data.object.decay = this.decay;\n\t\tif ( this.penumbra !== undefined ) data.object.penumbra = this.penumbra;\n\n\t\tif ( this.shadow !== undefined ) data.object.shadow = this.shadow.toJSON();\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction HemisphereLight( skyColor, groundColor, intensity ) {\n\n\tLight.call( this, skyColor, intensity );\n\n\tthis.type = 'HemisphereLight';\n\n\tthis.castShadow = undefined;\n\n\tthis.position.copy( Object3D.DefaultUp );\n\tthis.updateMatrix();\n\n\tthis.groundColor = new Color( groundColor );\n\n}\n\nHemisphereLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: HemisphereLight,\n\n\tisHemisphereLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.groundColor.copy( source.groundColor );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction LightShadow( camera ) {\n\n\tthis.camera = camera;\n\n\tthis.bias = 0;\n\tthis.radius = 1;\n\n\tthis.mapSize = new Vector2( 512, 512 );\n\n\tthis.map = null;\n\tthis.matrix = new Matrix4();\n\n}\n\nObject.assign( LightShadow.prototype, {\n\n\tcopy: function ( source ) {\n\n\t\tthis.camera = source.camera.clone();\n\n\t\tthis.bias = source.bias;\n\t\tthis.radius = source.radius;\n\n\t\tthis.mapSize.copy( source.mapSize );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\ttoJSON: function () {\n\n\t\tvar object = {};\n\n\t\tif ( this.bias !== 0 ) object.bias = this.bias;\n\t\tif ( this.radius !== 1 ) object.radius = this.radius;\n\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) object.mapSize = this.mapSize.toArray();\n\n\t\tobject.camera = this.camera.toJSON( false ).object;\n\t\tdelete object.camera.matrix;\n\n\t\treturn object;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction SpotLightShadow() {\n\n\tLightShadow.call( this, new PerspectiveCamera( 50, 1, 0.5, 500 ) );\n\n}\n\nSpotLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\n\n\tconstructor: SpotLightShadow,\n\n\tisSpotLightShadow: true,\n\n\tupdate: function ( light ) {\n\n\t\tvar camera = this.camera;\n\n\t\tvar fov = _Math.RAD2DEG * 2 * light.angle;\n\t\tvar aspect = this.mapSize.width / this.mapSize.height;\n\t\tvar far = light.distance || camera.far;\n\n\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\n\n\t\t\tcamera.fov = fov;\n\t\t\tcamera.aspect = aspect;\n\t\t\tcamera.far = far;\n\t\t\tcamera.updateProjectionMatrix();\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction SpotLight( color, intensity, distance, angle, penumbra, decay ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'SpotLight';\n\n\tthis.position.copy( Object3D.DefaultUp );\n\tthis.updateMatrix();\n\n\tthis.target = new Object3D();\n\n\tObject.defineProperty( this, 'power', {\n\t\tget: function () {\n\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (17) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\n\t\t\treturn this.intensity * Math.PI;\n\n\t\t},\n\t\tset: function ( power ) {\n\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (17) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\n\t\t\tthis.intensity = power / Math.PI;\n\n\t\t}\n\t} );\n\n\tthis.distance = ( distance !== undefined ) ? distance : 0;\n\tthis.angle = ( angle !== undefined ) ? angle : Math.PI / 3;\n\tthis.penumbra = ( penumbra !== undefined ) ? penumbra : 0;\n\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\n\n\tthis.shadow = new SpotLightShadow();\n\n}\n\nSpotLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: SpotLight,\n\n\tisSpotLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.distance = source.distance;\n\t\tthis.angle = source.angle;\n\t\tthis.penumbra = source.penumbra;\n\t\tthis.decay = source.decay;\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\n\nfunction PointLight( color, intensity, distance, decay ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'PointLight';\n\n\tObject.defineProperty( this, 'power', {\n\t\tget: function () {\n\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (15) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\n\t\t\treturn this.intensity * 4 * Math.PI;\n\n\t\t},\n\t\tset: function ( power ) {\n\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (15) from http://www.frostbite.com/wp-content/uploads/2014/11/course_notes_moving_frostbite_to_pbr.pdf\n\t\t\tthis.intensity = power / ( 4 * Math.PI );\n\n\t\t}\n\t} );\n\n\tthis.distance = ( distance !== undefined ) ? distance : 0;\n\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\n\n\tthis.shadow = new LightShadow( new PerspectiveCamera( 90, 1, 0.5, 500 ) );\n\n}\n\nPointLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: PointLight,\n\n\tisPointLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.distance = source.distance;\n\t\tthis.decay = source.decay;\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction DirectionalLightShadow( ) {\n\n\tLightShadow.call( this, new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\n\n}\n\nDirectionalLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\n\n\tconstructor: DirectionalLightShadow\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction DirectionalLight( color, intensity ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'DirectionalLight';\n\n\tthis.position.copy( Object3D.DefaultUp );\n\tthis.updateMatrix();\n\n\tthis.target = new Object3D();\n\n\tthis.shadow = new DirectionalLightShadow();\n\n}\n\nDirectionalLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: DirectionalLight,\n\n\tisDirectionalLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.target = source.target.clone();\n\n\t\tthis.shadow = source.shadow.clone();\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction AmbientLight( color, intensity ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'AmbientLight';\n\n\tthis.castShadow = undefined;\n\n}\n\nAmbientLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: AmbientLight,\n\n\tisAmbientLight: true\n\n} );\n\n/**\n * @author abelnation / http://github.com/abelnation\n */\n\nfunction RectAreaLight( color, intensity, width, height ) {\n\n\tLight.call( this, color, intensity );\n\n\tthis.type = 'RectAreaLight';\n\n\tthis.position.set( 0, 1, 0 );\n\tthis.updateMatrix();\n\n\tthis.width = ( width !== undefined ) ? width : 10;\n\tthis.height = ( height !== undefined ) ? height : 10;\n\n\t// TODO (abelnation): distance/decay\n\n\t// TODO (abelnation): update method for RectAreaLight to update transform to lookat target\n\n\t// TODO (abelnation): shadows\n\n}\n\n// TODO (abelnation): RectAreaLight update when light shape is changed\nRectAreaLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\tconstructor: RectAreaLight,\n\n\tisRectAreaLight: true,\n\n\tcopy: function ( source ) {\n\n\t\tLight.prototype.copy.call( this, source );\n\n\t\tthis.width = source.width;\n\t\tthis.height = source.height;\n\n\t\treturn this;\n\n\t},\n\n\ttoJSON: function ( meta ) {\n\n\t\tvar data = Light.prototype.toJSON.call( this, meta );\n\n\t\tdata.object.width = this.width;\n\t\tdata.object.height = this.height;\n\n\t\treturn data;\n\n\t}\n\n} );\n\n/**\n * @author tschw\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n */\n\nvar AnimationUtils = {\n\n\t// same as Array.prototype.slice, but also works on typed arrays\n\tarraySlice: function ( array, from, to ) {\n\n\t\tif ( AnimationUtils.isTypedArray( array ) ) {\n\n\t\t\t// in ios9 array.subarray(from, undefined) will return empty array\n\t\t\t// but array.subarray(from) or array.subarray(from, len) is correct\n\t\t\treturn new array.constructor( array.subarray( from, to !== undefined ? to : array.length ) );\n\n\t\t}\n\n\t\treturn array.slice( from, to );\n\n\t},\n\n\t// converts an array to a specific type\n\tconvertArray: function ( array, type, forceClone ) {\n\n\t\tif ( ! array || // let 'undefined' and 'null' pass\n\t\t\t\t! forceClone && array.constructor === type ) return array;\n\n\t\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\n\n\t\t\treturn new type( array ); // create typed array\n\n\t\t}\n\n\t\treturn Array.prototype.slice.call( array ); // create Array\n\n\t},\n\n\tisTypedArray: function ( object ) {\n\n\t\treturn ArrayBuffer.isView( object ) &&\n\t\t\t\t! ( object instanceof DataView );\n\n\t},\n\n\t// returns an array by which times and values can be sorted\n\tgetKeyframeOrder: function ( times ) {\n\n\t\tfunction compareTime( i, j ) {\n\n\t\t\treturn times[ i ] - times[ j ];\n\n\t\t}\n\n\t\tvar n = times.length;\n\t\tvar result = new Array( n );\n\t\tfor ( var i = 0; i !== n; ++ i ) result[ i ] = i;\n\n\t\tresult.sort( compareTime );\n\n\t\treturn result;\n\n\t},\n\n\t// uses the array previously returned by 'getKeyframeOrder' to sort data\n\tsortedArray: function ( values, stride, order ) {\n\n\t\tvar nValues = values.length;\n\t\tvar result = new values.constructor( nValues );\n\n\t\tfor ( var i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\n\n\t\t\tvar srcOffset = order[ i ] * stride;\n\n\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn result;\n\n\t},\n\n\t// function for parsing AOS keyframe formats\n\tflattenJSON: function ( jsonKeys, times, values, valuePropertyName ) {\n\n\t\tvar i = 1, key = jsonKeys[ 0 ];\n\n\t\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\n\n\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t}\n\n\t\tif ( key === undefined ) return; // no data\n\n\t\tvar value = key[ valuePropertyName ];\n\t\tif ( value === undefined ) return; // no data\n\n\t\tif ( Array.isArray( value ) ) {\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalues.push.apply( values, value ); // push all elements\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t} else if ( value.toArray !== undefined ) {\n\n\t\t\t// ...assume THREE.Math-ish\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalue.toArray( values, values.length );\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t} else {\n\n\t\t\t// otherwise push as-is\n\n\t\t\tdo {\n\n\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\tvalues.push( value );\n\n\t\t\t\t}\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t} while ( key !== undefined );\n\n\t\t}\n\n\t}\n\n};\n\n/**\n * Abstract base class of interpolants over parametric samples.\n *\n * The parameter domain is one dimensional, typically the time or a path\n * along a curve defined by the data.\n *\n * The sample values can have any dimensionality and derived classes may\n * apply special interpretations to the data.\n *\n * This class provides the interval seek in a Template Method, deferring\n * the actual interpolation to derived classes.\n *\n * Time complexity is O(1) for linear access crossing at most two points\n * and O(log N) for random access, where N is the number of positions.\n *\n * References:\n *\n * \t\thttp://www.oodesign.com/template-method-pattern.html\n *\n * @author tschw\n */\n\nfunction Interpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tthis.parameterPositions = parameterPositions;\n\tthis._cachedIndex = 0;\n\n\tthis.resultBuffer = resultBuffer !== undefined ?\n\t\tresultBuffer : new sampleValues.constructor( sampleSize );\n\tthis.sampleValues = sampleValues;\n\tthis.valueSize = sampleSize;\n\n}\n\nObject.assign( Interpolant.prototype, {\n\n\tevaluate: function ( t ) {\n\n\t\tvar pp = this.parameterPositions,\n\t\t\ti1 = this._cachedIndex,\n\n\t\t\tt1 = pp[ i1 ],\n\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\tvalidate_interval: {\n\n\t\t\tseek: {\n\n\t\t\t\tvar right;\n\n\t\t\t\tlinear_scan: {\n\n\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\n\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\n\n\t\t\t\t\t\tfor ( var giveUpAt = i1 + 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\t\t\tif ( t < t0 ) break forward_scan;\n\n\t\t\t\t\t\t\t\t// after end\n\n\t\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\t\treturn this.afterEnd_( i1 - 1, t, t0 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt0 = t1;\n\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\n\n\t\t\t\t\t\t\tif ( t < t1 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the right side of the index\n\t\t\t\t\t\tright = pp.length;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t//- slower code:\n\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\t\t\t\t\tif ( ! ( t >= t0 ) ) {\n\n\t\t\t\t\t\t// looping?\n\n\t\t\t\t\t\tvar t1global = pp[ 1 ];\n\n\t\t\t\t\t\tif ( t < t1global ) {\n\n\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n\t\t\t\t\t\t\tt0 = t1global;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// linear reverse scan\n\n\t\t\t\t\t\tfor ( var giveUpAt = i1 - 2; ; ) {\n\n\t\t\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\t\t\t// before start\n\n\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( i1 === giveUpAt ) break; // this loop\n\n\t\t\t\t\t\t\tt1 = t0;\n\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\n\n\t\t\t\t\t\t\tif ( t >= t0 ) {\n\n\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// prepare binary search on the left side of the index\n\t\t\t\t\t\tright = i1;\n\t\t\t\t\t\ti1 = 0;\n\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// the interval is valid\n\n\t\t\t\t\tbreak validate_interval;\n\n\t\t\t\t} // linear scan\n\n\t\t\t\t// binary search\n\n\t\t\t\twhile ( i1 < right ) {\n\n\t\t\t\t\tvar mid = ( i1 + right ) >>> 1;\n\n\t\t\t\t\tif ( t < pp[ mid ] ) {\n\n\t\t\t\t\t\tright = mid;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ti1 = mid + 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tt1 = pp[ i1 ];\n\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\t\t// check boundary cases, again\n\n\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\treturn this.afterEnd_( i1 - 1, t0, t );\n\n\t\t\t\t}\n\n\t\t\t} // seek\n\n\t\t\tthis._cachedIndex = i1;\n\n\t\t\tthis.intervalChanged_( i1, t0, t1 );\n\n\t\t} // validate_interval\n\n\t\treturn this.interpolate_( i1, t0, t, t1 );\n\n\t},\n\n\tsettings: null, // optional, subclass-specific settings structure\n\t// Note: The indirection allows central control of many interpolants.\n\n\t// --- Protected interface\n\n\tDefaultSettings_: {},\n\n\tgetSettings_: function () {\n\n\t\treturn this.settings || this.DefaultSettings_;\n\n\t},\n\n\tcopySampleValue_: function ( index ) {\n\n\t\t// copies a sample value to the result buffer\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = index * stride;\n\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t},\n\n\t// Template methods for derived classes:\n\n\tinterpolate_: function ( /* i1, t0, t, t1 */ ) {\n\n\t\tthrow new Error( 'call to abstract method' );\n\t\t// implementations shall return this.resultBuffer\n\n\t},\n\n\tintervalChanged_: function ( /* i1, t0, t1 */ ) {\n\n\t\t// empty\n\n\t}\n\n} );\n\n//!\\ DECLARE ALIAS AFTER assign prototype !\nObject.assign( Interpolant.prototype, {\n\n\t//( 0, t, t0 ), returns this.resultBuffer\n\tbeforeStart_: Interpolant.prototype.copySampleValue_,\n\n\t//( N-1, tN-1, t ), returns this.resultBuffer\n\tafterEnd_: Interpolant.prototype.copySampleValue_,\n\n} );\n\n/**\n * Fast and simple cubic spline interpolant.\n *\n * It was derived from a Hermitian construction setting the first derivative\n * at each sample position to the linear slope between neighboring positions\n * over their parameter interval.\n *\n * @author tschw\n */\n\nfunction CubicInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\tthis._weightPrev = - 0;\n\tthis._offsetPrev = - 0;\n\tthis._weightNext = - 0;\n\tthis._offsetNext = - 0;\n\n}\n\nCubicInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\tconstructor: CubicInterpolant,\n\n\tDefaultSettings_: {\n\n\t\tendingStart: ZeroCurvatureEnding,\n\t\tendingEnd: ZeroCurvatureEnding\n\n\t},\n\n\tintervalChanged_: function ( i1, t0, t1 ) {\n\n\t\tvar pp = this.parameterPositions,\n\t\t\tiPrev = i1 - 2,\n\t\t\tiNext = i1 + 1,\n\n\t\t\ttPrev = pp[ iPrev ],\n\t\t\ttNext = pp[ iNext ];\n\n\t\tif ( tPrev === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingStart ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(t0) = 0\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = 2 * t0 - t1;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiPrev = pp.length - 2;\n\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\tiPrev = i1;\n\t\t\t\t\ttPrev = t1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tNext === undefined ) {\n\n\t\t\tswitch ( this.getSettings_().endingEnd ) {\n\n\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t// f'(tN) = 0\n\t\t\t\t\tiNext = i1;\n\t\t\t\t\ttNext = 2 * t1 - t0;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\tiNext = 1;\n\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\tiNext = i1 - 1;\n\t\t\t\t\ttNext = t0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar halfDt = ( t1 - t0 ) * 0.5,\n\t\t\tstride = this.valueSize;\n\n\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\n\t\tthis._weightNext = halfDt / ( tNext - t1 );\n\t\tthis._offsetPrev = iPrev * stride;\n\t\tthis._offsetNext = iNext * stride;\n\n\t},\n\n\tinterpolate_: function ( i1, t0, t, t1 ) {\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\n\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\n\t\t\twP = this._weightPrev,\twN = this._weightNext,\n\n\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tpp = p * p,\n\t\t\tppp = pp * p;\n\n\t\t// evaluate polynomials\n\n\t\tvar sP = - wP * ppp + 2 * wP * pp - wP * p;\n\t\tvar s0 = ( 1 + wP ) * ppp + ( - 1.5 - 2 * wP ) * pp + ( - 0.5 + wP ) * p + 1;\n\t\tvar s1 = ( - 1 - wN ) * ppp + ( 1.5 + wN ) * pp + 0.5 * p;\n\t\tvar sN = wN * ppp - wN * pp;\n\n\t\t// combine data linearly\n\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tsP * values[ oP + i ] +\n\t\t\t\t\ts0 * values[ o0 + i ] +\n\t\t\t\t\ts1 * values[ o1 + i ] +\n\t\t\t\t\tsN * values[ oN + i ];\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n} );\n\n/**\n * @author tschw\n */\n\nfunction LinearInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n}\n\nLinearInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\tconstructor: LinearInterpolant,\n\n\tinterpolate_: function ( i1, t0, t, t1 ) {\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\toffset1 = i1 * stride,\n\t\t\toffset0 = offset1 - stride,\n\n\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\n\t\t\tweight0 = 1 - weight1;\n\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\tresult[ i ] =\n\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\n\t\t\t\t\tvalues[ offset1 + i ] * weight1;\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n} );\n\n/**\n *\n * Interpolant that evaluates to the sample value at the position preceeding\n * the parameter.\n *\n * @author tschw\n */\n\nfunction DiscreteInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n}\n\nDiscreteInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\tconstructor: DiscreteInterpolant,\n\n\tinterpolate_: function ( i1 /*, t0, t, t1 */ ) {\n\n\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t}\n\n} );\n\nvar KeyframeTrackPrototype;\n\nKeyframeTrackPrototype = {\n\n\tTimeBufferType: Float32Array,\n\tValueBufferType: Float32Array,\n\n\tDefaultInterpolation: InterpolateLinear,\n\n\tInterpolantFactoryMethodDiscrete: function ( result ) {\n\n\t\treturn new DiscreteInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t},\n\n\tInterpolantFactoryMethodLinear: function ( result ) {\n\n\t\treturn new LinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t},\n\n\tInterpolantFactoryMethodSmooth: function ( result ) {\n\n\t\treturn new CubicInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t},\n\n\tsetInterpolation: function ( interpolation ) {\n\n\t\tvar factoryMethod;\n\n\t\tswitch ( interpolation ) {\n\n\t\t\tcase InterpolateDiscrete:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateLinear:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\n\t\t\t\tbreak;\n\n\t\t\tcase InterpolateSmooth:\n\n\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\n\t\t\t\tbreak;\n\n\t\t}\n\n\t\tif ( factoryMethod === undefined ) {\n\n\t\t\tvar message = \"unsupported interpolation for \" +\n\t\t\t\t\tthis.ValueTypeName + \" keyframe track named \" + this.name;\n\n\t\t\tif ( this.createInterpolant === undefined ) {\n\n\t\t\t\t// fall back to default, unless the default itself is messed up\n\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\n\n\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( message ); // fatal, in this case\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconsole.warn( 'THREE.KeyframeTrackPrototype:', message );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.createInterpolant = factoryMethod;\n\n\t},\n\n\tgetInterpolation: function () {\n\n\t\tswitch ( this.createInterpolant ) {\n\n\t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\n\t\t\t\treturn InterpolateDiscrete;\n\n\t\t\tcase this.InterpolantFactoryMethodLinear:\n\n\t\t\t\treturn InterpolateLinear;\n\n\t\t\tcase this.InterpolantFactoryMethodSmooth:\n\n\t\t\t\treturn InterpolateSmooth;\n\n\t\t}\n\n\t},\n\n\tgetValueSize: function () {\n\n\t\treturn this.values.length / this.times.length;\n\n\t},\n\n\t// move all keyframes either forwards or backwards in time\n\tshift: function ( timeOffset ) {\n\n\t\tif ( timeOffset !== 0.0 ) {\n\n\t\t\tvar times = this.times;\n\n\t\t\tfor ( var i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] += timeOffset;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\tscale: function ( timeScale ) {\n\n\t\tif ( timeScale !== 1.0 ) {\n\n\t\t\tvar times = this.times;\n\n\t\t\tfor ( var i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\ttimes[ i ] *= timeScale;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\ttrim: function ( startTime, endTime ) {\n\n\t\tvar times = this.times,\n\t\t\tnKeys = times.length,\n\t\t\tfrom = 0,\n\t\t\tto = nKeys - 1;\n\n\t\twhile ( from !== nKeys && times[ from ] < startTime ) ++ from;\n\t\twhile ( to !== - 1 && times[ to ] > endTime ) -- to;\n\n\t\t++ to; // inclusive -> exclusive bound\n\n\t\tif ( from !== 0 || to !== nKeys ) {\n\n\t\t\t// empty tracks are forbidden, so keep at least one keyframe\n\t\t\tif ( from >= to ) to = Math.max( to, 1 ), from = to - 1;\n\n\t\t\tvar stride = this.getValueSize();\n\t\t\tthis.times = AnimationUtils.arraySlice( times, from, to );\n\t\t\tthis.values = AnimationUtils.arraySlice( this.values, from * stride, to * stride );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\tvalidate: function () {\n\n\t\tvar valid = true;\n\n\t\tvar valueSize = this.getValueSize();\n\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrackPrototype: Invalid value size in track.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tvar times = this.times,\n\t\t\tvalues = this.values,\n\n\t\t\tnKeys = times.length;\n\n\t\tif ( nKeys === 0 ) {\n\n\t\t\tconsole.error( 'THREE.KeyframeTrackPrototype: Track is empty.', this );\n\t\t\tvalid = false;\n\n\t\t}\n\n\t\tvar prevTime = null;\n\n\t\tfor ( var i = 0; i !== nKeys; i ++ ) {\n\n\t\t\tvar currTime = times[ i ];\n\n\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrackPrototype: Time is not a valid number.', this, i, currTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( prevTime !== null && prevTime > currTime ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrackPrototype: Out of order keys.', this, i, currTime, prevTime );\n\t\t\t\tvalid = false;\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tprevTime = currTime;\n\n\t\t}\n\n\t\tif ( values !== undefined ) {\n\n\t\t\tif ( AnimationUtils.isTypedArray( values ) ) {\n\n\t\t\t\tfor ( var i = 0, n = values.length; i !== n; ++ i ) {\n\n\t\t\t\t\tvar value = values[ i ];\n\n\t\t\t\t\tif ( isNaN( value ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.KeyframeTrackPrototype: Value is not a valid number.', this, i, value );\n\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn valid;\n\n\t},\n\n\t// removes equivalent sequential keys as common in morph target sequences\n\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\toptimize: function () {\n\n\t\tvar times = this.times,\n\t\t\tvalues = this.values,\n\t\t\tstride = this.getValueSize(),\n\n\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n\n\t\t\twriteIndex = 1,\n\t\t\tlastIndex = times.length - 1;\n\n\t\tfor ( var i = 1; i < lastIndex; ++ i ) {\n\n\t\t\tvar keep = false;\n\n\t\t\tvar time = times[ i ];\n\t\t\tvar timeNext = times[ i + 1 ];\n\n\t\t\t// remove adjacent keyframes scheduled at the same time\n\n\t\t\tif ( time !== timeNext && ( i !== 1 || time !== time[ 0 ] ) ) {\n\n\t\t\t\tif ( ! smoothInterpolation ) {\n\n\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\n\t\t\t\t\tvar offset = i * stride,\n\t\t\t\t\t\toffsetP = offset - stride,\n\t\t\t\t\t\toffsetN = offset + stride;\n\n\t\t\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\tvar value = values[ offset + j ];\n\n\t\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\n\t\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\n\n\t\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else keep = true;\n\n\t\t\t}\n\n\t\t\t// in-place compaction\n\n\t\t\tif ( keep ) {\n\n\t\t\t\tif ( i !== writeIndex ) {\n\n\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\n\n\t\t\t\t\tvar readOffset = i * stride,\n\t\t\t\t\t\twriteOffset = writeIndex * stride;\n\n\t\t\t\t\tfor ( var j = 0; j !== stride; ++ j )\n\n\t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t\t}\n\n\t\t\t\t++ writeIndex;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// flush last keyframe (compaction looks ahead)\n\n\t\tif ( lastIndex > 0 ) {\n\n\t\t\ttimes[ writeIndex ] = times[ lastIndex ];\n\n\t\t\tfor ( var readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j )\n\n\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t++ writeIndex;\n\n\t\t}\n\n\t\tif ( writeIndex !== times.length ) {\n\n\t\t\tthis.times = AnimationUtils.arraySlice( times, 0, writeIndex );\n\t\t\tthis.values = AnimationUtils.arraySlice( values, 0, writeIndex * stride );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n};\n\nfunction KeyframeTrackConstructor( name, times, values, interpolation ) {\n\n\tif ( name === undefined ) throw new Error( 'track name is undefined' );\n\n\tif ( times === undefined || times.length === 0 ) {\n\n\t\tthrow new Error( 'no keyframes in track named ' + name );\n\n\t}\n\n\tthis.name = name;\n\n\tthis.times = AnimationUtils.convertArray( times, this.TimeBufferType );\n\tthis.values = AnimationUtils.convertArray( values, this.ValueBufferType );\n\n\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\n\n\tthis.validate();\n\tthis.optimize();\n\n}\n\n/**\n *\n * A Track of vectored keyframe values.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction VectorKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrackConstructor.call( this, name, times, values, interpolation );\n\n}\n\nVectorKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrackPrototype ), {\n\n\tconstructor: VectorKeyframeTrack,\n\n\tValueTypeName: 'vector'\n\n\t// ValueBufferType is inherited\n\n\t// DefaultInterpolation is inherited\n\n} );\n\n/**\n * Spherical linear unit quaternion interpolant.\n *\n * @author tschw\n */\n\nfunction QuaternionLinearInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n}\n\nQuaternionLinearInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\tconstructor: QuaternionLinearInterpolant,\n\n\tinterpolate_: function ( i1, t0, t, t1 ) {\n\n\t\tvar result = this.resultBuffer,\n\t\t\tvalues = this.sampleValues,\n\t\t\tstride = this.valueSize,\n\n\t\t\toffset = i1 * stride,\n\n\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\n\n\t\tfor ( var end = offset + stride; offset !== end; offset += 4 ) {\n\n\t\t\tQuaternion.slerpFlat( result, 0, values, offset - stride, values, offset, alpha );\n\n\t\t}\n\n\t\treturn result;\n\n\t}\n\n} );\n\n/**\n *\n * A Track of quaternion keyframe values.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction QuaternionKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrackConstructor.call( this, name, times, values, interpolation );\n\n}\n\nQuaternionKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrackPrototype ), {\n\n\tconstructor: QuaternionKeyframeTrack,\n\n\tValueTypeName: 'quaternion',\n\n\t// ValueBufferType is inherited\n\n\tDefaultInterpolation: InterpolateLinear,\n\n\tInterpolantFactoryMethodLinear: function ( result ) {\n\n\t\treturn new QuaternionLinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t},\n\n\tInterpolantFactoryMethodSmooth: undefined // not yet implemented\n\n} );\n\n/**\n *\n * A Track of numeric keyframe values.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction NumberKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrackConstructor.call( this, name, times, values, interpolation );\n\n}\n\nNumberKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrackPrototype ), {\n\n\tconstructor: NumberKeyframeTrack,\n\n\tValueTypeName: 'number'\n\n\t// ValueBufferType is inherited\n\n\t// DefaultInterpolation is inherited\n\n} );\n\n/**\n *\n * A Track that interpolates Strings\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction StringKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrackConstructor.call( this, name, times, values, interpolation );\n\n}\n\nStringKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrackPrototype ), {\n\n\tconstructor: StringKeyframeTrack,\n\n\tValueTypeName: 'string',\n\tValueBufferType: Array,\n\n\tDefaultInterpolation: InterpolateDiscrete,\n\n\tInterpolantFactoryMethodLinear: undefined,\n\n\tInterpolantFactoryMethodSmooth: undefined\n\n} );\n\n/**\n *\n * A Track of Boolean keyframe values.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction BooleanKeyframeTrack( name, times, values ) {\n\n\tKeyframeTrackConstructor.call( this, name, times, values );\n\n}\n\nBooleanKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrackPrototype ), {\n\n\tconstructor: BooleanKeyframeTrack,\n\n\tValueTypeName: 'bool',\n\tValueBufferType: Array,\n\n\tDefaultInterpolation: InterpolateDiscrete,\n\n\tInterpolantFactoryMethodLinear: undefined,\n\tInterpolantFactoryMethodSmooth: undefined\n\n\t// Note: Actually this track could have a optimized / compressed\n\t// representation of a single value and a custom interpolant that\n\t// computes \"firstValue ^ isOdd( index )\".\n\n} );\n\n/**\n *\n * A Track of keyframe values that represent color.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction ColorKeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrackConstructor.call( this, name, times, values, interpolation );\n\n}\n\nColorKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrackPrototype ), {\n\n\tconstructor: ColorKeyframeTrack,\n\n\tValueTypeName: 'color'\n\n\t// ValueBufferType is inherited\n\n\t// DefaultInterpolation is inherited\n\n\n\t// Note: Very basic implementation and nothing special yet.\n\t// However, this is the place for color space parameterization.\n\n} );\n\n/**\n *\n * A timed sequence of keyframes for a specific property.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction KeyframeTrack( name, times, values, interpolation ) {\n\n\tKeyframeTrackConstructor.apply( this, name, times, values, interpolation );\n\n}\n\nKeyframeTrack.prototype = KeyframeTrackPrototype;\nKeyframeTrackPrototype.constructor = KeyframeTrack;\n\n// Static methods:\n\nObject.assign( KeyframeTrack, {\n\n\t// Serialization (in static context, because of constructor invocation\n\t// and automatic invocation of .toJSON):\n\n\tparse: function ( json ) {\n\n\t\tif ( json.type === undefined ) {\n\n\t\t\tthrow new Error( 'track type undefined, can not parse' );\n\n\t\t}\n\n\t\tvar trackType = KeyframeTrack._getTrackTypeForValueTypeName( json.type );\n\n\t\tif ( json.times === undefined ) {\n\n\t\t\tvar times = [], values = [];\n\n\t\t\tAnimationUtils.flattenJSON( json.keys, times, values, 'value' );\n\n\t\t\tjson.times = times;\n\t\t\tjson.values = values;\n\n\t\t}\n\n\t\t// derived classes can define a static parse method\n\t\tif ( trackType.parse !== undefined ) {\n\n\t\t\treturn trackType.parse( json );\n\n\t\t} else {\n\n\t\t\t// by default, we assume a constructor compatible with the base\n\t\t\treturn new trackType( json.name, json.times, json.values, json.interpolation );\n\n\t\t}\n\n\t},\n\n\ttoJSON: function ( track ) {\n\n\t\tvar trackType = track.constructor;\n\n\t\tvar json;\n\n\t\t// derived classes can define a static toJSON method\n\t\tif ( trackType.toJSON !== undefined ) {\n\n\t\t\tjson = trackType.toJSON( track );\n\n\t\t} else {\n\n\t\t\t// by default, we assume the data can be serialized as-is\n\t\t\tjson = {\n\n\t\t\t\t'name': track.name,\n\t\t\t\t'times': AnimationUtils.convertArray( track.times, Array ),\n\t\t\t\t'values': AnimationUtils.convertArray( track.values, Array )\n\n\t\t\t};\n\n\t\t\tvar interpolation = track.getInterpolation();\n\n\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\n\n\t\t\t\tjson.interpolation = interpolation;\n\n\t\t\t}\n\n\t\t}\n\n\t\tjson.type = track.ValueTypeName; // mandatory\n\n\t\treturn json;\n\n\t},\n\n\t_getTrackTypeForValueTypeName: function ( typeName ) {\n\n\t\tswitch ( typeName.toLowerCase() ) {\n\n\t\t\tcase 'scalar':\n\t\t\tcase 'double':\n\t\t\tcase 'float':\n\t\t\tcase 'number':\n\t\t\tcase 'integer':\n\n\t\t\t\treturn NumberKeyframeTrack;\n\n\t\t\tcase 'vector':\n\t\t\tcase 'vector2':\n\t\t\tcase 'vector3':\n\t\t\tcase 'vector4':\n\n\t\t\t\treturn VectorKeyframeTrack;\n\n\t\t\tcase 'color':\n\n\t\t\t\treturn ColorKeyframeTrack;\n\n\t\t\tcase 'quaternion':\n\n\t\t\t\treturn QuaternionKeyframeTrack;\n\n\t\t\tcase 'bool':\n\t\t\tcase 'boolean':\n\n\t\t\t\treturn BooleanKeyframeTrack;\n\n\t\t\tcase 'string':\n\n\t\t\t\treturn StringKeyframeTrack;\n\n\t\t}\n\n\t\tthrow new Error( 'Unsupported typeName: ' + typeName );\n\n\t}\n\n} );\n\n/**\n *\n * Reusable set of Tracks that represent an animation.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n */\n\nfunction AnimationClip( name, duration, tracks ) {\n\n\tthis.name = name;\n\tthis.tracks = tracks;\n\tthis.duration = ( duration !== undefined ) ? duration : - 1;\n\n\tthis.uuid = _Math.generateUUID();\n\n\t// this means it should figure out its duration by scanning the tracks\n\tif ( this.duration < 0 ) {\n\n\t\tthis.resetDuration();\n\n\t}\n\n\tthis.optimize();\n\n}\n\nObject.assign( AnimationClip, {\n\n\tparse: function ( json ) {\n\n\t\tvar tracks = [],\n\t\t\tjsonTracks = json.tracks,\n\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\n\n\t\tfor ( var i = 0, n = jsonTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( KeyframeTrack.parse( jsonTracks[ i ] ).scale( frameTime ) );\n\n\t\t}\n\n\t\treturn new AnimationClip( json.name, json.duration, tracks );\n\n\t},\n\n\ttoJSON: function ( clip ) {\n\n\t\tvar tracks = [],\n\t\t\tclipTracks = clip.tracks;\n\n\t\tvar json = {\n\n\t\t\t'name': clip.name,\n\t\t\t'duration': clip.duration,\n\t\t\t'tracks': tracks\n\n\t\t};\n\n\t\tfor ( var i = 0, n = clipTracks.length; i !== n; ++ i ) {\n\n\t\t\ttracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\n\n\t\t}\n\n\t\treturn json;\n\n\t},\n\n\tCreateFromMorphTargetSequence: function ( name, morphTargetSequence, fps, noLoop ) {\n\n\t\tvar numMorphTargets = morphTargetSequence.length;\n\t\tvar tracks = [];\n\n\t\tfor ( var i = 0; i < numMorphTargets; i ++ ) {\n\n\t\t\tvar times = [];\n\t\t\tvar values = [];\n\n\t\t\ttimes.push(\n\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\n\t\t\t\ti,\n\t\t\t\t( i + 1 ) % numMorphTargets );\n\n\t\t\tvalues.push( 0, 1, 0 );\n\n\t\t\tvar order = AnimationUtils.getKeyframeOrder( times );\n\t\t\ttimes = AnimationUtils.sortedArray( times, 1, order );\n\t\t\tvalues = AnimationUtils.sortedArray( values, 1, order );\n\n\t\t\t// if there is a key at the first frame, duplicate it as the\n\t\t\t// last frame as well for perfect loop.\n\t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\n\n\t\t\t\ttimes.push( numMorphTargets );\n\t\t\t\tvalues.push( values[ 0 ] );\n\n\t\t\t}\n\n\t\t\ttracks.push(\n\t\t\t\tnew NumberKeyframeTrack(\n\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\n\t\t\t\t\ttimes, values\n\t\t\t\t).scale( 1.0 / fps ) );\n\n\t\t}\n\n\t\treturn new AnimationClip( name, - 1, tracks );\n\n\t},\n\n\tfindByName: function ( objectOrClipArray, name ) {\n\n\t\tvar clipArray = objectOrClipArray;\n\n\t\tif ( ! Array.isArray( objectOrClipArray ) ) {\n\n\t\t\tvar o = objectOrClipArray;\n\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\n\t\t}\n\n\t\tfor ( var i = 0; i < clipArray.length; i ++ ) {\n\n\t\t\tif ( clipArray[ i ].name === name ) {\n\n\t\t\t\treturn clipArray[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t},\n\n\tCreateClipsFromMorphTargetSequences: function ( morphTargets, fps, noLoop ) {\n\n\t\tvar animationToMorphTargets = {};\n\n\t\t// tested with https://regex101.com/ on trick sequences\n\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\t\tvar pattern = /^([\\w-]*?)([\\d]+)$/;\n\n\t\t// sort morph target names into animation groups based\n\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n\t\tfor ( var i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\tvar morphTarget = morphTargets[ i ];\n\t\t\tvar parts = morphTarget.name.match( pattern );\n\n\t\t\tif ( parts && parts.length > 1 ) {\n\n\t\t\t\tvar name = parts[ 1 ];\n\n\t\t\t\tvar animationMorphTargets = animationToMorphTargets[ name ];\n\t\t\t\tif ( ! animationMorphTargets ) {\n\n\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\n\n\t\t\t\t}\n\n\t\t\t\tanimationMorphTargets.push( morphTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar clips = [];\n\n\t\tfor ( var name in animationToMorphTargets ) {\n\n\t\t\tclips.push( AnimationClip.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\n\n\t\t}\n\n\t\treturn clips;\n\n\t},\n\n\t// parse the animation.hierarchy format\n\tparseAnimation: function ( animation, bones ) {\n\n\t\tif ( ! animation ) {\n\n\t\t\tconsole.error( 'THREE.AnimationClip: No animation in JSONLoader data.' );\n\t\t\treturn null;\n\n\t\t}\n\n\t\tvar addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {\n\n\t\t\t// only return track if there are actually keys.\n\t\t\tif ( animationKeys.length !== 0 ) {\n\n\t\t\t\tvar times = [];\n\t\t\t\tvar values = [];\n\n\t\t\t\tAnimationUtils.flattenJSON( animationKeys, times, values, propertyName );\n\n\t\t\t\t// empty keys are filtered out, so check again\n\t\t\t\tif ( times.length !== 0 ) {\n\n\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tvar tracks = [];\n\n\t\tvar clipName = animation.name || 'default';\n\t\t// automatic length determination in AnimationClip.\n\t\tvar duration = animation.length || - 1;\n\t\tvar fps = animation.fps || 30;\n\n\t\tvar hierarchyTracks = animation.hierarchy || [];\n\n\t\tfor ( var h = 0; h < hierarchyTracks.length; h ++ ) {\n\n\t\t\tvar animationKeys = hierarchyTracks[ h ].keys;\n\n\t\t\t// skip empty tracks\n\t\t\tif ( ! animationKeys || animationKeys.length === 0 ) continue;\n\n\t\t\t// process morph targets\n\t\t\tif ( animationKeys[ 0 ].morphTargets ) {\n\n\t\t\t\t// figure out all morph targets used in this track\n\t\t\t\tvar morphTargetNames = {};\n\n\t\t\t\tfor ( var k = 0; k < animationKeys.length; k ++ ) {\n\n\t\t\t\t\tif ( animationKeys[ k ].morphTargets ) {\n\n\t\t\t\t\t\tfor ( var m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {\n\n\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// create a track for each morph target with all zero\n\t\t\t\t// morphTargetInfluences except for the keys in which\n\t\t\t\t// the morphTarget is named.\n\t\t\t\tfor ( var morphTargetName in morphTargetNames ) {\n\n\t\t\t\t\tvar times = [];\n\t\t\t\t\tvar values = [];\n\n\t\t\t\t\tfor ( var m = 0; m !== animationKeys[ k ].morphTargets.length; ++ m ) {\n\n\t\t\t\t\t\tvar animationKey = animationKeys[ k ];\n\n\t\t\t\t\t\ttimes.push( animationKey.time );\n\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\n\n\t\t\t\t}\n\n\t\t\t\tduration = morphTargetNames.length * ( fps || 1.0 );\n\n\t\t\t} else {\n\n\t\t\t\t// ...assume skeletal animation\n\n\t\t\t\tvar boneName = '.bones[' + bones[ h ].name + ']';\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.position',\n\t\t\t\t\tanimationKeys, 'pos', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tQuaternionKeyframeTrack, boneName + '.quaternion',\n\t\t\t\t\tanimationKeys, 'rot', tracks );\n\n\t\t\t\taddNonemptyTrack(\n\t\t\t\t\tVectorKeyframeTrack, boneName + '.scale',\n\t\t\t\t\tanimationKeys, 'scl', tracks );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( tracks.length === 0 ) {\n\n\t\t\treturn null;\n\n\t\t}\n\n\t\tvar clip = new AnimationClip( clipName, duration, tracks );\n\n\t\treturn clip;\n\n\t}\n\n} );\n\nObject.assign( AnimationClip.prototype, {\n\n\tresetDuration: function () {\n\n\t\tvar tracks = this.tracks, duration = 0;\n\n\t\tfor ( var i = 0, n = tracks.length; i !== n; ++ i ) {\n\n\t\t\tvar track = this.tracks[ i ];\n\n\t\t\tduration = Math.max( duration, track.times[ track.times.length - 1 ] );\n\n\t\t}\n\n\t\tthis.duration = duration;\n\n\t},\n\n\ttrim: function () {\n\n\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].trim( 0, this.duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\toptimize: function () {\n\n\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\tthis.tracks[ i ].optimize();\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction MaterialLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\tthis.textures = {};\n\n}\n\nObject.assign( MaterialLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new FileLoader( scope.manager );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tsetTextures: function ( value ) {\n\n\t\tthis.textures = value;\n\n\t},\n\n\tparse: function ( json ) {\n\n\t\tvar textures = this.textures;\n\n\t\tfunction getTexture( name ) {\n\n\t\t\tif ( textures[ name ] === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\n\n\t\t\t}\n\n\t\t\treturn textures[ name ];\n\n\t\t}\n\n\t\tvar material = new Materials[ json.type ]();\n\n\t\tif ( json.uuid !== undefined ) material.uuid = json.uuid;\n\t\tif ( json.name !== undefined ) material.name = json.name;\n\t\tif ( json.color !== undefined ) material.color.setHex( json.color );\n\t\tif ( json.roughness !== undefined ) material.roughness = json.roughness;\n\t\tif ( json.metalness !== undefined ) material.metalness = json.metalness;\n\t\tif ( json.emissive !== undefined ) material.emissive.setHex( json.emissive );\n\t\tif ( json.specular !== undefined ) material.specular.setHex( json.specular );\n\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\n\t\tif ( json.clearCoat !== undefined ) material.clearCoat = json.clearCoat;\n\t\tif ( json.clearCoatRoughness !== undefined ) material.clearCoatRoughness = json.clearCoatRoughness;\n\t\tif ( json.uniforms !== undefined ) material.uniforms = json.uniforms;\n\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\n\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\n\t\tif ( json.vertexColors !== undefined ) material.vertexColors = json.vertexColors;\n\t\tif ( json.fog !== undefined ) material.fog = json.fog;\n\t\tif ( json.flatShading !== undefined ) material.flatShading = json.flatShading;\n\t\tif ( json.blending !== undefined ) material.blending = json.blending;\n\t\tif ( json.side !== undefined ) material.side = json.side;\n\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\n\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\n\t\tif ( json.alphaTest !== undefined ) material.alphaTest = json.alphaTest;\n\t\tif ( json.depthTest !== undefined ) material.depthTest = json.depthTest;\n\t\tif ( json.depthWrite !== undefined ) material.depthWrite = json.depthWrite;\n\t\tif ( json.colorWrite !== undefined ) material.colorWrite = json.colorWrite;\n\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\n\t\tif ( json.wireframeLinewidth !== undefined ) material.wireframeLinewidth = json.wireframeLinewidth;\n\t\tif ( json.wireframeLinecap !== undefined ) material.wireframeLinecap = json.wireframeLinecap;\n\t\tif ( json.wireframeLinejoin !== undefined ) material.wireframeLinejoin = json.wireframeLinejoin;\n\n\t\tif ( json.rotation !== undefined ) material.rotation = json.rotation;\n\n\t\tif ( json.linewidth !== 1 ) material.linewidth = json.linewidth;\n\t\tif ( json.dashSize !== undefined ) material.dashSize = json.dashSize;\n\t\tif ( json.gapSize !== undefined ) material.gapSize = json.gapSize;\n\t\tif ( json.scale !== undefined ) material.scale = json.scale;\n\n\t\tif ( json.skinning !== undefined ) material.skinning = json.skinning;\n\t\tif ( json.morphTargets !== undefined ) material.morphTargets = json.morphTargets;\n\t\tif ( json.dithering !== undefined ) material.dithering = json.dithering;\n\n\t\tif ( json.visible !== undefined ) material.visible = json.visible;\n\t\tif ( json.userData !== undefined ) material.userData = json.userData;\n\n\t\t// Deprecated\n\n\t\tif ( json.shading !== undefined ) material.flatShading = json.shading === 1; // THREE.FlatShading\n\n\t\t// for PointsMaterial\n\n\t\tif ( json.size !== undefined ) material.size = json.size;\n\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\n\n\t\t// maps\n\n\t\tif ( json.map !== undefined ) material.map = getTexture( json.map );\n\n\t\tif ( json.alphaMap !== undefined ) {\n\n\t\t\tmaterial.alphaMap = getTexture( json.alphaMap );\n\t\t\tmaterial.transparent = true;\n\n\t\t}\n\n\t\tif ( json.bumpMap !== undefined ) material.bumpMap = getTexture( json.bumpMap );\n\t\tif ( json.bumpScale !== undefined ) material.bumpScale = json.bumpScale;\n\n\t\tif ( json.normalMap !== undefined ) material.normalMap = getTexture( json.normalMap );\n\t\tif ( json.normalScale !== undefined ) {\n\n\t\t\tvar normalScale = json.normalScale;\n\n\t\t\tif ( Array.isArray( normalScale ) === false ) {\n\n\t\t\t\t// Blender exporter used to export a scalar. See #7459\n\n\t\t\t\tnormalScale = [ normalScale, normalScale ];\n\n\t\t\t}\n\n\t\t\tmaterial.normalScale = new Vector2().fromArray( normalScale );\n\n\t\t}\n\n\t\tif ( json.displacementMap !== undefined ) material.displacementMap = getTexture( json.displacementMap );\n\t\tif ( json.displacementScale !== undefined ) material.displacementScale = json.displacementScale;\n\t\tif ( json.displacementBias !== undefined ) material.displacementBias = json.displacementBias;\n\n\t\tif ( json.roughnessMap !== undefined ) material.roughnessMap = getTexture( json.roughnessMap );\n\t\tif ( json.metalnessMap !== undefined ) material.metalnessMap = getTexture( json.metalnessMap );\n\n\t\tif ( json.emissiveMap !== undefined ) material.emissiveMap = getTexture( json.emissiveMap );\n\t\tif ( json.emissiveIntensity !== undefined ) material.emissiveIntensity = json.emissiveIntensity;\n\n\t\tif ( json.specularMap !== undefined ) material.specularMap = getTexture( json.specularMap );\n\n\t\tif ( json.envMap !== undefined ) material.envMap = getTexture( json.envMap );\n\n\t\tif ( json.reflectivity !== undefined ) material.reflectivity = json.reflectivity;\n\n\t\tif ( json.lightMap !== undefined ) material.lightMap = getTexture( json.lightMap );\n\t\tif ( json.lightMapIntensity !== undefined ) material.lightMapIntensity = json.lightMapIntensity;\n\n\t\tif ( json.aoMap !== undefined ) material.aoMap = getTexture( json.aoMap );\n\t\tif ( json.aoMapIntensity !== undefined ) material.aoMapIntensity = json.aoMapIntensity;\n\n\t\tif ( json.gradientMap !== undefined ) material.gradientMap = getTexture( json.gradientMap );\n\n\t\treturn material;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction BufferGeometryLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( BufferGeometryLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new FileLoader( scope.manager );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tparse: function ( json ) {\n\n\t\tvar geometry = new BufferGeometry();\n\n\t\tvar index = json.data.index;\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tvar typedArray = new TYPED_ARRAYS[ index.type ]( index.array );\n\t\t\tgeometry.setIndex( new BufferAttribute( typedArray, 1 ) );\n\n\t\t}\n\n\t\tvar attributes = json.data.attributes;\n\n\t\tfor ( var key in attributes ) {\n\n\t\t\tvar attribute = attributes[ key ];\n\t\t\tvar typedArray = new TYPED_ARRAYS[ attribute.type ]( attribute.array );\n\n\t\t\tgeometry.addAttribute( key, new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized ) );\n\n\t\t}\n\n\t\tvar groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n\t\tif ( groups !== undefined ) {\n\n\t\t\tfor ( var i = 0, n = groups.length; i !== n; ++ i ) {\n\n\t\t\t\tvar group = groups[ i ];\n\n\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar boundingSphere = json.data.boundingSphere;\n\n\t\tif ( boundingSphere !== undefined ) {\n\n\t\t\tvar center = new Vector3();\n\n\t\t\tif ( boundingSphere.center !== undefined ) {\n\n\t\t\t\tcenter.fromArray( boundingSphere.center );\n\n\t\t\t}\n\n\t\t\tgeometry.boundingSphere = new Sphere( center, boundingSphere.radius );\n\n\t\t}\n\n\t\treturn geometry;\n\n\t}\n\n} );\n\nvar TYPED_ARRAYS = {\n\tInt8Array: Int8Array,\n\tUint8Array: Uint8Array,\n\t// Workaround for IE11 pre KB2929437. See #11440\n\tUint8ClampedArray: typeof Uint8ClampedArray !== 'undefined' ? Uint8ClampedArray : Uint8Array,\n\tInt16Array: Int16Array,\n\tUint16Array: Uint16Array,\n\tInt32Array: Int32Array,\n\tUint32Array: Uint32Array,\n\tFloat32Array: Float32Array,\n\tFloat64Array: Float64Array\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Loader() {\n\n\tthis.onLoadStart = function () {};\n\tthis.onLoadProgress = function () {};\n\tthis.onLoadComplete = function () {};\n\n}\n\nLoader.Handlers = {\n\n\thandlers: [],\n\n\tadd: function ( regex, loader ) {\n\n\t\tthis.handlers.push( regex, loader );\n\n\t},\n\n\tget: function ( file ) {\n\n\t\tvar handlers = this.handlers;\n\n\t\tfor ( var i = 0, l = handlers.length; i < l; i += 2 ) {\n\n\t\t\tvar regex = handlers[ i ];\n\t\t\tvar loader = handlers[ i + 1 ];\n\n\t\t\tif ( regex.test( file ) ) {\n\n\t\t\t\treturn loader;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n};\n\nObject.assign( Loader.prototype, {\n\n\tcrossOrigin: undefined,\n\n\textractUrlBase: function ( url ) {\n\n\t\tvar parts = url.split( '/' );\n\n\t\tif ( parts.length === 1 ) return './';\n\n\t\tparts.pop();\n\n\t\treturn parts.join( '/' ) + '/';\n\n\t},\n\n\tinitMaterials: function ( materials, texturePath, crossOrigin ) {\n\n\t\tvar array = [];\n\n\t\tfor ( var i = 0; i < materials.length; ++ i ) {\n\n\t\t\tarray[ i ] = this.createMaterial( materials[ i ], texturePath, crossOrigin );\n\n\t\t}\n\n\t\treturn array;\n\n\t},\n\n\tcreateMaterial: ( function () {\n\n\t\tvar BlendingMode = {\n\t\t\tNoBlending: NoBlending,\n\t\t\tNormalBlending: NormalBlending,\n\t\t\tAdditiveBlending: AdditiveBlending,\n\t\t\tSubtractiveBlending: SubtractiveBlending,\n\t\t\tMultiplyBlending: MultiplyBlending,\n\t\t\tCustomBlending: CustomBlending\n\t\t};\n\n\t\tvar color = new Color();\n\t\tvar textureLoader = new TextureLoader();\n\t\tvar materialLoader = new MaterialLoader();\n\n\t\treturn function createMaterial( m, texturePath, crossOrigin ) {\n\n\t\t\t// convert from old material format\n\n\t\t\tvar textures = {};\n\n\t\t\tfunction loadTexture( path, repeat, offset, wrap, anisotropy ) {\n\n\t\t\t\tvar fullPath = texturePath + path;\n\t\t\t\tvar loader = Loader.Handlers.get( fullPath );\n\n\t\t\t\tvar texture;\n\n\t\t\t\tif ( loader !== null ) {\n\n\t\t\t\t\ttexture = loader.load( fullPath );\n\n\t\t\t\t} else {\n\n\t\t\t\t\ttextureLoader.setCrossOrigin( crossOrigin );\n\t\t\t\t\ttexture = textureLoader.load( fullPath );\n\n\t\t\t\t}\n\n\t\t\t\tif ( repeat !== undefined ) {\n\n\t\t\t\t\ttexture.repeat.fromArray( repeat );\n\n\t\t\t\t\tif ( repeat[ 0 ] !== 1 ) texture.wrapS = RepeatWrapping;\n\t\t\t\t\tif ( repeat[ 1 ] !== 1 ) texture.wrapT = RepeatWrapping;\n\n\t\t\t\t}\n\n\t\t\t\tif ( offset !== undefined ) {\n\n\t\t\t\t\ttexture.offset.fromArray( offset );\n\n\t\t\t\t}\n\n\t\t\t\tif ( wrap !== undefined ) {\n\n\t\t\t\t\tif ( wrap[ 0 ] === 'repeat' ) texture.wrapS = RepeatWrapping;\n\t\t\t\t\tif ( wrap[ 0 ] === 'mirror' ) texture.wrapS = MirroredRepeatWrapping;\n\n\t\t\t\t\tif ( wrap[ 1 ] === 'repeat' ) texture.wrapT = RepeatWrapping;\n\t\t\t\t\tif ( wrap[ 1 ] === 'mirror' ) texture.wrapT = MirroredRepeatWrapping;\n\n\t\t\t\t}\n\n\t\t\t\tif ( anisotropy !== undefined ) {\n\n\t\t\t\t\ttexture.anisotropy = anisotropy;\n\n\t\t\t\t}\n\n\t\t\t\tvar uuid = _Math.generateUUID();\n\n\t\t\t\ttextures[ uuid ] = texture;\n\n\t\t\t\treturn uuid;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tvar json = {\n\t\t\t\tuuid: _Math.generateUUID(),\n\t\t\t\ttype: 'MeshLambertMaterial'\n\t\t\t};\n\n\t\t\tfor ( var name in m ) {\n\n\t\t\t\tvar value = m[ name ];\n\n\t\t\t\tswitch ( name ) {\n\n\t\t\t\t\tcase 'DbgColor':\n\t\t\t\t\tcase 'DbgIndex':\n\t\t\t\t\tcase 'opticalDensity':\n\t\t\t\t\tcase 'illumination':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'DbgName':\n\t\t\t\t\t\tjson.name = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'blending':\n\t\t\t\t\t\tjson.blending = BlendingMode[ value ];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'colorAmbient':\n\t\t\t\t\tcase 'mapAmbient':\n\t\t\t\t\t\tconsole.warn( 'THREE.Loader.createMaterial:', name, 'is no longer supported.' );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'colorDiffuse':\n\t\t\t\t\t\tjson.color = color.fromArray( value ).getHex();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'colorSpecular':\n\t\t\t\t\t\tjson.specular = color.fromArray( value ).getHex();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'colorEmissive':\n\t\t\t\t\t\tjson.emissive = color.fromArray( value ).getHex();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'specularCoef':\n\t\t\t\t\t\tjson.shininess = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'shading':\n\t\t\t\t\t\tif ( value.toLowerCase() === 'basic' ) json.type = 'MeshBasicMaterial';\n\t\t\t\t\t\tif ( value.toLowerCase() === 'phong' ) json.type = 'MeshPhongMaterial';\n\t\t\t\t\t\tif ( value.toLowerCase() === 'standard' ) json.type = 'MeshStandardMaterial';\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapDiffuse':\n\t\t\t\t\t\tjson.map = loadTexture( value, m.mapDiffuseRepeat, m.mapDiffuseOffset, m.mapDiffuseWrap, m.mapDiffuseAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapDiffuseRepeat':\n\t\t\t\t\tcase 'mapDiffuseOffset':\n\t\t\t\t\tcase 'mapDiffuseWrap':\n\t\t\t\t\tcase 'mapDiffuseAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapEmissive':\n\t\t\t\t\t\tjson.emissiveMap = loadTexture( value, m.mapEmissiveRepeat, m.mapEmissiveOffset, m.mapEmissiveWrap, m.mapEmissiveAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapEmissiveRepeat':\n\t\t\t\t\tcase 'mapEmissiveOffset':\n\t\t\t\t\tcase 'mapEmissiveWrap':\n\t\t\t\t\tcase 'mapEmissiveAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapLight':\n\t\t\t\t\t\tjson.lightMap = loadTexture( value, m.mapLightRepeat, m.mapLightOffset, m.mapLightWrap, m.mapLightAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapLightRepeat':\n\t\t\t\t\tcase 'mapLightOffset':\n\t\t\t\t\tcase 'mapLightWrap':\n\t\t\t\t\tcase 'mapLightAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapAO':\n\t\t\t\t\t\tjson.aoMap = loadTexture( value, m.mapAORepeat, m.mapAOOffset, m.mapAOWrap, m.mapAOAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapAORepeat':\n\t\t\t\t\tcase 'mapAOOffset':\n\t\t\t\t\tcase 'mapAOWrap':\n\t\t\t\t\tcase 'mapAOAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapBump':\n\t\t\t\t\t\tjson.bumpMap = loadTexture( value, m.mapBumpRepeat, m.mapBumpOffset, m.mapBumpWrap, m.mapBumpAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapBumpScale':\n\t\t\t\t\t\tjson.bumpScale = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapBumpRepeat':\n\t\t\t\t\tcase 'mapBumpOffset':\n\t\t\t\t\tcase 'mapBumpWrap':\n\t\t\t\t\tcase 'mapBumpAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapNormal':\n\t\t\t\t\t\tjson.normalMap = loadTexture( value, m.mapNormalRepeat, m.mapNormalOffset, m.mapNormalWrap, m.mapNormalAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapNormalFactor':\n\t\t\t\t\t\tjson.normalScale = [ value, value ];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapNormalRepeat':\n\t\t\t\t\tcase 'mapNormalOffset':\n\t\t\t\t\tcase 'mapNormalWrap':\n\t\t\t\t\tcase 'mapNormalAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapSpecular':\n\t\t\t\t\t\tjson.specularMap = loadTexture( value, m.mapSpecularRepeat, m.mapSpecularOffset, m.mapSpecularWrap, m.mapSpecularAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapSpecularRepeat':\n\t\t\t\t\tcase 'mapSpecularOffset':\n\t\t\t\t\tcase 'mapSpecularWrap':\n\t\t\t\t\tcase 'mapSpecularAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapMetalness':\n\t\t\t\t\t\tjson.metalnessMap = loadTexture( value, m.mapMetalnessRepeat, m.mapMetalnessOffset, m.mapMetalnessWrap, m.mapMetalnessAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapMetalnessRepeat':\n\t\t\t\t\tcase 'mapMetalnessOffset':\n\t\t\t\t\tcase 'mapMetalnessWrap':\n\t\t\t\t\tcase 'mapMetalnessAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapRoughness':\n\t\t\t\t\t\tjson.roughnessMap = loadTexture( value, m.mapRoughnessRepeat, m.mapRoughnessOffset, m.mapRoughnessWrap, m.mapRoughnessAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapRoughnessRepeat':\n\t\t\t\t\tcase 'mapRoughnessOffset':\n\t\t\t\t\tcase 'mapRoughnessWrap':\n\t\t\t\t\tcase 'mapRoughnessAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapAlpha':\n\t\t\t\t\t\tjson.alphaMap = loadTexture( value, m.mapAlphaRepeat, m.mapAlphaOffset, m.mapAlphaWrap, m.mapAlphaAnisotropy );\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'mapAlphaRepeat':\n\t\t\t\t\tcase 'mapAlphaOffset':\n\t\t\t\t\tcase 'mapAlphaWrap':\n\t\t\t\t\tcase 'mapAlphaAnisotropy':\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'flipSided':\n\t\t\t\t\t\tjson.side = BackSide;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'doubleSided':\n\t\t\t\t\t\tjson.side = DoubleSide;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'transparency':\n\t\t\t\t\t\tconsole.warn( 'THREE.Loader.createMaterial: transparency has been renamed to opacity' );\n\t\t\t\t\t\tjson.opacity = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'depthTest':\n\t\t\t\t\tcase 'depthWrite':\n\t\t\t\t\tcase 'colorWrite':\n\t\t\t\t\tcase 'opacity':\n\t\t\t\t\tcase 'reflectivity':\n\t\t\t\t\tcase 'transparent':\n\t\t\t\t\tcase 'visible':\n\t\t\t\t\tcase 'wireframe':\n\t\t\t\t\t\tjson[ name ] = value;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'vertexColors':\n\t\t\t\t\t\tif ( value === true ) json.vertexColors = VertexColors;\n\t\t\t\t\t\tif ( value === 'face' ) json.vertexColors = FaceColors;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tconsole.error( 'THREE.Loader.createMaterial: Unsupported', name, value );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( json.type === 'MeshBasicMaterial' ) delete json.emissive;\n\t\t\tif ( json.type !== 'MeshPhongMaterial' ) delete json.specular;\n\n\t\t\tif ( json.opacity < 1 ) json.transparent = true;\n\n\t\t\tmaterialLoader.setTextures( textures );\n\n\t\t\treturn materialLoader.parse( json );\n\n\t\t};\n\n\t} )()\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction JSONLoader( manager ) {\n\n\tif ( typeof manager === 'boolean' ) {\n\n\t\tconsole.warn( 'THREE.JSONLoader: showStatus parameter has been removed from constructor.' );\n\t\tmanager = undefined;\n\n\t}\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\tthis.withCredentials = false;\n\n}\n\nObject.assign( JSONLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar texturePath = this.texturePath && ( typeof this.texturePath === \"string\" ) ? this.texturePath : Loader.prototype.extractUrlBase( url );\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tvar json = JSON.parse( text );\n\t\t\tvar metadata = json.metadata;\n\n\t\t\tif ( metadata !== undefined ) {\n\n\t\t\t\tvar type = metadata.type;\n\n\t\t\t\tif ( type !== undefined ) {\n\n\t\t\t\t\tif ( type.toLowerCase() === 'object' ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.ObjectLoader instead.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( type.toLowerCase() === 'scene' ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.SceneLoader instead.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar object = scope.parse( json, texturePath );\n\t\t\tonLoad( object.geometry, object.materials );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tsetTexturePath: function ( value ) {\n\n\t\tthis.texturePath = value;\n\n\t},\n\n\tparse: ( function () {\n\n\t\tfunction parseModel( json, geometry ) {\n\n\t\t\tfunction isBitSet( value, position ) {\n\n\t\t\t\treturn value & ( 1 << position );\n\n\t\t\t}\n\n\t\t\tvar i, j, fi,\n\n\t\t\t\toffset, zLength,\n\n\t\t\t\tcolorIndex, normalIndex, uvIndex, materialIndex,\n\n\t\t\t\ttype,\n\t\t\t\tisQuad,\n\t\t\t\thasMaterial,\n\t\t\t\thasFaceVertexUv,\n\t\t\t\thasFaceNormal, hasFaceVertexNormal,\n\t\t\t\thasFaceColor, hasFaceVertexColor,\n\n\t\t\t\tvertex, face, faceA, faceB, hex, normal,\n\n\t\t\t\tuvLayer, uv, u, v,\n\n\t\t\t\tfaces = json.faces,\n\t\t\t\tvertices = json.vertices,\n\t\t\t\tnormals = json.normals,\n\t\t\t\tcolors = json.colors,\n\n\t\t\t\tscale = json.scale,\n\n\t\t\t\tnUvLayers = 0;\n\n\n\t\t\tif ( json.uvs !== undefined ) {\n\n\t\t\t\t// disregard empty arrays\n\n\t\t\t\tfor ( i = 0; i < json.uvs.length; i ++ ) {\n\n\t\t\t\t\tif ( json.uvs[ i ].length ) nUvLayers ++;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\n\n\t\t\t\t\tgeometry.faceVertexUvs[ i ] = [];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\toffset = 0;\n\t\t\tzLength = vertices.length;\n\n\t\t\twhile ( offset < zLength ) {\n\n\t\t\t\tvertex = new Vector3();\n\n\t\t\t\tvertex.x = vertices[ offset ++ ] * scale;\n\t\t\t\tvertex.y = vertices[ offset ++ ] * scale;\n\t\t\t\tvertex.z = vertices[ offset ++ ] * scale;\n\n\t\t\t\tgeometry.vertices.push( vertex );\n\n\t\t\t}\n\n\t\t\toffset = 0;\n\t\t\tzLength = faces.length;\n\n\t\t\twhile ( offset < zLength ) {\n\n\t\t\t\ttype = faces[ offset ++ ];\n\n\t\t\t\tisQuad = isBitSet( type, 0 );\n\t\t\t\thasMaterial = isBitSet( type, 1 );\n\t\t\t\thasFaceVertexUv = isBitSet( type, 3 );\n\t\t\t\thasFaceNormal = isBitSet( type, 4 );\n\t\t\t\thasFaceVertexNormal = isBitSet( type, 5 );\n\t\t\t\thasFaceColor = isBitSet( type, 6 );\n\t\t\t\thasFaceVertexColor = isBitSet( type, 7 );\n\n\t\t\t\t// console.log(\"type\", type, \"bits\", isQuad, hasMaterial, hasFaceVertexUv, hasFaceNormal, hasFaceVertexNormal, hasFaceColor, hasFaceVertexColor);\n\n\t\t\t\tif ( isQuad ) {\n\n\t\t\t\t\tfaceA = new Face3();\n\t\t\t\t\tfaceA.a = faces[ offset ];\n\t\t\t\t\tfaceA.b = faces[ offset + 1 ];\n\t\t\t\t\tfaceA.c = faces[ offset + 3 ];\n\n\t\t\t\t\tfaceB = new Face3();\n\t\t\t\t\tfaceB.a = faces[ offset + 1 ];\n\t\t\t\t\tfaceB.b = faces[ offset + 2 ];\n\t\t\t\t\tfaceB.c = faces[ offset + 3 ];\n\n\t\t\t\t\toffset += 4;\n\n\t\t\t\t\tif ( hasMaterial ) {\n\n\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\n\t\t\t\t\t\tfaceA.materialIndex = materialIndex;\n\t\t\t\t\t\tfaceB.materialIndex = materialIndex;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// to get face <=> uv index correspondence\n\n\t\t\t\t\tfi = geometry.faces.length;\n\n\t\t\t\t\tif ( hasFaceVertexUv ) {\n\n\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\n\n\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\n\n\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\n\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi + 1 ] = [];\n\n\t\t\t\t\t\t\tfor ( j = 0; j < 4; j ++ ) {\n\n\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\n\n\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\n\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\n\n\t\t\t\t\t\t\t\tuv = new Vector2( u, v );\n\n\t\t\t\t\t\t\t\tif ( j !== 2 ) geometry.faceVertexUvs[ i ][ fi ].push( uv );\n\t\t\t\t\t\t\t\tif ( j !== 0 ) geometry.faceVertexUvs[ i ][ fi + 1 ].push( uv );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hasFaceNormal ) {\n\n\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\tfaceA.normal.set(\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tfaceB.normal.copy( faceA.normal );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hasFaceVertexNormal ) {\n\n\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\n\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\t\tnormal = new Vector3(\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t\t);\n\n\n\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexNormals.push( normal );\n\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexNormals.push( normal );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif ( hasFaceColor ) {\n\n\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\thex = colors[ colorIndex ];\n\n\t\t\t\t\t\tfaceA.color.setHex( hex );\n\t\t\t\t\t\tfaceB.color.setHex( hex );\n\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif ( hasFaceVertexColor ) {\n\n\t\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\n\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\thex = colors[ colorIndex ];\n\n\t\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexColors.push( new Color( hex ) );\n\t\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexColors.push( new Color( hex ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.faces.push( faceA );\n\t\t\t\t\tgeometry.faces.push( faceB );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tface = new Face3();\n\t\t\t\t\tface.a = faces[ offset ++ ];\n\t\t\t\t\tface.b = faces[ offset ++ ];\n\t\t\t\t\tface.c = faces[ offset ++ ];\n\n\t\t\t\t\tif ( hasMaterial ) {\n\n\t\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\n\t\t\t\t\t\tface.materialIndex = materialIndex;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// to get face <=> uv index correspondence\n\n\t\t\t\t\tfi = geometry.faces.length;\n\n\t\t\t\t\tif ( hasFaceVertexUv ) {\n\n\t\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\n\n\t\t\t\t\t\t\tuvLayer = json.uvs[ i ];\n\n\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\n\n\t\t\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\n\n\t\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\n\t\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\n\n\t\t\t\t\t\t\t\tuv = new Vector2( u, v );\n\n\t\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ].push( uv );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hasFaceNormal ) {\n\n\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\tface.normal.set(\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( hasFaceVertexNormal ) {\n\n\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\n\n\t\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\n\n\t\t\t\t\t\t\tnormal = new Vector3(\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\n\t\t\t\t\t\t\t\tnormals[ normalIndex ]\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tface.vertexNormals.push( normal );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif ( hasFaceColor ) {\n\n\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\tface.color.setHex( colors[ colorIndex ] );\n\n\t\t\t\t\t}\n\n\n\t\t\t\t\tif ( hasFaceVertexColor ) {\n\n\t\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\n\n\t\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\n\t\t\t\t\t\t\tface.vertexColors.push( new Color( colors[ colorIndex ] ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.faces.push( face );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction parseSkin( json, geometry ) {\n\n\t\t\tvar influencesPerVertex = ( json.influencesPerVertex !== undefined ) ? json.influencesPerVertex : 2;\n\n\t\t\tif ( json.skinWeights ) {\n\n\t\t\t\tfor ( var i = 0, l = json.skinWeights.length; i < l; i += influencesPerVertex ) {\n\n\t\t\t\t\tvar x = json.skinWeights[ i ];\n\t\t\t\t\tvar y = ( influencesPerVertex > 1 ) ? json.skinWeights[ i + 1 ] : 0;\n\t\t\t\t\tvar z = ( influencesPerVertex > 2 ) ? json.skinWeights[ i + 2 ] : 0;\n\t\t\t\t\tvar w = ( influencesPerVertex > 3 ) ? json.skinWeights[ i + 3 ] : 0;\n\n\t\t\t\t\tgeometry.skinWeights.push( new Vector4( x, y, z, w ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( json.skinIndices ) {\n\n\t\t\t\tfor ( var i = 0, l = json.skinIndices.length; i < l; i += influencesPerVertex ) {\n\n\t\t\t\t\tvar a = json.skinIndices[ i ];\n\t\t\t\t\tvar b = ( influencesPerVertex > 1 ) ? json.skinIndices[ i + 1 ] : 0;\n\t\t\t\t\tvar c = ( influencesPerVertex > 2 ) ? json.skinIndices[ i + 2 ] : 0;\n\t\t\t\t\tvar d = ( influencesPerVertex > 3 ) ? json.skinIndices[ i + 3 ] : 0;\n\n\t\t\t\t\tgeometry.skinIndices.push( new Vector4( a, b, c, d ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tgeometry.bones = json.bones;\n\n\t\t\tif ( geometry.bones && geometry.bones.length > 0 && ( geometry.skinWeights.length !== geometry.skinIndices.length || geometry.skinIndices.length !== geometry.vertices.length ) ) {\n\n\t\t\t\tconsole.warn( 'When skinning, number of vertices (' + geometry.vertices.length + '), skinIndices (' +\n\t\t\t\t\tgeometry.skinIndices.length + '), and skinWeights (' + geometry.skinWeights.length + ') should match.' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction parseMorphing( json, geometry ) {\n\n\t\t\tvar scale = json.scale;\n\n\t\t\tif ( json.morphTargets !== undefined ) {\n\n\t\t\t\tfor ( var i = 0, l = json.morphTargets.length; i < l; i ++ ) {\n\n\t\t\t\t\tgeometry.morphTargets[ i ] = {};\n\t\t\t\t\tgeometry.morphTargets[ i ].name = json.morphTargets[ i ].name;\n\t\t\t\t\tgeometry.morphTargets[ i ].vertices = [];\n\n\t\t\t\t\tvar dstVertices = geometry.morphTargets[ i ].vertices;\n\t\t\t\t\tvar srcVertices = json.morphTargets[ i ].vertices;\n\n\t\t\t\t\tfor ( var v = 0, vl = srcVertices.length; v < vl; v += 3 ) {\n\n\t\t\t\t\t\tvar vertex = new Vector3();\n\t\t\t\t\t\tvertex.x = srcVertices[ v ] * scale;\n\t\t\t\t\t\tvertex.y = srcVertices[ v + 1 ] * scale;\n\t\t\t\t\t\tvertex.z = srcVertices[ v + 2 ] * scale;\n\n\t\t\t\t\t\tdstVertices.push( vertex );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( json.morphColors !== undefined && json.morphColors.length > 0 ) {\n\n\t\t\t\tconsole.warn( 'THREE.JSONLoader: \"morphColors\" no longer supported. Using them as face colors.' );\n\n\t\t\t\tvar faces = geometry.faces;\n\t\t\t\tvar morphColors = json.morphColors[ 0 ].colors;\n\n\t\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\t\tfaces[ i ].color.fromArray( morphColors, i * 3 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction parseAnimations( json, geometry ) {\n\n\t\t\tvar outputAnimations = [];\n\n\t\t\t// parse old style Bone/Hierarchy animations\n\t\t\tvar animations = [];\n\n\t\t\tif ( json.animation !== undefined ) {\n\n\t\t\t\tanimations.push( json.animation );\n\n\t\t\t}\n\n\t\t\tif ( json.animations !== undefined ) {\n\n\t\t\t\tif ( json.animations.length ) {\n\n\t\t\t\t\tanimations = animations.concat( json.animations );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tanimations.push( json.animations );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0; i < animations.length; i ++ ) {\n\n\t\t\t\tvar clip = AnimationClip.parseAnimation( animations[ i ], geometry.bones );\n\t\t\t\tif ( clip ) outputAnimations.push( clip );\n\n\t\t\t}\n\n\t\t\t// parse implicit morph animations\n\t\t\tif ( geometry.morphTargets ) {\n\n\t\t\t\t// TODO: Figure out what an appropraite FPS is for morph target animations -- defaulting to 10, but really it is completely arbitrary.\n\t\t\t\tvar morphAnimationClips = AnimationClip.CreateClipsFromMorphTargetSequences( geometry.morphTargets, 10 );\n\t\t\t\toutputAnimations = outputAnimations.concat( morphAnimationClips );\n\n\t\t\t}\n\n\t\t\tif ( outputAnimations.length > 0 ) geometry.animations = outputAnimations;\n\n\t\t}\n\n\t\treturn function ( json, texturePath ) {\n\n\t\t\tif ( json.data !== undefined ) {\n\n\t\t\t\t// Geometry 4.0 spec\n\t\t\t\tjson = json.data;\n\n\t\t\t}\n\n\t\t\tif ( json.scale !== undefined ) {\n\n\t\t\t\tjson.scale = 1.0 / json.scale;\n\n\t\t\t} else {\n\n\t\t\t\tjson.scale = 1.0;\n\n\t\t\t}\n\n\t\t\tvar geometry = new Geometry();\n\n\t\t\tparseModel( json, geometry );\n\t\t\tparseSkin( json, geometry );\n\t\t\tparseMorphing( json, geometry );\n\t\t\tparseAnimations( json, geometry );\n\n\t\t\tgeometry.computeFaceNormals();\n\t\t\tgeometry.computeBoundingSphere();\n\n\t\t\tif ( json.materials === undefined || json.materials.length === 0 ) {\n\n\t\t\t\treturn { geometry: geometry };\n\n\t\t\t} else {\n\n\t\t\t\tvar materials = Loader.prototype.initMaterials( json.materials, texturePath, this.crossOrigin );\n\n\t\t\t\treturn { geometry: geometry, materials: materials };\n\n\t\t\t}\n\n\t\t};\n\n\t} )()\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction ObjectLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\tthis.texturePath = '';\n\n}\n\nObject.assign( ObjectLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tif ( this.texturePath === '' ) {\n\n\t\t\tthis.texturePath = url.substring( 0, url.lastIndexOf( '/' ) + 1 );\n\n\t\t}\n\n\t\tvar scope = this;\n\n\t\tvar loader = new FileLoader( scope.manager );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tvar json = null;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tif ( onError !== undefined ) onError( error );\n\n\t\t\t\tconsole.error( 'THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tvar metadata = json.metadata;\n\n\t\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\t\tconsole.error( 'THREE.ObjectLoader: Can\\'t load ' + url + '. Use THREE.JSONLoader instead.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tscope.parse( json, onLoad );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tsetTexturePath: function ( value ) {\n\n\t\tthis.texturePath = value;\n\n\t},\n\n\tsetCrossOrigin: function ( value ) {\n\n\t\tthis.crossOrigin = value;\n\n\t},\n\n\tparse: function ( json, onLoad ) {\n\n\t\tvar geometries = this.parseGeometries( json.geometries );\n\n\t\tvar images = this.parseImages( json.images, function () {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t} );\n\n\t\tvar textures = this.parseTextures( json.textures, images );\n\t\tvar materials = this.parseMaterials( json.materials, textures );\n\n\t\tvar object = this.parseObject( json.object, geometries, materials );\n\n\t\tif ( json.animations ) {\n\n\t\t\tobject.animations = this.parseAnimations( json.animations );\n\n\t\t}\n\n\t\tif ( json.images === undefined || json.images.length === 0 ) {\n\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\n\n\t\t}\n\n\t\treturn object;\n\n\t},\n\n\tparseGeometries: function ( json ) {\n\n\t\tvar geometries = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tvar geometryLoader = new JSONLoader();\n\t\t\tvar bufferGeometryLoader = new BufferGeometryLoader();\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar geometry;\n\t\t\t\tvar data = json[ i ];\n\n\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\tcase 'PlaneGeometry':\n\t\t\t\t\tcase 'PlaneBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.width,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\tdata.heightSegments\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'BoxGeometry':\n\t\t\t\t\tcase 'BoxBufferGeometry':\n\t\t\t\t\tcase 'CubeGeometry': // backwards compatible\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.width,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.depth,\n\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.depthSegments\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'CircleGeometry':\n\t\t\t\t\tcase 'CircleBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.segments,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'CylinderGeometry':\n\t\t\t\t\tcase 'CylinderBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radiusTop,\n\t\t\t\t\t\t\tdata.radiusBottom,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.openEnded,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'ConeGeometry':\n\t\t\t\t\tcase 'ConeBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.openEnded,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'SphereGeometry':\n\t\t\t\t\tcase 'SphereBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\tdata.phiStart,\n\t\t\t\t\t\t\tdata.phiLength,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'DodecahedronGeometry':\n\t\t\t\t\tcase 'DodecahedronBufferGeometry':\n\t\t\t\t\tcase 'IcosahedronGeometry':\n\t\t\t\t\tcase 'IcosahedronBufferGeometry':\n\t\t\t\t\tcase 'OctahedronGeometry':\n\t\t\t\t\tcase 'OctahedronBufferGeometry':\n\t\t\t\t\tcase 'TetrahedronGeometry':\n\t\t\t\t\tcase 'TetrahedronBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.detail\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'RingGeometry':\n\t\t\t\t\tcase 'RingBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.innerRadius,\n\t\t\t\t\t\t\tdata.outerRadius,\n\t\t\t\t\t\t\tdata.thetaSegments,\n\t\t\t\t\t\t\tdata.phiSegments,\n\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'TorusGeometry':\n\t\t\t\t\tcase 'TorusBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.tube,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\tdata.arc\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'TorusKnotGeometry':\n\t\t\t\t\tcase 'TorusKnotBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.tube,\n\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\tdata.p,\n\t\t\t\t\t\t\tdata.q\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'LatheGeometry':\n\t\t\t\t\tcase 'LatheBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.points,\n\t\t\t\t\t\t\tdata.segments,\n\t\t\t\t\t\t\tdata.phiStart,\n\t\t\t\t\t\t\tdata.phiLength\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'PolyhedronGeometry':\n\t\t\t\t\tcase 'PolyhedronBufferGeometry':\n\n\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\tdata.vertices,\n\t\t\t\t\t\t\tdata.indices,\n\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\tdata.details\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'BufferGeometry':\n\n\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Geometry':\n\n\t\t\t\t\t\tgeometry = geometryLoader.parse( data, this.texturePath ).geometry;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Unsupported geometry type \"' + data.type + '\"' );\n\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\n\n\t\t\t\tgeometries[ data.uuid ] = geometry;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn geometries;\n\n\t},\n\n\tparseMaterials: function ( json, textures ) {\n\n\t\tvar materials = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tvar loader = new MaterialLoader();\n\t\t\tloader.setTextures( textures );\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar data = json[ i ];\n\n\t\t\t\tif ( data.type === 'MultiMaterial' ) {\n\n\t\t\t\t\t// Deprecated\n\n\t\t\t\t\tvar array = [];\n\n\t\t\t\t\tfor ( var j = 0; j < data.materials.length; j ++ ) {\n\n\t\t\t\t\t\tarray.push( loader.parse( data.materials[ j ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmaterials[ data.uuid ] = array;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tmaterials[ data.uuid ] = loader.parse( data );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn materials;\n\n\t},\n\n\tparseAnimations: function ( json ) {\n\n\t\tvar animations = [];\n\n\t\tfor ( var i = 0; i < json.length; i ++ ) {\n\n\t\t\tvar clip = AnimationClip.parse( json[ i ] );\n\n\t\t\tanimations.push( clip );\n\n\t\t}\n\n\t\treturn animations;\n\n\t},\n\n\tparseImages: function ( json, onLoad ) {\n\n\t\tvar scope = this;\n\t\tvar images = {};\n\n\t\tfunction loadImage( url ) {\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\treturn loader.load( url, function () {\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}, undefined, function () {\n\n\t\t\t\tscope.manager.itemEnd( url );\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t} );\n\n\t\t}\n\n\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\tvar manager = new LoadingManager( onLoad );\n\n\t\t\tvar loader = new ImageLoader( manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar image = json[ i ];\n\t\t\t\tvar path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( image.url ) ? image.url : scope.texturePath + image.url;\n\n\t\t\t\timages[ image.uuid ] = loadImage( path );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn images;\n\n\t},\n\n\tparseTextures: function ( json, images ) {\n\n\t\tfunction parseConstant( value, type ) {\n\n\t\t\tif ( typeof value === 'number' ) return value;\n\n\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\n\n\t\t\treturn type[ value ];\n\n\t\t}\n\n\t\tvar textures = {};\n\n\t\tif ( json !== undefined ) {\n\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\tvar data = json[ i ];\n\n\t\t\t\tif ( data.image === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\n\n\t\t\t\t}\n\n\t\t\t\tif ( images[ data.image ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\n\n\t\t\t\t}\n\n\t\t\t\tvar texture = new Texture( images[ data.image ] );\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\ttexture.uuid = data.uuid;\n\n\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\n\n\t\t\t\tif ( data.mapping !== undefined ) texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING );\n\n\t\t\t\tif ( data.offset !== undefined ) texture.offset.fromArray( data.offset );\n\t\t\t\tif ( data.repeat !== undefined ) texture.repeat.fromArray( data.repeat );\n\t\t\t\tif ( data.center !== undefined ) texture.center.fromArray( data.center );\n\t\t\t\tif ( data.rotation !== undefined ) texture.rotation = data.rotation;\n\n\t\t\t\tif ( data.wrap !== undefined ) {\n\n\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );\n\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );\n\n\t\t\t\t}\n\n\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER );\n\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\n\n\t\t\t\tif ( data.flipY !== undefined ) texture.flipY = data.flipY;\n\n\t\t\t\ttextures[ data.uuid ] = texture;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn textures;\n\n\t},\n\n\tparseObject: function () {\n\n\t\tvar matrix = new Matrix4();\n\n\t\treturn function parseObject( data, geometries, materials ) {\n\n\t\t\tvar object;\n\n\t\t\tfunction getGeometry( name ) {\n\n\t\t\t\tif ( geometries[ name ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\n\n\t\t\t\t}\n\n\t\t\t\treturn geometries[ name ];\n\n\t\t\t}\n\n\t\t\tfunction getMaterial( name ) {\n\n\t\t\t\tif ( name === undefined ) return undefined;\n\n\t\t\t\tif ( Array.isArray( name ) ) {\n\n\t\t\t\t\tvar array = [];\n\n\t\t\t\t\tfor ( var i = 0, l = name.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tvar uuid = name[ i ];\n\n\t\t\t\t\t\tif ( materials[ uuid ] === undefined ) {\n\n\t\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', uuid );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tarray.push( materials[ uuid ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn array;\n\n\t\t\t\t}\n\n\t\t\t\tif ( materials[ name ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\n\n\t\t\t\t}\n\n\t\t\t\treturn materials[ name ];\n\n\t\t\t}\n\n\t\t\tswitch ( data.type ) {\n\n\t\t\t\tcase 'Scene':\n\n\t\t\t\t\tobject = new Scene();\n\n\t\t\t\t\tif ( data.background !== undefined ) {\n\n\t\t\t\t\t\tif ( Number.isInteger( data.background ) ) {\n\n\t\t\t\t\t\t\tobject.background = new Color( data.background );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( data.fog !== undefined ) {\n\n\t\t\t\t\t\tif ( data.fog.type === 'Fog' ) {\n\n\t\t\t\t\t\t\tobject.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\n\n\t\t\t\t\t\t} else if ( data.fog.type === 'FogExp2' ) {\n\n\t\t\t\t\t\t\tobject.fog = new FogExp2( data.fog.color, data.fog.density );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PerspectiveCamera':\n\n\t\t\t\t\tobject = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\n\n\t\t\t\t\tif ( data.focus !== undefined ) object.focus = data.focus;\n\t\t\t\t\tif ( data.zoom !== undefined ) object.zoom = data.zoom;\n\t\t\t\t\tif ( data.filmGauge !== undefined ) object.filmGauge = data.filmGauge;\n\t\t\t\t\tif ( data.filmOffset !== undefined ) object.filmOffset = data.filmOffset;\n\t\t\t\t\tif ( data.view !== undefined ) object.view = Object.assign( {}, data.view );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'OrthographicCamera':\n\n\t\t\t\t\tobject = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'AmbientLight':\n\n\t\t\t\t\tobject = new AmbientLight( data.color, data.intensity );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'DirectionalLight':\n\n\t\t\t\t\tobject = new DirectionalLight( data.color, data.intensity );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\n\t\t\t\t\tobject = new PointLight( data.color, data.intensity, data.distance, data.decay );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RectAreaLight':\n\n\t\t\t\t\tobject = new RectAreaLight( data.color, data.intensity, data.width, data.height );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\n\t\t\t\t\tobject = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'HemisphereLight':\n\n\t\t\t\t\tobject = new HemisphereLight( data.color, data.groundColor, data.intensity );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SkinnedMesh':\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.' );\n\n\t\t\t\tcase 'Mesh':\n\n\t\t\t\t\tvar geometry = getGeometry( data.geometry );\n\t\t\t\t\tvar material = getMaterial( data.material );\n\n\t\t\t\t\tif ( geometry.bones && geometry.bones.length > 0 ) {\n\n\t\t\t\t\t\tobject = new SkinnedMesh( geometry, material );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tobject = new Mesh( geometry, material );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'LOD':\n\n\t\t\t\t\tobject = new LOD();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Line':\n\n\t\t\t\t\tobject = new Line( getGeometry( data.geometry ), getMaterial( data.material ), data.mode );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'LineLoop':\n\n\t\t\t\t\tobject = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'LineSegments':\n\n\t\t\t\t\tobject = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointCloud':\n\t\t\t\tcase 'Points':\n\n\t\t\t\t\tobject = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Sprite':\n\n\t\t\t\t\tobject = new Sprite( getMaterial( data.material ) );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Group':\n\n\t\t\t\t\tobject = new Group();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tobject = new Object3D();\n\n\t\t\t}\n\n\t\t\tobject.uuid = data.uuid;\n\n\t\t\tif ( data.name !== undefined ) object.name = data.name;\n\t\t\tif ( data.matrix !== undefined ) {\n\n\t\t\t\tmatrix.fromArray( data.matrix );\n\t\t\t\tmatrix.decompose( object.position, object.quaternion, object.scale );\n\n\t\t\t} else {\n\n\t\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\n\t\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\n\t\t\t\tif ( data.quaternion !== undefined ) object.quaternion.fromArray( data.quaternion );\n\t\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\n\n\t\t\t}\n\n\t\t\tif ( data.castShadow !== undefined ) object.castShadow = data.castShadow;\n\t\t\tif ( data.receiveShadow !== undefined ) object.receiveShadow = data.receiveShadow;\n\n\t\t\tif ( data.shadow ) {\n\n\t\t\t\tif ( data.shadow.bias !== undefined ) object.shadow.bias = data.shadow.bias;\n\t\t\t\tif ( data.shadow.radius !== undefined ) object.shadow.radius = data.shadow.radius;\n\t\t\t\tif ( data.shadow.mapSize !== undefined ) object.shadow.mapSize.fromArray( data.shadow.mapSize );\n\t\t\t\tif ( data.shadow.camera !== undefined ) object.shadow.camera = this.parseObject( data.shadow.camera );\n\n\t\t\t}\n\n\t\t\tif ( data.visible !== undefined ) object.visible = data.visible;\n\t\t\tif ( data.userData !== undefined ) object.userData = data.userData;\n\n\t\t\tif ( data.children !== undefined ) {\n\n\t\t\t\tvar children = data.children;\n\n\t\t\t\tfor ( var i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\tobject.add( this.parseObject( children[ i ], geometries, materials ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( data.type === 'LOD' ) {\n\n\t\t\t\tvar levels = data.levels;\n\n\t\t\t\tfor ( var l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\t\tvar level = levels[ l ];\n\t\t\t\t\tvar child = object.getObjectByProperty( 'uuid', level.object );\n\n\t\t\t\t\tif ( child !== undefined ) {\n\n\t\t\t\t\t\tobject.addLevel( child, level.distance );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn object;\n\n\t\t};\n\n\t}()\n\n} );\n\nvar TEXTURE_MAPPING = {\n\tUVMapping: UVMapping,\n\tCubeReflectionMapping: CubeReflectionMapping,\n\tCubeRefractionMapping: CubeRefractionMapping,\n\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\tSphericalReflectionMapping: SphericalReflectionMapping,\n\tCubeUVReflectionMapping: CubeUVReflectionMapping,\n\tCubeUVRefractionMapping: CubeUVRefractionMapping\n};\n\nvar TEXTURE_WRAPPING = {\n\tRepeatWrapping: RepeatWrapping,\n\tClampToEdgeWrapping: ClampToEdgeWrapping,\n\tMirroredRepeatWrapping: MirroredRepeatWrapping\n};\n\nvar TEXTURE_FILTER = {\n\tNearestFilter: NearestFilter,\n\tNearestMipMapNearestFilter: NearestMipMapNearestFilter,\n\tNearestMipMapLinearFilter: NearestMipMapLinearFilter,\n\tLinearFilter: LinearFilter,\n\tLinearMipMapNearestFilter: LinearMipMapNearestFilter,\n\tLinearMipMapLinearFilter: LinearMipMapLinearFilter\n};\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n *\n * Bezier Curves formulas obtained from\n * http://en.wikipedia.org/wiki/Bézier_curve\n */\n\nfunction CatmullRom( t, p0, p1, p2, p3 ) {\n\n\tvar v0 = ( p2 - p0 ) * 0.5;\n\tvar v1 = ( p3 - p1 ) * 0.5;\n\tvar t2 = t * t;\n\tvar t3 = t * t2;\n\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n}\n\n//\n\nfunction QuadraticBezierP0( t, p ) {\n\n\tvar k = 1 - t;\n\treturn k * k * p;\n\n}\n\nfunction QuadraticBezierP1( t, p ) {\n\n\treturn 2 * ( 1 - t ) * t * p;\n\n}\n\nfunction QuadraticBezierP2( t, p ) {\n\n\treturn t * t * p;\n\n}\n\nfunction QuadraticBezier( t, p0, p1, p2 ) {\n\n\treturn QuadraticBezierP0( t, p0 ) + QuadraticBezierP1( t, p1 ) +\n\t\tQuadraticBezierP2( t, p2 );\n\n}\n\n//\n\nfunction CubicBezierP0( t, p ) {\n\n\tvar k = 1 - t;\n\treturn k * k * k * p;\n\n}\n\nfunction CubicBezierP1( t, p ) {\n\n\tvar k = 1 - t;\n\treturn 3 * k * k * t * p;\n\n}\n\nfunction CubicBezierP2( t, p ) {\n\n\treturn 3 * ( 1 - t ) * t * t * p;\n\n}\n\nfunction CubicBezierP3( t, p ) {\n\n\treturn t * t * t * p;\n\n}\n\nfunction CubicBezier( t, p0, p1, p2, p3 ) {\n\n\treturn CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) +\n\t\tCubicBezierP3( t, p3 );\n\n}\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * Extensible curve object\n *\n * Some common of curve methods:\n * .getPoint( t, optionalTarget ), .getTangent( t )\n * .getPointAt( u, optionalTarget ), .getTangentAt( u )\n * .getPoints(), .getSpacedPoints()\n * .getLength()\n * .updateArcLengths()\n *\n * This following curves inherit from THREE.Curve:\n *\n * -- 2D curves --\n * THREE.ArcCurve\n * THREE.CubicBezierCurve\n * THREE.EllipseCurve\n * THREE.LineCurve\n * THREE.QuadraticBezierCurve\n * THREE.SplineCurve\n *\n * -- 3D curves --\n * THREE.CatmullRomCurve3\n * THREE.CubicBezierCurve3\n * THREE.LineCurve3\n * THREE.QuadraticBezierCurve3\n *\n * A series of curves can be represented as a THREE.CurvePath.\n *\n **/\n\n/**************************************************************\n *\tAbstract Curve base class\n **************************************************************/\n\nfunction Curve() {\n\n\tthis.type = 'Curve';\n\n\tthis.arcLengthDivisions = 200;\n\n}\n\nObject.assign( Curve.prototype, {\n\n\t// Virtual base class method to overwrite and implement in subclasses\n\t//\t- t [0 .. 1]\n\n\tgetPoint: function ( /* t, optionalTarget */ ) {\n\n\t\tconsole.warn( 'THREE.Curve: .getPoint() not implemented.' );\n\t\treturn null;\n\n\t},\n\n\t// Get point at relative position in curve according to arc length\n\t// - u [0 .. 1]\n\n\tgetPointAt: function ( u, optionalTarget ) {\n\n\t\tvar t = this.getUtoTmapping( u );\n\t\treturn this.getPoint( t, optionalTarget );\n\n\t},\n\n\t// Get sequence of points using getPoint( t )\n\n\tgetPoints: function ( divisions ) {\n\n\t\tif ( divisions === undefined ) divisions = 5;\n\n\t\tvar points = [];\n\n\t\tfor ( var d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPoint( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t},\n\n\t// Get sequence of points using getPointAt( u )\n\n\tgetSpacedPoints: function ( divisions ) {\n\n\t\tif ( divisions === undefined ) divisions = 5;\n\n\t\tvar points = [];\n\n\t\tfor ( var d = 0; d <= divisions; d ++ ) {\n\n\t\t\tpoints.push( this.getPointAt( d / divisions ) );\n\n\t\t}\n\n\t\treturn points;\n\n\t},\n\n\t// Get total curve arc length\n\n\tgetLength: function () {\n\n\t\tvar lengths = this.getLengths();\n\t\treturn lengths[ lengths.length - 1 ];\n\n\t},\n\n\t// Get list of cumulative segment lengths\n\n\tgetLengths: function ( divisions ) {\n\n\t\tif ( divisions === undefined ) divisions = this.arcLengthDivisions;\n\n\t\tif ( this.cacheArcLengths &&\n\t\t\t( this.cacheArcLengths.length === divisions + 1 ) &&\n\t\t\t! this.needsUpdate ) {\n\n\t\t\treturn this.cacheArcLengths;\n\n\t\t}\n\n\t\tthis.needsUpdate = false;\n\n\t\tvar cache = [];\n\t\tvar current, last = this.getPoint( 0 );\n\t\tvar p, sum = 0;\n\n\t\tcache.push( 0 );\n\n\t\tfor ( p = 1; p <= divisions; p ++ ) {\n\n\t\t\tcurrent = this.getPoint( p / divisions );\n\t\t\tsum += current.distanceTo( last );\n\t\t\tcache.push( sum );\n\t\t\tlast = current;\n\n\t\t}\n\n\t\tthis.cacheArcLengths = cache;\n\n\t\treturn cache; // { sums: cache, sum: sum }; Sum is in the last element.\n\n\t},\n\n\tupdateArcLengths: function () {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.getLengths();\n\n\t},\n\n\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n\tgetUtoTmapping: function ( u, distance ) {\n\n\t\tvar arcLengths = this.getLengths();\n\n\t\tvar i = 0, il = arcLengths.length;\n\n\t\tvar targetArcLength; // The targeted u distance value to get\n\n\t\tif ( distance ) {\n\n\t\t\ttargetArcLength = distance;\n\n\t\t} else {\n\n\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\n\n\t\t}\n\n\t\t// binary search for the index with largest value smaller than target u distance\n\n\t\tvar low = 0, high = il - 1, comparison;\n\n\t\twhile ( low <= high ) {\n\n\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\n\n\t\t\tif ( comparison < 0 ) {\n\n\t\t\t\tlow = i + 1;\n\n\t\t\t} else if ( comparison > 0 ) {\n\n\t\t\t\thigh = i - 1;\n\n\t\t\t} else {\n\n\t\t\t\thigh = i;\n\t\t\t\tbreak;\n\n\t\t\t\t// DONE\n\n\t\t\t}\n\n\t\t}\n\n\t\ti = high;\n\n\t\tif ( arcLengths[ i ] === targetArcLength ) {\n\n\t\t\treturn i / ( il - 1 );\n\n\t\t}\n\n\t\t// we could get finer grain at lengths, or use simple interpolation between two points\n\n\t\tvar lengthBefore = arcLengths[ i ];\n\t\tvar lengthAfter = arcLengths[ i + 1 ];\n\n\t\tvar segmentLength = lengthAfter - lengthBefore;\n\n\t\t// determine where we are between the 'before' and 'after' points\n\n\t\tvar segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\n\n\t\t// add that fractional amount to t\n\n\t\tvar t = ( i + segmentFraction ) / ( il - 1 );\n\n\t\treturn t;\n\n\t},\n\n\t// Returns a unit vector tangent at t\n\t// In case any sub curve does not implement its tangent derivation,\n\t// 2 points a small delta apart will be used to find its gradient\n\t// which seems to give a reasonable approximation\n\n\tgetTangent: function ( t ) {\n\n\t\tvar delta = 0.0001;\n\t\tvar t1 = t - delta;\n\t\tvar t2 = t + delta;\n\n\t\t// Capping in case of danger\n\n\t\tif ( t1 < 0 ) t1 = 0;\n\t\tif ( t2 > 1 ) t2 = 1;\n\n\t\tvar pt1 = this.getPoint( t1 );\n\t\tvar pt2 = this.getPoint( t2 );\n\n\t\tvar vec = pt2.clone().sub( pt1 );\n\t\treturn vec.normalize();\n\n\t},\n\n\tgetTangentAt: function ( u ) {\n\n\t\tvar t = this.getUtoTmapping( u );\n\t\treturn this.getTangent( t );\n\n\t},\n\n\tcomputeFrenetFrames: function ( segments, closed ) {\n\n\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n\n\t\tvar normal = new Vector3();\n\n\t\tvar tangents = [];\n\t\tvar normals = [];\n\t\tvar binormals = [];\n\n\t\tvar vec = new Vector3();\n\t\tvar mat = new Matrix4();\n\n\t\tvar i, u, theta;\n\n\t\t// compute the tangent vectors for each segment on the curve\n\n\t\tfor ( i = 0; i <= segments; i ++ ) {\n\n\t\t\tu = i / segments;\n\n\t\t\ttangents[ i ] = this.getTangentAt( u );\n\t\t\ttangents[ i ].normalize();\n\n\t\t}\n\n\t\t// select an initial normal vector perpendicular to the first tangent vector,\n\t\t// and in the direction of the minimum tangent xyz component\n\n\t\tnormals[ 0 ] = new Vector3();\n\t\tbinormals[ 0 ] = new Vector3();\n\t\tvar min = Number.MAX_VALUE;\n\t\tvar tx = Math.abs( tangents[ 0 ].x );\n\t\tvar ty = Math.abs( tangents[ 0 ].y );\n\t\tvar tz = Math.abs( tangents[ 0 ].z );\n\n\t\tif ( tx <= min ) {\n\n\t\t\tmin = tx;\n\t\t\tnormal.set( 1, 0, 0 );\n\n\t\t}\n\n\t\tif ( ty <= min ) {\n\n\t\t\tmin = ty;\n\t\t\tnormal.set( 0, 1, 0 );\n\n\t\t}\n\n\t\tif ( tz <= min ) {\n\n\t\t\tnormal.set( 0, 0, 1 );\n\n\t\t}\n\n\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\n\n\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\n\n\n\t\t// compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n\t\tfor ( i = 1; i <= segments; i ++ ) {\n\n\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\n\n\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\n\n\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\n\n\t\t\tif ( vec.length() > Number.EPSILON ) {\n\n\t\t\t\tvec.normalize();\n\n\t\t\t\ttheta = Math.acos( _Math.clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\n\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\n\n\t\t\t}\n\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t}\n\n\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\t\tif ( closed === true ) {\n\n\t\t\ttheta = Math.acos( _Math.clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );\n\t\t\ttheta /= segments;\n\n\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {\n\n\t\t\t\ttheta = - theta;\n\n\t\t\t}\n\n\t\t\tfor ( i = 1; i <= segments; i ++ ) {\n\n\t\t\t\t// twist a little...\n\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\ttangents: tangents,\n\t\t\tnormals: normals,\n\t\t\tbinormals: binormals\n\t\t};\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.arcLengthDivisions = source.arcLengthDivisions;\n\n\t\treturn this;\n\n\t}\n\n} );\n\nfunction LineCurve( v1, v2 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'LineCurve';\n\n\tthis.v1 = v1 || new Vector2();\n\tthis.v2 = v2 || new Vector2();\n\n}\n\nLineCurve.prototype = Object.create( Curve.prototype );\nLineCurve.prototype.constructor = LineCurve;\n\nLineCurve.prototype.isLineCurve = true;\n\nLineCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tif ( t === 1 ) {\n\n\t\tpoint.copy( this.v2 );\n\n\t} else {\n\n\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t}\n\n\treturn point;\n\n};\n\n// Line curve is linear, so we can overwrite default getPointAt\n\nLineCurve.prototype.getPointAt = function ( u, optionalTarget ) {\n\n\treturn this.getPoint( u, optionalTarget );\n\n};\n\nLineCurve.prototype.getTangent = function ( /* t */ ) {\n\n\tvar tangent = this.v2.clone().sub( this.v1 );\n\n\treturn tangent.normalize();\n\n};\n\nLineCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\n\treturn this;\n\n};\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n *\n **/\n\n/**************************************************************\n *\tCurved Path - a curve path is simply a array of connected\n *  curves, but retains the api of a curve\n **************************************************************/\n\nfunction CurvePath() {\n\n\tCurve.call( this );\n\n\tthis.type = 'CurvePath';\n\n\tthis.curves = [];\n\tthis.autoClose = false; // Automatically closes the path\n\n}\n\nCurvePath.prototype = Object.assign( Object.create( Curve.prototype ), {\n\n\tconstructor: CurvePath,\n\n\tadd: function ( curve ) {\n\n\t\tthis.curves.push( curve );\n\n\t},\n\n\tclosePath: function () {\n\n\t\t// Add a line curve if start and end of lines are not connected\n\t\tvar startPoint = this.curves[ 0 ].getPoint( 0 );\n\t\tvar endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\n\n\t\tif ( ! startPoint.equals( endPoint ) ) {\n\n\t\t\tthis.curves.push( new LineCurve( endPoint, startPoint ) );\n\n\t\t}\n\n\t},\n\n\t// To get accurate point with reference to\n\t// entire path distance at time t,\n\t// following has to be done:\n\n\t// 1. Length of each sub path have to be known\n\t// 2. Locate and identify type of curve\n\t// 3. Get t for the curve\n\t// 4. Return curve.getPointAt(t')\n\n\tgetPoint: function ( t ) {\n\n\t\tvar d = t * this.getLength();\n\t\tvar curveLengths = this.getCurveLengths();\n\t\tvar i = 0;\n\n\t\t// To think about boundaries points.\n\n\t\twhile ( i < curveLengths.length ) {\n\n\t\t\tif ( curveLengths[ i ] >= d ) {\n\n\t\t\t\tvar diff = curveLengths[ i ] - d;\n\t\t\t\tvar curve = this.curves[ i ];\n\n\t\t\t\tvar segmentLength = curve.getLength();\n\t\t\t\tvar u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n\n\t\t\t\treturn curve.getPointAt( u );\n\n\t\t\t}\n\n\t\t\ti ++;\n\n\t\t}\n\n\t\treturn null;\n\n\t\t// loop where sum != 0, sum > d , sum+1 <d\n\n\t},\n\n\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\n\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n\t// getPoint() depends on getLength\n\n\tgetLength: function () {\n\n\t\tvar lens = this.getCurveLengths();\n\t\treturn lens[ lens.length - 1 ];\n\n\t},\n\n\t// cacheLengths must be recalculated.\n\tupdateArcLengths: function () {\n\n\t\tthis.needsUpdate = true;\n\t\tthis.cacheLengths = null;\n\t\tthis.getCurveLengths();\n\n\t},\n\n\t// Compute lengths and cache them\n\t// We cannot overwrite getLengths() because UtoT mapping uses it.\n\n\tgetCurveLengths: function () {\n\n\t\t// We use cache values if curves and cache array are same length\n\n\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\n\n\t\t\treturn this.cacheLengths;\n\n\t\t}\n\n\t\t// Get length of sub-curve\n\t\t// Push sums into cached array\n\n\t\tvar lengths = [], sums = 0;\n\n\t\tfor ( var i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\tsums += this.curves[ i ].getLength();\n\t\t\tlengths.push( sums );\n\n\t\t}\n\n\t\tthis.cacheLengths = lengths;\n\n\t\treturn lengths;\n\n\t},\n\n\tgetSpacedPoints: function ( divisions ) {\n\n\t\tif ( divisions === undefined ) divisions = 40;\n\n\t\tvar points = [];\n\n\t\tfor ( var i = 0; i <= divisions; i ++ ) {\n\n\t\t\tpoints.push( this.getPoint( i / divisions ) );\n\n\t\t}\n\n\t\tif ( this.autoClose ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t},\n\n\tgetPoints: function ( divisions ) {\n\n\t\tdivisions = divisions || 12;\n\n\t\tvar points = [], last;\n\n\t\tfor ( var i = 0, curves = this.curves; i < curves.length; i ++ ) {\n\n\t\t\tvar curve = curves[ i ];\n\t\t\tvar resolution = ( curve && curve.isEllipseCurve ) ? divisions * 2\n\t\t\t\t: ( curve && curve.isLineCurve ) ? 1\n\t\t\t\t\t: ( curve && curve.isSplineCurve ) ? divisions * curve.points.length\n\t\t\t\t\t\t: divisions;\n\n\t\t\tvar pts = curve.getPoints( resolution );\n\n\t\t\tfor ( var j = 0; j < pts.length; j ++ ) {\n\n\t\t\t\tvar point = pts[ j ];\n\n\t\t\t\tif ( last && last.equals( point ) ) continue; // ensures no consecutive points are duplicates\n\n\t\t\t\tpoints.push( point );\n\t\t\t\tlast = point;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.autoClose && points.length > 1 && ! points[ points.length - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\tpoints.push( points[ 0 ] );\n\n\t\t}\n\n\t\treturn points;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tCurve.prototype.copy.call( this, source );\n\n\t\tthis.curves = [];\n\n\t\tfor ( var i = 0, l = source.curves.length; i < l; i ++ ) {\n\n\t\t\tvar curve = source.curves[ i ];\n\n\t\t\tthis.curves.push( curve.clone() );\n\n\t\t}\n\n\t\tthis.autoClose = source.autoClose;\n\n\t\treturn this;\n\n\t}\n\n} );\n\nfunction EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'EllipseCurve';\n\n\tthis.aX = aX || 0;\n\tthis.aY = aY || 0;\n\n\tthis.xRadius = xRadius || 1;\n\tthis.yRadius = yRadius || 1;\n\n\tthis.aStartAngle = aStartAngle || 0;\n\tthis.aEndAngle = aEndAngle || 2 * Math.PI;\n\n\tthis.aClockwise = aClockwise || false;\n\n\tthis.aRotation = aRotation || 0;\n\n}\n\nEllipseCurve.prototype = Object.create( Curve.prototype );\nEllipseCurve.prototype.constructor = EllipseCurve;\n\nEllipseCurve.prototype.isEllipseCurve = true;\n\nEllipseCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tvar twoPi = Math.PI * 2;\n\tvar deltaAngle = this.aEndAngle - this.aStartAngle;\n\tvar samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\n\n\t// ensures that deltaAngle is 0 .. 2 PI\n\twhile ( deltaAngle < 0 ) deltaAngle += twoPi;\n\twhile ( deltaAngle > twoPi ) deltaAngle -= twoPi;\n\n\tif ( deltaAngle < Number.EPSILON ) {\n\n\t\tif ( samePoints ) {\n\n\t\t\tdeltaAngle = 0;\n\n\t\t} else {\n\n\t\t\tdeltaAngle = twoPi;\n\n\t\t}\n\n\t}\n\n\tif ( this.aClockwise === true && ! samePoints ) {\n\n\t\tif ( deltaAngle === twoPi ) {\n\n\t\t\tdeltaAngle = - twoPi;\n\n\t\t} else {\n\n\t\t\tdeltaAngle = deltaAngle - twoPi;\n\n\t\t}\n\n\t}\n\n\tvar angle = this.aStartAngle + t * deltaAngle;\n\tvar x = this.aX + this.xRadius * Math.cos( angle );\n\tvar y = this.aY + this.yRadius * Math.sin( angle );\n\n\tif ( this.aRotation !== 0 ) {\n\n\t\tvar cos = Math.cos( this.aRotation );\n\t\tvar sin = Math.sin( this.aRotation );\n\n\t\tvar tx = x - this.aX;\n\t\tvar ty = y - this.aY;\n\n\t\t// Rotate the point about the center of the ellipse.\n\t\tx = tx * cos - ty * sin + this.aX;\n\t\ty = tx * sin + ty * cos + this.aY;\n\n\t}\n\n\treturn point.set( x, y );\n\n};\n\nEllipseCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.aX = source.aX;\n\tthis.aY = source.aY;\n\n\tthis.xRadius = source.xRadius;\n\tthis.yRadius = source.yRadius;\n\n\tthis.aStartAngle = source.aStartAngle;\n\tthis.aEndAngle = source.aEndAngle;\n\n\tthis.aClockwise = source.aClockwise;\n\n\tthis.aRotation = source.aRotation;\n\n\treturn this;\n\n};\n\nfunction SplineCurve( points /* array of Vector2 */ ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'SplineCurve';\n\n\tthis.points = points || [];\n\n}\n\nSplineCurve.prototype = Object.create( Curve.prototype );\nSplineCurve.prototype.constructor = SplineCurve;\n\nSplineCurve.prototype.isSplineCurve = true;\n\nSplineCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tvar points = this.points;\n\tvar p = ( points.length - 1 ) * t;\n\n\tvar intPoint = Math.floor( p );\n\tvar weight = p - intPoint;\n\n\tvar p0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\n\tvar p1 = points[ intPoint ];\n\tvar p2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\tvar p3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n\tpoint.set(\n\t\tCatmullRom( weight, p0.x, p1.x, p2.x, p3.x ),\n\t\tCatmullRom( weight, p0.y, p1.y, p2.y, p3.y )\n\t);\n\n\treturn point;\n\n};\n\nSplineCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.points = [];\n\n\tfor ( var i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\tvar point = source.points[ i ];\n\n\t\tthis.points.push( point.clone() );\n\n\t}\n\n\treturn this;\n\n};\n\nfunction CubicBezierCurve( v0, v1, v2, v3 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'CubicBezierCurve';\n\n\tthis.v0 = v0 || new Vector2();\n\tthis.v1 = v1 || new Vector2();\n\tthis.v2 = v2 || new Vector2();\n\tthis.v3 = v3 || new Vector2();\n\n}\n\nCubicBezierCurve.prototype = Object.create( Curve.prototype );\nCubicBezierCurve.prototype.constructor = CubicBezierCurve;\n\nCubicBezierCurve.prototype.isCubicBezierCurve = true;\n\nCubicBezierCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\tpoint.set(\n\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y )\n\t);\n\n\treturn point;\n\n};\n\nCubicBezierCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v0.copy( source.v0 );\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\tthis.v3.copy( source.v3 );\n\n\treturn this;\n\n};\n\nfunction QuadraticBezierCurve( v0, v1, v2 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'QuadraticBezierCurve';\n\n\tthis.v0 = v0 || new Vector2();\n\tthis.v1 = v1 || new Vector2();\n\tthis.v2 = v2 || new Vector2();\n\n}\n\nQuadraticBezierCurve.prototype = Object.create( Curve.prototype );\nQuadraticBezierCurve.prototype.constructor = QuadraticBezierCurve;\n\nQuadraticBezierCurve.prototype.isQuadraticBezierCurve = true;\n\nQuadraticBezierCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector2();\n\n\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\tpoint.set(\n\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\tQuadraticBezier( t, v0.y, v1.y, v2.y )\n\t);\n\n\treturn point;\n\n};\n\nQuadraticBezierCurve.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v0.copy( source.v0 );\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\n\treturn this;\n\n};\n\nvar PathPrototype = Object.assign( Object.create( CurvePath.prototype ), {\n\n\tsetFromPoints: function ( points ) {\n\n\t\tthis.moveTo( points[ 0 ].x, points[ 0 ].y );\n\n\t\tfor ( var i = 1, l = points.length; i < l; i ++ ) {\n\n\t\t\tthis.lineTo( points[ i ].x, points[ i ].y );\n\n\t\t}\n\n\t},\n\n\tmoveTo: function ( x, y ) {\n\n\t\tthis.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\n\n\t},\n\n\tlineTo: function ( x, y ) {\n\n\t\tvar curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( x, y );\n\n\t},\n\n\tquadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {\n\n\t\tvar curve = new QuadraticBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCPx, aCPy ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t},\n\n\tbezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tvar curve = new CubicBezierCurve(\n\t\t\tthis.currentPoint.clone(),\n\t\t\tnew Vector2( aCP1x, aCP1y ),\n\t\t\tnew Vector2( aCP2x, aCP2y ),\n\t\t\tnew Vector2( aX, aY )\n\t\t);\n\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.set( aX, aY );\n\n\t},\n\n\tsplineThru: function ( pts /*Array of Vector*/ ) {\n\n\t\tvar npts = [ this.currentPoint.clone() ].concat( pts );\n\n\t\tvar curve = new SplineCurve( npts );\n\t\tthis.curves.push( curve );\n\n\t\tthis.currentPoint.copy( pts[ pts.length - 1 ] );\n\n\t},\n\n\tarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tvar x0 = this.currentPoint.x;\n\t\tvar y0 = this.currentPoint.y;\n\n\t\tthis.absarc( aX + x0, aY + y0, aRadius,\n\t\t\taStartAngle, aEndAngle, aClockwise );\n\n\t},\n\n\tabsarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t},\n\n\tellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tvar x0 = this.currentPoint.x;\n\t\tvar y0 = this.currentPoint.y;\n\n\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t},\n\n\tabsellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tvar curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\tif ( this.curves.length > 0 ) {\n\n\t\t\t// if a previous curve is present, attempt to join\n\t\t\tvar firstPoint = curve.getPoint( 0 );\n\n\t\t\tif ( ! firstPoint.equals( this.currentPoint ) ) {\n\n\t\t\t\tthis.lineTo( firstPoint.x, firstPoint.y );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.curves.push( curve );\n\n\t\tvar lastPoint = curve.getPoint( 1 );\n\t\tthis.currentPoint.copy( lastPoint );\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tCurvePath.prototype.copy.call( this, source );\n\n\t\tthis.currentPoint.copy( source.currentPoint );\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * Creates free form 2d path using series of points, lines or curves.\n **/\n\nfunction Path( points ) {\n\n\tCurvePath.call( this );\n\n\tthis.type = 'Path';\n\n\tthis.currentPoint = new Vector2();\n\n\tif ( points ) {\n\n\t\tthis.setFromPoints( points );\n\n\t}\n\n}\n\nPath.prototype = PathPrototype;\nPathPrototype.constructor = Path;\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * Defines a 2d shape plane using paths.\n **/\n\n// STEP 1 Create a path.\n// STEP 2 Turn path into shape.\n// STEP 3 ExtrudeGeometry takes in Shape/Shapes\n// STEP 3a - Extract points from each shape, turn to vertices\n// STEP 3b - Triangulate each shape, add faces.\n\nfunction Shape( points ) {\n\n\tPath.call( this, points );\n\n\tthis.type = 'Shape';\n\n\tthis.holes = [];\n\n}\n\nShape.prototype = Object.assign( Object.create( PathPrototype ), {\n\n\tconstructor: Shape,\n\n\tgetPointsHoles: function ( divisions ) {\n\n\t\tvar holesPts = [];\n\n\t\tfor ( var i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\n\n\t\t}\n\n\t\treturn holesPts;\n\n\t},\n\n\t// get points of shape and holes (keypoints based on segments parameter)\n\n\textractPoints: function ( divisions ) {\n\n\t\treturn {\n\n\t\t\tshape: this.getPoints( divisions ),\n\t\t\tholes: this.getPointsHoles( divisions )\n\n\t\t};\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tPath.prototype.copy.call( this, source );\n\n\t\tthis.holes = [];\n\n\t\tfor ( var i = 0, l = source.holes.length; i < l; i ++ ) {\n\n\t\t\tvar hole = source.holes[ i ];\n\n\t\t\tthis.holes.push( hole.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * minimal class for proxing functions to Path. Replaces old \"extractSubpaths()\"\n **/\n\nfunction ShapePath() {\n\n\tthis.type = 'ShapePath';\n\n\tthis.subPaths = [];\n\tthis.currentPath = null;\n\n}\n\nObject.assign( ShapePath.prototype, {\n\n\tmoveTo: function ( x, y ) {\n\n\t\tthis.currentPath = new Path();\n\t\tthis.subPaths.push( this.currentPath );\n\t\tthis.currentPath.moveTo( x, y );\n\n\t},\n\n\tlineTo: function ( x, y ) {\n\n\t\tthis.currentPath.lineTo( x, y );\n\n\t},\n\n\tquadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {\n\n\t\tthis.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\n\n\t},\n\n\tbezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\tthis.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\n\n\t},\n\n\tsplineThru: function ( pts ) {\n\n\t\tthis.currentPath.splineThru( pts );\n\n\t},\n\n\ttoShapes: function ( isCCW, noHoles ) {\n\n\t\tfunction toShapesNoHoles( inSubpaths ) {\n\n\t\t\tvar shapes = [];\n\n\t\t\tfor ( var i = 0, l = inSubpaths.length; i < l; i ++ ) {\n\n\t\t\t\tvar tmpPath = inSubpaths[ i ];\n\n\t\t\t\tvar tmpShape = new Shape();\n\t\t\t\ttmpShape.curves = tmpPath.curves;\n\n\t\t\t\tshapes.push( tmpShape );\n\n\t\t\t}\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\n\n\t\t\tvar polyLen = inPolygon.length;\n\n\t\t\t// inPt on polygon contour => immediate success    or\n\t\t\t// toggling of inside/outside at every single! intersection point of an edge\n\t\t\t//  with the horizontal line through inPt, left of inPt\n\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\n\t\t\tvar inside = false;\n\t\t\tfor ( var p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\n\n\t\t\t\tvar edgeLowPt = inPolygon[ p ];\n\t\t\t\tvar edgeHighPt = inPolygon[ q ];\n\n\t\t\t\tvar edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\t\tvar edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not parallel\n\t\t\t\t\tif ( edgeDy < 0 ) {\n\n\t\t\t\t\t\tedgeLowPt = inPolygon[ q ]; edgeDx = - edgeDx;\n\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\n\n\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\n\n\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvar perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\n\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\n\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\n\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// parallel or collinear\n\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\n\t\t\t\t\t// edge lies on the same horizontal line as inPt\n\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\n\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\n\t\t\t\t\t// continue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn\tinside;\n\n\t\t}\n\n\t\tvar isClockWise = ShapeUtils.isClockWise;\n\n\t\tvar subPaths = this.subPaths;\n\t\tif ( subPaths.length === 0 ) return [];\n\n\t\tif ( noHoles === true )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tvar solid, tmpPath, tmpShape, shapes = [];\n\n\t\tif ( subPaths.length === 1 ) {\n\n\t\t\ttmpPath = subPaths[ 0 ];\n\t\t\ttmpShape = new Shape();\n\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\tshapes.push( tmpShape );\n\t\t\treturn shapes;\n\n\t\t}\n\n\t\tvar holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\n\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\n\n\t\t// console.log(\"Holes first\", holesFirst);\n\n\t\tvar betterShapeHoles = [];\n\t\tvar newShapes = [];\n\t\tvar newShapeHoles = [];\n\t\tvar mainIdx = 0;\n\t\tvar tmpPoints;\n\n\t\tnewShapes[ mainIdx ] = undefined;\n\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\tfor ( var i = 0, l = subPaths.length; i < l; i ++ ) {\n\n\t\t\ttmpPath = subPaths[ i ];\n\t\t\ttmpPoints = tmpPath.getPoints();\n\t\t\tsolid = isClockWise( tmpPoints );\n\t\t\tsolid = isCCW ? ! solid : solid;\n\n\t\t\tif ( solid ) {\n\n\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\tmainIdx ++;\n\n\t\t\t\tnewShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\n\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\n\n\t\t\t\tif ( holesFirst )\tmainIdx ++;\n\t\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\t\t//console.log('cw', i);\n\n\t\t\t} else {\n\n\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\n\n\t\t\t\t//console.log('ccw', i);\n\n\t\t\t}\n\n\t\t}\n\n\t\t// only Holes? -> probably all Shapes with wrong orientation\n\t\tif ( ! newShapes[ 0 ] )\treturn\ttoShapesNoHoles( subPaths );\n\n\n\t\tif ( newShapes.length > 1 ) {\n\n\t\t\tvar ambiguous = false;\n\t\t\tvar toChange = [];\n\n\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tbetterShapeHoles[ sIdx ] = [];\n\n\t\t\t}\n\n\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\tvar sho = newShapeHoles[ sIdx ];\n\n\t\t\t\tfor ( var hIdx = 0; hIdx < sho.length; hIdx ++ ) {\n\n\t\t\t\t\tvar ho = sho[ hIdx ];\n\t\t\t\t\tvar hole_unassigned = true;\n\n\t\t\t\t\tfor ( var s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\n\n\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\n\n\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\ttoChange.push( { froms: sIdx, tos: s2Idx, hole: hIdx } );\n\t\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\t\thole_unassigned = false;\n\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tambiguous = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t\t// console.log(\"ambiguous: \", ambiguous);\n\t\t\tif ( toChange.length > 0 ) {\n\n\t\t\t\t// console.log(\"to change: \", toChange);\n\t\t\t\tif ( ! ambiguous )\tnewShapeHoles = betterShapeHoles;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar tmpHoles;\n\n\t\tfor ( var i = 0, il = newShapes.length; i < il; i ++ ) {\n\n\t\t\ttmpShape = newShapes[ i ].s;\n\t\t\tshapes.push( tmpShape );\n\t\t\ttmpHoles = newShapeHoles[ i ];\n\n\t\t\tfor ( var j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\n\n\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//console.log(\"shape\", shapes);\n\n\t\treturn shapes;\n\n\t}\n\n} );\n\n/**\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Font( data ) {\n\n\tthis.type = 'Font';\n\n\tthis.data = data;\n\n}\n\nObject.assign( Font.prototype, {\n\n\tisFont: true,\n\n\tgenerateShapes: function ( text, size, divisions ) {\n\n\t\tfunction createPaths( text ) {\n\n\t\t\tvar chars = String( text ).split( '' );\n\t\t\tvar scale = size / data.resolution;\n\t\t\tvar line_height = ( data.boundingBox.yMax - data.boundingBox.yMin + data.underlineThickness ) * scale;\n\n\t\t\tvar offsetX = 0, offsetY = 0;\n\n\t\t\tvar paths = [];\n\n\t\t\tfor ( var i = 0; i < chars.length; i ++ ) {\n\n\t\t\t\tvar char = chars[ i ];\n\n\t\t\t\tif ( char === '\\n' ) {\n\n\t\t\t\t\toffsetX = 0;\n\t\t\t\t\toffsetY -= line_height;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvar ret = createPath( char, scale, offsetX, offsetY );\n\t\t\t\t\toffsetX += ret.offsetX;\n\t\t\t\t\tpaths.push( ret.path );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn paths;\n\n\t\t}\n\n\t\tfunction createPath( c, scale, offsetX, offsetY ) {\n\n\t\t\tvar glyph = data.glyphs[ c ] || data.glyphs[ '?' ];\n\n\t\t\tif ( ! glyph ) return;\n\n\t\t\tvar path = new ShapePath();\n\n\t\t\tvar pts = [];\n\t\t\tvar x, y, cpx, cpy, cpx0, cpy0, cpx1, cpy1, cpx2, cpy2, laste;\n\n\t\t\tif ( glyph.o ) {\n\n\t\t\t\tvar outline = glyph._cachedOutline || ( glyph._cachedOutline = glyph.o.split( ' ' ) );\n\n\t\t\t\tfor ( var i = 0, l = outline.length; i < l; ) {\n\n\t\t\t\t\tvar action = outline[ i ++ ];\n\n\t\t\t\t\tswitch ( action ) {\n\n\t\t\t\t\t\tcase 'm': // moveTo\n\n\t\t\t\t\t\t\tx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t\t\ty = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\t\t\tpath.moveTo( x, y );\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'l': // lineTo\n\n\t\t\t\t\t\t\tx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t\t\ty = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\t\t\tpath.lineTo( x, y );\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'q': // quadraticCurveTo\n\n\t\t\t\t\t\t\tcpx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t\t\tcpy = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t\t\tcpy1 = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\t\t\tpath.quadraticCurveTo( cpx1, cpy1, cpx, cpy );\n\n\t\t\t\t\t\t\tlaste = pts[ pts.length - 1 ];\n\n\t\t\t\t\t\t\tif ( laste ) {\n\n\t\t\t\t\t\t\t\tcpx0 = laste.x;\n\t\t\t\t\t\t\t\tcpy0 = laste.y;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'b': // bezierCurveTo\n\n\t\t\t\t\t\t\tcpx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t\t\tcpy = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t\t\tcpy1 = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\t\t\tcpx2 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t\t\tcpy2 = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\t\t\tpath.bezierCurveTo( cpx1, cpy1, cpx2, cpy2, cpx, cpy );\n\n\t\t\t\t\t\t\tlaste = pts[ pts.length - 1 ];\n\n\t\t\t\t\t\t\tif ( laste ) {\n\n\t\t\t\t\t\t\t\tcpx0 = laste.x;\n\t\t\t\t\t\t\t\tcpy0 = laste.y;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn { offsetX: glyph.ha * scale, path: path };\n\n\t\t}\n\n\t\t//\n\n\t\tif ( size === undefined ) size = 100;\n\t\tif ( divisions === undefined ) divisions = 4;\n\n\t\tvar data = this.data;\n\n\t\tvar paths = createPaths( text );\n\t\tvar shapes = [];\n\n\t\tfor ( var p = 0, pl = paths.length; p < pl; p ++ ) {\n\n\t\t\tArray.prototype.push.apply( shapes, paths[ p ].toShapes() );\n\n\t\t}\n\n\t\treturn shapes;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction FontLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( FontLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\tvar json;\n\n\t\t\ttry {\n\n\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tconsole.warn( 'THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.' );\n\t\t\t\tjson = JSON.parse( text.substring( 65, text.length - 2 ) );\n\n\t\t\t}\n\n\t\t\tvar font = scope.parse( json );\n\n\t\t\tif ( onLoad ) onLoad( font );\n\n\t\t}, onProgress, onError );\n\n\t},\n\n\tparse: function ( json ) {\n\n\t\treturn new Font( json );\n\n\t},\n\n\tsetPath: function ( value ) {\n\n\t\tthis.path = value;\n\t\treturn this;\n\n\t}\n\n} );\n\nvar context;\n\nvar AudioContext = {\n\n\tgetContext: function () {\n\n\t\tif ( context === undefined ) {\n\n\t\t\tcontext = new ( window.AudioContext || window.webkitAudioContext )();\n\n\t\t}\n\n\t\treturn context;\n\n\t},\n\n\tsetContext: function ( value ) {\n\n\t\tcontext = value;\n\n\t}\n\n};\n\n/**\n * @author Reece Aaron Lecrivain / http://reecenotes.com/\n */\n\nfunction AudioLoader( manager ) {\n\n\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n}\n\nObject.assign( AudioLoader.prototype, {\n\n\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\tvar loader = new FileLoader( this.manager );\n\t\tloader.setResponseType( 'arraybuffer' );\n\t\tloader.load( url, function ( buffer ) {\n\n\t\t\tvar context = AudioContext.getContext();\n\n\t\t\tcontext.decodeAudioData( buffer, function ( audioBuffer ) {\n\n\t\t\t\tonLoad( audioBuffer );\n\n\t\t\t} );\n\n\t\t}, onProgress, onError );\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction StereoCamera() {\n\n\tthis.type = 'StereoCamera';\n\n\tthis.aspect = 1;\n\n\tthis.eyeSep = 0.064;\n\n\tthis.cameraL = new PerspectiveCamera();\n\tthis.cameraL.layers.enable( 1 );\n\tthis.cameraL.matrixAutoUpdate = false;\n\n\tthis.cameraR = new PerspectiveCamera();\n\tthis.cameraR.layers.enable( 2 );\n\tthis.cameraR.matrixAutoUpdate = false;\n\n}\n\nObject.assign( StereoCamera.prototype, {\n\n\tupdate: ( function () {\n\n\t\tvar instance, focus, fov, aspect, near, far, zoom, eyeSep;\n\n\t\tvar eyeRight = new Matrix4();\n\t\tvar eyeLeft = new Matrix4();\n\n\t\treturn function update( camera ) {\n\n\t\t\tvar needsUpdate = instance !== this || focus !== camera.focus || fov !== camera.fov ||\n\t\t\t\t\t\t\t\t\t\t\t\taspect !== camera.aspect * this.aspect || near !== camera.near ||\n\t\t\t\t\t\t\t\t\t\t\t\tfar !== camera.far || zoom !== camera.zoom || eyeSep !== this.eyeSep;\n\n\t\t\tif ( needsUpdate ) {\n\n\t\t\t\tinstance = this;\n\t\t\t\tfocus = camera.focus;\n\t\t\t\tfov = camera.fov;\n\t\t\t\taspect = camera.aspect * this.aspect;\n\t\t\t\tnear = camera.near;\n\t\t\t\tfar = camera.far;\n\t\t\t\tzoom = camera.zoom;\n\n\t\t\t\t// Off-axis stereoscopic effect based on\n\t\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\t\tvar projectionMatrix = camera.projectionMatrix.clone();\n\t\t\t\teyeSep = this.eyeSep / 2;\n\t\t\t\tvar eyeSepOnProjection = eyeSep * near / focus;\n\t\t\t\tvar ymax = ( near * Math.tan( _Math.DEG2RAD * fov * 0.5 ) ) / zoom;\n\t\t\t\tvar xmin, xmax;\n\n\t\t\t\t// translate xOffset\n\n\t\t\t\teyeLeft.elements[ 12 ] = - eyeSep;\n\t\t\t\teyeRight.elements[ 12 ] = eyeSep;\n\n\t\t\t\t// for left eye\n\n\t\t\t\txmin = - ymax * aspect + eyeSepOnProjection;\n\t\t\t\txmax = ymax * aspect + eyeSepOnProjection;\n\n\t\t\t\tprojectionMatrix.elements[ 0 ] = 2 * near / ( xmax - xmin );\n\t\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\t\tthis.cameraL.projectionMatrix.copy( projectionMatrix );\n\n\t\t\t\t// for right eye\n\n\t\t\t\txmin = - ymax * aspect - eyeSepOnProjection;\n\t\t\t\txmax = ymax * aspect - eyeSepOnProjection;\n\n\t\t\t\tprojectionMatrix.elements[ 0 ] = 2 * near / ( xmax - xmin );\n\t\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\t\tthis.cameraR.projectionMatrix.copy( projectionMatrix );\n\n\t\t\t}\n\n\t\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( eyeLeft );\n\t\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( eyeRight );\n\n\t\t};\n\n\t} )()\n\n} );\n\n/**\n * Camera for rendering cube maps\n *\t- renders scene into axis-aligned cube\n *\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction CubeCamera( near, far, cubeResolution ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'CubeCamera';\n\n\tvar fov = 90, aspect = 1;\n\n\tvar cameraPX = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraPX.up.set( 0, - 1, 0 );\n\tcameraPX.lookAt( new Vector3( 1, 0, 0 ) );\n\tthis.add( cameraPX );\n\n\tvar cameraNX = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraNX.up.set( 0, - 1, 0 );\n\tcameraNX.lookAt( new Vector3( - 1, 0, 0 ) );\n\tthis.add( cameraNX );\n\n\tvar cameraPY = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraPY.up.set( 0, 0, 1 );\n\tcameraPY.lookAt( new Vector3( 0, 1, 0 ) );\n\tthis.add( cameraPY );\n\n\tvar cameraNY = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraNY.up.set( 0, 0, - 1 );\n\tcameraNY.lookAt( new Vector3( 0, - 1, 0 ) );\n\tthis.add( cameraNY );\n\n\tvar cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraPZ.up.set( 0, - 1, 0 );\n\tcameraPZ.lookAt( new Vector3( 0, 0, 1 ) );\n\tthis.add( cameraPZ );\n\n\tvar cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\n\tcameraNZ.up.set( 0, - 1, 0 );\n\tcameraNZ.lookAt( new Vector3( 0, 0, - 1 ) );\n\tthis.add( cameraNZ );\n\n\tvar options = { format: RGBFormat, magFilter: LinearFilter, minFilter: LinearFilter };\n\n\tthis.renderTarget = new WebGLRenderTargetCube( cubeResolution, cubeResolution, options );\n\tthis.renderTarget.texture.name = \"CubeCamera\";\n\n\tthis.update = function ( renderer, scene ) {\n\n\t\tif ( this.parent === null ) this.updateMatrixWorld();\n\n\t\tvar renderTarget = this.renderTarget;\n\t\tvar generateMipmaps = renderTarget.texture.generateMipmaps;\n\n\t\trenderTarget.texture.generateMipmaps = false;\n\n\t\trenderTarget.activeCubeFace = 0;\n\t\trenderer.render( scene, cameraPX, renderTarget );\n\n\t\trenderTarget.activeCubeFace = 1;\n\t\trenderer.render( scene, cameraNX, renderTarget );\n\n\t\trenderTarget.activeCubeFace = 2;\n\t\trenderer.render( scene, cameraPY, renderTarget );\n\n\t\trenderTarget.activeCubeFace = 3;\n\t\trenderer.render( scene, cameraNY, renderTarget );\n\n\t\trenderTarget.activeCubeFace = 4;\n\t\trenderer.render( scene, cameraPZ, renderTarget );\n\n\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\n\t\trenderTarget.activeCubeFace = 5;\n\t\trenderer.render( scene, cameraNZ, renderTarget );\n\n\t\trenderer.setRenderTarget( null );\n\n\t};\n\n\tthis.clear = function ( renderer, color, depth, stencil ) {\n\n\t\tvar renderTarget = this.renderTarget;\n\n\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\trenderTarget.activeCubeFace = i;\n\t\t\trenderer.setRenderTarget( renderTarget );\n\n\t\t\trenderer.clear( color, depth, stencil );\n\n\t\t}\n\n\t\trenderer.setRenderTarget( null );\n\n\t};\n\n}\n\nCubeCamera.prototype = Object.create( Object3D.prototype );\nCubeCamera.prototype.constructor = CubeCamera;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction AudioListener() {\n\n\tObject3D.call( this );\n\n\tthis.type = 'AudioListener';\n\n\tthis.context = AudioContext.getContext();\n\n\tthis.gain = this.context.createGain();\n\tthis.gain.connect( this.context.destination );\n\n\tthis.filter = null;\n\n}\n\nAudioListener.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: AudioListener,\n\n\tgetInput: function () {\n\n\t\treturn this.gain;\n\n\t},\n\n\tremoveFilter: function ( ) {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\t\t\tthis.gain.connect( this.context.destination );\n\t\t\tthis.filter = null;\n\n\t\t}\n\n\t},\n\n\tgetFilter: function () {\n\n\t\treturn this.filter;\n\n\t},\n\n\tsetFilter: function ( value ) {\n\n\t\tif ( this.filter !== null ) {\n\n\t\t\tthis.gain.disconnect( this.filter );\n\t\t\tthis.filter.disconnect( this.context.destination );\n\n\t\t} else {\n\n\t\t\tthis.gain.disconnect( this.context.destination );\n\n\t\t}\n\n\t\tthis.filter = value;\n\t\tthis.gain.connect( this.filter );\n\t\tthis.filter.connect( this.context.destination );\n\n\t},\n\n\tgetMasterVolume: function () {\n\n\t\treturn this.gain.gain.value;\n\n\t},\n\n\tsetMasterVolume: function ( value ) {\n\n\t\tthis.gain.gain.value = value;\n\n\t},\n\n\tupdateMatrixWorld: ( function () {\n\n\t\tvar position = new Vector3();\n\t\tvar quaternion = new Quaternion();\n\t\tvar scale = new Vector3();\n\n\t\tvar orientation = new Vector3();\n\n\t\treturn function updateMatrixWorld( force ) {\n\n\t\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\t\tvar listener = this.context.listener;\n\t\t\tvar up = this.up;\n\n\t\t\tthis.matrixWorld.decompose( position, quaternion, scale );\n\n\t\t\torientation.set( 0, 0, - 1 ).applyQuaternion( quaternion );\n\n\t\t\tif ( listener.positionX ) {\n\n\t\t\t\tlistener.positionX.setValueAtTime( position.x, this.context.currentTime );\n\t\t\t\tlistener.positionY.setValueAtTime( position.y, this.context.currentTime );\n\t\t\t\tlistener.positionZ.setValueAtTime( position.z, this.context.currentTime );\n\t\t\t\tlistener.forwardX.setValueAtTime( orientation.x, this.context.currentTime );\n\t\t\t\tlistener.forwardY.setValueAtTime( orientation.y, this.context.currentTime );\n\t\t\t\tlistener.forwardZ.setValueAtTime( orientation.z, this.context.currentTime );\n\t\t\t\tlistener.upX.setValueAtTime( up.x, this.context.currentTime );\n\t\t\t\tlistener.upY.setValueAtTime( up.y, this.context.currentTime );\n\t\t\t\tlistener.upZ.setValueAtTime( up.z, this.context.currentTime );\n\n\t\t\t} else {\n\n\t\t\t\tlistener.setPosition( position.x, position.y, position.z );\n\t\t\t\tlistener.setOrientation( orientation.x, orientation.y, orientation.z, up.x, up.y, up.z );\n\n\t\t\t}\n\n\t\t};\n\n\t} )()\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Reece Aaron Lecrivain / http://reecenotes.com/\n */\n\nfunction Audio( listener ) {\n\n\tObject3D.call( this );\n\n\tthis.type = 'Audio';\n\n\tthis.context = listener.context;\n\n\tthis.gain = this.context.createGain();\n\tthis.gain.connect( listener.getInput() );\n\n\tthis.autoplay = false;\n\n\tthis.buffer = null;\n\tthis.loop = false;\n\tthis.startTime = 0;\n\tthis.offset = 0;\n\tthis.playbackRate = 1;\n\tthis.isPlaying = false;\n\tthis.hasPlaybackControl = true;\n\tthis.sourceType = 'empty';\n\n\tthis.filters = [];\n\n}\n\nAudio.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\tconstructor: Audio,\n\n\tgetOutput: function () {\n\n\t\treturn this.gain;\n\n\t},\n\n\tsetNodeSource: function ( audioNode ) {\n\n\t\tthis.hasPlaybackControl = false;\n\t\tthis.sourceType = 'audioNode';\n\t\tthis.source = audioNode;\n\t\tthis.connect();\n\n\t\treturn this;\n\n\t},\n\n\tsetBuffer: function ( audioBuffer ) {\n\n\t\tthis.buffer = audioBuffer;\n\t\tthis.sourceType = 'buffer';\n\n\t\tif ( this.autoplay ) this.play();\n\n\t\treturn this;\n\n\t},\n\n\tplay: function () {\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar source = this.context.createBufferSource();\n\n\t\tsource.buffer = this.buffer;\n\t\tsource.loop = this.loop;\n\t\tsource.onended = this.onEnded.bind( this );\n\t\tsource.playbackRate.setValueAtTime( this.playbackRate, this.startTime );\n\t\tthis.startTime = this.context.currentTime;\n\t\tsource.start( this.startTime, this.offset );\n\n\t\tthis.isPlaying = true;\n\n\t\tthis.source = source;\n\n\t\treturn this.connect();\n\n\t},\n\n\tpause: function () {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.stop();\n\t\t\tthis.offset += ( this.context.currentTime - this.startTime ) * this.playbackRate;\n\t\t\tthis.isPlaying = false;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tstop: function () {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.source.stop();\n\t\tthis.offset = 0;\n\t\tthis.isPlaying = false;\n\n\t\treturn this;\n\n\t},\n\n\tconnect: function () {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.connect( this.filters[ 0 ] );\n\n\t\t\tfor ( var i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.connect( this.getOutput() );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tdisconnect: function () {\n\n\t\tif ( this.filters.length > 0 ) {\n\n\t\t\tthis.source.disconnect( this.filters[ 0 ] );\n\n\t\t\tfor ( var i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\n\n\t\t\t}\n\n\t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\n\n\t\t} else {\n\n\t\t\tthis.source.disconnect( this.getOutput() );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetFilters: function () {\n\n\t\treturn this.filters;\n\n\t},\n\n\tsetFilters: function ( value ) {\n\n\t\tif ( ! value ) value = [];\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.disconnect();\n\t\t\tthis.filters = value;\n\t\t\tthis.connect();\n\n\t\t} else {\n\n\t\t\tthis.filters = value;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetFilter: function () {\n\n\t\treturn this.getFilters()[ 0 ];\n\n\t},\n\n\tsetFilter: function ( filter ) {\n\n\t\treturn this.setFilters( filter ? [ filter ] : [] );\n\n\t},\n\n\tsetPlaybackRate: function ( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.playbackRate = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.playbackRate.setValueAtTime( this.playbackRate, this.context.currentTime );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetPlaybackRate: function () {\n\n\t\treturn this.playbackRate;\n\n\t},\n\n\tonEnded: function () {\n\n\t\tthis.isPlaying = false;\n\n\t},\n\n\tgetLoop: function () {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn false;\n\n\t\t}\n\n\t\treturn this.loop;\n\n\t},\n\n\tsetLoop: function ( value ) {\n\n\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tthis.loop = value;\n\n\t\tif ( this.isPlaying === true ) {\n\n\t\t\tthis.source.loop = this.loop;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tgetVolume: function () {\n\n\t\treturn this.gain.gain.value;\n\n\t},\n\n\tsetVolume: function ( value ) {\n\n\t\tthis.gain.gain.value = value;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction PositionalAudio( listener ) {\n\n\tAudio.call( this, listener );\n\n\tthis.panner = this.context.createPanner();\n\tthis.panner.connect( this.gain );\n\n}\n\nPositionalAudio.prototype = Object.assign( Object.create( Audio.prototype ), {\n\n\tconstructor: PositionalAudio,\n\n\tgetOutput: function () {\n\n\t\treturn this.panner;\n\n\t},\n\n\tgetRefDistance: function () {\n\n\t\treturn this.panner.refDistance;\n\n\t},\n\n\tsetRefDistance: function ( value ) {\n\n\t\tthis.panner.refDistance = value;\n\n\t},\n\n\tgetRolloffFactor: function () {\n\n\t\treturn this.panner.rolloffFactor;\n\n\t},\n\n\tsetRolloffFactor: function ( value ) {\n\n\t\tthis.panner.rolloffFactor = value;\n\n\t},\n\n\tgetDistanceModel: function () {\n\n\t\treturn this.panner.distanceModel;\n\n\t},\n\n\tsetDistanceModel: function ( value ) {\n\n\t\tthis.panner.distanceModel = value;\n\n\t},\n\n\tgetMaxDistance: function () {\n\n\t\treturn this.panner.maxDistance;\n\n\t},\n\n\tsetMaxDistance: function ( value ) {\n\n\t\tthis.panner.maxDistance = value;\n\n\t},\n\n\tupdateMatrixWorld: ( function () {\n\n\t\tvar position = new Vector3();\n\n\t\treturn function updateMatrixWorld( force ) {\n\n\t\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\t\tposition.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tthis.panner.setPosition( position.x, position.y, position.z );\n\n\t\t};\n\n\t} )()\n\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction AudioAnalyser( audio, fftSize ) {\n\n\tthis.analyser = audio.context.createAnalyser();\n\tthis.analyser.fftSize = fftSize !== undefined ? fftSize : 2048;\n\n\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\n\n\taudio.getOutput().connect( this.analyser );\n\n}\n\nObject.assign( AudioAnalyser.prototype, {\n\n\tgetFrequencyData: function () {\n\n\t\tthis.analyser.getByteFrequencyData( this.data );\n\n\t\treturn this.data;\n\n\t},\n\n\tgetAverageFrequency: function () {\n\n\t\tvar value = 0, data = this.getFrequencyData();\n\n\t\tfor ( var i = 0; i < data.length; i ++ ) {\n\n\t\t\tvalue += data[ i ];\n\n\t\t}\n\n\t\treturn value / data.length;\n\n\t}\n\n} );\n\n/**\n *\n * Buffered scene graph property that allows weighted accumulation.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction PropertyMixer( binding, typeName, valueSize ) {\n\n\tthis.binding = binding;\n\tthis.valueSize = valueSize;\n\n\tvar bufferType = Float64Array,\n\t\tmixFunction;\n\n\tswitch ( typeName ) {\n\n\t\tcase 'quaternion':\n\t\t\tmixFunction = this._slerp;\n\t\t\tbreak;\n\n\t\tcase 'string':\n\t\tcase 'bool':\n\t\t\tbufferType = Array;\n\t\t\tmixFunction = this._select;\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tmixFunction = this._lerp;\n\n\t}\n\n\tthis.buffer = new bufferType( valueSize * 4 );\n\t// layout: [ incoming | accu0 | accu1 | orig ]\n\t//\n\t// interpolators can use .buffer as their .result\n\t// the data then goes to 'incoming'\n\t//\n\t// 'accu0' and 'accu1' are used frame-interleaved for\n\t// the cumulative result and are compared to detect\n\t// changes\n\t//\n\t// 'orig' stores the original state of the property\n\n\tthis._mixBufferRegion = mixFunction;\n\n\tthis.cumulativeWeight = 0;\n\n\tthis.useCount = 0;\n\tthis.referenceCount = 0;\n\n}\n\nObject.assign( PropertyMixer.prototype, {\n\n\t// accumulate data in the 'incoming' region into 'accu<i>'\n\taccumulate: function ( accuIndex, weight ) {\n\n\t\t// note: happily accumulating nothing when weight = 0, the caller knows\n\t\t// the weight and shouldn't have made the call in the first place\n\n\t\tvar buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\tcurrentWeight = this.cumulativeWeight;\n\n\t\tif ( currentWeight === 0 ) {\n\n\t\t\t// accuN := incoming * weight\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\n\n\t\t\t}\n\n\t\t\tcurrentWeight = weight;\n\n\t\t} else {\n\n\t\t\t// accuN := accuN + incoming * weight\n\n\t\t\tcurrentWeight += weight;\n\t\t\tvar mix = weight / currentWeight;\n\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\n\n\t\t}\n\n\t\tthis.cumulativeWeight = currentWeight;\n\n\t},\n\n\t// apply the state of 'accu<i>' to the binding when accus differ\n\tapply: function ( accuIndex ) {\n\n\t\tvar stride = this.valueSize,\n\t\t\tbuffer = this.buffer,\n\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\tweight = this.cumulativeWeight,\n\n\t\t\tbinding = this.binding;\n\n\t\tthis.cumulativeWeight = 0;\n\n\t\tif ( weight < 1 ) {\n\n\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\n\n\t\t\tvar originalValueOffset = stride * 3;\n\n\t\t\tthis._mixBufferRegion(\n\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\n\n\t\t}\n\n\t\tfor ( var i = stride, e = stride + stride; i !== e; ++ i ) {\n\n\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\n\n\t\t\t\t// value has changed -> update scene graph\n\n\t\t\t\tbinding.setValue( buffer, offset );\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t// remember the state of the bound property and copy it to both accus\n\tsaveOriginalState: function () {\n\n\t\tvar binding = this.binding;\n\n\t\tvar buffer = this.buffer,\n\t\t\tstride = this.valueSize,\n\n\t\t\toriginalValueOffset = stride * 3;\n\n\t\tbinding.getValue( buffer, originalValueOffset );\n\n\t\t// accu[0..1] := orig -- initially detect changes against the original\n\t\tfor ( var i = stride, e = originalValueOffset; i !== e; ++ i ) {\n\n\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\n\n\t\t}\n\n\t\tthis.cumulativeWeight = 0;\n\n\t},\n\n\t// apply the state previously taken via 'saveOriginalState' to the binding\n\trestoreOriginalState: function () {\n\n\t\tvar originalValueOffset = this.valueSize * 3;\n\t\tthis.binding.setValue( this.buffer, originalValueOffset );\n\n\t},\n\n\n\t// mix functions\n\n\t_select: function ( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tif ( t >= 0.5 ) {\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t_slerp: function ( buffer, dstOffset, srcOffset, t ) {\n\n\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t );\n\n\t},\n\n\t_lerp: function ( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\tvar s = 1 - t;\n\n\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\tvar j = dstOffset + i;\n\n\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n *\n * A reference to a real property in the scene graph.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction Composite( targetGroup, path, optionalParsedPath ) {\n\n\tvar parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );\n\n\tthis._targetGroup = targetGroup;\n\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\n\n}\n\nObject.assign( Composite.prototype, {\n\n\tgetValue: function ( array, offset ) {\n\n\t\tthis.bind(); // bind all binding\n\n\t\tvar firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\tbinding = this._bindings[ firstValidIndex ];\n\n\t\t// and only call .getValue on the first\n\t\tif ( binding !== undefined ) binding.getValue( array, offset );\n\n\t},\n\n\tsetValue: function ( array, offset ) {\n\n\t\tvar bindings = this._bindings;\n\n\t\tfor ( var i = this._targetGroup.nCachedObjects_,\n\t\t\t\t  n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].setValue( array, offset );\n\n\t\t}\n\n\t},\n\n\tbind: function () {\n\n\t\tvar bindings = this._bindings;\n\n\t\tfor ( var i = this._targetGroup.nCachedObjects_,\n\t\t\t\t  n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].bind();\n\n\t\t}\n\n\t},\n\n\tunbind: function () {\n\n\t\tvar bindings = this._bindings;\n\n\t\tfor ( var i = this._targetGroup.nCachedObjects_,\n\t\t\t\t  n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tbindings[ i ].unbind();\n\n\t\t}\n\n\t}\n\n} );\n\n\nfunction PropertyBinding( rootNode, path, parsedPath ) {\n\n\tthis.path = path;\n\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );\n\n\tthis.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName ) || rootNode;\n\n\tthis.rootNode = rootNode;\n\n}\n\nObject.assign( PropertyBinding, {\n\n\tComposite: Composite,\n\n\tcreate: function ( root, path, parsedPath ) {\n\n\t\tif ( ! ( root && root.isAnimationObjectGroup ) ) {\n\n\t\t\treturn new PropertyBinding( root, path, parsedPath );\n\n\t\t} else {\n\n\t\t\treturn new PropertyBinding.Composite( root, path, parsedPath );\n\n\t\t}\n\n\t},\n\n\t/**\n\t * Replaces spaces with underscores and removes unsupported characters from\n\t * node names, to ensure compatibility with parseTrackName().\n\t *\n\t * @param  {string} name Node name to be sanitized.\n\t * @return {string}\n\t */\n\tsanitizeNodeName: function ( name ) {\n\n\t\treturn name.replace( /\\s/g, '_' ).replace( /[^\\w-]/g, '' );\n\n\t},\n\n\tparseTrackName: function () {\n\n\t\t// Parent directories, delimited by '/' or ':'. Currently unused, but must\n\t\t// be matched to parse the rest of the track name.\n\t\tvar directoryRe = /((?:[\\w-]+[\\/:])*)/;\n\n\t\t// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\n\t\tvar nodeRe = /([\\w-\\.]+)?/;\n\n\t\t// Object on target node, and accessor. Name may contain only word\n\t\t// characters. Accessor may contain any character except closing bracket.\n\t\tvar objectRe = /(?:\\.([\\w-]+)(?:\\[(.+)\\])?)?/;\n\n\t\t// Property and accessor. May contain only word characters. Accessor may\n\t\t// contain any non-bracket characters.\n\t\tvar propertyRe = /\\.([\\w-]+)(?:\\[(.+)\\])?/;\n\n\t\tvar trackRe = new RegExp( ''\n\t\t\t+ '^'\n\t\t\t+ directoryRe.source\n\t\t\t+ nodeRe.source\n\t\t\t+ objectRe.source\n\t\t\t+ propertyRe.source\n\t\t\t+ '$'\n\t\t);\n\n\t\tvar supportedObjectNames = [ 'material', 'materials', 'bones' ];\n\n\t\treturn function ( trackName ) {\n\n\t\t\tvar matches = trackRe.exec( trackName );\n\n\t\t\tif ( ! matches ) {\n\n\t\t\t\tthrow new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName );\n\n\t\t\t}\n\n\t\t\tvar results = {\n\t\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\n\t\t\t\tnodeName: matches[ 2 ],\n\t\t\t\tobjectName: matches[ 3 ],\n\t\t\t\tobjectIndex: matches[ 4 ],\n\t\t\t\tpropertyName: matches[ 5 ], // required\n\t\t\t\tpropertyIndex: matches[ 6 ]\n\t\t\t};\n\n\t\t\tvar lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );\n\n\t\t\tif ( lastDot !== undefined && lastDot !== - 1 ) {\n\n\t\t\t\tvar objectName = results.nodeName.substring( lastDot + 1 );\n\n\t\t\t\t// Object names must be checked against a whitelist. Otherwise, there\n\t\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n\t\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\n\t\t\t\t// include '.' characters).\n\t\t\t\tif ( supportedObjectNames.indexOf( objectName ) !== - 1 ) {\n\n\t\t\t\t\tresults.nodeName = results.nodeName.substring( 0, lastDot );\n\t\t\t\t\tresults.objectName = objectName;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\n\n\t\t\t\tthrow new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName );\n\n\t\t\t}\n\n\t\t\treturn results;\n\n\t\t};\n\n\t}(),\n\n\tfindNode: function ( root, nodeName ) {\n\n\t\tif ( ! nodeName || nodeName === \"\" || nodeName === \"root\" || nodeName === \".\" || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) {\n\n\t\t\treturn root;\n\n\t\t}\n\n\t\t// search into skeleton bones.\n\t\tif ( root.skeleton ) {\n\n\t\t\tvar searchSkeleton = function ( skeleton ) {\n\n\t\t\t\tfor ( var i = 0; i < skeleton.bones.length; i ++ ) {\n\n\t\t\t\t\tvar bone = skeleton.bones[ i ];\n\n\t\t\t\t\tif ( bone.name === nodeName ) {\n\n\t\t\t\t\t\treturn bone;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\t};\n\n\t\t\tvar bone = searchSkeleton( root.skeleton );\n\n\t\t\tif ( bone ) {\n\n\t\t\t\treturn bone;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// search into node subtree.\n\t\tif ( root.children ) {\n\n\t\t\tvar searchNodeSubtree = function ( children ) {\n\n\t\t\t\tfor ( var i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\tvar childNode = children[ i ];\n\n\t\t\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\n\n\t\t\t\t\t\treturn childNode;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar result = searchNodeSubtree( childNode.children );\n\n\t\t\t\t\tif ( result ) return result;\n\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\n\t\t\t};\n\n\t\t\tvar subTreeNode = searchNodeSubtree( root.children );\n\n\t\t\tif ( subTreeNode ) {\n\n\t\t\t\treturn subTreeNode;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n} );\n\nObject.assign( PropertyBinding.prototype, { // prototype, continued\n\n\t// these are used to \"bind\" a nonexistent property\n\t_getValue_unavailable: function () {},\n\t_setValue_unavailable: function () {},\n\n\tBindingType: {\n\t\tDirect: 0,\n\t\tEntireArray: 1,\n\t\tArrayElement: 2,\n\t\tHasFromToArray: 3\n\t},\n\n\tVersioning: {\n\t\tNone: 0,\n\t\tNeedsUpdate: 1,\n\t\tMatrixWorldNeedsUpdate: 2\n\t},\n\n\tGetterByBindingType: [\n\n\t\tfunction getValue_direct( buffer, offset ) {\n\n\t\t\tbuffer[ offset ] = this.node[ this.propertyName ];\n\n\t\t},\n\n\t\tfunction getValue_array( buffer, offset ) {\n\n\t\t\tvar source = this.resolvedProperty;\n\n\t\t\tfor ( var i = 0, n = source.length; i !== n; ++ i ) {\n\n\t\t\t\tbuffer[ offset ++ ] = source[ i ];\n\n\t\t\t}\n\n\t\t},\n\n\t\tfunction getValue_arrayElement( buffer, offset ) {\n\n\t\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\n\n\t\t},\n\n\t\tfunction getValue_toArray( buffer, offset ) {\n\n\t\t\tthis.resolvedProperty.toArray( buffer, offset );\n\n\t\t}\n\n\t],\n\n\tSetterByBindingTypeAndVersioning: [\n\n\t\t[\n\t\t\t// Direct\n\n\t\t\tfunction setValue_direct( buffer, offset ) {\n\n\t\t\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\n\t\t\t},\n\n\t\t\tfunction setValue_direct_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t], [\n\n\t\t\t// EntireArray\n\n\t\t\tfunction setValue_array( buffer, offset ) {\n\n\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tfunction setValue_array_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t}\n\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t}\n\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t], [\n\n\t\t\t// ArrayElement\n\n\t\t\tfunction setValue_arrayElement( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\n\t\t\t},\n\n\t\t\tfunction setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t], [\n\n\t\t\t// HasToFromArray\n\n\t\t\tfunction setValue_fromArray( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\n\t\t\t},\n\n\t\t\tfunction setValue_fromArray_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t},\n\n\t\t\tfunction setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t}\n\n\t\t]\n\n\t],\n\n\tgetValue: function getValue_unbound( targetArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.getValue( targetArray, offset );\n\n\t\t// Note: This class uses a State pattern on a per-method basis:\n\t\t// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n\t\t// prototype version of these methods with one that represents\n\t\t// the bound state. When the property is not found, the methods\n\t\t// become no-ops.\n\n\t},\n\n\tsetValue: function getValue_unbound( sourceArray, offset ) {\n\n\t\tthis.bind();\n\t\tthis.setValue( sourceArray, offset );\n\n\t},\n\n\t// create getter / setter pair for a property in the scene graph\n\tbind: function () {\n\n\t\tvar targetObject = this.node,\n\t\t\tparsedPath = this.parsedPath,\n\n\t\t\tobjectName = parsedPath.objectName,\n\t\t\tpropertyName = parsedPath.propertyName,\n\t\t\tpropertyIndex = parsedPath.propertyIndex;\n\n\t\tif ( ! targetObject ) {\n\n\t\t\ttargetObject = PropertyBinding.findNode( this.rootNode, parsedPath.nodeName ) || this.rootNode;\n\n\t\t\tthis.node = targetObject;\n\n\t\t}\n\n\t\t// set fail state so we can just 'return' on error\n\t\tthis.getValue = this._getValue_unavailable;\n\t\tthis.setValue = this._setValue_unavailable;\n\n\t\t// ensure there is a value node\n\t\tif ( ! targetObject ) {\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update node for track: ' + this.path + ' but it wasn\\'t found.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( objectName ) {\n\n\t\t\tvar objectIndex = parsedPath.objectIndex;\n\n\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\n\t\t\tswitch ( objectName ) {\n\n\t\t\t\tcase 'materials':\n\n\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! targetObject.material.materials ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject.material.materials;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'bones':\n\n\t\t\t\t\tif ( ! targetObject.skeleton ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t// and convert the integer string to a true integer.\n\n\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\n\n\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\tfor ( var i = 0; i < targetObject.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject[ i ].name === objectIndex ) {\n\n\t\t\t\t\t\t\tobjectIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to objectName of node undefined.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject[ objectName ];\n\n\t\t\t}\n\n\n\t\t\tif ( objectIndex !== undefined ) {\n\n\t\t\t\tif ( targetObject[ objectIndex ] === undefined ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\ttargetObject = targetObject[ objectIndex ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// resolve property\n\t\tvar nodeProperty = targetObject[ propertyName ];\n\n\t\tif ( nodeProperty === undefined ) {\n\n\t\t\tvar nodeName = parsedPath.nodeName;\n\n\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update property for track: ' + nodeName +\n\t\t\t\t'.' + propertyName + ' but it wasn\\'t found.', targetObject );\n\t\t\treturn;\n\n\t\t}\n\n\t\t// determine versioning scheme\n\t\tvar versioning = this.Versioning.None;\n\n\t\tif ( targetObject.needsUpdate !== undefined ) { // material\n\n\t\t\tversioning = this.Versioning.NeedsUpdate;\n\t\t\tthis.targetObject = targetObject;\n\n\t\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\n\n\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n\t\t\tthis.targetObject = targetObject;\n\n\t\t}\n\n\t\t// determine how the property gets bound\n\t\tvar bindingType = this.BindingType.Direct;\n\n\t\tif ( propertyIndex !== undefined ) {\n\n\t\t\t// access a sub element of the property array (only primitives are supported right now)\n\n\t\t\tif ( propertyName === \"morphTargetInfluences\" ) {\n\n\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\n\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\tif ( ! targetObject.geometry ) {\n\n\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tif ( targetObject.geometry.isBufferGeometry ) {\n\n\t\t\t\t\tif ( ! targetObject.geometry.morphAttributes ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var i = 0; i < this.node.geometry.morphAttributes.position.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject.geometry.morphAttributes.position[ i ].name === propertyIndex ) {\n\n\t\t\t\t\t\t\tpropertyIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( ! targetObject.geometry.morphTargets ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphTargets.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var i = 0; i < this.node.geometry.morphTargets.length; i ++ ) {\n\n\t\t\t\t\t\tif ( targetObject.geometry.morphTargets[ i ].name === propertyIndex ) {\n\n\t\t\t\t\t\t\tpropertyIndex = i;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tbindingType = this.BindingType.ArrayElement;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\tthis.propertyIndex = propertyIndex;\n\n\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\n\n\t\t\t// must use copy for Object3D.Euler/Quaternion\n\n\t\t\tbindingType = this.BindingType.HasFromToArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else if ( Array.isArray( nodeProperty ) ) {\n\n\t\t\tbindingType = this.BindingType.EntireArray;\n\n\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t} else {\n\n\t\t\tthis.propertyName = propertyName;\n\n\t\t}\n\n\t\t// select getter / setter\n\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\n\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\n\n\t},\n\n\tunbind: function () {\n\n\t\tthis.node = null;\n\n\t\t// back to the prototype version of getValue / setValue\n\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n\t\tthis.getValue = this._getValue_unbound;\n\t\tthis.setValue = this._setValue_unbound;\n\n\t}\n\n} );\n\n//!\\ DECLARE ALIAS AFTER assign prototype !\nObject.assign( PropertyBinding.prototype, {\n\n\t// initial state of these methods that calls 'bind'\n\t_getValue_unbound: PropertyBinding.prototype.getValue,\n\t_setValue_unbound: PropertyBinding.prototype.setValue,\n\n} );\n\n/**\n *\n * A group of objects that receives a shared animation state.\n *\n * Usage:\n *\n * \t-\tAdd objects you would otherwise pass as 'root' to the\n * \t\tconstructor or the .clipAction method of AnimationMixer.\n *\n * \t-\tInstead pass this object as 'root'.\n *\n * \t-\tYou can also add and remove objects later when the mixer\n * \t\tis running.\n *\n * Note:\n *\n *  \tObjects of this class appear as one object to the mixer,\n *  \tso cache control of the individual objects must be done\n *  \ton the group.\n *\n * Limitation:\n *\n * \t- \tThe animated properties must be compatible among the\n * \t\tall objects in the group.\n *\n *  -\tA single property can either be controlled through a\n *  \ttarget group or directly, but not both.\n *\n * @author tschw\n */\n\nfunction AnimationObjectGroup() {\n\n\tthis.uuid = _Math.generateUUID();\n\n\t// cached objects followed by the active ones\n\tthis._objects = Array.prototype.slice.call( arguments );\n\n\tthis.nCachedObjects_ = 0;\t\t\t// threshold\n\t// note: read by PropertyBinding.Composite\n\n\tvar indices = {};\n\tthis._indicesByUUID = indices;\t\t// for bookkeeping\n\n\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\tindices[ arguments[ i ].uuid ] = i;\n\n\t}\n\n\tthis._paths = [];\t\t\t\t\t// inside: string\n\tthis._parsedPaths = [];\t\t\t\t// inside: { we don't care, here }\n\tthis._bindings = []; \t\t\t\t// inside: Array< PropertyBinding >\n\tthis._bindingsIndicesByPath = {}; \t// inside: indices in these arrays\n\n\tvar scope = this;\n\n\tthis.stats = {\n\n\t\tobjects: {\n\t\t\tget total() {\n\n\t\t\t\treturn scope._objects.length;\n\n\t\t\t},\n\t\t\tget inUse() {\n\n\t\t\t\treturn this.total - scope.nCachedObjects_;\n\n\t\t\t}\n\t\t},\n\t\tget bindingsPerObject() {\n\n\t\t\treturn scope._bindings.length;\n\n\t\t}\n\n\t};\n\n}\n\nObject.assign( AnimationObjectGroup.prototype, {\n\n\tisAnimationObjectGroup: true,\n\n\tadd: function () {\n\n\t\tvar objects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tpaths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tvar object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ],\n\t\t\t\tknownObject = undefined;\n\n\t\t\tif ( index === undefined ) {\n\n\t\t\t\t// unknown object -> add it to the ACTIVE region\n\n\t\t\t\tindex = nObjects ++;\n\t\t\t\tindicesByUUID[ uuid ] = index;\n\t\t\t\tobjects.push( object );\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tbindings[ j ].push( new PropertyBinding( object, paths[ j ], parsedPaths[ j ] ) );\n\n\t\t\t\t}\n\n\t\t\t} else if ( index < nCachedObjects ) {\n\n\t\t\t\tknownObject = objects[ index ];\n\n\t\t\t\t// move existing object to the ACTIVE region\n\n\t\t\t\tvar firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\n\n\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\n\t\t\t\tobjects[ firstActiveIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\n\t\t\t\t\tif ( binding === undefined ) {\n\n\t\t\t\t\t\t// since we do not bother to create new bindings\n\t\t\t\t\t\t// for objects that are cached, the binding may\n\t\t\t\t\t\t// or may not exist\n\n\t\t\t\t\t\tbinding = new PropertyBinding( object, paths[ j ], parsedPaths[ j ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t} else if ( objects[ index ] !== knownObject ) {\n\n\t\t\t\tconsole.error( 'THREE.AnimationObjectGroup: Different objects with the same UUID ' +\n\t\t\t\t\t\t'detected. Clean the caches or recreate your infrastructure when reloading scenes.' );\n\n\t\t\t} // else the object is already where we want it to be\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t},\n\n\tremove: function () {\n\n\t\tvar objects = this._objects,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tvar object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\n\n\t\t\t\t// move existing object into the CACHED region\n\n\t\t\t\tvar lastCachedIndex = nCachedObjects ++,\n\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\n\n\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\n\t\t\t\tobjects[ index ] = firstActiveObject;\n\n\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\n\t\t\t\tobjects[ lastCachedIndex ] = object;\n\n\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\n\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\tbindingsForPath[ index ] = firstActive;\n\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t},\n\n\t// remove & forget\n\tuncache: function () {\n\n\t\tvar objects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = bindings.length;\n\n\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tvar object = arguments[ i ],\n\t\t\t\tuuid = object.uuid,\n\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tdelete indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index < nCachedObjects ) {\n\n\t\t\t\t\t// object is cached, shrink the CACHED region\n\n\t\t\t\t\tvar firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\n\t\t\t\t\t\tlastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t// last cached object takes this object's place\n\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\t// last object goes to the activated slot and pop\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\n\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// object is active, just swap with the last and pop\n\n\t\t\t\t\tvar lastIndex = -- nObjects,\n\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastObject;\n\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tvar bindingsForPath = bindings[ j ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\n\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t}\n\n\t\t\t\t} // cached or active\n\n\t\t\t} // if object is known\n\n\t\t} // for arguments\n\n\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t},\n\n\t// Internal interface used by befriended PropertyBinding.Composite:\n\n\tsubscribe_: function ( path, parsedPath ) {\n\n\t\t// returns an array of bindings for the given path that is changed\n\t\t// according to the contained objects in the group\n\n\t\tvar indicesByPath = this._bindingsIndicesByPath,\n\t\t\tindex = indicesByPath[ path ],\n\t\t\tbindings = this._bindings;\n\n\t\tif ( index !== undefined ) return bindings[ index ];\n\n\t\tvar paths = this._paths,\n\t\t\tparsedPaths = this._parsedPaths,\n\t\t\tobjects = this._objects,\n\t\t\tnObjects = objects.length,\n\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\tbindingsForPath = new Array( nObjects );\n\n\t\tindex = bindings.length;\n\n\t\tindicesByPath[ path ] = index;\n\n\t\tpaths.push( path );\n\t\tparsedPaths.push( parsedPath );\n\t\tbindings.push( bindingsForPath );\n\n\t\tfor ( var i = nCachedObjects, n = objects.length; i !== n; ++ i ) {\n\n\t\t\tvar object = objects[ i ];\n\t\t\tbindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath );\n\n\t\t}\n\n\t\treturn bindingsForPath;\n\n\t},\n\n\tunsubscribe_: function ( path ) {\n\n\t\t// tells the group to forget about a property path and no longer\n\t\t// update the array previously obtained with 'subscribe_'\n\n\t\tvar indicesByPath = this._bindingsIndicesByPath,\n\t\t\tindex = indicesByPath[ path ];\n\n\t\tif ( index !== undefined ) {\n\n\t\t\tvar paths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tlastBindingsIndex = bindings.length - 1,\n\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\n\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\n\n\t\t\tindicesByPath[ lastBindingsPath ] = index;\n\n\t\t\tbindings[ index ] = lastBindings;\n\t\t\tbindings.pop();\n\n\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\n\t\t\tparsedPaths.pop();\n\n\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\n\t\t\tpaths.pop();\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n *\n * Action provided by AnimationMixer for scheduling clip playback on specific\n * objects.\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n *\n */\n\nfunction AnimationAction( mixer, clip, localRoot ) {\n\n\tthis._mixer = mixer;\n\tthis._clip = clip;\n\tthis._localRoot = localRoot || null;\n\n\tvar tracks = clip.tracks,\n\t\tnTracks = tracks.length,\n\t\tinterpolants = new Array( nTracks );\n\n\tvar interpolantSettings = {\n\t\tendingStart: ZeroCurvatureEnding,\n\t\tendingEnd: ZeroCurvatureEnding\n\t};\n\n\tfor ( var i = 0; i !== nTracks; ++ i ) {\n\n\t\tvar interpolant = tracks[ i ].createInterpolant( null );\n\t\tinterpolants[ i ] = interpolant;\n\t\tinterpolant.settings = interpolantSettings;\n\n\t}\n\n\tthis._interpolantSettings = interpolantSettings;\n\n\tthis._interpolants = interpolants;\t// bound by the mixer\n\n\t// inside: PropertyMixer (managed by the mixer)\n\tthis._propertyBindings = new Array( nTracks );\n\n\tthis._cacheIndex = null;\t\t\t// for the memory manager\n\tthis._byClipCacheIndex = null;\t\t// for the memory manager\n\n\tthis._timeScaleInterpolant = null;\n\tthis._weightInterpolant = null;\n\n\tthis.loop = LoopRepeat;\n\tthis._loopCount = - 1;\n\n\t// global mixer time when the action is to be started\n\t// it's set back to 'null' upon start of the action\n\tthis._startTime = null;\n\n\t// scaled local time of the action\n\t// gets clamped or wrapped to 0..clip.duration according to loop\n\tthis.time = 0;\n\n\tthis.timeScale = 1;\n\tthis._effectiveTimeScale = 1;\n\n\tthis.weight = 1;\n\tthis._effectiveWeight = 1;\n\n\tthis.repetitions = Infinity; \t\t// no. of repetitions when looping\n\n\tthis.paused = false;\t\t\t\t// true -> zero effective time scale\n\tthis.enabled = true;\t\t\t\t// false -> zero effective weight\n\n\tthis.clampWhenFinished \t= false;\t// keep feeding the last frame?\n\n\tthis.zeroSlopeAtStart \t= true;\t\t// for smooth interpolation w/o separate\n\tthis.zeroSlopeAtEnd\t\t= true;\t\t// clips for start, loop and end\n\n}\n\nObject.assign( AnimationAction.prototype, {\n\n\t// State & Scheduling\n\n\tplay: function () {\n\n\t\tthis._mixer._activateAction( this );\n\n\t\treturn this;\n\n\t},\n\n\tstop: function () {\n\n\t\tthis._mixer._deactivateAction( this );\n\n\t\treturn this.reset();\n\n\t},\n\n\treset: function () {\n\n\t\tthis.paused = false;\n\t\tthis.enabled = true;\n\n\t\tthis.time = 0;\t\t\t// restart clip\n\t\tthis._loopCount = - 1;\t// forget previous loops\n\t\tthis._startTime = null;\t// forget scheduling\n\n\t\treturn this.stopFading().stopWarping();\n\n\t},\n\n\tisRunning: function () {\n\n\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\n\t\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\n\n\t},\n\n\t// return true when play has been called\n\tisScheduled: function () {\n\n\t\treturn this._mixer._isActiveAction( this );\n\n\t},\n\n\tstartAt: function ( time ) {\n\n\t\tthis._startTime = time;\n\n\t\treturn this;\n\n\t},\n\n\tsetLoop: function ( mode, repetitions ) {\n\n\t\tthis.loop = mode;\n\t\tthis.repetitions = repetitions;\n\n\t\treturn this;\n\n\t},\n\n\t// Weight\n\n\t// set the weight stopping any scheduled fading\n\t// although .enabled = false yields an effective weight of zero, this\n\t// method does *not* change .enabled, because it would be confusing\n\tsetEffectiveWeight: function ( weight ) {\n\n\t\tthis.weight = weight;\n\n\t\t// note: same logic as when updated at runtime\n\t\tthis._effectiveWeight = this.enabled ? weight : 0;\n\n\t\treturn this.stopFading();\n\n\t},\n\n\t// return the weight considering fading and .enabled\n\tgetEffectiveWeight: function () {\n\n\t\treturn this._effectiveWeight;\n\n\t},\n\n\tfadeIn: function ( duration ) {\n\n\t\treturn this._scheduleFading( duration, 0, 1 );\n\n\t},\n\n\tfadeOut: function ( duration ) {\n\n\t\treturn this._scheduleFading( duration, 1, 0 );\n\n\t},\n\n\tcrossFadeFrom: function ( fadeOutAction, duration, warp ) {\n\n\t\tfadeOutAction.fadeOut( duration );\n\t\tthis.fadeIn( duration );\n\n\t\tif ( warp ) {\n\n\t\t\tvar fadeInDuration = this._clip.duration,\n\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\n\n\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\n\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\n\n\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\n\t\t\tthis.warp( endStartRatio, 1.0, duration );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tcrossFadeTo: function ( fadeInAction, duration, warp ) {\n\n\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\n\n\t},\n\n\tstopFading: function () {\n\n\t\tvar weightInterpolant = this._weightInterpolant;\n\n\t\tif ( weightInterpolant !== null ) {\n\n\t\t\tthis._weightInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// Time Scale Control\n\n\t// set the time scale stopping any scheduled warping\n\t// although .paused = true yields an effective time scale of zero, this\n\t// method does *not* change .paused, because it would be confusing\n\tsetEffectiveTimeScale: function ( timeScale ) {\n\n\t\tthis.timeScale = timeScale;\n\t\tthis._effectiveTimeScale = this.paused ? 0 : timeScale;\n\n\t\treturn this.stopWarping();\n\n\t},\n\n\t// return the time scale considering warping and .paused\n\tgetEffectiveTimeScale: function () {\n\n\t\treturn this._effectiveTimeScale;\n\n\t},\n\n\tsetDuration: function ( duration ) {\n\n\t\tthis.timeScale = this._clip.duration / duration;\n\n\t\treturn this.stopWarping();\n\n\t},\n\n\tsyncWith: function ( action ) {\n\n\t\tthis.time = action.time;\n\t\tthis.timeScale = action.timeScale;\n\n\t\treturn this.stopWarping();\n\n\t},\n\n\thalt: function ( duration ) {\n\n\t\treturn this.warp( this._effectiveTimeScale, 0, duration );\n\n\t},\n\n\twarp: function ( startTimeScale, endTimeScale, duration ) {\n\n\t\tvar mixer = this._mixer, now = mixer.time,\n\t\t\tinterpolant = this._timeScaleInterpolant,\n\n\t\t\ttimeScale = this.timeScale;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._timeScaleInterpolant = interpolant;\n\n\t\t}\n\n\t\tvar times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now;\n\t\ttimes[ 1 ] = now + duration;\n\n\t\tvalues[ 0 ] = startTimeScale / timeScale;\n\t\tvalues[ 1 ] = endTimeScale / timeScale;\n\n\t\treturn this;\n\n\t},\n\n\tstopWarping: function () {\n\n\t\tvar timeScaleInterpolant = this._timeScaleInterpolant;\n\n\t\tif ( timeScaleInterpolant !== null ) {\n\n\t\t\tthis._timeScaleInterpolant = null;\n\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// Object Accessors\n\n\tgetMixer: function () {\n\n\t\treturn this._mixer;\n\n\t},\n\n\tgetClip: function () {\n\n\t\treturn this._clip;\n\n\t},\n\n\tgetRoot: function () {\n\n\t\treturn this._localRoot || this._mixer._root;\n\n\t},\n\n\t// Interna\n\n\t_update: function ( time, deltaTime, timeDirection, accuIndex ) {\n\n\t\t// called by the mixer\n\n\t\tif ( ! this.enabled ) {\n\n\t\t\t// call ._updateWeight() to update ._effectiveWeight\n\n\t\t\tthis._updateWeight( time );\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar startTime = this._startTime;\n\n\t\tif ( startTime !== null ) {\n\n\t\t\t// check for scheduled start of action\n\n\t\t\tvar timeRunning = ( time - startTime ) * timeDirection;\n\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\n\n\t\t\t\treturn; // yet to come / don't decide when delta = 0\n\n\t\t\t}\n\n\t\t\t// start\n\n\t\t\tthis._startTime = null; // unschedule\n\t\t\tdeltaTime = timeDirection * timeRunning;\n\n\t\t}\n\n\t\t// apply time scale and advance time\n\n\t\tdeltaTime *= this._updateTimeScale( time );\n\t\tvar clipTime = this._updateTime( deltaTime );\n\n\t\t// note: _updateTime may disable the action resulting in\n\t\t// an effective weight of 0\n\n\t\tvar weight = this._updateWeight( time );\n\n\t\tif ( weight > 0 ) {\n\n\t\t\tvar interpolants = this._interpolants;\n\t\t\tvar propertyMixers = this._propertyBindings;\n\n\t\t\tfor ( var j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\tpropertyMixers[ j ].accumulate( accuIndex, weight );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t_updateWeight: function ( time ) {\n\n\t\tvar weight = 0;\n\n\t\tif ( this.enabled ) {\n\n\t\t\tweight = this.weight;\n\t\t\tvar interpolant = this._weightInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\tweight *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopFading();\n\n\t\t\t\t\tif ( interpolantValue === 0 ) {\n\n\t\t\t\t\t\t// faded out, disable\n\t\t\t\t\t\tthis.enabled = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveWeight = weight;\n\t\treturn weight;\n\n\t},\n\n\t_updateTimeScale: function ( time ) {\n\n\t\tvar timeScale = 0;\n\n\t\tif ( ! this.paused ) {\n\n\t\t\ttimeScale = this.timeScale;\n\n\t\t\tvar interpolant = this._timeScaleInterpolant;\n\n\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\ttimeScale *= interpolantValue;\n\n\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\tthis.stopWarping();\n\n\t\t\t\t\tif ( timeScale === 0 ) {\n\n\t\t\t\t\t\t// motion has halted, pause\n\t\t\t\t\t\tthis.paused = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// warp done - apply final time scale\n\t\t\t\t\t\tthis.timeScale = timeScale;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis._effectiveTimeScale = timeScale;\n\t\treturn timeScale;\n\n\t},\n\n\t_updateTime: function ( deltaTime ) {\n\n\t\tvar time = this.time + deltaTime;\n\n\t\tif ( deltaTime === 0 ) return time;\n\n\t\tvar duration = this._clip.duration,\n\n\t\t\tloop = this.loop,\n\t\t\tloopCount = this._loopCount;\n\n\t\tif ( loop === LoopOnce ) {\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tthis._loopCount = 0;\n\t\t\t\tthis._setEndings( true, true, false );\n\n\t\t\t}\n\n\t\t\thandle_stop: {\n\n\t\t\t\tif ( time >= duration ) {\n\n\t\t\t\t\ttime = duration;\n\n\t\t\t\t} else if ( time < 0 ) {\n\n\t\t\t\t\ttime = 0;\n\n\t\t\t\t} else break handle_stop;\n\n\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\telse this.enabled = false;\n\n\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\tdirection: deltaTime < 0 ? - 1 : 1\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t} else { // repetitive Repeat or PingPong\n\n\t\t\tvar pingPong = ( loop === LoopPingPong );\n\n\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t// just started\n\n\t\t\t\tif ( deltaTime >= 0 ) {\n\n\t\t\t\t\tloopCount = 0;\n\n\t\t\t\t\tthis._setEndings( true, this.repetitions === 0, pingPong );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// when looping in reverse direction, the initial\n\t\t\t\t\t// transition through zero counts as a repetition,\n\t\t\t\t\t// so leave loopCount at -1\n\n\t\t\t\t\tthis._setEndings( this.repetitions === 0, true, pingPong );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( time >= duration || time < 0 ) {\n\n\t\t\t\t// wrap around\n\n\t\t\t\tvar loopDelta = Math.floor( time / duration ); // signed\n\t\t\t\ttime -= duration * loopDelta;\n\n\t\t\t\tloopCount += Math.abs( loopDelta );\n\n\t\t\t\tvar pending = this.repetitions - loopCount;\n\n\t\t\t\tif ( pending < 0 ) {\n\n\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\n\n\t\t\t\t\tif ( this.clampWhenFinished ) this.paused = true;\n\t\t\t\t\telse this.enabled = false;\n\n\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : - 1\n\t\t\t\t\t} );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// keep running\n\n\t\t\t\t\tif ( pending === 0 ) {\n\n\t\t\t\t\t\t// entering the last round\n\n\t\t\t\t\t\tvar atStart = deltaTime < 0;\n\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._loopCount = loopCount;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\n\n\t\t\t\t// invert time for the \"pong round\"\n\n\t\t\t\tthis.time = time;\n\t\t\t\treturn duration - time;\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.time = time;\n\t\treturn time;\n\n\t},\n\n\t_setEndings: function ( atStart, atEnd, pingPong ) {\n\n\t\tvar settings = this._interpolantSettings;\n\n\t\tif ( pingPong ) {\n\n\t\t\tsettings.endingStart \t= ZeroSlopeEnding;\n\t\t\tsettings.endingEnd\t\t= ZeroSlopeEnding;\n\n\t\t} else {\n\n\t\t\t// assuming for LoopOnce atStart == atEnd == true\n\n\t\t\tif ( atStart ) {\n\n\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingStart = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t\tif ( atEnd ) {\n\n\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t} else {\n\n\t\t\t\tsettings.endingEnd \t = WrapAroundEnding;\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t_scheduleFading: function ( duration, weightNow, weightThen ) {\n\n\t\tvar mixer = this._mixer, now = mixer.time,\n\t\t\tinterpolant = this._weightInterpolant;\n\n\t\tif ( interpolant === null ) {\n\n\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\tthis._weightInterpolant = interpolant;\n\n\t\t}\n\n\t\tvar times = interpolant.parameterPositions,\n\t\t\tvalues = interpolant.sampleValues;\n\n\t\ttimes[ 0 ] = now; \t\t\t\tvalues[ 0 ] = weightNow;\n\t\ttimes[ 1 ] = now + duration;\tvalues[ 1 ] = weightThen;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n *\n * Player for AnimationClips.\n *\n *\n * @author Ben Houston / http://clara.io/\n * @author David Sarno / http://lighthaus.us/\n * @author tschw\n */\n\nfunction AnimationMixer( root ) {\n\n\tthis._root = root;\n\tthis._initMemoryManager();\n\tthis._accuIndex = 0;\n\n\tthis.time = 0;\n\n\tthis.timeScale = 1.0;\n\n}\n\nObject.assign( AnimationMixer.prototype, EventDispatcher.prototype, {\n\n\t_bindAction: function ( action, prototypeAction ) {\n\n\t\tvar root = action._localRoot || this._root,\n\t\t\ttracks = action._clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tbindings = action._propertyBindings,\n\t\t\tinterpolants = action._interpolants,\n\t\t\trootUuid = root.uuid,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingsByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingsByName === undefined ) {\n\n\t\t\tbindingsByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\n\n\t\t}\n\n\t\tfor ( var i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tvar track = tracks[ i ],\n\t\t\t\ttrackName = track.name,\n\t\t\t\tbinding = bindingsByName[ trackName ];\n\n\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t} else {\n\n\t\t\t\tbinding = bindings[ i ];\n\n\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\t// existing binding, make sure the cache knows\n\n\t\t\t\t\tif ( binding._cacheIndex === null ) {\n\n\t\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tvar path = prototypeAction && prototypeAction.\n\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\n\n\t\t\t\tbinding = new PropertyMixer(\n\t\t\t\t\tPropertyBinding.create( root, trackName, path ),\n\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\n\n\t\t\t\t++ binding.referenceCount;\n\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t}\n\n\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\n\n\t\t}\n\n\t},\n\n\t_activateAction: function ( action ) {\n\n\t\tif ( ! this._isActiveAction( action ) ) {\n\n\t\t\tif ( action._cacheIndex === null ) {\n\n\t\t\t\t// this action has been forgotten by the cache, but the user\n\t\t\t\t// appears to be still using it -> rebind\n\n\t\t\t\tvar rootUuid = ( action._localRoot || this._root ).uuid,\n\t\t\t\t\tclipUuid = action._clip.uuid,\n\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\t\tthis._bindAction( action,\n\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\n\n\t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\n\n\t\t\t}\n\n\t\t\tvar bindings = action._propertyBindings;\n\n\t\t\t// increment reference counts / sort out state\n\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tvar binding = bindings[ i ];\n\n\t\t\t\tif ( binding.useCount ++ === 0 ) {\n\n\t\t\t\t\tthis._lendBinding( binding );\n\t\t\t\t\tbinding.saveOriginalState();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._lendAction( action );\n\n\t\t}\n\n\t},\n\n\t_deactivateAction: function ( action ) {\n\n\t\tif ( this._isActiveAction( action ) ) {\n\n\t\t\tvar bindings = action._propertyBindings;\n\n\t\t\t// decrement reference counts / sort out state\n\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tvar binding = bindings[ i ];\n\n\t\t\t\tif ( -- binding.useCount === 0 ) {\n\n\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\tthis._takeBackBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._takeBackAction( action );\n\n\t\t}\n\n\t},\n\n\t// Memory manager\n\n\t_initMemoryManager: function () {\n\n\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\n\t\tthis._nActiveActions = 0;\n\n\t\tthis._actionsByClip = {};\n\t\t// inside:\n\t\t// {\n\t\t// \t\tknownActions: Array< AnimationAction >\t- used as prototypes\n\t\t// \t\tactionByRoot: AnimationAction\t\t\t- lookup\n\t\t// }\n\n\n\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\n\t\tthis._nActiveBindings = 0;\n\n\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n\n\t\tthis._controlInterpolants = []; // same game as above\n\t\tthis._nActiveControlInterpolants = 0;\n\n\t\tvar scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tactions: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._actions.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveActions;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tbindings: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._bindings.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveBindings;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tcontrolInterpolants: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._controlInterpolants.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn scope._nActiveControlInterpolants;\n\n\t\t\t\t}\n\t\t\t}\n\n\t\t};\n\n\t},\n\n\t// Memory management for AnimationAction objects\n\n\t_isActiveAction: function ( action ) {\n\n\t\tvar index = action._cacheIndex;\n\t\treturn index !== null && index < this._nActiveActions;\n\n\t},\n\n\t_addInactiveAction: function ( action, clipUuid, rootUuid ) {\n\n\t\tvar actions = this._actions,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip === undefined ) {\n\n\t\t\tactionsForClip = {\n\n\t\t\t\tknownActions: [ action ],\n\t\t\t\tactionByRoot: {}\n\n\t\t\t};\n\n\t\t\taction._byClipCacheIndex = 0;\n\n\t\t\tactionsByClip[ clipUuid ] = actionsForClip;\n\n\t\t} else {\n\n\t\t\tvar knownActions = actionsForClip.knownActions;\n\n\t\t\taction._byClipCacheIndex = knownActions.length;\n\t\t\tknownActions.push( action );\n\n\t\t}\n\n\t\taction._cacheIndex = actions.length;\n\t\tactions.push( action );\n\n\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\n\n\t},\n\n\t_removeInactiveAction: function ( action ) {\n\n\t\tvar actions = this._actions,\n\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\n\t\t\tcacheIndex = action._cacheIndex;\n\n\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\tactions.pop();\n\n\t\taction._cacheIndex = null;\n\n\n\t\tvar clipUuid = action._clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ],\n\t\t\tknownActionsForClip = actionsForClip.knownActions,\n\n\t\t\tlastKnownAction =\n\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\n\n\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\n\n\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\n\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\n\t\tknownActionsForClip.pop();\n\n\t\taction._byClipCacheIndex = null;\n\n\n\t\tvar actionByRoot = actionsForClip.actionByRoot,\n\t\t\trootUuid = ( action._localRoot || this._root ).uuid;\n\n\t\tdelete actionByRoot[ rootUuid ];\n\n\t\tif ( knownActionsForClip.length === 0 ) {\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t\tthis._removeInactiveBindingsForAction( action );\n\n\t},\n\n\t_removeInactiveBindingsForAction: function ( action ) {\n\n\t\tvar bindings = action._propertyBindings;\n\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\tvar binding = bindings[ i ];\n\n\t\t\tif ( -- binding.referenceCount === 0 ) {\n\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t_lendAction: function ( action ) {\n\n\t\t// [ active actions |  inactive actions  ]\n\t\t// [  active actions >| inactive actions ]\n\t\t//                 s        a\n\t\t//                  <-swap->\n\t\t//                 a        s\n\n\t\tvar actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveActions ++,\n\n\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\n\n\t\taction._cacheIndex = lastActiveIndex;\n\t\tactions[ lastActiveIndex ] = action;\n\n\t\tfirstInactiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = firstInactiveAction;\n\n\t},\n\n\t_takeBackAction: function ( action ) {\n\n\t\t// [  active actions  | inactive actions ]\n\t\t// [ active actions |< inactive actions  ]\n\t\t//        a        s\n\t\t//         <-swap->\n\t\t//        s        a\n\n\t\tvar actions = this._actions,\n\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveActions,\n\n\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\n\n\t\taction._cacheIndex = firstInactiveIndex;\n\t\tactions[ firstInactiveIndex ] = action;\n\n\t\tlastActiveAction._cacheIndex = prevIndex;\n\t\tactions[ prevIndex ] = lastActiveAction;\n\n\t},\n\n\t// Memory management for PropertyMixer objects\n\n\t_addInactiveBinding: function ( binding, rootUuid, trackName ) {\n\n\t\tvar bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\tbindings = this._bindings;\n\n\t\tif ( bindingByName === undefined ) {\n\n\t\t\tbindingByName = {};\n\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\n\n\t\t}\n\n\t\tbindingByName[ trackName ] = binding;\n\n\t\tbinding._cacheIndex = bindings.length;\n\t\tbindings.push( binding );\n\n\t},\n\n\t_removeInactiveBinding: function ( binding ) {\n\n\t\tvar bindings = this._bindings,\n\t\t\tpropBinding = binding.binding,\n\t\t\trootUuid = propBinding.rootNode.uuid,\n\t\t\ttrackName = propBinding.path,\n\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\n\t\t\tcacheIndex = binding._cacheIndex;\n\n\t\tlastInactiveBinding._cacheIndex = cacheIndex;\n\t\tbindings[ cacheIndex ] = lastInactiveBinding;\n\t\tbindings.pop();\n\n\t\tdelete bindingByName[ trackName ];\n\n\t\tremove_empty_map: {\n\n\t\t\tfor ( var _ in bindingByName ) break remove_empty_map; // eslint-disable-line no-unused-vars\n\n\t\t\tdelete bindingsByRoot[ rootUuid ];\n\n\t\t}\n\n\t},\n\n\t_lendBinding: function ( binding ) {\n\n\t\tvar bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tlastActiveIndex = this._nActiveBindings ++,\n\n\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\n\n\t\tbinding._cacheIndex = lastActiveIndex;\n\t\tbindings[ lastActiveIndex ] = binding;\n\n\t\tfirstInactiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = firstInactiveBinding;\n\n\t},\n\n\t_takeBackBinding: function ( binding ) {\n\n\t\tvar bindings = this._bindings,\n\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\n\n\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\n\n\t\tbinding._cacheIndex = firstInactiveIndex;\n\t\tbindings[ firstInactiveIndex ] = binding;\n\n\t\tlastActiveBinding._cacheIndex = prevIndex;\n\t\tbindings[ prevIndex ] = lastActiveBinding;\n\n\t},\n\n\n\t// Memory management of Interpolants for weight and time scale\n\n\t_lendControlInterpolant: function () {\n\n\t\tvar interpolants = this._controlInterpolants,\n\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++,\n\t\t\tinterpolant = interpolants[ lastActiveIndex ];\n\n\t\tif ( interpolant === undefined ) {\n\n\t\t\tinterpolant = new LinearInterpolant(\n\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\n\t\t\t\t1, this._controlInterpolantsResultBuffer );\n\n\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\n\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\n\n\t\t}\n\n\t\treturn interpolant;\n\n\t},\n\n\t_takeBackControlInterpolant: function ( interpolant ) {\n\n\t\tvar interpolants = this._controlInterpolants,\n\t\t\tprevIndex = interpolant.__cacheIndex,\n\n\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\n\n\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\n\n\t\tinterpolant.__cacheIndex = firstInactiveIndex;\n\t\tinterpolants[ firstInactiveIndex ] = interpolant;\n\n\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\n\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\n\n\t},\n\n\t_controlInterpolantsResultBuffer: new Float32Array( 1 ),\n\n\t// return an action for a clip optionally using a custom root target\n\t// object (this method allocates a lot of dynamic memory in case a\n\t// previously unknown clip/root combination is specified)\n\tclipAction: function ( clip, optionalRoot ) {\n\n\t\tvar root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid,\n\n\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\tclipUuid = clipObject !== null ? clipObject.uuid : clip,\n\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ],\n\t\t\tprototypeAction = null;\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\tvar existingAction =\n\t\t\t\t\tactionsForClip.actionByRoot[ rootUuid ];\n\n\t\t\tif ( existingAction !== undefined ) {\n\n\t\t\t\treturn existingAction;\n\n\t\t\t}\n\n\t\t\t// we know the clip, so we don't have to parse all\n\t\t\t// the bindings again but can just copy\n\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\n\n\t\t\t// also, take the clip from the prototype action\n\t\t\tif ( clipObject === null )\n\t\t\t\tclipObject = prototypeAction._clip;\n\n\t\t}\n\n\t\t// clip must be known when specified via string\n\t\tif ( clipObject === null ) return null;\n\n\t\t// allocate all resources required to run it\n\t\tvar newAction = new AnimationAction( this, clipObject, optionalRoot );\n\n\t\tthis._bindAction( newAction, prototypeAction );\n\n\t\t// and make the action known to the memory manager\n\t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\n\n\t\treturn newAction;\n\n\t},\n\n\t// get an existing action\n\texistingAction: function ( clip, optionalRoot ) {\n\n\t\tvar root = optionalRoot || this._root,\n\t\t\trootUuid = root.uuid,\n\n\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\n\n\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\n\n\t\t}\n\n\t\treturn null;\n\n\t},\n\n\t// deactivates all previously scheduled actions\n\tstopAllAction: function () {\n\n\t\tvar actions = this._actions,\n\t\t\tnActions = this._nActiveActions,\n\t\t\tbindings = this._bindings,\n\t\t\tnBindings = this._nActiveBindings;\n\n\t\tthis._nActiveActions = 0;\n\t\tthis._nActiveBindings = 0;\n\n\t\tfor ( var i = 0; i !== nActions; ++ i ) {\n\n\t\t\tactions[ i ].reset();\n\n\t\t}\n\n\t\tfor ( var i = 0; i !== nBindings; ++ i ) {\n\n\t\t\tbindings[ i ].useCount = 0;\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// advance the time and update apply the animation\n\tupdate: function ( deltaTime ) {\n\n\t\tdeltaTime *= this.timeScale;\n\n\t\tvar actions = this._actions,\n\t\t\tnActions = this._nActiveActions,\n\n\t\t\ttime = this.time += deltaTime,\n\t\t\ttimeDirection = Math.sign( deltaTime ),\n\n\t\t\taccuIndex = this._accuIndex ^= 1;\n\n\t\t// run active actions\n\n\t\tfor ( var i = 0; i !== nActions; ++ i ) {\n\n\t\t\tvar action = actions[ i ];\n\n\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\n\n\t\t}\n\n\t\t// update scene graph\n\n\t\tvar bindings = this._bindings,\n\t\t\tnBindings = this._nActiveBindings;\n\n\t\tfor ( var i = 0; i !== nBindings; ++ i ) {\n\n\t\t\tbindings[ i ].apply( accuIndex );\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\t// return this mixer's root target object\n\tgetRoot: function () {\n\n\t\treturn this._root;\n\n\t},\n\n\t// free all resources specific to a particular clip\n\tuncacheClip: function ( clip ) {\n\n\t\tvar actions = this._actions,\n\t\t\tclipUuid = clip.uuid,\n\t\t\tactionsByClip = this._actionsByClip,\n\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t// note: just calling _removeInactiveAction would mess up the\n\t\t\t// iteration state and also require updating the state we can\n\t\t\t// just throw away\n\n\t\t\tvar actionsToRemove = actionsForClip.knownActions;\n\n\t\t\tfor ( var i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\n\n\t\t\t\tvar action = actionsToRemove[ i ];\n\n\t\t\t\tthis._deactivateAction( action );\n\n\t\t\t\tvar cacheIndex = action._cacheIndex,\n\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\n\n\t\t\t\taction._cacheIndex = null;\n\t\t\t\taction._byClipCacheIndex = null;\n\n\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\t\tactions.pop();\n\n\t\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t\t}\n\n\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t}\n\n\t},\n\n\t// free all resources specific to a particular root target object\n\tuncacheRoot: function ( root ) {\n\n\t\tvar rootUuid = root.uuid,\n\t\t\tactionsByClip = this._actionsByClip;\n\n\t\tfor ( var clipUuid in actionsByClip ) {\n\n\t\t\tvar actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\n\t\t\t\taction = actionByRoot[ rootUuid ];\n\n\t\t\tif ( action !== undefined ) {\n\n\t\t\t\tthis._deactivateAction( action );\n\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar bindingsByRoot = this._bindingsByRootAndName,\n\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\n\n\t\tif ( bindingByName !== undefined ) {\n\n\t\t\tfor ( var trackName in bindingByName ) {\n\n\t\t\t\tvar binding = bindingByName[ trackName ];\n\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t}\n\n\t\t}\n\n\t},\n\n\t// remove a targeted clip from the cache\n\tuncacheAction: function ( clip, optionalRoot ) {\n\n\t\tvar action = this.existingAction( clip, optionalRoot );\n\n\t\tif ( action !== null ) {\n\n\t\t\tthis._deactivateAction( action );\n\t\t\tthis._removeInactiveAction( action );\n\n\t\t}\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction Uniform( value ) {\n\n\tif ( typeof value === 'string' ) {\n\n\t\tconsole.warn( 'THREE.Uniform: Type parameter is no longer needed.' );\n\t\tvalue = arguments[ 1 ];\n\n\t}\n\n\tthis.value = value;\n\n}\n\nUniform.prototype.clone = function () {\n\n\treturn new Uniform( this.value.clone === undefined ? this.value : this.value.clone() );\n\n};\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InstancedBufferGeometry() {\n\n\tBufferGeometry.call( this );\n\n\tthis.type = 'InstancedBufferGeometry';\n\tthis.maxInstancedCount = undefined;\n\n}\n\nInstancedBufferGeometry.prototype = Object.assign( Object.create( BufferGeometry.prototype ), {\n\n\tconstructor: InstancedBufferGeometry,\n\n\tisInstancedBufferGeometry: true,\n\n\tcopy: function ( source ) {\n\n\t\tBufferGeometry.prototype.copy.call( this, source );\n\n\t\tthis.maxInstancedCount = source.maxInstancedCount;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t}\n\n} );\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InterleavedBufferAttribute( interleavedBuffer, itemSize, offset, normalized ) {\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.data = interleavedBuffer;\n\tthis.itemSize = itemSize;\n\tthis.offset = offset;\n\n\tthis.normalized = normalized === true;\n\n}\n\nObject.defineProperties( InterleavedBufferAttribute.prototype, {\n\n\tcount: {\n\n\t\tget: function () {\n\n\t\t\treturn this.data.count;\n\n\t\t}\n\n\t},\n\n\tarray: {\n\n\t\tget: function () {\n\n\t\t\treturn this.data.array;\n\n\t\t}\n\n\t}\n\n} );\n\nObject.assign( InterleavedBufferAttribute.prototype, {\n\n\tisInterleavedBufferAttribute: true,\n\n\tsetX: function ( index, x ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\n\n\t\treturn this;\n\n\t},\n\n\tsetY: function ( index, y ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetZ: function ( index, z ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetW: function ( index, w ) {\n\n\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\n\n\t\treturn this;\n\n\t},\n\n\tgetX: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset ];\n\n\t},\n\n\tgetY: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 1 ];\n\n\t},\n\n\tgetZ: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 2 ];\n\n\t},\n\n\tgetW: function ( index ) {\n\n\t\treturn this.data.array[ index * this.data.stride + this.offset + 3 ];\n\n\t},\n\n\tsetXY: function ( index, x, y ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZ: function ( index, x, y, z ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\n\t\treturn this;\n\n\t},\n\n\tsetXYZW: function ( index, x, y, z, w ) {\n\n\t\tindex = index * this.data.stride + this.offset;\n\n\t\tthis.data.array[ index + 0 ] = x;\n\t\tthis.data.array[ index + 1 ] = y;\n\t\tthis.data.array[ index + 2 ] = z;\n\t\tthis.data.array[ index + 3 ] = w;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InterleavedBuffer( array, stride ) {\n\n\tthis.uuid = _Math.generateUUID();\n\n\tthis.array = array;\n\tthis.stride = stride;\n\tthis.count = array !== undefined ? array.length / stride : 0;\n\n\tthis.dynamic = false;\n\tthis.updateRange = { offset: 0, count: - 1 };\n\n\tthis.onUploadCallback = function () {};\n\n\tthis.version = 0;\n\n}\n\nObject.defineProperty( InterleavedBuffer.prototype, 'needsUpdate', {\n\n\tset: function ( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n} );\n\nObject.assign( InterleavedBuffer.prototype, {\n\n\tisInterleavedBuffer: true,\n\n\tsetArray: function ( array ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.count = array !== undefined ? array.length / this.stride : 0;\n\t\tthis.array = array;\n\n\t},\n\n\tsetDynamic: function ( value ) {\n\n\t\tthis.dynamic = value;\n\n\t\treturn this;\n\n\t},\n\n\tcopy: function ( source ) {\n\n\t\tthis.array = new source.array.constructor( source.array );\n\t\tthis.count = source.count;\n\t\tthis.stride = source.stride;\n\t\tthis.dynamic = source.dynamic;\n\n\t\treturn this;\n\n\t},\n\n\tcopyAt: function ( index1, attribute, index2 ) {\n\n\t\tindex1 *= this.stride;\n\t\tindex2 *= attribute.stride;\n\n\t\tfor ( var i = 0, l = this.stride; i < l; i ++ ) {\n\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t}\n\n\t\treturn this;\n\n\t},\n\n\tset: function ( value, offset ) {\n\n\t\tif ( offset === undefined ) offset = 0;\n\n\t\tthis.array.set( value, offset );\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tonUpload: function ( callback ) {\n\n\t\tthis.onUploadCallback = callback;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InstancedInterleavedBuffer( array, stride, meshPerAttribute ) {\n\n\tInterleavedBuffer.call( this, array, stride );\n\n\tthis.meshPerAttribute = meshPerAttribute || 1;\n\n}\n\nInstancedInterleavedBuffer.prototype = Object.assign( Object.create( InterleavedBuffer.prototype ), {\n\n\tconstructor: InstancedInterleavedBuffer,\n\n\tisInstancedInterleavedBuffer: true,\n\n\tcopy: function ( source ) {\n\n\t\tInterleavedBuffer.prototype.copy.call( this, source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author benaadams / https://twitter.com/ben_a_adams\n */\n\nfunction InstancedBufferAttribute( array, itemSize, meshPerAttribute ) {\n\n\tBufferAttribute.call( this, array, itemSize );\n\n\tthis.meshPerAttribute = meshPerAttribute || 1;\n\n}\n\nInstancedBufferAttribute.prototype = Object.assign( Object.create( BufferAttribute.prototype ), {\n\n\tconstructor: InstancedBufferAttribute,\n\n\tisInstancedBufferAttribute: true,\n\n\tcopy: function ( source ) {\n\n\t\tBufferAttribute.prototype.copy.call( this, source );\n\n\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author bhouston / http://clara.io/\n * @author stephomi / http://stephaneginier.com/\n */\n\nfunction Raycaster( origin, direction, near, far ) {\n\n\tthis.ray = new Ray( origin, direction );\n\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\tthis.near = near || 0;\n\tthis.far = far || Infinity;\n\n\tthis.params = {\n\t\tMesh: {},\n\t\tLine: {},\n\t\tLOD: {},\n\t\tPoints: { threshold: 1 },\n\t\tSprite: {}\n\t};\n\n\tObject.defineProperties( this.params, {\n\t\tPointCloud: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Raycaster: params.PointCloud has been renamed to params.Points.' );\n\t\t\t\treturn this.Points;\n\n\t\t\t}\n\t\t}\n\t} );\n\n}\n\nfunction ascSort( a, b ) {\n\n\treturn a.distance - b.distance;\n\n}\n\nfunction intersectObject( object, raycaster, intersects, recursive ) {\n\n\tif ( object.visible === false ) return;\n\n\tobject.raycast( raycaster, intersects );\n\n\tif ( recursive === true ) {\n\n\t\tvar children = object.children;\n\n\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\n\n\t\t}\n\n\t}\n\n}\n\nObject.assign( Raycaster.prototype, {\n\n\tlinePrecision: 1,\n\n\tset: function ( origin, direction ) {\n\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.ray.set( origin, direction );\n\n\t},\n\n\tsetFromCamera: function ( coords, camera ) {\n\n\t\tif ( ( camera && camera.isPerspectiveCamera ) ) {\n\n\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\n\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\n\n\t\t} else if ( ( camera && camera.isOrthographicCamera ) ) {\n\n\t\t\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\n\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\n\n\t\t} else {\n\n\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type.' );\n\n\t\t}\n\n\t},\n\n\tintersectObject: function ( object, recursive ) {\n\n\t\tvar intersects = [];\n\n\t\tintersectObject( object, this, intersects, recursive );\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t},\n\n\tintersectObjects: function ( objects, recursive ) {\n\n\t\tvar intersects = [];\n\n\t\tif ( Array.isArray( objects ) === false ) {\n\n\t\t\tconsole.warn( 'THREE.Raycaster.intersectObjects: objects is not an Array.' );\n\t\t\treturn intersects;\n\n\t\t}\n\n\t\tfor ( var i = 0, l = objects.length; i < l; i ++ ) {\n\n\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\n\n\t\t}\n\n\t\tintersects.sort( ascSort );\n\n\t\treturn intersects;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction Clock( autoStart ) {\n\n\tthis.autoStart = ( autoStart !== undefined ) ? autoStart : true;\n\n\tthis.startTime = 0;\n\tthis.oldTime = 0;\n\tthis.elapsedTime = 0;\n\n\tthis.running = false;\n\n}\n\nObject.assign( Clock.prototype, {\n\n\tstart: function () {\n\n\t\tthis.startTime = ( typeof performance === 'undefined' ? Date : performance ).now(); // see #10732\n\n\t\tthis.oldTime = this.startTime;\n\t\tthis.elapsedTime = 0;\n\t\tthis.running = true;\n\n\t},\n\n\tstop: function () {\n\n\t\tthis.getElapsedTime();\n\t\tthis.running = false;\n\t\tthis.autoStart = false;\n\n\t},\n\n\tgetElapsedTime: function () {\n\n\t\tthis.getDelta();\n\t\treturn this.elapsedTime;\n\n\t},\n\n\tgetDelta: function () {\n\n\t\tvar diff = 0;\n\n\t\tif ( this.autoStart && ! this.running ) {\n\n\t\t\tthis.start();\n\t\t\treturn 0;\n\n\t\t}\n\n\t\tif ( this.running ) {\n\n\t\t\tvar newTime = ( typeof performance === 'undefined' ? Date : performance ).now();\n\n\t\t\tdiff = ( newTime - this.oldTime ) / 1000;\n\t\t\tthis.oldTime = newTime;\n\n\t\t\tthis.elapsedTime += diff;\n\n\t\t}\n\n\t\treturn diff;\n\n\t}\n\n} );\n\n/**\n * @author bhouston / http://clara.io\n * @author WestLangley / http://github.com/WestLangley\n *\n * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n *\n * The poles (phi) are at the positive and negative y axis.\n * The equator starts at positive z.\n */\n\nfunction Spherical( radius, phi, theta ) {\n\n\tthis.radius = ( radius !== undefined ) ? radius : 1.0;\n\tthis.phi = ( phi !== undefined ) ? phi : 0; // up / down towards top and bottom pole\n\tthis.theta = ( theta !== undefined ) ? theta : 0; // around the equator of the sphere\n\n\treturn this;\n\n}\n\nObject.assign( Spherical.prototype, {\n\n\tset: function ( radius, phi, theta ) {\n\n\t\tthis.radius = radius;\n\t\tthis.phi = phi;\n\t\tthis.theta = theta;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.phi = other.phi;\n\t\tthis.theta = other.theta;\n\n\t\treturn this;\n\n\t},\n\n\t// restrict phi to be betwee EPS and PI-EPS\n\tmakeSafe: function () {\n\n\t\tvar EPS = 0.000001;\n\t\tthis.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\n\n\t\treturn this;\n\n\t},\n\n\tsetFromVector3: function ( vec3 ) {\n\n\t\tthis.radius = vec3.length();\n\n\t\tif ( this.radius === 0 ) {\n\n\t\t\tthis.theta = 0;\n\t\t\tthis.phi = 0;\n\n\t\t} else {\n\n\t\t\tthis.theta = Math.atan2( vec3.x, vec3.z ); // equator angle around y-up axis\n\t\t\tthis.phi = Math.acos( _Math.clamp( vec3.y / this.radius, - 1, 1 ) ); // polar angle\n\n\t\t}\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author Mugen87 / https://github.com/Mugen87\n *\n * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n *\n */\n\nfunction Cylindrical( radius, theta, y ) {\n\n\tthis.radius = ( radius !== undefined ) ? radius : 1.0; // distance from the origin to a point in the x-z plane\n\tthis.theta = ( theta !== undefined ) ? theta : 0; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\tthis.y = ( y !== undefined ) ? y : 0; // height above the x-z plane\n\n\treturn this;\n\n}\n\nObject.assign( Cylindrical.prototype, {\n\n\tset: function ( radius, theta, y ) {\n\n\t\tthis.radius = radius;\n\t\tthis.theta = theta;\n\t\tthis.y = y;\n\n\t\treturn this;\n\n\t},\n\n\tclone: function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t},\n\n\tcopy: function ( other ) {\n\n\t\tthis.radius = other.radius;\n\t\tthis.theta = other.theta;\n\t\tthis.y = other.y;\n\n\t\treturn this;\n\n\t},\n\n\tsetFromVector3: function ( vec3 ) {\n\n\t\tthis.radius = Math.sqrt( vec3.x * vec3.x + vec3.z * vec3.z );\n\t\tthis.theta = Math.atan2( vec3.x, vec3.z );\n\t\tthis.y = vec3.y;\n\n\t\treturn this;\n\n\t}\n\n} );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n */\n\nfunction ImmediateRenderObject( material ) {\n\n\tObject3D.call( this );\n\n\tthis.material = material;\n\tthis.render = function ( /* renderCallback */ ) {};\n\n}\n\nImmediateRenderObject.prototype = Object.create( Object3D.prototype );\nImmediateRenderObject.prototype.constructor = ImmediateRenderObject;\n\nImmediateRenderObject.prototype.isImmediateRenderObject = true;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction VertexNormalsHelper( object, size, hex, linewidth ) {\n\n\tthis.object = object;\n\n\tthis.size = ( size !== undefined ) ? size : 1;\n\n\tvar color = ( hex !== undefined ) ? hex : 0xff0000;\n\n\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\n\n\t//\n\n\tvar nNormals = 0;\n\n\tvar objGeometry = this.object.geometry;\n\n\tif ( objGeometry && objGeometry.isGeometry ) {\n\n\t\tnNormals = objGeometry.faces.length * 3;\n\n\t} else if ( objGeometry && objGeometry.isBufferGeometry ) {\n\n\t\tnNormals = objGeometry.attributes.normal.count;\n\n\t}\n\n\t//\n\n\tvar geometry = new BufferGeometry();\n\n\tvar positions = new Float32BufferAttribute( nNormals * 2 * 3, 3 );\n\n\tgeometry.addAttribute( 'position', positions );\n\n\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color, linewidth: width } ) );\n\n\t//\n\n\tthis.matrixAutoUpdate = false;\n\n\tthis.update();\n\n}\n\nVertexNormalsHelper.prototype = Object.create( LineSegments.prototype );\nVertexNormalsHelper.prototype.constructor = VertexNormalsHelper;\n\nVertexNormalsHelper.prototype.update = ( function () {\n\n\tvar v1 = new Vector3();\n\tvar v2 = new Vector3();\n\tvar normalMatrix = new Matrix3();\n\n\treturn function update() {\n\n\t\tvar keys = [ 'a', 'b', 'c' ];\n\n\t\tthis.object.updateMatrixWorld( true );\n\n\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\n\n\t\tvar matrixWorld = this.object.matrixWorld;\n\n\t\tvar position = this.geometry.attributes.position;\n\n\t\t//\n\n\t\tvar objGeometry = this.object.geometry;\n\n\t\tif ( objGeometry && objGeometry.isGeometry ) {\n\n\t\t\tvar vertices = objGeometry.vertices;\n\n\t\t\tvar faces = objGeometry.faces;\n\n\t\t\tvar idx = 0;\n\n\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tvar face = faces[ i ];\n\n\t\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar vertex = vertices[ face[ keys[ j ] ] ];\n\n\t\t\t\t\tvar normal = face.vertexNormals[ j ];\n\n\t\t\t\t\tv1.copy( vertex ).applyMatrix4( matrixWorld );\n\n\t\t\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\n\n\t\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\n\n\t\t\t\t\tidx = idx + 1;\n\n\t\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\n\n\t\t\t\t\tidx = idx + 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( objGeometry && objGeometry.isBufferGeometry ) {\n\n\t\t\tvar objPos = objGeometry.attributes.position;\n\n\t\t\tvar objNorm = objGeometry.attributes.normal;\n\n\t\t\tvar idx = 0;\n\n\t\t\t// for simplicity, ignore index and drawcalls, and render every normal\n\n\t\t\tfor ( var j = 0, jl = objPos.count; j < jl; j ++ ) {\n\n\t\t\t\tv1.set( objPos.getX( j ), objPos.getY( j ), objPos.getZ( j ) ).applyMatrix4( matrixWorld );\n\n\t\t\t\tv2.set( objNorm.getX( j ), objNorm.getY( j ), objNorm.getZ( j ) );\n\n\t\t\t\tv2.applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\n\n\t\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\n\n\t\t\t\tidx = idx + 1;\n\n\t\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\n\n\t\t\t\tidx = idx + 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tposition.needsUpdate = true;\n\n\t};\n\n}() );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction SpotLightHelper( light, color ) {\n\n\tObject3D.call( this );\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.matrix = light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.color = color;\n\n\tvar geometry = new BufferGeometry();\n\n\tvar positions = [\n\t\t0, 0, 0, \t0, 0, 1,\n\t\t0, 0, 0, \t1, 0, 1,\n\t\t0, 0, 0,\t- 1, 0, 1,\n\t\t0, 0, 0, \t0, 1, 1,\n\t\t0, 0, 0, \t0, - 1, 1\n\t];\n\n\tfor ( var i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\n\n\t\tvar p1 = ( i / l ) * Math.PI * 2;\n\t\tvar p2 = ( j / l ) * Math.PI * 2;\n\n\t\tpositions.push(\n\t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\n\t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\n\t\t);\n\n\t}\n\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\tvar material = new LineBasicMaterial( { fog: false } );\n\n\tthis.cone = new LineSegments( geometry, material );\n\tthis.add( this.cone );\n\n\tthis.update();\n\n}\n\nSpotLightHelper.prototype = Object.create( Object3D.prototype );\nSpotLightHelper.prototype.constructor = SpotLightHelper;\n\nSpotLightHelper.prototype.dispose = function () {\n\n\tthis.cone.geometry.dispose();\n\tthis.cone.material.dispose();\n\n};\n\nSpotLightHelper.prototype.update = function () {\n\n\tvar vector = new Vector3();\n\tvar vector2 = new Vector3();\n\n\treturn function update() {\n\n\t\tthis.light.updateMatrixWorld();\n\n\t\tvar coneLength = this.light.distance ? this.light.distance : 1000;\n\t\tvar coneWidth = coneLength * Math.tan( this.light.angle );\n\n\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\n\n\t\tvector.setFromMatrixPosition( this.light.matrixWorld );\n\t\tvector2.setFromMatrixPosition( this.light.target.matrixWorld );\n\n\t\tthis.cone.lookAt( vector2.sub( vector ) );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.cone.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.cone.material.color.copy( this.light.color );\n\n\t\t}\n\n\t};\n\n}();\n\n/**\n * @author Sean Griffin / http://twitter.com/sgrif\n * @author Michael Guerrero / http://realitymeltdown.com\n * @author mrdoob / http://mrdoob.com/\n * @author ikerr / http://verold.com\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction getBoneList( object ) {\n\n\tvar boneList = [];\n\n\tif ( object && object.isBone ) {\n\n\t\tboneList.push( object );\n\n\t}\n\n\tfor ( var i = 0; i < object.children.length; i ++ ) {\n\n\t\tboneList.push.apply( boneList, getBoneList( object.children[ i ] ) );\n\n\t}\n\n\treturn boneList;\n\n}\n\nfunction SkeletonHelper( object ) {\n\n\tvar bones = getBoneList( object );\n\n\tvar geometry = new BufferGeometry();\n\n\tvar vertices = [];\n\tvar colors = [];\n\n\tvar color1 = new Color( 0, 0, 1 );\n\tvar color2 = new Color( 0, 1, 0 );\n\n\tfor ( var i = 0; i < bones.length; i ++ ) {\n\n\t\tvar bone = bones[ i ];\n\n\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tcolors.push( color1.r, color1.g, color1.b );\n\t\t\tcolors.push( color2.r, color2.g, color2.b );\n\n\t\t}\n\n\t}\n\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tvar material = new LineBasicMaterial( { vertexColors: VertexColors, depthTest: false, depthWrite: false, transparent: true } );\n\n\tLineSegments.call( this, geometry, material );\n\n\tthis.root = object;\n\tthis.bones = bones;\n\n\tthis.matrix = object.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n}\n\nSkeletonHelper.prototype = Object.create( LineSegments.prototype );\nSkeletonHelper.prototype.constructor = SkeletonHelper;\n\nSkeletonHelper.prototype.updateMatrixWorld = function () {\n\n\tvar vector = new Vector3();\n\n\tvar boneMatrix = new Matrix4();\n\tvar matrixWorldInv = new Matrix4();\n\n\treturn function updateMatrixWorld( force ) {\n\n\t\tvar bones = this.bones;\n\n\t\tvar geometry = this.geometry;\n\t\tvar position = geometry.getAttribute( 'position' );\n\n\t\tmatrixWorldInv.getInverse( this.root.matrixWorld );\n\n\t\tfor ( var i = 0, j = 0; i < bones.length; i ++ ) {\n\n\t\t\tvar bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.matrixWorld );\n\t\t\t\tvector.setFromMatrixPosition( boneMatrix );\n\t\t\t\tposition.setXYZ( j, vector.x, vector.y, vector.z );\n\n\t\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.parent.matrixWorld );\n\t\t\t\tvector.setFromMatrixPosition( boneMatrix );\n\t\t\t\tposition.setXYZ( j + 1, vector.x, vector.y, vector.z );\n\n\t\t\t\tj += 2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t};\n\n}();\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction PointLightHelper( light, sphereSize, color ) {\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.color = color;\n\n\tvar geometry = new SphereBufferGeometry( sphereSize, 4, 2 );\n\tvar material = new MeshBasicMaterial( { wireframe: true, fog: false } );\n\n\tMesh.call( this, geometry, material );\n\n\tthis.matrix = this.light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.update();\n\n\n\t/*\n\tvar distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\n\tvar distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n\tvar d = light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\n\tthis.add( this.lightDistance );\n\t*/\n\n}\n\nPointLightHelper.prototype = Object.create( Mesh.prototype );\nPointLightHelper.prototype.constructor = PointLightHelper;\n\nPointLightHelper.prototype.dispose = function () {\n\n\tthis.geometry.dispose();\n\tthis.material.dispose();\n\n};\n\nPointLightHelper.prototype.update = function () {\n\n\tif ( this.color !== undefined ) {\n\n\t\tthis.material.color.set( this.color );\n\n\t} else {\n\n\t\tthis.material.color.copy( this.light.color );\n\n\t}\n\n\t/*\n\tvar d = this.light.distance;\n\n\tif ( d === 0.0 ) {\n\n\t\tthis.lightDistance.visible = false;\n\n\t} else {\n\n\t\tthis.lightDistance.visible = true;\n\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t}\n\t*/\n\n};\n\n/**\n * @author abelnation / http://github.com/abelnation\n * @author Mugen87 / http://github.com/Mugen87\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction RectAreaLightHelper( light, color ) {\n\n\tObject3D.call( this );\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.matrix = light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.color = color;\n\n\tvar material = new LineBasicMaterial( { fog: false } );\n\n\tvar geometry = new BufferGeometry();\n\n\tgeometry.addAttribute( 'position', new BufferAttribute( new Float32Array( 5 * 3 ), 3 ) );\n\n\tthis.line = new Line( geometry, material );\n\tthis.add( this.line );\n\n\n\tthis.update();\n\n}\n\nRectAreaLightHelper.prototype = Object.create( Object3D.prototype );\nRectAreaLightHelper.prototype.constructor = RectAreaLightHelper;\n\nRectAreaLightHelper.prototype.dispose = function () {\n\n\tthis.children[ 0 ].geometry.dispose();\n\tthis.children[ 0 ].material.dispose();\n\n};\n\nRectAreaLightHelper.prototype.update = function () {\n\n\t// calculate new dimensions of the helper\n\n\tvar hx = this.light.width * 0.5;\n\tvar hy = this.light.height * 0.5;\n\n\tvar position = this.line.geometry.attributes.position;\n\tvar array = position.array;\n\n\t// update vertices\n\n\tarray[ 0 ] = hx; array[ 1 ] = - hy; array[ 2 ] = 0;\n\tarray[ 3 ] = hx; array[ 4 ] = hy; array[ 5 ] = 0;\n\tarray[ 6 ] = - hx; array[ 7 ] = hy; array[ 8 ] = 0;\n\tarray[ 9 ] = - hx; array[ 10 ] = - hy; array[ 11 ] = 0;\n\tarray[ 12 ] = hx; array[ 13 ] = - hy; array[ 14 ] = 0;\n\n\tposition.needsUpdate = true;\n\n\tif ( this.color !== undefined ) {\n\n\t\tthis.line.material.color.set( this.color );\n\n\t} else {\n\n\t\tthis.line.material.color.copy( this.light.color );\n\n\t}\n\n};\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nfunction HemisphereLightHelper( light, size, color ) {\n\n\tObject3D.call( this );\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.matrix = light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.color = color;\n\n\tvar geometry = new OctahedronBufferGeometry( size );\n\tgeometry.rotateY( Math.PI * 0.5 );\n\n\tthis.material = new MeshBasicMaterial( { wireframe: true, fog: false } );\n\tif ( this.color === undefined ) this.material.vertexColors = VertexColors;\n\n\tvar position = geometry.getAttribute( 'position' );\n\tvar colors = new Float32Array( position.count * 3 );\n\n\tgeometry.addAttribute( 'color', new BufferAttribute( colors, 3 ) );\n\n\tthis.add( new Mesh( geometry, this.material ) );\n\n\tthis.update();\n\n}\n\nHemisphereLightHelper.prototype = Object.create( Object3D.prototype );\nHemisphereLightHelper.prototype.constructor = HemisphereLightHelper;\n\nHemisphereLightHelper.prototype.dispose = function () {\n\n\tthis.children[ 0 ].geometry.dispose();\n\tthis.children[ 0 ].material.dispose();\n\n};\n\nHemisphereLightHelper.prototype.update = function () {\n\n\tvar vector = new Vector3();\n\n\tvar color1 = new Color();\n\tvar color2 = new Color();\n\n\treturn function update() {\n\n\t\tvar mesh = this.children[ 0 ];\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tvar colors = mesh.geometry.getAttribute( 'color' );\n\n\t\t\tcolor1.copy( this.light.color );\n\t\t\tcolor2.copy( this.light.groundColor );\n\n\t\t\tfor ( var i = 0, l = colors.count; i < l; i ++ ) {\n\n\t\t\t\tvar color = ( i < ( l / 2 ) ) ? color1 : color2;\n\n\t\t\t\tcolors.setXYZ( i, color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t\tcolors.needsUpdate = true;\n\n\t\t}\n\n\t\tmesh.lookAt( vector.setFromMatrixPosition( this.light.matrixWorld ).negate() );\n\n\t};\n\n}();\n\n/**\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction GridHelper( size, divisions, color1, color2 ) {\n\n\tsize = size || 10;\n\tdivisions = divisions || 10;\n\tcolor1 = new Color( color1 !== undefined ? color1 : 0x444444 );\n\tcolor2 = new Color( color2 !== undefined ? color2 : 0x888888 );\n\n\tvar center = divisions / 2;\n\tvar step = size / divisions;\n\tvar halfSize = size / 2;\n\n\tvar vertices = [], colors = [];\n\n\tfor ( var i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {\n\n\t\tvertices.push( - halfSize, 0, k, halfSize, 0, k );\n\t\tvertices.push( k, 0, - halfSize, k, 0, halfSize );\n\n\t\tvar color = i === center ? color1 : color2;\n\n\t\tcolor.toArray( colors, j ); j += 3;\n\t\tcolor.toArray( colors, j ); j += 3;\n\t\tcolor.toArray( colors, j ); j += 3;\n\t\tcolor.toArray( colors, j ); j += 3;\n\n\t}\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\n\n\tLineSegments.call( this, geometry, material );\n\n}\n\nGridHelper.prototype = Object.create( LineSegments.prototype );\nGridHelper.prototype.constructor = GridHelper;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / http://github.com/Mugen87\n * @author Hectate / http://www.github.com/Hectate\n */\n\nfunction PolarGridHelper( radius, radials, circles, divisions, color1, color2 ) {\n\n\tradius = radius || 10;\n\tradials = radials || 16;\n\tcircles = circles || 8;\n\tdivisions = divisions || 64;\n\tcolor1 = new Color( color1 !== undefined ? color1 : 0x444444 );\n\tcolor2 = new Color( color2 !== undefined ? color2 : 0x888888 );\n\n\tvar vertices = [];\n\tvar colors = [];\n\n\tvar x, z;\n\tvar v, i, j, r, color;\n\n\t// create the radials\n\n\tfor ( i = 0; i <= radials; i ++ ) {\n\n\t\tv = ( i / radials ) * ( Math.PI * 2 );\n\n\t\tx = Math.sin( v ) * radius;\n\t\tz = Math.cos( v ) * radius;\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tvertices.push( x, 0, z );\n\n\t\tcolor = ( i & 1 ) ? color1 : color2;\n\n\t\tcolors.push( color.r, color.g, color.b );\n\t\tcolors.push( color.r, color.g, color.b );\n\n\t}\n\n\t// create the circles\n\n\tfor ( i = 0; i <= circles; i ++ ) {\n\n\t\tcolor = ( i & 1 ) ? color1 : color2;\n\n\t\tr = radius - ( radius / circles * i );\n\n\t\tfor ( j = 0; j < divisions; j ++ ) {\n\n\t\t\t// first vertex\n\n\t\t\tv = ( j / divisions ) * ( Math.PI * 2 );\n\n\t\t\tx = Math.sin( v ) * r;\n\t\t\tz = Math.cos( v ) * r;\n\n\t\t\tvertices.push( x, 0, z );\n\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t// second vertex\n\n\t\t\tv = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 );\n\n\t\t\tx = Math.sin( v ) * r;\n\t\t\tz = Math.cos( v ) * r;\n\n\t\t\tvertices.push( x, 0, z );\n\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t}\n\n\t}\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\n\n\tLineSegments.call( this, geometry, material );\n\n}\n\nPolarGridHelper.prototype = Object.create( LineSegments.prototype );\nPolarGridHelper.prototype.constructor = PolarGridHelper;\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction FaceNormalsHelper( object, size, hex, linewidth ) {\n\n\t// FaceNormalsHelper only supports THREE.Geometry\n\n\tthis.object = object;\n\n\tthis.size = ( size !== undefined ) ? size : 1;\n\n\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\n\n\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\n\n\t//\n\n\tvar nNormals = 0;\n\n\tvar objGeometry = this.object.geometry;\n\n\tif ( objGeometry && objGeometry.isGeometry ) {\n\n\t\tnNormals = objGeometry.faces.length;\n\n\t} else {\n\n\t\tconsole.warn( 'THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.' );\n\n\t}\n\n\t//\n\n\tvar geometry = new BufferGeometry();\n\n\tvar positions = new Float32BufferAttribute( nNormals * 2 * 3, 3 );\n\n\tgeometry.addAttribute( 'position', positions );\n\n\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color, linewidth: width } ) );\n\n\t//\n\n\tthis.matrixAutoUpdate = false;\n\tthis.update();\n\n}\n\nFaceNormalsHelper.prototype = Object.create( LineSegments.prototype );\nFaceNormalsHelper.prototype.constructor = FaceNormalsHelper;\n\nFaceNormalsHelper.prototype.update = ( function () {\n\n\tvar v1 = new Vector3();\n\tvar v2 = new Vector3();\n\tvar normalMatrix = new Matrix3();\n\n\treturn function update() {\n\n\t\tthis.object.updateMatrixWorld( true );\n\n\t\tnormalMatrix.getNormalMatrix( this.object.matrixWorld );\n\n\t\tvar matrixWorld = this.object.matrixWorld;\n\n\t\tvar position = this.geometry.attributes.position;\n\n\t\t//\n\n\t\tvar objGeometry = this.object.geometry;\n\n\t\tvar vertices = objGeometry.vertices;\n\n\t\tvar faces = objGeometry.faces;\n\n\t\tvar idx = 0;\n\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tvar normal = face.normal;\n\n\t\t\tv1.copy( vertices[ face.a ] )\n\t\t\t\t.add( vertices[ face.b ] )\n\t\t\t\t.add( vertices[ face.c ] )\n\t\t\t\t.divideScalar( 3 )\n\t\t\t\t.applyMatrix4( matrixWorld );\n\n\t\t\tv2.copy( normal ).applyMatrix3( normalMatrix ).normalize().multiplyScalar( this.size ).add( v1 );\n\n\t\t\tposition.setXYZ( idx, v1.x, v1.y, v1.z );\n\n\t\t\tidx = idx + 1;\n\n\t\t\tposition.setXYZ( idx, v2.x, v2.y, v2.z );\n\n\t\t\tidx = idx + 1;\n\n\t\t}\n\n\t\tposition.needsUpdate = true;\n\n\t};\n\n}() );\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author mrdoob / http://mrdoob.com/\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction DirectionalLightHelper( light, size, color ) {\n\n\tObject3D.call( this );\n\n\tthis.light = light;\n\tthis.light.updateMatrixWorld();\n\n\tthis.matrix = light.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.color = color;\n\n\tif ( size === undefined ) size = 1;\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( [\n\t\t- size, size, 0,\n\t\tsize, size, 0,\n\t\tsize, - size, 0,\n\t\t- size, - size, 0,\n\t\t- size, size, 0\n\t], 3 ) );\n\n\tvar material = new LineBasicMaterial( { fog: false } );\n\n\tthis.lightPlane = new Line( geometry, material );\n\tthis.add( this.lightPlane );\n\n\tgeometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\n\n\tthis.targetLine = new Line( geometry, material );\n\tthis.add( this.targetLine );\n\n\tthis.update();\n\n}\n\nDirectionalLightHelper.prototype = Object.create( Object3D.prototype );\nDirectionalLightHelper.prototype.constructor = DirectionalLightHelper;\n\nDirectionalLightHelper.prototype.dispose = function () {\n\n\tthis.lightPlane.geometry.dispose();\n\tthis.lightPlane.material.dispose();\n\tthis.targetLine.geometry.dispose();\n\tthis.targetLine.material.dispose();\n\n};\n\nDirectionalLightHelper.prototype.update = function () {\n\n\tvar v1 = new Vector3();\n\tvar v2 = new Vector3();\n\tvar v3 = new Vector3();\n\n\treturn function update() {\n\n\t\tv1.setFromMatrixPosition( this.light.matrixWorld );\n\t\tv2.setFromMatrixPosition( this.light.target.matrixWorld );\n\t\tv3.subVectors( v2, v1 );\n\n\t\tthis.lightPlane.lookAt( v3 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.lightPlane.material.color.set( this.color );\n\t\t\tthis.targetLine.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.lightPlane.material.color.copy( this.light.color );\n\t\t\tthis.targetLine.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\tthis.targetLine.lookAt( v3 );\n\t\tthis.targetLine.scale.z = v3.length();\n\n\t};\n\n}();\n\n/**\n * @author alteredq / http://alteredqualia.com/\n * @author Mugen87 / https://github.com/Mugen87\n *\n *\t- shows frustum, line of sight and up of the camera\n *\t- suitable for fast updates\n * \t- based on frustum visualization in lightgl.js shadowmap example\n *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\n */\n\nfunction CameraHelper( camera ) {\n\n\tvar geometry = new BufferGeometry();\n\tvar material = new LineBasicMaterial( { color: 0xffffff, vertexColors: FaceColors } );\n\n\tvar vertices = [];\n\tvar colors = [];\n\n\tvar pointMap = {};\n\n\t// colors\n\n\tvar colorFrustum = new Color( 0xffaa00 );\n\tvar colorCone = new Color( 0xff0000 );\n\tvar colorUp = new Color( 0x00aaff );\n\tvar colorTarget = new Color( 0xffffff );\n\tvar colorCross = new Color( 0x333333 );\n\n\t// near\n\n\taddLine( 'n1', 'n2', colorFrustum );\n\taddLine( 'n2', 'n4', colorFrustum );\n\taddLine( 'n4', 'n3', colorFrustum );\n\taddLine( 'n3', 'n1', colorFrustum );\n\n\t// far\n\n\taddLine( 'f1', 'f2', colorFrustum );\n\taddLine( 'f2', 'f4', colorFrustum );\n\taddLine( 'f4', 'f3', colorFrustum );\n\taddLine( 'f3', 'f1', colorFrustum );\n\n\t// sides\n\n\taddLine( 'n1', 'f1', colorFrustum );\n\taddLine( 'n2', 'f2', colorFrustum );\n\taddLine( 'n3', 'f3', colorFrustum );\n\taddLine( 'n4', 'f4', colorFrustum );\n\n\t// cone\n\n\taddLine( 'p', 'n1', colorCone );\n\taddLine( 'p', 'n2', colorCone );\n\taddLine( 'p', 'n3', colorCone );\n\taddLine( 'p', 'n4', colorCone );\n\n\t// up\n\n\taddLine( 'u1', 'u2', colorUp );\n\taddLine( 'u2', 'u3', colorUp );\n\taddLine( 'u3', 'u1', colorUp );\n\n\t// target\n\n\taddLine( 'c', 't', colorTarget );\n\taddLine( 'p', 'c', colorCross );\n\n\t// cross\n\n\taddLine( 'cn1', 'cn2', colorCross );\n\taddLine( 'cn3', 'cn4', colorCross );\n\n\taddLine( 'cf1', 'cf2', colorCross );\n\taddLine( 'cf3', 'cf4', colorCross );\n\n\tfunction addLine( a, b, color ) {\n\n\t\taddPoint( a, color );\n\t\taddPoint( b, color );\n\n\t}\n\n\tfunction addPoint( id, color ) {\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tcolors.push( color.r, color.g, color.b );\n\n\t\tif ( pointMap[ id ] === undefined ) {\n\n\t\t\tpointMap[ id ] = [];\n\n\t\t}\n\n\t\tpointMap[ id ].push( ( vertices.length / 3 ) - 1 );\n\n\t}\n\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tLineSegments.call( this, geometry, material );\n\n\tthis.camera = camera;\n\tif ( this.camera.updateProjectionMatrix ) this.camera.updateProjectionMatrix();\n\n\tthis.matrix = camera.matrixWorld;\n\tthis.matrixAutoUpdate = false;\n\n\tthis.pointMap = pointMap;\n\n\tthis.update();\n\n}\n\nCameraHelper.prototype = Object.create( LineSegments.prototype );\nCameraHelper.prototype.constructor = CameraHelper;\n\nCameraHelper.prototype.update = function () {\n\n\tvar geometry, pointMap;\n\n\tvar vector = new Vector3();\n\tvar camera = new Camera();\n\n\tfunction setPoint( point, x, y, z ) {\n\n\t\tvector.set( x, y, z ).unproject( camera );\n\n\t\tvar points = pointMap[ point ];\n\n\t\tif ( points !== undefined ) {\n\n\t\t\tvar position = geometry.getAttribute( 'position' );\n\n\t\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\t\tposition.setXYZ( points[ i ], vector.x, vector.y, vector.z );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\treturn function update() {\n\n\t\tgeometry = this.geometry;\n\t\tpointMap = this.pointMap;\n\n\t\tvar w = 1, h = 1;\n\n\t\t// we need just camera projection matrix\n\t\t// world matrix must be identity\n\n\t\tcamera.projectionMatrix.copy( this.camera.projectionMatrix );\n\n\t\t// center / target\n\n\t\tsetPoint( 'c', 0, 0, - 1 );\n\t\tsetPoint( 't', 0, 0, 1 );\n\n\t\t// near\n\n\t\tsetPoint( 'n1', - w, - h, - 1 );\n\t\tsetPoint( 'n2', w, - h, - 1 );\n\t\tsetPoint( 'n3', - w, h, - 1 );\n\t\tsetPoint( 'n4', w, h, - 1 );\n\n\t\t// far\n\n\t\tsetPoint( 'f1', - w, - h, 1 );\n\t\tsetPoint( 'f2', w, - h, 1 );\n\t\tsetPoint( 'f3', - w, h, 1 );\n\t\tsetPoint( 'f4', w, h, 1 );\n\n\t\t// up\n\n\t\tsetPoint( 'u1', w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u2', - w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u3', 0, h * 2, - 1 );\n\n\t\t// cross\n\n\t\tsetPoint( 'cf1', - w, 0, 1 );\n\t\tsetPoint( 'cf2', w, 0, 1 );\n\t\tsetPoint( 'cf3', 0, - h, 1 );\n\t\tsetPoint( 'cf4', 0, h, 1 );\n\n\t\tsetPoint( 'cn1', - w, 0, - 1 );\n\t\tsetPoint( 'cn2', w, 0, - 1 );\n\t\tsetPoint( 'cn3', 0, - h, - 1 );\n\t\tsetPoint( 'cn4', 0, h, - 1 );\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t};\n\n}();\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / http://github.com/Mugen87\n */\n\nfunction BoxHelper( object, color ) {\n\n\tthis.object = object;\n\n\tif ( color === undefined ) color = 0xffff00;\n\n\tvar indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\tvar positions = new Float32Array( 8 * 3 );\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\tgeometry.addAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color } ) );\n\n\tthis.matrixAutoUpdate = false;\n\n\tthis.update();\n\n}\n\nBoxHelper.prototype = Object.create( LineSegments.prototype );\nBoxHelper.prototype.constructor = BoxHelper;\n\nBoxHelper.prototype.update = ( function () {\n\n\tvar box = new Box3();\n\n\treturn function update( object ) {\n\n\t\tif ( object !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BoxHelper: .update() has no longer arguments.' );\n\n\t\t}\n\n\t\tif ( this.object !== undefined ) {\n\n\t\t\tbox.setFromObject( this.object );\n\n\t\t}\n\n\t\tif ( box.isEmpty() ) return;\n\n\t\tvar min = box.min;\n\t\tvar max = box.max;\n\n\t\t/*\n\t\t  5____4\n\t\t1/___0/|\n\t\t| 6__|_7\n\t\t2/___3/\n\n\t\t0: max.x, max.y, max.z\n\t\t1: min.x, max.y, max.z\n\t\t2: min.x, min.y, max.z\n\t\t3: max.x, min.y, max.z\n\t\t4: max.x, max.y, min.z\n\t\t5: min.x, max.y, min.z\n\t\t6: min.x, min.y, min.z\n\t\t7: max.x, min.y, min.z\n\t\t*/\n\n\t\tvar position = this.geometry.attributes.position;\n\t\tvar array = position.array;\n\n\t\tarray[ 0 ] = max.x; array[ 1 ] = max.y; array[ 2 ] = max.z;\n\t\tarray[ 3 ] = min.x; array[ 4 ] = max.y; array[ 5 ] = max.z;\n\t\tarray[ 6 ] = min.x; array[ 7 ] = min.y; array[ 8 ] = max.z;\n\t\tarray[ 9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\n\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\n\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\n\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\n\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\n\n\t\tposition.needsUpdate = true;\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t};\n\n} )();\n\nBoxHelper.prototype.setFromObject = function ( object ) {\n\n\tthis.object = object;\n\tthis.update();\n\n\treturn this;\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction Box3Helper( box, hex ) {\n\n\tthis.type = 'Box3Helper';\n\n\tthis.box = box;\n\n\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\n\n\tvar indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\n\tvar positions = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 1, - 1, 1, - 1, - 1 ];\n\n\tvar geometry = new BufferGeometry();\n\n\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color } ) );\n\n\tthis.geometry.computeBoundingSphere();\n\n}\n\nBox3Helper.prototype = Object.create( LineSegments.prototype );\nBox3Helper.prototype.constructor = Box3Helper;\n\nBox3Helper.prototype.updateMatrixWorld = function ( force ) {\n\n\tvar box = this.box;\n\n\tif ( box.isEmpty() ) return;\n\n\tbox.getCenter( this.position );\n\n\tbox.getSize( this.scale );\n\n\tthis.scale.multiplyScalar( 0.5 );\n\n\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n */\n\nfunction PlaneHelper( plane, size, hex ) {\n\n\tthis.type = 'PlaneHelper';\n\n\tthis.plane = plane;\n\n\tthis.size = ( size === undefined ) ? 1 : size;\n\n\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\n\n\tvar positions = [ 1, - 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0 ];\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\tgeometry.computeBoundingSphere();\n\n\tLine.call( this, geometry, new LineBasicMaterial( { color: color } ) );\n\n\t//\n\n\tvar positions2 = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, - 1, 1, 1, - 1, 1 ];\n\n\tvar geometry2 = new BufferGeometry();\n\tgeometry2.addAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\n\tgeometry2.computeBoundingSphere();\n\n\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { color: color, opacity: 0.2, transparent: true, depthWrite: false } ) ) );\n\n}\n\nPlaneHelper.prototype = Object.create( Line.prototype );\nPlaneHelper.prototype.constructor = PlaneHelper;\n\nPlaneHelper.prototype.updateMatrixWorld = function ( force ) {\n\n\tvar scale = - this.plane.constant;\n\n\tif ( Math.abs( scale ) < 1e-8 ) scale = 1e-8; // sign does not matter\n\n\tthis.scale.set( 0.5 * this.size, 0.5 * this.size, scale );\n\n\tthis.lookAt( this.plane.normal );\n\n\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n};\n\n/**\n * @author WestLangley / http://github.com/WestLangley\n * @author zz85 / http://github.com/zz85\n * @author bhouston / http://clara.io\n *\n * Creates an arrow for visualizing directions\n *\n * Parameters:\n *  dir - Vector3\n *  origin - Vector3\n *  length - Number\n *  color - color in hex value\n *  headLength - Number\n *  headWidth - Number\n */\n\nvar lineGeometry;\nvar coneGeometry;\n\nfunction ArrowHelper( dir, origin, length, color, headLength, headWidth ) {\n\n\t// dir is assumed to be normalized\n\n\tObject3D.call( this );\n\n\tif ( color === undefined ) color = 0xffff00;\n\tif ( length === undefined ) length = 1;\n\tif ( headLength === undefined ) headLength = 0.2 * length;\n\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\n\n\tif ( lineGeometry === undefined ) {\n\n\t\tlineGeometry = new BufferGeometry();\n\t\tlineGeometry.addAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\n\n\t\tconeGeometry = new CylinderBufferGeometry( 0, 0.5, 1, 5, 1 );\n\t\tconeGeometry.translate( 0, - 0.5, 0 );\n\n\t}\n\n\tthis.position.copy( origin );\n\n\tthis.line = new Line( lineGeometry, new LineBasicMaterial( { color: color } ) );\n\tthis.line.matrixAutoUpdate = false;\n\tthis.add( this.line );\n\n\tthis.cone = new Mesh( coneGeometry, new MeshBasicMaterial( { color: color } ) );\n\tthis.cone.matrixAutoUpdate = false;\n\tthis.add( this.cone );\n\n\tthis.setDirection( dir );\n\tthis.setLength( length, headLength, headWidth );\n\n}\n\nArrowHelper.prototype = Object.create( Object3D.prototype );\nArrowHelper.prototype.constructor = ArrowHelper;\n\nArrowHelper.prototype.setDirection = ( function () {\n\n\tvar axis = new Vector3();\n\tvar radians;\n\n\treturn function setDirection( dir ) {\n\n\t\t// dir is assumed to be normalized\n\n\t\tif ( dir.y > 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\n\n\t\t} else if ( dir.y < - 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\n\n\t\t} else {\n\n\t\t\taxis.set( dir.z, 0, - dir.x ).normalize();\n\n\t\t\tradians = Math.acos( dir.y );\n\n\t\t\tthis.quaternion.setFromAxisAngle( axis, radians );\n\n\t\t}\n\n\t};\n\n}() );\n\nArrowHelper.prototype.setLength = function ( length, headLength, headWidth ) {\n\n\tif ( headLength === undefined ) headLength = 0.2 * length;\n\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\n\n\tthis.line.scale.set( 1, Math.max( 0, length - headLength ), 1 );\n\tthis.line.updateMatrix();\n\n\tthis.cone.scale.set( headWidth, headLength, headWidth );\n\tthis.cone.position.y = length;\n\tthis.cone.updateMatrix();\n\n};\n\nArrowHelper.prototype.setColor = function ( color ) {\n\n\tthis.line.material.color.copy( color );\n\tthis.cone.material.color.copy( color );\n\n};\n\n/**\n * @author sroucheray / http://sroucheray.org/\n * @author mrdoob / http://mrdoob.com/\n */\n\nfunction AxesHelper( size ) {\n\n\tsize = size || 1;\n\n\tvar vertices = [\n\t\t0, 0, 0,\tsize, 0, 0,\n\t\t0, 0, 0,\t0, size, 0,\n\t\t0, 0, 0,\t0, 0, size\n\t];\n\n\tvar colors = [\n\t\t1, 0, 0,\t1, 0.6, 0,\n\t\t0, 1, 0,\t0.6, 1, 0,\n\t\t0, 0, 1,\t0, 0.6, 1\n\t];\n\n\tvar geometry = new BufferGeometry();\n\tgeometry.addAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\tgeometry.addAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\n\n\tLineSegments.call( this, geometry, material );\n\n}\n\nAxesHelper.prototype = Object.create( LineSegments.prototype );\nAxesHelper.prototype.constructor = AxesHelper;\n\n/**\n * @author zz85 https://github.com/zz85\n *\n * Centripetal CatmullRom Curve - which is useful for avoiding\n * cusps and self-intersections in non-uniform catmull rom curves.\n * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n *\n * curve.type accepts centripetal(default), chordal and catmullrom\n * curve.tension is used for catmullrom which defaults to 0.5\n */\n\n\n/*\nBased on an optimized c++ solution in\n - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n - http://ideone.com/NoEbVM\n\nThis CubicPoly class could be used for reusing some variables and calculations,\nbut for three.js curve use, it could be possible inlined and flatten into a single function call\nwhich can be placed in CurveUtils.\n*/\n\nfunction CubicPoly() {\n\n\tvar c0 = 0, c1 = 0, c2 = 0, c3 = 0;\n\n\t/*\n\t * Compute coefficients for a cubic polynomial\n\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t * such that\n\t *   p(0) = x0, p(1) = x1\n\t *  and\n\t *   p'(0) = t0, p'(1) = t1.\n\t */\n\tfunction init( x0, x1, t0, t1 ) {\n\n\t\tc0 = x0;\n\t\tc1 = t0;\n\t\tc2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\n\t\tc3 = 2 * x0 - 2 * x1 + t0 + t1;\n\n\t}\n\n\treturn {\n\n\t\tinitCatmullRom: function ( x0, x1, x2, x3, tension ) {\n\n\t\t\tinit( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\n\n\t\t},\n\n\t\tinitNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {\n\n\t\t\t// compute tangents when parameterized in [t1,t2]\n\t\t\tvar t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\n\t\t\tvar t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\n\n\t\t\t// rescale tangents for parametrization in [0,1]\n\t\t\tt1 *= dt1;\n\t\t\tt2 *= dt1;\n\n\t\t\tinit( x1, x2, t1, t2 );\n\n\t\t},\n\n\t\tcalc: function ( t ) {\n\n\t\t\tvar t2 = t * t;\n\t\t\tvar t3 = t2 * t;\n\t\t\treturn c0 + c1 * t + c2 * t2 + c3 * t3;\n\n\t\t}\n\n\t};\n\n}\n\n//\n\nvar tmp = new Vector3();\nvar px = new CubicPoly();\nvar py = new CubicPoly();\nvar pz = new CubicPoly();\n\nfunction CatmullRomCurve3( points, closed, curveType, tension ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'CatmullRomCurve3';\n\n\tthis.points = points || [];\n\tthis.closed = closed || false;\n\tthis.curveType = curveType || 'centripetal';\n\tthis.tension = tension || 0.5;\n\n}\n\nCatmullRomCurve3.prototype = Object.create( Curve.prototype );\nCatmullRomCurve3.prototype.constructor = CatmullRomCurve3;\n\nCatmullRomCurve3.prototype.isCatmullRomCurve3 = true;\n\nCatmullRomCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector3();\n\n\tvar points = this.points;\n\tvar l = points.length;\n\n\tvar p = ( l - ( this.closed ? 0 : 1 ) ) * t;\n\tvar intPoint = Math.floor( p );\n\tvar weight = p - intPoint;\n\n\tif ( this.closed ) {\n\n\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / points.length ) + 1 ) * points.length;\n\n\t} else if ( weight === 0 && intPoint === l - 1 ) {\n\n\t\tintPoint = l - 2;\n\t\tweight = 1;\n\n\t}\n\n\tvar p0, p1, p2, p3; // 4 points\n\n\tif ( this.closed || intPoint > 0 ) {\n\n\t\tp0 = points[ ( intPoint - 1 ) % l ];\n\n\t} else {\n\n\t\t// extrapolate first point\n\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\n\t\tp0 = tmp;\n\n\t}\n\n\tp1 = points[ intPoint % l ];\n\tp2 = points[ ( intPoint + 1 ) % l ];\n\n\tif ( this.closed || intPoint + 2 < l ) {\n\n\t\tp3 = points[ ( intPoint + 2 ) % l ];\n\n\t} else {\n\n\t\t// extrapolate last point\n\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\n\t\tp3 = tmp;\n\n\t}\n\n\tif ( this.curveType === 'centripetal' || this.curveType === 'chordal' ) {\n\n\t\t// init Centripetal / Chordal Catmull-Rom\n\t\tvar pow = this.curveType === 'chordal' ? 0.5 : 0.25;\n\t\tvar dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\n\t\tvar dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\n\t\tvar dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\n\n\t\t// safety check for repeated points\n\t\tif ( dt1 < 1e-4 ) dt1 = 1.0;\n\t\tif ( dt0 < 1e-4 ) dt0 = dt1;\n\t\tif ( dt2 < 1e-4 ) dt2 = dt1;\n\n\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\n\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\n\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\n\n\t} else if ( this.curveType === 'catmullrom' ) {\n\n\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, this.tension );\n\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, this.tension );\n\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, this.tension );\n\n\t}\n\n\tpoint.set(\n\t\tpx.calc( weight ),\n\t\tpy.calc( weight ),\n\t\tpz.calc( weight )\n\t);\n\n\treturn point;\n\n};\n\nCatmullRomCurve3.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.points = [];\n\n\tfor ( var i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\tvar point = source.points[ i ];\n\n\t\tthis.points.push( point.clone() );\n\n\t}\n\n\tthis.closed = source.closed;\n\tthis.curveType = source.curveType;\n\tthis.tension = source.tension;\n\n\treturn this;\n\n};\n\nfunction CubicBezierCurve3( v0, v1, v2, v3 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'CubicBezierCurve3';\n\n\tthis.v0 = v0 || new Vector3();\n\tthis.v1 = v1 || new Vector3();\n\tthis.v2 = v2 || new Vector3();\n\tthis.v3 = v3 || new Vector3();\n\n}\n\nCubicBezierCurve3.prototype = Object.create( Curve.prototype );\nCubicBezierCurve3.prototype.constructor = CubicBezierCurve3;\n\nCubicBezierCurve3.prototype.isCubicBezierCurve3 = true;\n\nCubicBezierCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector3();\n\n\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\tpoint.set(\n\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y ),\n\t\tCubicBezier( t, v0.z, v1.z, v2.z, v3.z )\n\t);\n\n\treturn point;\n\n};\n\nCubicBezierCurve3.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v0.copy( source.v0 );\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\tthis.v3.copy( source.v3 );\n\n\treturn this;\n\n};\n\nfunction QuadraticBezierCurve3( v0, v1, v2 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'QuadraticBezierCurve3';\n\n\tthis.v0 = v0 || new Vector3();\n\tthis.v1 = v1 || new Vector3();\n\tthis.v2 = v2 || new Vector3();\n\n}\n\nQuadraticBezierCurve3.prototype = Object.create( Curve.prototype );\nQuadraticBezierCurve3.prototype.constructor = QuadraticBezierCurve3;\n\nQuadraticBezierCurve3.prototype.isQuadraticBezierCurve3 = true;\n\nQuadraticBezierCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector3();\n\n\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\tpoint.set(\n\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\tQuadraticBezier( t, v0.y, v1.y, v2.y ),\n\t\tQuadraticBezier( t, v0.z, v1.z, v2.z )\n\t);\n\n\treturn point;\n\n};\n\nQuadraticBezierCurve3.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v0.copy( source.v0 );\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\n\treturn this;\n\n};\n\nfunction LineCurve3( v1, v2 ) {\n\n\tCurve.call( this );\n\n\tthis.type = 'LineCurve3';\n\n\tthis.v1 = v1 || new Vector3();\n\tthis.v2 = v2 || new Vector3();\n\n}\n\nLineCurve3.prototype = Object.create( Curve.prototype );\nLineCurve3.prototype.constructor = LineCurve3;\n\nLineCurve3.prototype.isLineCurve3 = true;\n\nLineCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\tvar point = optionalTarget || new Vector3();\n\n\tif ( t === 1 ) {\n\n\t\tpoint.copy( this.v2 );\n\n\t} else {\n\n\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t}\n\n\treturn point;\n\n};\n\n// Line curve is linear, so we can overwrite default getPointAt\n\nLineCurve3.prototype.getPointAt = function ( u, optionalTarget ) {\n\n\treturn this.getPoint( u, optionalTarget );\n\n};\n\nLineCurve3.prototype.copy = function ( source ) {\n\n\tCurve.prototype.copy.call( this, source );\n\n\tthis.v1.copy( source.v1 );\n\tthis.v2.copy( source.v2 );\n\n\treturn this;\n\n};\n\nfunction ArcCurve( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\tEllipseCurve.call( this, aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\tthis.type = 'ArcCurve';\n\n}\n\nArcCurve.prototype = Object.create( EllipseCurve.prototype );\nArcCurve.prototype.constructor = ArcCurve;\n\nArcCurve.prototype.isArcCurve = true;\n\n//\n\nCurve.create = function ( construct, getPoint ) {\n\n\tconsole.log( 'THREE.Curve.create() has been deprecated' );\n\n\tconstruct.prototype = Object.create( Curve.prototype );\n\tconstruct.prototype.constructor = construct;\n\tconstruct.prototype.getPoint = getPoint;\n\n\treturn construct;\n\n};\n\n//\n\nObject.assign( CurvePath.prototype, {\n\n\tcreatePointsGeometry: function ( divisions ) {\n\n\t\tconsole.warn( 'THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.' );\n\n\t\t// generate geometry from path points (for Line or Points objects)\n\n\t\tvar pts = this.getPoints( divisions );\n\t\treturn this.createGeometry( pts );\n\n\t},\n\n\tcreateSpacedPointsGeometry: function ( divisions ) {\n\n\t\tconsole.warn( 'THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.' );\n\n\t\t// generate geometry from equidistant sampling along the path\n\n\t\tvar pts = this.getSpacedPoints( divisions );\n\t\treturn this.createGeometry( pts );\n\n\t},\n\n\tcreateGeometry: function ( points ) {\n\n\t\tconsole.warn( 'THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.' );\n\n\t\tvar geometry = new Geometry();\n\n\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\tvar point = points[ i ];\n\t\t\tgeometry.vertices.push( new Vector3( point.x, point.y, point.z || 0 ) );\n\n\t\t}\n\n\t\treturn geometry;\n\n\t}\n\n} );\n\n//\n\nObject.assign( Path.prototype, {\n\n\tfromPoints: function ( points ) {\n\n\t\tconsole.warn( 'THREE.Path: .fromPoints() has been renamed to .setFromPoints().' );\n\t\tthis.setFromPoints( points );\n\n\t}\n\n} );\n\n//\n\nfunction Spline( points ) {\n\n\tconsole.warn( 'THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead.' );\n\n\tCatmullRomCurve3.call( this, points );\n\tthis.type = 'catmullrom';\n\n}\n\nSpline.prototype = Object.create( CatmullRomCurve3.prototype );\n\nObject.assign( Spline.prototype, {\n\n\tinitFromArray: function ( /* a */ ) {\n\n\t\tconsole.error( 'THREE.Spline: .initFromArray() has been removed.' );\n\n\t},\n\tgetControlPointsArray: function ( /* optionalTarget */ ) {\n\n\t\tconsole.error( 'THREE.Spline: .getControlPointsArray() has been removed.' );\n\n\t},\n\treparametrizeByArcLength: function ( /* samplingCoef */ ) {\n\n\t\tconsole.error( 'THREE.Spline: .reparametrizeByArcLength() has been removed.' );\n\n\t}\n\n} );\n\nGridHelper.prototype.setColors = function () {\n\n\tconsole.error( 'THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.' );\n\n};\n\nSkeletonHelper.prototype.update = function () {\n\n\tconsole.error( 'THREE.SkeletonHelper: update() no longer needs to be called.' );\n\n};\n\n//\n\nObject.assign( Box2.prototype, {\n\n\tcenter: function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Box2: .center() has been renamed to .getCenter().' );\n\t\treturn this.getCenter( optionalTarget );\n\n\t},\n\tempty: function () {\n\n\t\tconsole.warn( 'THREE.Box2: .empty() has been renamed to .isEmpty().' );\n\t\treturn this.isEmpty();\n\n\t},\n\tisIntersectionBox: function ( box ) {\n\n\t\tconsole.warn( 'THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\treturn this.intersectsBox( box );\n\n\t},\n\tsize: function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Box2: .size() has been renamed to .getSize().' );\n\t\treturn this.getSize( optionalTarget );\n\n\t}\n} );\n\nObject.assign( Box3.prototype, {\n\n\tcenter: function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Box3: .center() has been renamed to .getCenter().' );\n\t\treturn this.getCenter( optionalTarget );\n\n\t},\n\tempty: function () {\n\n\t\tconsole.warn( 'THREE.Box3: .empty() has been renamed to .isEmpty().' );\n\t\treturn this.isEmpty();\n\n\t},\n\tisIntersectionBox: function ( box ) {\n\n\t\tconsole.warn( 'THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\treturn this.intersectsBox( box );\n\n\t},\n\tisIntersectionSphere: function ( sphere ) {\n\n\t\tconsole.warn( 'THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\n\t\treturn this.intersectsSphere( sphere );\n\n\t},\n\tsize: function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Box3: .size() has been renamed to .getSize().' );\n\t\treturn this.getSize( optionalTarget );\n\n\t}\n} );\n\nLine3.prototype.center = function ( optionalTarget ) {\n\n\tconsole.warn( 'THREE.Line3: .center() has been renamed to .getCenter().' );\n\treturn this.getCenter( optionalTarget );\n\n};\n\nObject.assign( _Math, {\n\n\trandom16: function () {\n\n\t\tconsole.warn( 'THREE.Math: .random16() has been deprecated. Use Math.random() instead.' );\n\t\treturn Math.random();\n\n\t},\n\n\tnearestPowerOfTwo: function ( value ) {\n\n\t\tconsole.warn( 'THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo().' );\n\t\treturn _Math.floorPowerOfTwo( value );\n\n\t},\n\n\tnextPowerOfTwo: function ( value ) {\n\n\t\tconsole.warn( 'THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo().' );\n\t\treturn _Math.ceilPowerOfTwo( value );\n\n\t}\n\n} );\n\nObject.assign( Matrix3.prototype, {\n\n\tflattenToArrayOffset: function ( array, offset ) {\n\n\t\tconsole.warn( \"THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\" );\n\t\treturn this.toArray( array, offset );\n\n\t},\n\tmultiplyVector3: function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.' );\n\t\treturn vector.applyMatrix3( this );\n\n\t},\n\tmultiplyVector3Array: function ( /* a */ ) {\n\n\t\tconsole.error( 'THREE.Matrix3: .multiplyVector3Array() has been removed.' );\n\n\t},\n\tapplyToBuffer: function ( buffer /*, offset, length */ ) {\n\n\t\tconsole.warn( 'THREE.Matrix3: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead.' );\n\t\treturn this.applyToBufferAttribute( buffer );\n\n\t},\n\tapplyToVector3Array: function ( /* array, offset, length */ ) {\n\n\t\tconsole.error( 'THREE.Matrix3: .applyToVector3Array() has been removed.' );\n\n\t}\n\n} );\n\nObject.assign( Matrix4.prototype, {\n\n\textractPosition: function ( m ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().' );\n\t\treturn this.copyPosition( m );\n\n\t},\n\tflattenToArrayOffset: function ( array, offset ) {\n\n\t\tconsole.warn( \"THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\" );\n\t\treturn this.toArray( array, offset );\n\n\t},\n\tgetPosition: function () {\n\n\t\tvar v1;\n\n\t\treturn function getPosition() {\n\n\t\t\tif ( v1 === undefined ) v1 = new Vector3();\n\t\t\tconsole.warn( 'THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.' );\n\t\t\treturn v1.setFromMatrixColumn( this, 3 );\n\n\t\t};\n\n\t}(),\n\tsetRotationFromQuaternion: function ( q ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().' );\n\t\treturn this.makeRotationFromQuaternion( q );\n\n\t},\n\tmultiplyToArray: function () {\n\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyToArray() has been removed.' );\n\n\t},\n\tmultiplyVector3: function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\treturn vector.applyMatrix4( this );\n\n\t},\n\tmultiplyVector4: function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\treturn vector.applyMatrix4( this );\n\n\t},\n\tmultiplyVector3Array: function ( /* a */ ) {\n\n\t\tconsole.error( 'THREE.Matrix4: .multiplyVector3Array() has been removed.' );\n\n\t},\n\trotateAxis: function ( v ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.' );\n\t\tv.transformDirection( this );\n\n\t},\n\tcrossVector: function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\treturn vector.applyMatrix4( this );\n\n\t},\n\ttranslate: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .translate() has been removed.' );\n\n\t},\n\trotateX: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .rotateX() has been removed.' );\n\n\t},\n\trotateY: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .rotateY() has been removed.' );\n\n\t},\n\trotateZ: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .rotateZ() has been removed.' );\n\n\t},\n\trotateByAxis: function () {\n\n\t\tconsole.error( 'THREE.Matrix4: .rotateByAxis() has been removed.' );\n\n\t},\n\tapplyToBuffer: function ( buffer /*, offset, length */ ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead.' );\n\t\treturn this.applyToBufferAttribute( buffer );\n\n\t},\n\tapplyToVector3Array: function ( /* array, offset, length */ ) {\n\n\t\tconsole.error( 'THREE.Matrix4: .applyToVector3Array() has been removed.' );\n\n\t},\n\tmakeFrustum: function ( left, right, bottom, top, near, far ) {\n\n\t\tconsole.warn( 'THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead.' );\n\t\treturn this.makePerspective( left, right, top, bottom, near, far );\n\n\t}\n\n} );\n\nPlane.prototype.isIntersectionLine = function ( line ) {\n\n\tconsole.warn( 'THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().' );\n\treturn this.intersectsLine( line );\n\n};\n\nQuaternion.prototype.multiplyVector3 = function ( vector ) {\n\n\tconsole.warn( 'THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.' );\n\treturn vector.applyQuaternion( this );\n\n};\n\nObject.assign( Ray.prototype, {\n\n\tisIntersectionBox: function ( box ) {\n\n\t\tconsole.warn( 'THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\treturn this.intersectsBox( box );\n\n\t},\n\tisIntersectionPlane: function ( plane ) {\n\n\t\tconsole.warn( 'THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().' );\n\t\treturn this.intersectsPlane( plane );\n\n\t},\n\tisIntersectionSphere: function ( sphere ) {\n\n\t\tconsole.warn( 'THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\n\t\treturn this.intersectsSphere( sphere );\n\n\t}\n\n} );\n\nObject.assign( Shape.prototype, {\n\n\textractAllPoints: function ( divisions ) {\n\n\t\tconsole.warn( 'THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead.' );\n\t\treturn this.extractPoints( divisions );\n\n\t},\n\textrude: function ( options ) {\n\n\t\tconsole.warn( 'THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.' );\n\t\treturn new ExtrudeGeometry( this, options );\n\n\t},\n\tmakeGeometry: function ( options ) {\n\n\t\tconsole.warn( 'THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.' );\n\t\treturn new ShapeGeometry( this, options );\n\n\t}\n\n} );\n\nObject.assign( Vector2.prototype, {\n\n\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\tconsole.warn( 'THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\n\t},\n\tdistanceToManhattan: function ( v ) {\n\n\t\tconsole.warn( 'THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo().' );\n\t\treturn this.manhattanDistanceTo( v );\n\n\t},\n\tlengthManhattan: function () {\n\n\t\tconsole.warn( 'THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength().' );\n\t\treturn this.manhattanLength();\n\n\t}\n\n} );\n\nObject.assign( Vector3.prototype, {\n\n\tsetEulerFromRotationMatrix: function () {\n\n\t\tconsole.error( 'THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.' );\n\n\t},\n\tsetEulerFromQuaternion: function () {\n\n\t\tconsole.error( 'THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.' );\n\n\t},\n\tgetPositionFromMatrix: function ( m ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().' );\n\t\treturn this.setFromMatrixPosition( m );\n\n\t},\n\tgetScaleFromMatrix: function ( m ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().' );\n\t\treturn this.setFromMatrixScale( m );\n\n\t},\n\tgetColumnFromMatrix: function ( index, matrix ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().' );\n\t\treturn this.setFromMatrixColumn( matrix, index );\n\n\t},\n\tapplyProjection: function ( m ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead.' );\n\t\treturn this.applyMatrix4( m );\n\n\t},\n\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\n\t},\n\tdistanceToManhattan: function ( v ) {\n\n\t\tconsole.warn( 'THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo().' );\n\t\treturn this.manhattanDistanceTo( v );\n\n\t},\n\tlengthManhattan: function () {\n\n\t\tconsole.warn( 'THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength().' );\n\t\treturn this.manhattanLength();\n\n\t}\n\n} );\n\nObject.assign( Vector4.prototype, {\n\n\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\tconsole.warn( 'THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\n\t},\n\tlengthManhattan: function () {\n\n\t\tconsole.warn( 'THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength().' );\n\t\treturn this.manhattanLength();\n\n\t}\n\n} );\n\n//\n\nGeometry.prototype.computeTangents = function () {\n\n\tconsole.warn( 'THREE.Geometry: .computeTangents() has been removed.' );\n\n};\n\nObject.assign( Object3D.prototype, {\n\n\tgetChildByName: function ( name ) {\n\n\t\tconsole.warn( 'THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().' );\n\t\treturn this.getObjectByName( name );\n\n\t},\n\trenderDepth: function () {\n\n\t\tconsole.warn( 'THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.' );\n\n\t},\n\ttranslate: function ( distance, axis ) {\n\n\t\tconsole.warn( 'THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.' );\n\t\treturn this.translateOnAxis( axis, distance );\n\n\t}\n\n} );\n\nObject.defineProperties( Object3D.prototype, {\n\n\teulerOrder: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\n\t\t\treturn this.rotation.order;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\n\t\t\tthis.rotation.order = value;\n\n\t\t}\n\t},\n\tuseQuaternion: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperties( LOD.prototype, {\n\n\tobjects: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.LOD: .objects has been renamed to .levels.' );\n\t\t\treturn this.levels;\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperty( Skeleton.prototype, 'useVertexTexture', {\n\n\tget: function () {\n\n\t\tconsole.warn( 'THREE.Skeleton: useVertexTexture has been removed.' );\n\n\t},\n\tset: function () {\n\n\t\tconsole.warn( 'THREE.Skeleton: useVertexTexture has been removed.' );\n\n\t}\n\n} );\n\nObject.defineProperty( Curve.prototype, '__arcLengthDivisions', {\n\n\tget: function () {\n\n\t\tconsole.warn( 'THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.' );\n\t\treturn this.arcLengthDivisions;\n\n\t},\n\tset: function ( value ) {\n\n\t\tconsole.warn( 'THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.' );\n\t\tthis.arcLengthDivisions = value;\n\n\t}\n\n} );\n\n//\n\nPerspectiveCamera.prototype.setLens = function ( focalLength, filmGauge ) {\n\n\tconsole.warn( \"THREE.PerspectiveCamera.setLens is deprecated. \" +\n\t\t\t\"Use .setFocalLength and .filmGauge for a photographic setup.\" );\n\n\tif ( filmGauge !== undefined ) this.filmGauge = filmGauge;\n\tthis.setFocalLength( focalLength );\n\n};\n\n//\n\nObject.defineProperties( Light.prototype, {\n\tonlyShadow: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Light: .onlyShadow has been removed.' );\n\n\t\t}\n\t},\n\tshadowCameraFov: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFov is now .shadow.camera.fov.' );\n\t\t\tthis.shadow.camera.fov = value;\n\n\t\t}\n\t},\n\tshadowCameraLeft: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraLeft is now .shadow.camera.left.' );\n\t\t\tthis.shadow.camera.left = value;\n\n\t\t}\n\t},\n\tshadowCameraRight: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraRight is now .shadow.camera.right.' );\n\t\t\tthis.shadow.camera.right = value;\n\n\t\t}\n\t},\n\tshadowCameraTop: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraTop is now .shadow.camera.top.' );\n\t\t\tthis.shadow.camera.top = value;\n\n\t\t}\n\t},\n\tshadowCameraBottom: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.' );\n\t\t\tthis.shadow.camera.bottom = value;\n\n\t\t}\n\t},\n\tshadowCameraNear: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraNear is now .shadow.camera.near.' );\n\t\t\tthis.shadow.camera.near = value;\n\n\t\t}\n\t},\n\tshadowCameraFar: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFar is now .shadow.camera.far.' );\n\t\t\tthis.shadow.camera.far = value;\n\n\t\t}\n\t},\n\tshadowCameraVisible: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.' );\n\n\t\t}\n\t},\n\tshadowBias: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowBias is now .shadow.bias.' );\n\t\t\tthis.shadow.bias = value;\n\n\t\t}\n\t},\n\tshadowDarkness: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowDarkness has been removed.' );\n\n\t\t}\n\t},\n\tshadowMapWidth: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.' );\n\t\t\tthis.shadow.mapSize.width = value;\n\n\t\t}\n\t},\n\tshadowMapHeight: {\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.' );\n\t\t\tthis.shadow.mapSize.height = value;\n\n\t\t}\n\t}\n} );\n\n//\n\nObject.defineProperties( BufferAttribute.prototype, {\n\n\tlength: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.BufferAttribute: .length has been deprecated. Use .count instead.' );\n\t\t\treturn this.array.length;\n\n\t\t}\n\t}\n\n} );\n\nObject.assign( BufferGeometry.prototype, {\n\n\taddIndex: function ( index ) {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().' );\n\t\tthis.setIndex( index );\n\n\t},\n\taddDrawCall: function ( start, count, indexOffset ) {\n\n\t\tif ( indexOffset !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.' );\n\n\t\t}\n\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() is now .addGroup().' );\n\t\tthis.addGroup( start, count );\n\n\t},\n\tclearDrawCalls: function () {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().' );\n\t\tthis.clearGroups();\n\n\t},\n\tcomputeTangents: function () {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .computeTangents() has been removed.' );\n\n\t},\n\tcomputeOffsets: function () {\n\n\t\tconsole.warn( 'THREE.BufferGeometry: .computeOffsets() has been removed.' );\n\n\t}\n\n} );\n\nObject.defineProperties( BufferGeometry.prototype, {\n\n\tdrawcalls: {\n\t\tget: function () {\n\n\t\t\tconsole.error( 'THREE.BufferGeometry: .drawcalls has been renamed to .groups.' );\n\t\t\treturn this.groups;\n\n\t\t}\n\t},\n\toffsets: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .offsets has been renamed to .groups.' );\n\t\t\treturn this.groups;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.defineProperties( Uniform.prototype, {\n\n\tdynamic: {\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.' );\n\n\t\t}\n\t},\n\tonUpdate: {\n\t\tvalue: function () {\n\n\t\t\tconsole.warn( 'THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead.' );\n\t\t\treturn this;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.defineProperties( Material.prototype, {\n\n\twrapAround: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .wrapAround has been removed.' );\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .wrapAround has been removed.' );\n\n\t\t}\n\t},\n\twrapRGB: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Material: .wrapRGB has been removed.' );\n\t\t\treturn new Color();\n\n\t\t}\n\t},\n\n\tshading: {\n\t\tget: function () {\n\n\t\t\tconsole.error( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\t\t\tthis.flatShading = ( value === FlatShading );\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperties( MeshPhongMaterial.prototype, {\n\n\tmetal: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead.' );\n\t\t\treturn false;\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead' );\n\n\t\t}\n\t}\n\n} );\n\nObject.defineProperties( ShaderMaterial.prototype, {\n\n\tderivatives: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\n\t\t\treturn this.extensions.derivatives;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\n\t\t\tthis.extensions.derivatives = value;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.assign( WebGLRenderer.prototype, {\n\n\tgetCurrentRenderTarget: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget().' );\n\t\treturn this.getRenderTarget();\n\n\t},\n\n\tgetMaxAnisotropy: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy().' );\n\t\treturn this.capabilities.getMaxAnisotropy();\n\n\t},\n\n\tgetPrecision: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision.' );\n\t\treturn this.capabilities.precision;\n\n\t},\n\n\tresetGLState: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .resetGLState() is now .state.reset().' );\n\t\treturn this.state.reset();\n\n\t},\n\n\tsupportsFloatTextures: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).' );\n\t\treturn this.extensions.get( 'OES_texture_float' );\n\n\t},\n\tsupportsHalfFloatTextures: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).' );\n\t\treturn this.extensions.get( 'OES_texture_half_float' );\n\n\t},\n\tsupportsStandardDerivatives: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).' );\n\t\treturn this.extensions.get( 'OES_standard_derivatives' );\n\n\t},\n\tsupportsCompressedTextureS3TC: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).' );\n\t\treturn this.extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t},\n\tsupportsCompressedTexturePVRTC: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).' );\n\t\treturn this.extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t},\n\tsupportsBlendMinMax: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).' );\n\t\treturn this.extensions.get( 'EXT_blend_minmax' );\n\n\t},\n\tsupportsVertexTextures: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures.' );\n\t\treturn this.capabilities.vertexTextures;\n\n\t},\n\tsupportsInstancedArrays: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).' );\n\t\treturn this.extensions.get( 'ANGLE_instanced_arrays' );\n\n\t},\n\tenableScissorTest: function ( boolean ) {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().' );\n\t\tthis.setScissorTest( boolean );\n\n\t},\n\tinitMaterial: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .initMaterial() has been removed.' );\n\n\t},\n\taddPrePlugin: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .addPrePlugin() has been removed.' );\n\n\t},\n\taddPostPlugin: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .addPostPlugin() has been removed.' );\n\n\t},\n\tupdateShadowMap: function () {\n\n\t\tconsole.warn( 'THREE.WebGLRenderer: .updateShadowMap() has been removed.' );\n\n\t}\n\n} );\n\nObject.defineProperties( WebGLRenderer.prototype, {\n\n\tshadowMapEnabled: {\n\t\tget: function () {\n\n\t\t\treturn this.shadowMap.enabled;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.' );\n\t\t\tthis.shadowMap.enabled = value;\n\n\t\t}\n\t},\n\tshadowMapType: {\n\t\tget: function () {\n\n\t\t\treturn this.shadowMap.type;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.' );\n\t\t\tthis.shadowMap.type = value;\n\n\t\t}\n\t},\n\tshadowMapCullFace: {\n\t\tget: function () {\n\n\t\t\treturn this.shadowMap.cullFace;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace is now .shadowMap.cullFace.' );\n\t\t\tthis.shadowMap.cullFace = value;\n\n\t\t}\n\t}\n} );\n\nObject.defineProperties( WebGLShadowMap.prototype, {\n\n\tcullFace: {\n\t\tget: function () {\n\n\t\t\treturn this.renderReverseSided ? CullFaceFront : CullFaceBack;\n\n\t\t},\n\t\tset: function ( cullFace ) {\n\n\t\t\tvar value = ( cullFace !== CullFaceBack );\n\t\t\tconsole.warn( \"WebGLRenderer: .shadowMap.cullFace is deprecated. Set .shadowMap.renderReverseSided to \" + value + \".\" );\n\t\t\tthis.renderReverseSided = value;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nObject.defineProperties( WebGLRenderTarget.prototype, {\n\n\twrapS: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\n\t\t\treturn this.texture.wrapS;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\n\t\t\tthis.texture.wrapS = value;\n\n\t\t}\n\t},\n\twrapT: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\n\t\t\treturn this.texture.wrapT;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\n\t\t\tthis.texture.wrapT = value;\n\n\t\t}\n\t},\n\tmagFilter: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\n\t\t\treturn this.texture.magFilter;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\n\t\t\tthis.texture.magFilter = value;\n\n\t\t}\n\t},\n\tminFilter: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\n\t\t\treturn this.texture.minFilter;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\n\t\t\tthis.texture.minFilter = value;\n\n\t\t}\n\t},\n\tanisotropy: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\n\t\t\treturn this.texture.anisotropy;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\n\t\t\tthis.texture.anisotropy = value;\n\n\t\t}\n\t},\n\toffset: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\n\t\t\treturn this.texture.offset;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\n\t\t\tthis.texture.offset = value;\n\n\t\t}\n\t},\n\trepeat: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\n\t\t\treturn this.texture.repeat;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\n\t\t\tthis.texture.repeat = value;\n\n\t\t}\n\t},\n\tformat: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\n\t\t\treturn this.texture.format;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\n\t\t\tthis.texture.format = value;\n\n\t\t}\n\t},\n\ttype: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\n\t\t\treturn this.texture.type;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\n\t\t\tthis.texture.type = value;\n\n\t\t}\n\t},\n\tgenerateMipmaps: {\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\n\t\t\treturn this.texture.generateMipmaps;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\n\t\t\tthis.texture.generateMipmaps = value;\n\n\t\t}\n\t}\n\n} );\n\n//\n\nAudio.prototype.load = function ( file ) {\n\n\tconsole.warn( 'THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.' );\n\tvar scope = this;\n\tvar audioLoader = new AudioLoader();\n\taudioLoader.load( file, function ( buffer ) {\n\n\t\tscope.setBuffer( buffer );\n\n\t} );\n\treturn this;\n\n};\n\nAudioAnalyser.prototype.getData = function () {\n\n\tconsole.warn( 'THREE.AudioAnalyser: .getData() is now .getFrequencyData().' );\n\treturn this.getFrequencyData();\n\n};\n\n//\n\nCubeCamera.prototype.updateCubeMap = function ( renderer, scene ) {\n\n\tconsole.warn( 'THREE.CubeCamera: .updateCubeMap() is now .update().' );\n\treturn this.update( renderer, scene );\n\n};\n\n// https://github.com/mrdoob/three.js/blob/dev/examples/js/loaders/OBJLoader.js\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\n\n// o object_name | g group_name\nvar object_pattern = /^[og]\\s*(.+)?/;\n// mtllib file_reference\nvar material_library_pattern = /^mtllib /;\n// usemtl material_name\nvar material_use_pattern = /^usemtl /;\n\nfunction ParserState() {\n\n            var state = {\n                        objects: [],\n                        object: {},\n\n                        vertices: [],\n                        normals: [],\n                        colors: [],\n                        uvs: [],\n\n                        materialLibraries: [],\n\n                        startObject: function startObject(name, fromDeclaration) {\n\n                                    // If the current object (initial from reset) is not from a g/o declaration in the parsed\n                                    // file. We need to use it for the first parsed g/o to keep things in sync.\n                                    if (this.object && this.object.fromDeclaration === false) {\n\n                                                this.object.name = name;\n                                                this.object.fromDeclaration = fromDeclaration !== false;\n                                                return;\n                                    }\n\n                                    var previousMaterial = this.object && typeof this.object.currentMaterial === 'function' ? this.object.currentMaterial() : undefined;\n\n                                    if (this.object && typeof this.object._finalize === 'function') {\n\n                                                this.object._finalize(true);\n                                    }\n\n                                    this.object = {\n                                                name: name || '',\n                                                fromDeclaration: fromDeclaration !== false,\n\n                                                geometry: {\n                                                            vertices: [],\n                                                            normals: [],\n                                                            colors: [],\n                                                            uvs: []\n                                                },\n                                                materials: [],\n                                                smooth: true,\n\n                                                startMaterial: function startMaterial(name, libraries) {\n\n                                                            var previous = this._finalize(false);\n\n                                                            // New usemtl declaration overwrites an inherited material, except if faces were declared\n                                                            // after the material, then it must be preserved for proper MultiMaterial continuation.\n                                                            if (previous && (previous.inherited || previous.groupCount <= 0)) {\n\n                                                                        this.materials.splice(previous.index, 1);\n                                                            }\n\n                                                            var material = {\n                                                                        index: this.materials.length,\n                                                                        name: name || '',\n                                                                        mtllib: Array.isArray(libraries) && libraries.length > 0 ? libraries[libraries.length - 1] : '',\n                                                                        smooth: previous !== undefined ? previous.smooth : this.smooth,\n                                                                        groupStart: previous !== undefined ? previous.groupEnd : 0,\n                                                                        groupEnd: -1,\n                                                                        groupCount: -1,\n                                                                        inherited: false,\n\n                                                                        clone: function clone(index) {\n\n                                                                                    var cloned = {\n                                                                                                index: typeof index === 'number' ? index : this.index,\n                                                                                                name: this.name,\n                                                                                                mtllib: this.mtllib,\n                                                                                                smooth: this.smooth,\n                                                                                                groupStart: 0,\n                                                                                                groupEnd: -1,\n                                                                                                groupCount: -1,\n                                                                                                inherited: false\n                                                                                    };\n                                                                                    cloned.clone = this.clone.bind(cloned);\n                                                                                    return cloned;\n                                                                        }\n                                                            };\n\n                                                            this.materials.push(material);\n\n                                                            return material;\n                                                },\n\n                                                currentMaterial: function currentMaterial() {\n\n                                                            if (this.materials.length > 0) {\n\n                                                                        return this.materials[this.materials.length - 1];\n                                                            }\n\n                                                            return undefined;\n                                                },\n\n                                                _finalize: function _finalize(end) {\n\n                                                            var lastMultiMaterial = this.currentMaterial();\n                                                            if (lastMultiMaterial && lastMultiMaterial.groupEnd === -1) {\n\n                                                                        lastMultiMaterial.groupEnd = this.geometry.vertices.length / 3;\n                                                                        lastMultiMaterial.groupCount = lastMultiMaterial.groupEnd - lastMultiMaterial.groupStart;\n                                                                        lastMultiMaterial.inherited = false;\n                                                            }\n\n                                                            // Ignore objects tail materials if no face declarations followed them before a new o/g started.\n                                                            if (end && this.materials.length > 1) {\n\n                                                                        for (var mi = this.materials.length - 1; mi >= 0; mi--) {\n\n                                                                                    if (this.materials[mi].groupCount <= 0) {\n\n                                                                                                this.materials.splice(mi, 1);\n                                                                                    }\n                                                                        }\n                                                            }\n\n                                                            // Guarantee at least one empty material, this makes the creation later more straight forward.\n                                                            if (end && this.materials.length === 0) {\n\n                                                                        this.materials.push({\n                                                                                    name: '',\n                                                                                    smooth: this.smooth\n                                                                        });\n                                                            }\n\n                                                            return lastMultiMaterial;\n                                                }\n                                    };\n\n                                    // Inherit previous objects material.\n                                    // Spec tells us that a declared material must be set to all objects until a new material is declared.\n                                    // If a usemtl declaration is encountered while this new object is being parsed, it will\n                                    // overwrite the inherited material. Exception being that there was already face declarations\n                                    // to the inherited material, then it will be preserved for proper MultiMaterial continuation.\n\n                                    if (previousMaterial && previousMaterial.name && typeof previousMaterial.clone === 'function') {\n\n                                                var declared = previousMaterial.clone(0);\n                                                declared.inherited = true;\n                                                this.object.materials.push(declared);\n                                    }\n\n                                    this.objects.push(this.object);\n                        },\n\n                        finalize: function finalize() {\n\n                                    if (this.object && typeof this.object._finalize === 'function') {\n\n                                                this.object._finalize(true);\n                                    }\n                        },\n\n                        parseVertexIndex: function parseVertexIndex(value, len) {\n\n                                    var index = parseInt(value, 10);\n                                    return (index >= 0 ? index - 1 : index + len / 3) * 3;\n                        },\n\n                        parseNormalIndex: function parseNormalIndex(value, len) {\n\n                                    var index = parseInt(value, 10);\n                                    return (index >= 0 ? index - 1 : index + len / 3) * 3;\n                        },\n\n                        parseUVIndex: function parseUVIndex(value, len) {\n\n                                    var index = parseInt(value, 10);\n                                    return (index >= 0 ? index - 1 : index + len / 2) * 2;\n                        },\n\n                        addVertex: function addVertex(a, b, c) {\n\n                                    var src = this.vertices;\n                                    var dst = this.object.geometry.vertices;\n\n                                    dst.push(src[a + 0], src[a + 1], src[a + 2]);\n                                    dst.push(src[b + 0], src[b + 1], src[b + 2]);\n                                    dst.push(src[c + 0], src[c + 1], src[c + 2]);\n                        },\n\n                        addVertexLine: function addVertexLine(a) {\n\n                                    var src = this.vertices;\n                                    var dst = this.object.geometry.vertices;\n\n                                    dst.push(src[a + 0], src[a + 1], src[a + 2]);\n                        },\n\n                        addNormal: function addNormal(a, b, c) {\n\n                                    var src = this.normals;\n                                    var dst = this.object.geometry.normals;\n\n                                    dst.push(src[a + 0], src[a + 1], src[a + 2]);\n                                    dst.push(src[b + 0], src[b + 1], src[b + 2]);\n                                    dst.push(src[c + 0], src[c + 1], src[c + 2]);\n                        },\n\n                        addColor: function addColor(a, b, c) {\n\n                                    var src = this.colors;\n                                    var dst = this.object.geometry.colors;\n\n                                    dst.push(src[a + 0], src[a + 1], src[a + 2]);\n                                    dst.push(src[b + 0], src[b + 1], src[b + 2]);\n                                    dst.push(src[c + 0], src[c + 1], src[c + 2]);\n                        },\n\n                        addUV: function addUV(a, b, c) {\n\n                                    var src = this.uvs;\n                                    var dst = this.object.geometry.uvs;\n\n                                    dst.push(src[a + 0], src[a + 1]);\n                                    dst.push(src[b + 0], src[b + 1]);\n                                    dst.push(src[c + 0], src[c + 1]);\n                        },\n\n                        addUVLine: function addUVLine(a) {\n\n                                    var src = this.uvs;\n                                    var dst = this.object.geometry.uvs;\n\n                                    dst.push(src[a + 0], src[a + 1]);\n                        },\n\n                        addFace: function addFace(a, b, c, ua, ub, uc, na, nb, nc) {\n\n                                    var vLen = this.vertices.length;\n\n                                    var ia = this.parseVertexIndex(a, vLen);\n                                    var ib = this.parseVertexIndex(b, vLen);\n                                    var ic = this.parseVertexIndex(c, vLen);\n\n                                    this.addVertex(ia, ib, ic);\n\n                                    if (ua !== undefined) {\n\n                                                var uvLen = this.uvs.length;\n\n                                                ia = this.parseUVIndex(ua, uvLen);\n                                                ib = this.parseUVIndex(ub, uvLen);\n                                                ic = this.parseUVIndex(uc, uvLen);\n\n                                                this.addUV(ia, ib, ic);\n                                    }\n\n                                    if (na !== undefined) {\n\n                                                // Normals are many times the same. If so, skip function call and parseInt.\n                                                var nLen = this.normals.length;\n                                                ia = this.parseNormalIndex(na, nLen);\n\n                                                ib = na === nb ? ia : this.parseNormalIndex(nb, nLen);\n                                                ic = na === nc ? ia : this.parseNormalIndex(nc, nLen);\n\n                                                this.addNormal(ia, ib, ic);\n                                    }\n\n                                    if (this.colors.length > 0) {\n\n                                                this.addColor(ia, ib, ic);\n                                    }\n                        },\n\n                        addLineGeometry: function addLineGeometry(vertices, uvs) {\n\n                                    this.object.geometry.type = 'Line';\n\n                                    var vLen = this.vertices.length;\n                                    var uvLen = this.uvs.length;\n\n                                    for (var vi = 0, l = vertices.length; vi < l; vi++) {\n\n                                                this.addVertexLine(this.parseVertexIndex(vertices[vi], vLen));\n                                    }\n\n                                    for (var uvi = 0, l = uvs.length; uvi < l; uvi++) {\n\n                                                this.addUVLine(this.parseUVIndex(uvs[uvi], uvLen));\n                                    }\n                        }\n\n            };\n\n            state.startObject('', false);\n\n            return state;\n}\n\n//\n\nfunction OBJLoader(manager) {\n\n            this.manager = manager !== undefined ? manager : DefaultLoadingManager;\n\n            this.materials = null;\n}\n\nOBJLoader.prototype = {\n\n            constructor: OBJLoader,\n\n            load: function load(url, onLoad, onProgress, onError) {\n\n                        var scope = this;\n\n                        var loader = new FileLoader(scope.manager);\n                        loader.setPath(this.path);\n                        loader.load(url, function (text) {\n\n                                    onLoad(scope.parse(text));\n                        }, onProgress, onError);\n            },\n\n            setPath: function setPath(value) {\n\n                        this.path = value;\n            },\n\n            setMaterials: function setMaterials(materials) {\n\n                        this.materials = materials;\n\n                        return this;\n            },\n\n            parse: function parse(text) {\n\n                        console.time('OBJLoader');\n\n                        var state = new ParserState();\n\n                        if (text.indexOf('\\r\\n') !== -1) {\n\n                                    // This is faster than String.split with regex that splits on both\n                                    text = text.replace(/\\r\\n/g, '\\n');\n                        }\n\n                        if (text.indexOf('\\\\\\n') !== -1) {\n\n                                    // join lines separated by a line continuation character (\\)\n                                    text = text.replace(/\\\\\\n/g, '');\n                        }\n\n                        var lines = text.split('\\n');\n                        var line = '',\n                            lineFirstChar = '';\n                        var lineLength = 0;\n                        var result = [];\n\n                        // Faster to just trim left side of the line. Use if available.\n                        var trimLeft = typeof ''.trimLeft === 'function';\n\n                        for (var i = 0, l = lines.length; i < l; i++) {\n\n                                    line = lines[i];\n\n                                    line = trimLeft ? line.trimLeft() : line.trim();\n\n                                    lineLength = line.length;\n\n                                    if (lineLength === 0) continue;\n\n                                    lineFirstChar = line.charAt(0);\n\n                                    // @todo invoke passed in handler if any\n                                    if (lineFirstChar === '#') continue;\n\n                                    if (lineFirstChar === 'v') {\n\n                                                var data = line.split(/\\s+/);\n\n                                                switch (data[0]) {\n\n                                                            case 'v':\n                                                                        state.vertices.push(parseFloat(data[1]), parseFloat(data[2]), parseFloat(data[3]));\n                                                                        if (data.length === 8) {\n\n                                                                                    state.colors.push(parseFloat(data[4]), parseFloat(data[5]), parseFloat(data[6]));\n                                                                        }\n                                                                        break;\n                                                            case 'vn':\n                                                                        state.normals.push(parseFloat(data[1]), parseFloat(data[2]), parseFloat(data[3]));\n                                                                        break;\n                                                            case 'vt':\n                                                                        state.uvs.push(parseFloat(data[1]), parseFloat(data[2]));\n                                                                        break;\n\n                                                }\n                                    } else if (lineFirstChar === 'f') {\n\n                                                var lineData = line.substr(1).trim();\n                                                var vertexData = lineData.split(/\\s+/);\n                                                var faceVertices = [];\n\n                                                // Parse the face vertex data into an easy to work with format\n\n                                                for (var j = 0, jl = vertexData.length; j < jl; j++) {\n\n                                                            var vertex = vertexData[j];\n\n                                                            if (vertex.length > 0) {\n\n                                                                        var vertexParts = vertex.split('/');\n                                                                        faceVertices.push(vertexParts);\n                                                            }\n                                                }\n\n                                                // Draw an edge between the first vertex and all subsequent vertices to form an n-gon\n\n                                                var v1 = faceVertices[0];\n\n                                                for (var j = 1, jl = faceVertices.length - 1; j < jl; j++) {\n\n                                                            var v2 = faceVertices[j];\n                                                            var v3 = faceVertices[j + 1];\n\n                                                            state.addFace(v1[0], v2[0], v3[0], v1[1], v2[1], v3[1], v1[2], v2[2], v3[2]);\n                                                }\n                                    } else if (lineFirstChar === 'l') {\n\n                                                var lineParts = line.substring(1).trim().split(' ');\n                                                var lineVertices = [],\n                                                    lineUVs = [];\n\n                                                if (line.indexOf('/') === -1) {\n\n                                                            lineVertices = lineParts;\n                                                } else {\n\n                                                            for (var li = 0, llen = lineParts.length; li < llen; li++) {\n\n                                                                        var parts = lineParts[li].split('/');\n\n                                                                        if (parts[0] !== '') lineVertices.push(parts[0]);\n                                                                        if (parts[1] !== '') lineUVs.push(parts[1]);\n                                                            }\n                                                }\n                                                state.addLineGeometry(lineVertices, lineUVs);\n                                    } else if ((result = object_pattern.exec(line)) !== null) {\n\n                                                // o object_name\n                                                // or\n                                                // g group_name\n\n                                                // WORKAROUND: https://bugs.chromium.org/p/v8/issues/detail?id=2869\n                                                // var name = result[ 0 ].substr( 1 ).trim();\n                                                var name = (' ' + result[0].substr(1).trim()).substr(1);\n\n                                                state.startObject(name);\n                                    } else if (material_use_pattern.test(line)) {\n\n                                                // material\n\n                                                state.object.startMaterial(line.substring(7).trim(), state.materialLibraries);\n                                    } else if (material_library_pattern.test(line)) {\n\n                                                // mtl file\n\n                                                state.materialLibraries.push(line.substring(7).trim());\n                                    } else if (lineFirstChar === 's') {\n\n                                                result = line.split(' ');\n\n                                                // smooth shading\n\n                                                // @todo Handle files that have varying smooth values for a set of faces inside one geometry,\n                                                // but does not define a usemtl for each face set.\n                                                // This should be detected and a dummy material created (later MultiMaterial and geometry groups).\n                                                // This requires some care to not create extra material on each smooth value for \"normal\" obj files.\n                                                // where explicit usemtl defines geometry groups.\n                                                // Example asset: examples/models/obj/cerberus/Cerberus.obj\n\n                                                /*\r\n                                                 * http://paulbourke.net/dataformats/obj/\r\n                                                 * or\r\n                                                 * http://www.cs.utah.edu/~boulos/cs3505/obj_spec.pdf\r\n                                                 *\r\n                                                 * From chapter \"Grouping\" Syntax explanation \"s group_number\":\r\n                                                 * \"group_number is the smoothing group number. To turn off smoothing groups, use a value of 0 or off.\r\n                                                 * Polygonal elements use group numbers to put elements in different smoothing groups. For free-form\r\n                                                 * surfaces, smoothing groups are either turned on or off; there is no difference between values greater\r\n                                                 * than 0.\"\r\n                                                 */\n                                                if (result.length > 1) {\n\n                                                            var value = result[1].trim().toLowerCase();\n                                                            state.object.smooth = value !== '0' && value !== 'off';\n                                                } else {\n\n                                                            // ZBrush can produce \"s\" lines #11707\n                                                            state.object.smooth = true;\n                                                }\n                                                var material = state.object.currentMaterial();\n                                                if (material) material.smooth = state.object.smooth;\n                                    } else {\n\n                                                // Handle null terminated files without exception\n                                                if (line === '\\0') continue;\n\n                                                throw new Error('OBJLoader: Unexpected line: \"' + line + '\"');\n                                    }\n                        }\n\n                        state.finalize();\n\n                        var container = new Group();\n                        container.materialLibraries = [].concat(state.materialLibraries);\n\n                        for (var i = 0, l = state.objects.length; i < l; i++) {\n\n                                    var object = state.objects[i];\n                                    var geometry = object.geometry;\n                                    var materials = object.materials;\n                                    var isLine = geometry.type === 'Line';\n\n                                    // Skip o/g line declarations that did not follow with any faces\n                                    if (geometry.vertices.length === 0) continue;\n\n                                    var buffergeometry = new BufferGeometry();\n\n                                    buffergeometry.addAttribute('position', new Float32BufferAttribute(geometry.vertices, 3));\n\n                                    if (geometry.normals.length > 0) {\n\n                                                buffergeometry.addAttribute('normal', new Float32BufferAttribute(geometry.normals, 3));\n                                    } else {\n\n                                                buffergeometry.computeVertexNormals();\n                                    }\n\n                                    if (geometry.colors.length > 0) {\n\n                                                buffergeometry.addAttribute('color', new Float32BufferAttribute(geometry.colors, 3));\n                                    }\n\n                                    if (geometry.uvs.length > 0) {\n\n                                                buffergeometry.addAttribute('uv', new Float32BufferAttribute(geometry.uvs, 2));\n                                    }\n\n                                    // Create materials\n\n                                    var createdMaterials = [];\n\n                                    for (var mi = 0, miLen = materials.length; mi < miLen; mi++) {\n\n                                                var sourceMaterial = materials[mi];\n                                                var material = undefined;\n\n                                                if (this.materials !== null) {\n\n                                                            material = this.materials.create(sourceMaterial.name);\n\n                                                            // mtl etc. loaders probably can't create line materials correctly, copy properties to a line material.\n                                                            if (isLine && material && !(material instanceof LineBasicMaterial)) {\n\n                                                                        var materialLine = new LineBasicMaterial();\n                                                                        materialLine.copy(material);\n                                                                        material = materialLine;\n                                                            }\n                                                }\n\n                                                if (!material) {\n\n                                                            material = !isLine ? new MeshPhongMaterial() : new LineBasicMaterial();\n                                                            material.name = sourceMaterial.name;\n                                                }\n\n                                                material.flatShading = !sourceMaterial.smooth;\n\n                                                createdMaterials.push(material);\n                                    }\n\n                                    // Create mesh\n\n                                    var mesh;\n\n                                    if (createdMaterials.length > 1) {\n\n                                                for (var mi = 0, miLen = materials.length; mi < miLen; mi++) {\n\n                                                            var sourceMaterial = materials[mi];\n                                                            buffergeometry.addGroup(sourceMaterial.groupStart, sourceMaterial.groupCount, mi);\n                                                }\n\n                                                mesh = !isLine ? new Mesh(buffergeometry, createdMaterials) : new LineSegments(buffergeometry, createdMaterials);\n                                    } else {\n\n                                                mesh = !isLine ? new Mesh(buffergeometry, createdMaterials[0]) : new LineSegments(buffergeometry, createdMaterials[0]);\n                                    }\n\n                                    mesh.name = object.name;\n\n                                    container.add(mesh);\n                        }\n\n                        console.timeEnd('OBJLoader');\n\n                        return container;\n            }\n\n};\n\n// https://github.com/mrdoob/three.js/blob/dev/examples/js/loaders/OBJLoader.js\n\nvar DDSLoader = function DDSLoader() {\n\n    this._parser = DDSLoader.parse;\n};\n\nDDSLoader.prototype = Object.create(CompressedTextureLoader.prototype);\nDDSLoader.prototype.constructor = DDSLoader;\n\nDDSLoader.parse = function (buffer, loadMipmaps) {\n\n    var dds = { mipmaps: [], width: 0, height: 0, format: null, mipmapCount: 1 };\n\n    // Adapted from @toji's DDS utils\n    // https://github.com/toji/webgl-texture-utils/blob/master/texture-util/dds.js\n\n    // All values and structures referenced from:\n    // http://msdn.microsoft.com/en-us/library/bb943991.aspx/\n\n    var DDS_MAGIC = 0x20534444;\n\n    var DDSD_MIPMAPCOUNT = 0x20000;\n\n    var DDSCAPS2_CUBEMAP = 0x200,\n        DDSCAPS2_CUBEMAP_POSITIVEX = 0x400,\n        DDSCAPS2_CUBEMAP_NEGATIVEX = 0x800,\n        DDSCAPS2_CUBEMAP_POSITIVEY = 0x1000,\n        DDSCAPS2_CUBEMAP_NEGATIVEY = 0x2000,\n        DDSCAPS2_CUBEMAP_POSITIVEZ = 0x4000,\n        DDSCAPS2_CUBEMAP_NEGATIVEZ = 0x8000;\n\n    var DDPF_FOURCC = 0x4;\n\n    function fourCCToInt32(value) {\n\n        return value.charCodeAt(0) + (value.charCodeAt(1) << 8) + (value.charCodeAt(2) << 16) + (value.charCodeAt(3) << 24);\n    }\n\n    function int32ToFourCC(value) {\n\n        return String.fromCharCode(value & 0xff, value >> 8 & 0xff, value >> 16 & 0xff, value >> 24 & 0xff);\n    }\n\n    function loadARGBMip(buffer, dataOffset, width, height) {\n\n        var dataLength = width * height * 4;\n        var srcBuffer = new Uint8Array(buffer, dataOffset, dataLength);\n        var byteArray = new Uint8Array(dataLength);\n        var dst = 0;\n        var src = 0;\n        for (var y = 0; y < height; y++) {\n\n            for (var x = 0; x < width; x++) {\n\n                var b = srcBuffer[src];src++;\n                var g = srcBuffer[src];src++;\n                var r = srcBuffer[src];src++;\n                var a = srcBuffer[src];src++;\n                byteArray[dst] = r;dst++; // r\n                byteArray[dst] = g;dst++; // g\n                byteArray[dst] = b;dst++; // b\n                byteArray[dst] = a;dst++; // a\n            }\n        }\n        return byteArray;\n    }\n\n    var FOURCC_DXT1 = fourCCToInt32('DXT1');\n    var FOURCC_DXT3 = fourCCToInt32('DXT3');\n    var FOURCC_DXT5 = fourCCToInt32('DXT5');\n    var FOURCC_ETC1 = fourCCToInt32('ETC1');\n\n    var headerLengthInt = 31; // The header length in 32 bit ints\n\n    // Offsets into the header array\n\n    var off_magic = 0;\n\n    var off_size = 1;\n    var off_flags = 2;\n    var off_height = 3;\n    var off_width = 4;\n\n    var off_mipmapCount = 7;\n\n    var off_pfFlags = 20;\n    var off_pfFourCC = 21;\n    var off_RGBBitCount = 22;\n    var off_RBitMask = 23;\n    var off_GBitMask = 24;\n    var off_BBitMask = 25;\n    var off_ABitMask = 26;\n    var off_caps2 = 28;\n\n    // Parse header\n\n    var header = new Int32Array(buffer, 0, headerLengthInt);\n\n    if (header[off_magic] !== DDS_MAGIC) {\n\n        console.error('DDSLoader.parse: Invalid magic number in DDS header.');\n        return dds;\n    }\n\n    if (!header[off_pfFlags] & DDPF_FOURCC) {\n\n        console.error('DDSLoader.parse: Unsupported format, must contain a FourCC code.');\n        return dds;\n    }\n\n    var blockBytes;\n\n    var fourCC = header[off_pfFourCC];\n\n    var isRGBAUncompressed = false;\n\n    switch (fourCC) {\n\n        case FOURCC_DXT1:\n\n            blockBytes = 8;\n            dds.format = RGB_S3TC_DXT1_Format;\n            break;\n\n        case FOURCC_DXT3:\n\n            blockBytes = 16;\n            dds.format = RGBA_S3TC_DXT3_Format;\n            break;\n\n        case FOURCC_DXT5:\n\n            blockBytes = 16;\n            dds.format = RGBA_S3TC_DXT5_Format;\n            break;\n\n        case FOURCC_ETC1:\n\n            blockBytes = 8;\n            dds.format = RGB_ETC1_Format;\n            break;\n\n        default:\n\n            if (header[off_RGBBitCount] === 32 && header[off_RBitMask] & 0xff0000 && header[off_GBitMask] & 0xff00 && header[off_BBitMask] & 0xff && header[off_ABitMask] & 0xff000000) {\n\n                isRGBAUncompressed = true;\n                blockBytes = 64;\n                dds.format = RGBAFormat;\n            } else {\n\n                console.error('DDSLoader.parse: Unsupported FourCC code ', int32ToFourCC(fourCC));\n                return dds;\n            }\n    }\n\n    dds.mipmapCount = 1;\n\n    if (header[off_flags] & DDSD_MIPMAPCOUNT && loadMipmaps !== false) {\n\n        dds.mipmapCount = Math.max(1, header[off_mipmapCount]);\n    }\n\n    var caps2 = header[off_caps2];\n    dds.isCubemap = !!(caps2 & DDSCAPS2_CUBEMAP);\n    if (dds.isCubemap && (!(caps2 & DDSCAPS2_CUBEMAP_POSITIVEX) || !(caps2 & DDSCAPS2_CUBEMAP_NEGATIVEX) || !(caps2 & DDSCAPS2_CUBEMAP_POSITIVEY) || !(caps2 & DDSCAPS2_CUBEMAP_NEGATIVEY) || !(caps2 & DDSCAPS2_CUBEMAP_POSITIVEZ) || !(caps2 & DDSCAPS2_CUBEMAP_NEGATIVEZ))) {\n\n        console.error('DDSLoader.parse: Incomplete cubemap faces');\n        return dds;\n    }\n\n    dds.width = header[off_width];\n    dds.height = header[off_height];\n\n    var dataOffset = header[off_size] + 4;\n\n    // Extract mipmaps buffers\n\n    var faces = dds.isCubemap ? 6 : 1;\n\n    for (var face = 0; face < faces; face++) {\n\n        var width = dds.width;\n        var height = dds.height;\n\n        for (var i = 0; i < dds.mipmapCount; i++) {\n\n            if (isRGBAUncompressed) {\n\n                var byteArray = loadARGBMip(buffer, dataOffset, width, height);\n                var dataLength = byteArray.length;\n            } else {\n\n                var dataLength = Math.max(4, width) / 4 * Math.max(4, height) / 4 * blockBytes;\n                var byteArray = new Uint8Array(buffer, dataOffset, dataLength);\n            }\n\n            var mipmap = { 'data': byteArray, 'width': width, 'height': height };\n            dds.mipmaps.push(mipmap);\n\n            dataOffset += dataLength;\n\n            width = Math.max(width >> 1, 1);\n            height = Math.max(height >> 1, 1);\n        }\n    }\n\n    return dds;\n};\n\n// https://github.com/mrdoob/three.js/blob/dev/examples/js/loaders/MTLLoader.js\n\nvar LoaderHandlers = Loader.Handlers;\nLoaderHandlers.add(/\\.dds$/i, new DDSLoader());\n\nvar MTLLoader = function MTLLoader(manager) {\n\n        this.manager = manager !== undefined ? manager : DefaultLoadingManager;\n};\n\nMTLLoader.prototype = {\n\n        constructor: MTLLoader,\n\n        /**\r\n         * Loads and parses a MTL asset from a URL.\r\n         *\r\n         * @param {String} url - URL to the MTL file.\r\n         * @param {Function} [onLoad] - Callback invoked with the loaded object.\r\n         * @param {Function} [onProgress] - Callback for download progress.\r\n         * @param {Function} [onError] - Callback for download errors.\r\n         *\r\n         * @see setPath setTexturePath\r\n         *\r\n         * @note In order for relative texture references to resolve correctly\r\n         * you must call setPath and/or setTexturePath explicitly prior to load.\r\n         */\n        load: function load(url, onLoad, onProgress, onError) {\n\n                var scope = this;\n\n                var loader = new FileLoader(this.manager);\n                loader.setPath(this.path);\n                loader.load(url, function (text) {\n\n                        onLoad(scope.parse(text));\n                }, onProgress, onError);\n        },\n\n        /**\r\n         * Set base path for resolving references.\r\n         * If set this path will be prepended to each loaded and found reference.\r\n         *\r\n         * @see setTexturePath\r\n         * @param {String} path\r\n         *\r\n         * @example\r\n         *     mtlLoader.setPath( 'assets/obj/' );\r\n         *     mtlLoader.load( 'my.mtl', ... );\r\n         */\n        setPath: function setPath(path) {\n\n                this.path = path;\n        },\n\n        /**\r\n         * Set base path for resolving texture references.\r\n         * If set this path will be prepended found texture reference.\r\n         * If not set and setPath is, it will be used as texture base path.\r\n         *\r\n         * @see setPath\r\n         * @param {String} path\r\n         *\r\n         * @example\r\n         *     mtlLoader.setPath( 'assets/obj/' );\r\n         *     mtlLoader.setTexturePath( 'assets/textures/' );\r\n         *     mtlLoader.load( 'my.mtl', ... );\r\n         */\n        setTexturePath: function setTexturePath(path) {\n\n                this.texturePath = path;\n        },\n\n        setBaseUrl: function setBaseUrl(path) {\n\n                console.warn('MTLLoader: .setBaseUrl() is deprecated. Use .setTexturePath( path ) for texture path or .setPath( path ) for general base path instead.');\n\n                this.setTexturePath(path);\n        },\n\n        setCrossOrigin: function setCrossOrigin(value) {\n\n                this.crossOrigin = value;\n        },\n\n        setMaterialOptions: function setMaterialOptions(value) {\n\n                this.materialOptions = value;\n        },\n\n        /**\r\n         * Parses a MTL file.\r\n         *\r\n         * @param {String} text - Content of MTL file\r\n         * @return {MTLLoader.MaterialCreator}\r\n         *\r\n         * @see setPath setTexturePath\r\n         *\r\n         * @note In order for relative texture references to resolve correctly\r\n         * you must call setPath and/or setTexturePath explicitly prior to parse.\r\n         */\n        parse: function parse(text) {\n\n                var lines = text.split('\\n');\n                var info = {};\n                var delimiter_pattern = /\\s+/;\n                var materialsInfo = {};\n\n                for (var i = 0; i < lines.length; i++) {\n\n                        var line = lines[i];\n                        line = line.trim();\n\n                        if (line.length === 0 || line.charAt(0) === '#') {\n\n                                // Blank line or comment ignore\n                                continue;\n                        }\n\n                        var pos = line.indexOf(' ');\n\n                        var key = pos >= 0 ? line.substring(0, pos) : line;\n                        key = key.toLowerCase();\n\n                        var value = pos >= 0 ? line.substring(pos + 1) : '';\n                        value = value.trim();\n\n                        if (key === 'newmtl') {\n\n                                // New material\n\n                                info = { name: value };\n                                materialsInfo[value] = info;\n                        } else if (info) {\n\n                                if (key === 'ka' || key === 'kd' || key === 'ks') {\n\n                                        var ss = value.split(delimiter_pattern, 3);\n                                        info[key] = [parseFloat(ss[0]), parseFloat(ss[1]), parseFloat(ss[2])];\n                                } else {\n\n                                        info[key] = value;\n                                }\n                        }\n                }\n\n                var materialCreator = new MTLLoader.MaterialCreator(this.texturePath || this.path, this.materialOptions);\n                materialCreator.setCrossOrigin(this.crossOrigin);\n                materialCreator.setManager(this.manager);\n                materialCreator.setMaterials(materialsInfo);\n                return materialCreator;\n        }\n\n};\n\n/**\r\n * Create a new THREE-MTLLoader.MaterialCreator\r\n * @param baseUrl - Url relative to which textures are loaded\r\n * @param options - Set of options on how to construct the materials\r\n *                  side: Which side to apply the material\r\n *                        THREE.FrontSide (default), THREE.BackSide, THREE.DoubleSide\r\n *                  wrap: What type of wrapping to apply for textures\r\n *                        THREE.RepeatWrapping (default), THREE.ClampToEdgeWrapping, THREE.MirroredRepeatWrapping\r\n *                  normalizeRGB: RGBs need to be normalized to 0-1 from 0-255\r\n *                                Default: false, assumed to be already normalized\r\n *                  ignoreZeroRGBs: Ignore values of RGBs (Ka,Kd,Ks) that are all 0's\r\n *                                  Default: false\r\n * @constructor\r\n */\n\nMTLLoader.MaterialCreator = function (baseUrl, options) {\n\n        this.baseUrl = baseUrl || '';\n        this.options = options;\n        this.materialsInfo = {};\n        this.materials = {};\n        this.materialsArray = [];\n        this.nameLookup = {};\n\n        this.side = this.options && this.options.side ? this.options.side : FrontSide;\n        this.wrap = this.options && this.options.wrap ? this.options.wrap : RepeatWrapping;\n};\n\nMTLLoader.MaterialCreator.prototype = {\n\n        constructor: MTLLoader.MaterialCreator,\n\n        crossOrigin: 'Anonymous',\n\n        setCrossOrigin: function setCrossOrigin(value) {\n\n                this.crossOrigin = value;\n        },\n\n        setManager: function setManager(value) {\n\n                this.manager = value;\n        },\n\n        setMaterials: function setMaterials(materialsInfo) {\n\n                this.materialsInfo = this.convert(materialsInfo);\n                this.materials = {};\n                this.materialsArray = [];\n                this.nameLookup = {};\n        },\n\n        convert: function convert(materialsInfo) {\n\n                if (!this.options) return materialsInfo;\n\n                var converted = {};\n\n                for (var mn in materialsInfo) {\n\n                        // Convert materials info into normalized form based on options\n\n                        var mat = materialsInfo[mn];\n\n                        var covmat = {};\n\n                        converted[mn] = covmat;\n\n                        for (var prop in mat) {\n\n                                var save = true;\n                                var value = mat[prop];\n                                var lprop = prop.toLowerCase();\n\n                                switch (lprop) {\n\n                                        case 'kd':\n                                        case 'ka':\n                                        case 'ks':\n\n                                                // Diffuse color (color under white light) using RGB values\n\n                                                if (this.options && this.options.normalizeRGB) {\n\n                                                        value = [value[0] / 255, value[1] / 255, value[2] / 255];\n                                                }\n\n                                                if (this.options && this.options.ignoreZeroRGBs) {\n\n                                                        if (value[0] === 0 && value[1] === 0 && value[2] === 0) {\n\n                                                                // ignore\n\n                                                                save = false;\n                                                        }\n                                                }\n\n                                                break;\n\n                                        default:\n\n                                                break;\n\n                                }\n\n                                if (save) {\n\n                                        covmat[lprop] = value;\n                                }\n                        }\n                }\n\n                return converted;\n        },\n\n        preload: function preload() {\n\n                for (var mn in this.materialsInfo) {\n\n                        this.create(mn);\n                }\n        },\n\n        getIndex: function getIndex(materialName) {\n\n                return this.nameLookup[materialName];\n        },\n\n        getAsArray: function getAsArray() {\n\n                var index = 0;\n\n                for (var mn in this.materialsInfo) {\n\n                        this.materialsArray[index] = this.create(mn);\n                        this.nameLookup[mn] = index;\n                        index++;\n                }\n\n                return this.materialsArray;\n        },\n\n        create: function create(materialName) {\n\n                if (this.materials[materialName] === undefined) {\n\n                        this.createMaterial_(materialName);\n                }\n\n                return this.materials[materialName];\n        },\n\n        createMaterial_: function createMaterial_(materialName) {\n\n                // Create material\n\n                var scope = this;\n                var mat = this.materialsInfo[materialName];\n                var params = {\n\n                        name: materialName,\n                        side: this.side\n\n                };\n\n                function resolveURL(baseUrl, url) {\n\n                        if (typeof url !== 'string' || url === '') {\n                                return '';\n                        }\n\n                        // Absolute URL\n                        if (/^https?:\\/\\//i.test(url)) return url;\n\n                        return baseUrl + url;\n                }\n\n                function setMapForType(mapType, value) {\n\n                        if (params[mapType]) return; // Keep the first encountered texture\n\n                        var texParams = scope.getTextureParams(value, params);\n                        var map = scope.loadTexture(resolveURL(scope.baseUrl, texParams.url));\n\n                        map.repeat.copy(texParams.scale);\n                        map.offset.copy(texParams.offset);\n\n                        map.wrapS = scope.wrap;\n                        map.wrapT = scope.wrap;\n\n                        params[mapType] = map;\n                }\n\n                for (var prop in mat) {\n\n                        var value = mat[prop];\n                        var n;\n\n                        if (value === '') continue;\n\n                        switch (prop.toLowerCase()) {\n\n                                // Ns is material specular exponent\n\n                                case 'kd':\n\n                                        // Diffuse color (color under white light) using RGB values\n\n                                        params.color = new Color().fromArray(value);\n\n                                        break;\n\n                                case 'ks':\n\n                                        // Specular color (color when light is reflected from shiny surface) using RGB values\n                                        params.specular = new Color().fromArray(value);\n\n                                        break;\n\n                                case 'map_kd':\n\n                                        // Diffuse texture map\n\n                                        setMapForType('map', value);\n\n                                        break;\n\n                                case 'map_ks':\n\n                                        // Specular map\n\n                                        setMapForType('specularMap', value);\n\n                                        break;\n\n                                case 'norm':\n\n                                        setMapForType('normalMap', value);\n\n                                        break;\n\n                                case 'map_bump':\n                                case 'bump':\n\n                                        // Bump texture map\n\n                                        setMapForType('bumpMap', value);\n\n                                        break;\n\n                                case 'ns':\n\n                                        // The specular exponent (defines the focus of the specular highlight)\n                                        // A high exponent results in a tight, concentrated highlight. Ns values normally range from 0 to 1000.\n\n                                        params.shininess = parseFloat(value);\n\n                                        break;\n\n                                case 'd':\n                                        n = parseFloat(value);\n\n                                        if (n < 1) {\n\n                                                params.opacity = n;\n                                                params.transparent = true;\n                                        }\n\n                                        break;\n\n                                case 'tr':\n                                        n = parseFloat(value);\n\n                                        if (n > 0) {\n\n                                                params.opacity = 1 - n;\n                                                params.transparent = true;\n                                        }\n\n                                        break;\n\n                                default:\n                                        break;\n\n                        }\n                }\n\n                this.materials[materialName] = new MeshPhongMaterial(params);\n                return this.materials[materialName];\n        },\n\n        getTextureParams: function getTextureParams(value, matParams) {\n\n                var texParams = {\n\n                        scale: new Vector2(1, 1),\n                        offset: new Vector2(0, 0)\n\n                };\n\n                var items = value.split(/\\s+/);\n                var pos;\n\n                pos = items.indexOf('-bm');\n\n                if (pos >= 0) {\n\n                        matParams.bumpScale = parseFloat(items[pos + 1]);\n                        items.splice(pos, 2);\n                }\n\n                pos = items.indexOf('-s');\n\n                if (pos >= 0) {\n\n                        texParams.scale.set(parseFloat(items[pos + 1]), parseFloat(items[pos + 2]));\n                        items.splice(pos, 4); // we expect 3 parameters here!\n                }\n\n                pos = items.indexOf('-o');\n\n                if (pos >= 0) {\n\n                        texParams.offset.set(parseFloat(items[pos + 1]), parseFloat(items[pos + 2]));\n                        items.splice(pos, 4); // we expect 3 parameters here!\n                }\n\n                texParams.url = items.join(' ').trim();\n                return texParams;\n        },\n\n        loadTexture: function loadTexture(url, mapping, onLoad, onProgress, onError) {\n\n                var texture;\n                var loader = LoaderHandlers.get(url);\n                var manager = this.manager !== undefined ? this.manager : DefaultLoadingManager;\n\n                if (loader === null) {\n\n                        loader = new TextureLoader(manager);\n                }\n\n                if (loader.setCrossOrigin) loader.setCrossOrigin(this.crossOrigin);\n                texture = loader.load(url, onLoad, onProgress, onError);\n\n                if (mapping !== undefined) texture.mapping = mapping;\n\n                return texture;\n        }\n\n};\n\nvar box = new Box3();\n\nfunction getSize(object) {\n\n    box.setFromObject(object);\n\n    return box.getSize();\n}\n\nfunction getCenter(object) {\n\n    box.setFromObject(object);\n\n    return box.getCenter();\n}\n\nfunction toIndexed(bufferGeometry) {\n\n    var rawPositions = bufferGeometry.getAttribute('position').array;\n\n    var rawUvs = void 0;\n    var hasUV = bufferGeometry.getAttribute('uv') !== undefined;\n    if (hasUV) rawUvs = bufferGeometry.getAttribute('uv').array;\n\n    var rawNormals = void 0;\n    var hasNormal = bufferGeometry.getAttribute('normal') !== undefined;\n    if (hasNormal) rawNormals = bufferGeometry.getAttribute('normal').array;\n\n    var indices = [];\n    var vertices = [];\n    var normals = [];\n    var uvs = [];\n\n    var face = void 0,\n        faceNormalss = void 0,\n        faceUvs = void 0,\n        tmpIndices = void 0;\n\n    var v0 = new Vector3();\n    var v1 = new Vector3();\n    var v2 = new Vector3();\n\n    var n0 = new Vector3();\n    var n1 = new Vector3();\n    var n2 = new Vector3();\n\n    var uv0 = new Vector2();\n    var uv1 = new Vector2();\n    var uv2 = new Vector2();\n\n    for (var i = 0; i < rawPositions.length; i += 9) {\n\n        v0.x = rawPositions[i];\n        v0.y = rawPositions[i + 1];\n        v0.z = rawPositions[i + 2];\n\n        v1.x = rawPositions[i + 3];\n        v1.y = rawPositions[i + 4];\n        v1.z = rawPositions[i + 5];\n\n        v2.x = rawPositions[i + 6];\n        v2.y = rawPositions[i + 7];\n        v2.z = rawPositions[i + 8];\n\n        face = [v0, v1, v2];\n\n        if (hasNormal) {\n\n            n0.x = rawNormals[i];\n            n0.y = rawNormals[i + 1];\n            n0.z = rawNormals[i + 2];\n\n            n1.x = rawNormals[i + 3];\n            n1.y = rawNormals[i + 4];\n            n1.z = rawNormals[i + 5];\n\n            n2.x = rawNormals[i + 6];\n            n2.y = rawNormals[i + 7];\n            n2.z = rawNormals[i + 8];\n\n            faceNormalss = [n0, n1, n2];\n        }\n\n        if (hasUV) {\n\n            uv0.x = rawUvs[i];\n            uv0.y = rawUvs[i + 1];\n\n            uv1.x = rawUvs[i + 2];\n            uv1.y = rawUvs[i + 3];\n\n            uv2.x = rawUvs[i + 4];\n            uv2.y = rawUvs[i + 5];\n\n            faceUvs = [uv0, uv1, uv2];\n        }\n\n        tmpIndices = [];\n\n        face.forEach(function (v, i) {\n\n            var id = exists(v, vertices);\n            if (id === -1) {\n\n                id = vertices.length;\n                vertices.push(v.clone());\n\n                if (hasNormal) normals.push(faceNormalss[i].clone());\n                if (hasUV) uvs.push(faceUvs[i].clone());\n            }\n            tmpIndices.push(id);\n        });\n\n        indices.push(tmpIndices[0], tmpIndices[1], tmpIndices[2]);\n    }\n\n    var positionBuffer = new Float32Array(vertices.length * 3);\n\n    var normalBuffer = void 0,\n        uvBuffer = void 0;\n\n    if (hasNormal) normalBuffer = new Float32Array(vertices.length * 3);\n    if (hasUV) uvBuffer = new Float32Array(vertices.length * 2);\n\n    var i2 = 0;\n    var i3 = 0;\n    for (var _i = 0; _i < vertices.length; _i++) {\n\n        i3 = _i * 3;\n\n        positionBuffer[i3] = vertices[_i].x;\n        positionBuffer[i3 + 1] = vertices[_i].y;\n        positionBuffer[i3 + 2] = vertices[_i].z;\n\n        if (hasNormal) {\n\n            normalBuffer[i3] = normals[_i].x;\n            normalBuffer[i3 + 1] = normals[_i].y;\n            normalBuffer[i3 + 2] = normals[_i].z;\n        }\n\n        if (hasUV) {\n\n            i2 = _i * 2;\n            uvBuffer[i2] = uvs[_i].x;\n            uvBuffer[i2 + 1] = uvs[_i].y;\n        }\n    }\n\n    bufferGeometry.addAttribute('position', new BufferAttribute(positionBuffer, 3));\n    if (hasNormal) bufferGeometry.addAttribute('normal', new BufferAttribute(normalBuffer, 3));\n    if (hasUV) bufferGeometry.addAttribute('uv', new BufferAttribute(uvBuffer, 2));\n    bufferGeometry.setIndex(new BufferAttribute(new Uint32Array(indices), 1));\n    return bufferGeometry;\n\n    function exists(v, vertices) {\n        for (var _i2 = 0; _i2 < vertices.length; _i2++) {\n            if (v.equals(vertices[_i2])) return _i2;\n        }\n        return -1;\n    }\n}\n\n// https://github.com/mrdoob/three.js/blob/dev/examples/js/controls/OrbitControls.js\n\nvar OrbitControls = function OrbitControls(object, domElement) {\n\n        this.object = object;\n\n        this.domElement = domElement !== undefined ? domElement : document;\n\n        // Set to false to disable this control\n        this.enabled = true;\n\n        // \"target\" sets the location of focus, where the object orbits around\n        this.target = new Vector3();\n\n        // How far you can dolly in and out ( PerspectiveCamera only )\n        this.minDistance = 0;\n        this.maxDistance = Infinity;\n\n        // How far you can zoom in and out ( OrthographicCamera only )\n        this.minZoom = 0;\n        this.maxZoom = Infinity;\n\n        // How far you can orbit vertically, upper and lower limits.\n        // Range is 0 to Math.PI radians.\n        this.minPolarAngle = 0; // radians\n        this.maxPolarAngle = Math.PI; // radians\n\n        // How far you can orbit horizontally, upper and lower limits.\n        // If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\n        this.minAzimuthAngle = -Infinity; // radians\n        this.maxAzimuthAngle = Infinity; // radians\n\n        // Set to true to enable damping (inertia)\n        // If damping is enabled, you must call controls.update() in your animation loop\n        this.enableDamping = false;\n        this.dampingFactor = 0.25;\n\n        // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n        // Set to false to disable zooming\n        this.enableZoom = true;\n        this.zoomSpeed = 1.0;\n\n        // Set to false to disable rotating\n        this.enableRotate = true;\n        this.rotateSpeed = 1.0;\n\n        // Set to false to disable panning\n        this.enablePan = true;\n        this.keyPanSpeed = 7.0; // pixels moved per arrow key push\n\n        // Set to true to automatically rotate around the target\n        // If auto-rotate is enabled, you must call controls.update() in your animation loop\n        this.autoRotate = false;\n        this.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\n\n        // Set to false to disable use of the keys\n        this.enableKeys = true;\n\n        // The four arrow keys\n        this.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 };\n\n        // Mouse buttons\n        this.mouseButtons = { ORBIT: MOUSE.LEFT, ZOOM: MOUSE.MIDDLE, PAN: MOUSE.RIGHT };\n\n        // for reset\n        this.target0 = this.target.clone();\n        this.position0 = this.object.position.clone();\n        this.zoom0 = this.object.zoom;\n\n        //\n        // public methods\n        //\n\n        this.getPolarAngle = function () {\n\n                return spherical.phi;\n        };\n\n        this.getAzimuthalAngle = function () {\n\n                return spherical.theta;\n        };\n\n        this.saveState = function () {\n\n                scope.target0.copy(scope.target);\n                scope.position0.copy(scope.object.position);\n                scope.zoom0 = scope.object.zoom;\n        };\n\n        this.reset = function () {\n\n                scope.target.copy(scope.target0);\n                scope.object.position.copy(scope.position0);\n                scope.object.zoom = scope.zoom0;\n\n                scope.object.updateProjectionMatrix();\n                scope.dispatchEvent(changeEvent);\n\n                scope.update();\n\n                state = STATE.NONE;\n        };\n\n        // this method is exposed, but perhaps it would be better if we can make it private...\n        this.update = function () {\n\n                var offset = new Vector3();\n\n                // so camera.up is the orbit axis\n                var quat = new Quaternion().setFromUnitVectors(object.up, new Vector3(0, 1, 0));\n                var quatInverse = quat.clone().inverse();\n\n                var lastPosition = new Vector3();\n                var lastQuaternion = new Quaternion();\n\n                return function update() {\n\n                        var position = scope.object.position;\n\n                        offset.copy(position).sub(scope.target);\n\n                        // rotate offset to \"y-axis-is-up\" space\n                        offset.applyQuaternion(quat);\n\n                        // angle from z-axis around y-axis\n                        spherical.setFromVector3(offset);\n\n                        if (scope.autoRotate && state === STATE.NONE) {\n\n                                rotateLeft(getAutoRotationAngle());\n                        }\n\n                        spherical.theta += sphericalDelta.theta;\n                        spherical.phi += sphericalDelta.phi;\n\n                        // restrict theta to be between desired limits\n                        spherical.theta = Math.max(scope.minAzimuthAngle, Math.min(scope.maxAzimuthAngle, spherical.theta));\n\n                        // restrict phi to be between desired limits\n                        spherical.phi = Math.max(scope.minPolarAngle, Math.min(scope.maxPolarAngle, spherical.phi));\n\n                        spherical.makeSafe();\n\n                        spherical.radius *= scale;\n\n                        // restrict radius to be between desired limits\n                        spherical.radius = Math.max(scope.minDistance, Math.min(scope.maxDistance, spherical.radius));\n\n                        // move target to panned location\n                        scope.target.add(panOffset);\n\n                        offset.setFromSpherical(spherical);\n\n                        // rotate offset back to \"camera-up-vector-is-up\" space\n                        offset.applyQuaternion(quatInverse);\n\n                        position.copy(scope.target).add(offset);\n\n                        scope.object.lookAt(scope.target);\n\n                        if (scope.enableDamping === true) {\n\n                                sphericalDelta.theta *= 1 - scope.dampingFactor;\n                                sphericalDelta.phi *= 1 - scope.dampingFactor;\n                        } else {\n\n                                sphericalDelta.set(0, 0, 0);\n                        }\n\n                        scale = 1;\n                        panOffset.set(0, 0, 0);\n\n                        // update condition is:\n                        // min(camera displacement, camera rotation in radians)^2 > EPS\n                        // using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n                        if (zoomChanged || lastPosition.distanceToSquared(scope.object.position) > EPS || 8 * (1 - lastQuaternion.dot(scope.object.quaternion)) > EPS) {\n\n                                scope.dispatchEvent(changeEvent);\n\n                                lastPosition.copy(scope.object.position);\n                                lastQuaternion.copy(scope.object.quaternion);\n                                zoomChanged = false;\n\n                                return true;\n                        }\n\n                        return false;\n                };\n        }();\n\n        this.dispose = function () {\n\n                scope.domElement.removeEventListener('contextmenu', onContextMenu, false);\n                scope.domElement.removeEventListener('mousedown', onMouseDown, false);\n                scope.domElement.removeEventListener('wheel', onMouseWheel, false);\n\n                scope.domElement.removeEventListener('touchstart', onTouchStart, false);\n                scope.domElement.removeEventListener('touchend', onTouchEnd, false);\n                scope.domElement.removeEventListener('touchmove', onTouchMove, false);\n\n                document.removeEventListener('mousemove', onMouseMove, false);\n                document.removeEventListener('mouseup', onMouseUp, false);\n\n                window.removeEventListener('keydown', onKeyDown, false);\n\n                // scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n        };\n\n        //\n        // internals\n        //\n\n        var scope = this;\n\n        var changeEvent = { type: 'change' };\n        var startEvent = { type: 'start' };\n        var endEvent = { type: 'end' };\n\n        var STATE = { NONE: -1, ROTATE: 0, DOLLY: 1, PAN: 2, TOUCH_ROTATE: 3, TOUCH_DOLLY: 4, TOUCH_PAN: 5 };\n\n        var state = STATE.NONE;\n\n        var EPS = 0.000001;\n\n        // current position in spherical coordinates\n        var spherical = new Spherical();\n        var sphericalDelta = new Spherical();\n\n        var scale = 1;\n        var panOffset = new Vector3();\n        var zoomChanged = false;\n\n        var rotateStart = new Vector2();\n        var rotateEnd = new Vector2();\n        var rotateDelta = new Vector2();\n\n        var panStart = new Vector2();\n        var panEnd = new Vector2();\n        var panDelta = new Vector2();\n\n        var dollyStart = new Vector2();\n        var dollyEnd = new Vector2();\n        var dollyDelta = new Vector2();\n\n        function getAutoRotationAngle() {\n\n                return 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n        }\n\n        function getZoomScale() {\n\n                return Math.pow(0.95, scope.zoomSpeed);\n        }\n\n        function rotateLeft(angle) {\n\n                sphericalDelta.theta -= angle;\n        }\n\n        function rotateUp(angle) {\n\n                sphericalDelta.phi -= angle;\n        }\n\n        var panLeft = function () {\n\n                var v = new Vector3();\n\n                return function panLeft(distance, objectMatrix) {\n\n                        v.setFromMatrixColumn(objectMatrix, 0); // get X column of objectMatrix\n                        v.multiplyScalar(-distance);\n\n                        panOffset.add(v);\n                };\n        }();\n\n        var panUp = function () {\n\n                var v = new Vector3();\n\n                return function panUp(distance, objectMatrix) {\n\n                        v.setFromMatrixColumn(objectMatrix, 1); // get Y column of objectMatrix\n                        v.multiplyScalar(distance);\n\n                        panOffset.add(v);\n                };\n        }();\n\n        // deltaX and deltaY are in pixels; right and down are positive\n        var pan = function () {\n\n                var offset = new Vector3();\n\n                return function pan(deltaX, deltaY) {\n\n                        var element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n                        if (scope.object instanceof PerspectiveCamera) {\n\n                                // perspective\n                                var position = scope.object.position;\n                                offset.copy(position).sub(scope.target);\n                                var targetDistance = offset.length();\n\n                                // half of the fov is center to top of screen\n                                targetDistance *= Math.tan(scope.object.fov / 2 * Math.PI / 180.0);\n\n                                // we actually don't use screenWidth, since perspective camera is fixed to screen height\n                                panLeft(2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix);\n                                panUp(2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix);\n                        } else if (scope.object instanceof OrthographicCamera) {\n\n                                // orthographic\n                                panLeft(deltaX * (scope.object.right - scope.object.left) / scope.object.zoom / element.clientWidth, scope.object.matrix);\n                                panUp(deltaY * (scope.object.top - scope.object.bottom) / scope.object.zoom / element.clientHeight, scope.object.matrix);\n                        } else {\n\n                                // camera neither orthographic nor perspective\n                                console.warn('WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.');\n                                scope.enablePan = false;\n                        }\n                };\n        }();\n\n        function dollyIn(dollyScale) {\n\n                if (scope.object instanceof PerspectiveCamera) {\n\n                        scale /= dollyScale;\n                } else if (scope.object instanceof OrthographicCamera) {\n\n                        scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom * dollyScale));\n                        scope.object.updateProjectionMatrix();\n                        zoomChanged = true;\n                } else {\n\n                        console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n                        scope.enableZoom = false;\n                }\n        }\n\n        function dollyOut(dollyScale) {\n\n                if (scope.object instanceof PerspectiveCamera) {\n\n                        scale *= dollyScale;\n                } else if (scope.object instanceof OrthographicCamera) {\n\n                        scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom / dollyScale));\n                        scope.object.updateProjectionMatrix();\n                        zoomChanged = true;\n                } else {\n\n                        console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n                        scope.enableZoom = false;\n                }\n        }\n\n        //\n        // event callbacks - update the object state\n        //\n\n        function handleMouseDownRotate(event) {\n\n                // console.log( 'handleMouseDownRotate' );\n\n                rotateStart.set(event.clientX, event.clientY);\n        }\n\n        function handleMouseDownDolly(event) {\n\n                // console.log( 'handleMouseDownDolly' );\n\n                dollyStart.set(event.clientX, event.clientY);\n        }\n\n        function handleMouseDownPan(event) {\n\n                // console.log( 'handleMouseDownPan' );\n\n                panStart.set(event.clientX, event.clientY);\n        }\n\n        function handleMouseMoveRotate(event) {\n\n                // console.log( 'handleMouseMoveRotate' );\n\n                rotateEnd.set(event.clientX, event.clientY);\n                rotateDelta.subVectors(rotateEnd, rotateStart);\n\n                var element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n                // rotating across whole screen goes 360 degrees around\n                rotateLeft(2 * Math.PI * rotateDelta.x / element.clientWidth * scope.rotateSpeed);\n\n                // rotating up and down along whole screen attempts to go 360, but limited to 180\n                rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight * scope.rotateSpeed);\n\n                rotateStart.copy(rotateEnd);\n\n                scope.update();\n        }\n\n        function handleMouseMoveDolly(event) {\n\n                // console.log( 'handleMouseMoveDolly' );\n\n                dollyEnd.set(event.clientX, event.clientY);\n\n                dollyDelta.subVectors(dollyEnd, dollyStart);\n\n                if (dollyDelta.y > 0) {\n\n                        dollyIn(getZoomScale());\n                } else if (dollyDelta.y < 0) {\n\n                        dollyOut(getZoomScale());\n                }\n\n                dollyStart.copy(dollyEnd);\n\n                scope.update();\n        }\n\n        function handleMouseMovePan(event) {\n\n                // console.log( 'handleMouseMovePan' );\n\n                panEnd.set(event.clientX, event.clientY);\n\n                panDelta.subVectors(panEnd, panStart);\n\n                pan(panDelta.x, panDelta.y);\n\n                panStart.copy(panEnd);\n\n                scope.update();\n        }\n\n        function handleMouseWheel(event) {\n\n                // console.log( 'handleMouseWheel' );\n\n                if (event.deltaY < 0) {\n\n                        dollyOut(getZoomScale());\n                } else if (event.deltaY > 0) {\n\n                        dollyIn(getZoomScale());\n                }\n\n                scope.update();\n        }\n\n        function handleKeyDown(event) {\n\n                // console.log( 'handleKeyDown' );\n\n                switch (event.keyCode) {\n\n                        case scope.keys.UP:\n                                pan(0, scope.keyPanSpeed);\n                                scope.update();\n                                break;\n\n                        case scope.keys.BOTTOM:\n                                pan(0, -scope.keyPanSpeed);\n                                scope.update();\n                                break;\n\n                        case scope.keys.LEFT:\n                                pan(scope.keyPanSpeed, 0);\n                                scope.update();\n                                break;\n\n                        case scope.keys.RIGHT:\n                                pan(-scope.keyPanSpeed, 0);\n                                scope.update();\n                                break;\n\n                }\n        }\n\n        function handleTouchStartRotate(event) {\n\n                // console.log( 'handleTouchStartRotate' );\n\n                rotateStart.set(event.touches[0].pageX, event.touches[0].pageY);\n        }\n\n        function handleTouchStartDolly(event) {\n\n                // console.log( 'handleTouchStartDolly' );\n\n                var dx = event.touches[0].pageX - event.touches[1].pageX;\n                var dy = event.touches[0].pageY - event.touches[1].pageY;\n\n                var distance = Math.sqrt(dx * dx + dy * dy);\n\n                dollyStart.set(0, distance);\n        }\n\n        function handleTouchStartPan(event) {\n\n                // console.log( 'handleTouchStartPan' );\n\n                panStart.set(event.touches[0].pageX, event.touches[0].pageY);\n        }\n\n        function handleTouchMoveRotate(event) {\n\n                // console.log( 'handleTouchMoveRotate' );\n\n                rotateEnd.set(event.touches[0].pageX, event.touches[0].pageY);\n                rotateDelta.subVectors(rotateEnd, rotateStart);\n\n                var element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n                // rotating across whole screen goes 360 degrees around\n                rotateLeft(2 * Math.PI * rotateDelta.x / element.clientWidth * scope.rotateSpeed);\n\n                // rotating up and down along whole screen attempts to go 360, but limited to 180\n                rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight * scope.rotateSpeed);\n\n                rotateStart.copy(rotateEnd);\n\n                scope.update();\n        }\n\n        function handleTouchMoveDolly(event) {\n\n                // console.log( 'handleTouchMoveDolly' );\n\n                var dx = event.touches[0].pageX - event.touches[1].pageX;\n                var dy = event.touches[0].pageY - event.touches[1].pageY;\n\n                var distance = Math.sqrt(dx * dx + dy * dy);\n\n                dollyEnd.set(0, distance);\n\n                dollyDelta.subVectors(dollyEnd, dollyStart);\n\n                if (dollyDelta.y > 0) {\n\n                        dollyOut(getZoomScale());\n                } else if (dollyDelta.y < 0) {\n\n                        dollyIn(getZoomScale());\n                }\n\n                dollyStart.copy(dollyEnd);\n\n                scope.update();\n        }\n\n        function handleTouchMovePan(event) {\n\n                // console.log( 'handleTouchMovePan' );\n\n                panEnd.set(event.touches[0].pageX, event.touches[0].pageY);\n\n                panDelta.subVectors(panEnd, panStart);\n\n                pan(panDelta.x, panDelta.y);\n\n                panStart.copy(panEnd);\n\n                scope.update();\n        }\n\n        // console.log( 'handleTouchEnd' );\n\n        //\n        // event handlers - FSM: listen for events and reset state\n        //\n\n        function onMouseDown(event) {\n\n                if (scope.enabled === false) return;\n\n                event.preventDefault();\n\n                switch (event.button) {\n\n                        case scope.mouseButtons.ORBIT:\n\n                                if (scope.enableRotate === false) return;\n\n                                handleMouseDownRotate(event);\n\n                                state = STATE.ROTATE;\n\n                                break;\n\n                        case scope.mouseButtons.ZOOM:\n\n                                if (scope.enableZoom === false) return;\n\n                                handleMouseDownDolly(event);\n\n                                state = STATE.DOLLY;\n\n                                break;\n\n                        case scope.mouseButtons.PAN:\n\n                                if (scope.enablePan === false) return;\n\n                                handleMouseDownPan(event);\n\n                                state = STATE.PAN;\n\n                                break;\n\n                }\n\n                if (state !== STATE.NONE) {\n\n                        document.addEventListener('mousemove', onMouseMove, false);\n                        document.addEventListener('mouseup', onMouseUp, false);\n\n                        scope.dispatchEvent(startEvent);\n                }\n        }\n\n        function onMouseMove(event) {\n\n                if (scope.enabled === false) return;\n\n                event.preventDefault();\n\n                switch (state) {\n\n                        case STATE.ROTATE:\n\n                                if (scope.enableRotate === false) return;\n\n                                handleMouseMoveRotate(event);\n\n                                break;\n\n                        case STATE.DOLLY:\n\n                                if (scope.enableZoom === false) return;\n\n                                handleMouseMoveDolly(event);\n\n                                break;\n\n                        case STATE.PAN:\n\n                                if (scope.enablePan === false) return;\n\n                                handleMouseMovePan(event);\n\n                                break;\n\n                }\n        }\n\n        function onMouseUp(event) {\n\n                if (scope.enabled === false) return;\n\n                document.removeEventListener('mousemove', onMouseMove, false);\n                document.removeEventListener('mouseup', onMouseUp, false);\n\n                scope.dispatchEvent(endEvent);\n\n                state = STATE.NONE;\n        }\n\n        function onMouseWheel(event) {\n\n                if (scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE && state !== STATE.ROTATE) return;\n\n                event.preventDefault();\n                event.stopPropagation();\n\n                handleMouseWheel(event);\n\n                scope.dispatchEvent(startEvent); // not sure why these are here...\n                scope.dispatchEvent(endEvent);\n        }\n\n        function onKeyDown(event) {\n\n                if (scope.enabled === false || scope.enableKeys === false || scope.enablePan === false) return;\n\n                handleKeyDown(event);\n        }\n\n        function onTouchStart(event) {\n\n                if (scope.enabled === false) return;\n\n                switch (event.touches.length) {\n\n                        case 1:\n                                // one-fingered touch: rotate\n\n                                if (scope.enableRotate === false) return;\n\n                                handleTouchStartRotate(event);\n\n                                state = STATE.TOUCH_ROTATE;\n\n                                break;\n\n                        case 2:\n                                // two-fingered touch: dolly\n\n                                if (scope.enableZoom === false) return;\n\n                                handleTouchStartDolly(event);\n\n                                state = STATE.TOUCH_DOLLY;\n\n                                break;\n\n                        case 3:\n                                // three-fingered touch: pan\n\n                                if (scope.enablePan === false) return;\n\n                                handleTouchStartPan(event);\n\n                                state = STATE.TOUCH_PAN;\n\n                                break;\n\n                        default:\n\n                                state = STATE.NONE;\n\n                }\n\n                if (state !== STATE.NONE) {\n\n                        scope.dispatchEvent(startEvent);\n                }\n        }\n\n        function onTouchMove(event) {\n\n                if (scope.enabled === false) return;\n\n                event.preventDefault();\n                event.stopPropagation();\n\n                switch (event.touches.length) {\n\n                        case 1:\n                                // one-fingered touch: rotate\n\n                                if (scope.enableRotate === false) return;\n                                if (state !== STATE.TOUCH_ROTATE) return; // is this needed?...\n\n                                handleTouchMoveRotate(event);\n\n                                break;\n\n                        case 2:\n                                // two-fingered touch: dolly\n\n                                if (scope.enableZoom === false) return;\n                                if (state !== STATE.TOUCH_DOLLY) return; // is this needed?...\n\n                                handleTouchMoveDolly(event);\n\n                                break;\n\n                        case 3:\n                                // three-fingered touch: pan\n\n                                if (scope.enablePan === false) return;\n                                if (state !== STATE.TOUCH_PAN) return; // is this needed?...\n\n                                handleTouchMovePan(event);\n\n                                break;\n\n                        default:\n\n                                state = STATE.NONE;\n\n                }\n        }\n\n        function onTouchEnd(event) {\n\n                if (scope.enabled === false) return;\n\n                scope.dispatchEvent(endEvent);\n\n                state = STATE.NONE;\n        }\n\n        function onContextMenu(event) {\n\n                event.preventDefault();\n        }\n\n        //\n\n        scope.domElement.addEventListener('contextmenu', onContextMenu, false);\n\n        scope.domElement.addEventListener('mousedown', onMouseDown, false);\n        scope.domElement.addEventListener('wheel', onMouseWheel, false);\n\n        scope.domElement.addEventListener('touchstart', onTouchStart, false);\n        scope.domElement.addEventListener('touchend', onTouchEnd, false);\n        scope.domElement.addEventListener('touchmove', onTouchMove, false);\n\n        window.addEventListener('keydown', onKeyDown, false);\n\n        // force an update at start\n\n        this.update();\n};\n\nOrbitControls.prototype = Object.create(EventDispatcher.prototype);\nOrbitControls.prototype.constructor = OrbitControls;\n\nvar suportWebGL = function () {\n\n    try {\n        var canvas = document.createElement('canvas');\n        return !!(window.WebGLRenderingContext && (canvas.getContext('webgl') || canvas.getContext('experimental-webgl')));\n    } catch (e) {\n        return false;\n    }\n}();\n\nvar mixin = { render: function render() {\n        var _vm = this;var _h = _vm.$createElement;var _c = _vm._self._c || _h;return _c('div', { staticStyle: { \"width\": \"100%\", \"height\": \"100%\", \"margin\": \"0\", \"border\": \"0\", \"padding\": \"0\" } }, [_vm.suportWebGL ? _c('canvas', { ref: \"canvas\", staticStyle: { \"width\": \"100%\", \"height\": \"100%\" } }) : _c('div', [_vm._t(\"default\", [_vm._v(\" Your browser does not seem to support \"), _c('a', { staticStyle: { \"color\": \"#000\" }, attrs: { \"href\": \"http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation\" } }, [_vm._v(\"WebGL\")]), _vm._v(\".\"), _c('br'), _vm._v(\"' \")])], 2)]);\n    }, staticRenderFns: [],\n    props: {\n        src: {\n            type: String\n        },\n        width: {\n            type: Number\n        },\n        height: {\n            type: Number\n        },\n        position: {\n            type: Object,\n            default: function _default() {\n                return { x: 0, y: 0, z: 0 };\n            }\n        },\n        rotation: {\n            type: Object,\n            default: function _default() {\n                return { x: 0, y: 0, z: 0 };\n            }\n        },\n        scale: {\n            type: Object,\n            default: function _default() {\n                return { x: 1, y: 1, z: 1 };\n            }\n        },\n        lights: {\n            type: Array,\n            default: function _default() {\n                return [];\n            }\n        },\n        cameraPosition: {\n            type: Object\n        },\n        cameraRotation: {\n            type: Object\n        },\n        cameraUp: {\n            type: Object\n        },\n        cameraLookAt: {\n            type: Object\n        },\n        backgroundColor: {\n            default: 0xffffff\n        },\n        backgroundAlpha: {\n            type: Number,\n            default: 1\n        },\n        controllable: {\n            type: Boolean,\n            default: true\n        },\n        crossOrigin: {\n            default: 'anonymous'\n        }\n    },\n    data: function data() {\n        return {\n            suportWebGL: suportWebGL,\n            size: {\n                width: this.width,\n                height: this.height\n            },\n            object: null,\n            raycaster: new Raycaster(),\n            mouse: new Vector2(),\n            camera: new PerspectiveCamera(45, 1, 0.01, 100000),\n            scene: new Scene(),\n            wrapper: new Object3D(),\n            renderer: null,\n            controls: null,\n            allLights: [],\n            clock: typeof performance === 'undefined' ? Date : performance,\n            reqId: null // requestAnimationFrame id\n        };\n    },\n\n    computed: {\n        hasListener: function hasListener() {\n\n            // 判断是否有鼠标事件监听，用于减少不必要的拾取判断\n            var events = this._events;\n            var result = {};\n\n            ['on-mousemove', 'on-mouseup', 'on-mousedown', 'on-click'].forEach(function (name) {\n                result[name] = !!events[name] && events[name].length > 0;\n            });\n\n            return result;\n        }\n    },\n    mounted: function mounted() {\n\n        if (this.width === undefined || this.height === undefined) {\n            this.size = {\n                width: this.$el.offsetWidth,\n                height: this.$el.offsetHeight\n            };\n        }\n\n        this.renderer = new WebGLRenderer({ antialias: true, alpha: true, canvas: this.$refs.canvas });\n        this.renderer.shadowMap.enabled = true;\n\n        this.scene.add(this.wrapper);\n\n        this.load();\n        this.update();\n\n        this.$el.addEventListener('mousedown', this.onMouseDown, false);\n        this.$el.addEventListener('mousemove', this.onMouseMove, false);\n        this.$el.addEventListener('mouseup', this.onMouseUp, false);\n        this.$el.addEventListener('click', this.onClick, false);\n\n        window.addEventListener('resize', this.onResize, false);\n\n        this.animate();\n    },\n    beforeDestroy: function beforeDestroy() {\n\n        cancelAnimationFrame(this.reqId);\n\n        this.$el.removeEventListener('mousedown', this.onMouseDown, false);\n        this.$el.removeEventListener('mousemove', this.onMouseMove, false);\n        this.$el.removeEventListener('mouseup', this.onMouseUp, false);\n        this.$el.removeEventListener('click', this.onClick, false);\n\n        window.removeEventListener('resize', this.onResize, false);\n    },\n\n    watch: {\n        src: function src() {\n            this.load();\n        },\n\n        rotation: {\n            deep: true,\n            handler: function handler(val) {\n                if (!this.object) return;\n                this.object.rotation.set(val.x, val.y, val.z);\n            }\n        },\n        position: {\n            deep: true,\n            handler: function handler(val) {\n                if (!this.object) return;\n                this.object.position.set(val.x, val.y, val.z);\n            }\n        },\n        scale: {\n            deep: true,\n            handler: function handler(val) {\n                if (!this.object) return;\n                this.object.scale.set(val.x, val.y, val.z);\n            }\n        },\n        lights: {\n            deep: true,\n            handler: function handler(val, oldVal) {\n                this.updateLights();\n            }\n        },\n        size: {\n            deep: true,\n            handler: function handler(val) {\n                this.updateCamera();\n                this.updateRenderer();\n            }\n        },\n        controllable: function controllable() {\n            this.updateControls();\n        },\n        backgroundAlpha: function backgroundAlpha() {\n            this.updateRenderer();\n        },\n        backgroundColor: function backgroundColor() {\n            this.updateRenderer();\n        }\n    },\n    methods: {\n        onResize: function onResize() {\n            var _this = this;\n\n            if (this.width === undefined || this.height === undefined) {\n\n                this.$nextTick(function () {\n                    _this.size = {\n                        width: _this.$el.offsetWidth,\n                        height: _this.$el.offsetHeight\n                    };\n                });\n            }\n        },\n        onMouseDown: function onMouseDown(event) {\n\n            if (!this.hasListener['on-mousedown']) return;\n\n            var intersected = this.pick(event.clientX, event.clientY);\n            this.$emit('on-mousedown', intersected);\n        },\n        onMouseMove: function onMouseMove(event) {\n\n            if (!this.hasListener['on-mousemove']) return;\n\n            var intersected = this.pick(event.clientX, event.clientY);\n            this.$emit('on-mousemove', intersected);\n        },\n        onMouseUp: function onMouseUp(event) {\n\n            if (!this.hasListener['on-mouseup']) return;\n\n            var intersected = this.pick(event.clientX, event.clientY);\n            this.$emit('on-mouseup', intersected);\n        },\n        onClick: function onClick(event) {\n\n            if (!this.hasListener['on-click']) return;\n\n            var intersected = this.pick(event.clientX, event.clientY);\n            this.$emit('on-click', intersected);\n        },\n        pick: function pick(x, y) {\n\n            if (!this.object) return;\n\n            var rect = this.$el.getBoundingClientRect();\n\n            x -= rect.left;\n            y -= rect.top;\n\n            this.mouse.x = x / this.size.width * 2 - 1;\n            this.mouse.y = -(y / this.size.height) * 2 + 1;\n\n            this.raycaster.setFromCamera(this.mouse, this.camera);\n\n            var intersects = this.raycaster.intersectObject(this.object, true);\n\n            return (intersects && intersects.length) > 0 ? intersects[0] : null;\n        },\n        update: function update() {\n\n            this.updateRenderer();\n            this.updateCamera();\n            this.updateLights();\n            this.updateControls();\n        },\n        updateModel: function updateModel() {\n\n            var object = this.object;\n\n            if (!object) return;\n\n            var position = this.position;\n            var rotation = this.rotation;\n            var scale = this.scale;\n\n            object.position.set(position.x, position.y, position.z);\n            object.rotation.set(rotation.x, rotation.y, rotation.z);\n            object.scale.set(scale.x, scale.y, scale.z);\n        },\n        updateRenderer: function updateRenderer() {\n\n            var renderer = this.renderer;\n\n            renderer.setSize(this.size.width, this.size.height);\n            renderer.setPixelRatio(window.devicePixelRatio || 1);\n            renderer.setClearColor(new Color(this.backgroundColor).getHex());\n            renderer.setClearAlpha(this.backgroundAlpha);\n        },\n        updateCamera: function updateCamera() {\n\n            var camera = this.camera;\n            var object = this.object;\n\n            camera.aspect = this.size.width / this.size.height;\n            camera.updateProjectionMatrix();\n\n            if (!this.cameraLookAt && !this.cameraPosition && !this.cameraRotation && !this.cameraUp) {\n\n                if (!object) return;\n\n                var distance = getSize(object).length();\n\n                camera.position.set(0, 0, 0);\n                camera.position.z = distance;\n                camera.lookAt(new Vector3());\n            } else {\n\n                camera.position.set(this.cameraPosition.x, this.cameraPosition.y, this.cameraPosition.z);\n                camera.rotation.set(this.cameraRotation.x, this.cameraRotation.y, this.cameraRotation.z);\n                camera.up.set(this.cameraUp.x, this.cameraUp.y, this.cameraUp.z);\n\n                camera.lookAt(new Vector3(this.cameraLookAt.x, this.cameraLookAt.y, this.cameraLookAt.z));\n            }\n        },\n        updateLights: function updateLights() {\n            var _this2 = this;\n\n            this.scene.remove.apply(this.scene, this.allLights);\n\n            this.allLights = [];\n\n            this.lights.forEach(function (item) {\n\n                if (!item.type) return;\n\n                var type = item.type.toLowerCase();\n\n                var light = null;\n\n                if (type === 'ambient' || type === 'ambientlight') {\n\n                    var color = item.color || 0x404040;\n                    var intensity = item.intensity || 1;\n\n                    light = new AmbientLight(color, intensity);\n                } else if (type === 'point' || type === 'pointlight') {\n\n                    var _color = item.color || 0xffffff;\n                    var _intensity = item.intensity || 1;\n                    var distance = item.distance || 0;\n                    var decay = item.decay || 1;\n\n                    light = new PointLight(_color, _intensity, distance, decay);\n\n                    if (item.position) {\n                        light.position.copy(item.position);\n                    }\n                } else if (type === 'directional' || type === 'directionallight') {\n\n                    var _color2 = item.color || 0xffffff;\n                    var _intensity2 = item.intensity || 1;\n\n                    light = new DirectionalLight(_color2, _intensity2);\n\n                    if (item.position) {\n                        light.position.copy(item.position);\n                    }\n\n                    if (item.target) {\n                        light.target.copy(item.target);\n                    }\n                } else if (type === 'hemisphere' || type === 'hemispherelight') {\n\n                    var skyColor = item.skyColor || 0xffffff;\n                    var groundColor = item.groundColor || 0xffffff;\n                    var _intensity3 = item.intensity || 1;\n\n                    light = new HemisphereLight(skyColor, groundColor, _intensity3);\n\n                    if (item.position) {\n                        light.position.copy(item.position);\n                    }\n                }\n\n                _this2.allLights.push(light);\n                _this2.scene.add(light);\n            });\n        },\n        updateControls: function updateControls() {\n\n            if (this.controllable && this.controls) return;\n\n            if (this.controllable) {\n\n                if (this.controls) return;\n\n                this.controls = new OrbitControls(this.camera, this.$el);\n                this.controls.type = 'orbit';\n            } else {\n\n                if (this.controls) {\n\n                    this.controls.dispose();\n                    this.controls = null;\n                }\n            }\n        },\n        load: function load() {\n            var _this3 = this;\n\n            if (!this.src) return;\n\n            if (this.object) {\n\n                this.wrapper.remove(this.object);\n            }\n\n            this.loader.load(this.src, function () {\n\n                var object = _this3.getObject.apply(_this3, arguments);\n\n                if (_this3.process) {\n                    _this3.process(object);\n                }\n\n                _this3.addObject(object);\n\n                _this3.$emit('on-load');\n            }, function (xhr) {\n\n                _this3.$emit('on-progress', xhr);\n            }, function (err) {\n\n                _this3.$emit('on-error', err);\n            });\n        },\n        getObject: function getObject(object) {\n\n            return object;\n        },\n        addObject: function addObject(object) {\n\n            var center = getCenter(object);\n\n            // correction position\n            this.wrapper.position.copy(center.negate());\n\n            this.object = object;\n            this.wrapper.add(object);\n\n            this.updateCamera();\n            this.updateModel();\n        },\n        animate: function animate() {\n            this.reqId = requestAnimationFrame(this.animate);\n            this.render();\n        },\n        render: function render() {\n\n            this.renderer.render(this.scene, this.camera);\n        }\n    }\n};\n\nvar ModelObj = {\n    name: 'model-obj',\n    mixins: [mixin],\n    props: {\n        lights: {\n            type: Array,\n            default: function _default() {\n                return [{\n                    type: 'HemisphereLight',\n                    position: { x: 0, y: 1, z: 0 },\n                    skyColor: 0xaaaaff,\n                    groundColor: 0x806060,\n                    intensity: 0.2\n                }, {\n                    type: 'DirectionalLight',\n                    position: { x: 1, y: 1, z: 1 },\n                    color: 0xffffff,\n                    intensity: 0.8\n                }];\n            }\n        },\n        smoothing: {\n            type: Boolean,\n            default: false\n        },\n        mtlPath: {\n            type: String\n        },\n        mtl: {\n            type: String\n        }\n    },\n    data: function data() {\n\n        var objLoader = new OBJLoader();\n        var mtlLoader = new MTLLoader();\n\n        mtlLoader.setCrossOrigin(this.crossOrigin);\n\n        return {\n            loader: objLoader,\n            mtlLoader: mtlLoader\n        };\n    },\n\n    watch: {\n        mtl: function mtl() {\n            this.load();\n        }\n    },\n    methods: {\n        process: function process(object) {\n            if (this.smoothing) {\n                object.traverse(function (child) {\n                    if (child.geometry) {\n                        child.geometry = toIndexed(child.geometry);\n                        child.geometry.computeVertexNormals();\n                    }\n                });\n            }\n        },\n        load: function load() {\n            var _this = this;\n\n            if (!this.src) return;\n\n            if (this.object) {\n                this.wrapper.remove(this.object);\n            }\n\n            var onLoad = function onLoad(object) {\n\n                if (_this.process) {\n                    _this.process(object);\n                }\n\n                _this.addObject(object);\n\n                _this.$emit('on-load');\n            };\n\n            var onProgress = function onProgress(xhr) {\n\n                _this.$emit('on-progress', xhr);\n            };\n\n            var onError = function onError(err) {\n\n                _this.$emit('on-error', err);\n            };\n\n            if (this.mtl) {\n\n                var mtlPath = this.mtlPath;\n                var mtlSrc = this.mtl;\n\n                if (!this.mtlPath) {\n\n                    var result = /^(.*\\/)([^/]*)$/.exec(this.mtl);\n\n                    if (result) {\n                        mtlPath = result[1];\n                        mtlSrc = result[2];\n                    }\n                }\n\n                if (mtlPath) {\n                    this.mtlLoader.setPath(mtlPath);\n                }\n\n                this.mtlLoader.load(mtlSrc, function (materials) {\n\n                    materials.preload();\n\n                    _this.loader.setMaterials(materials);\n\n                    _this.loader.load(_this.src, onLoad, onProgress, onError);\n                }, function () {}, onError);\n            } else {\n\n                this.loader.load(this.src, onLoad, onProgress, onError);\n            }\n        }\n    }\n};\n\nvar ModelThree = {\n    name: 'model-three',\n    mixins: [mixin],\n    data: function data() {\n\n        var loader = new ObjectLoader();\n        loader.setCrossOrigin(this.crossOrigin);\n\n        return {\n            loader: loader\n        };\n    }\n};\n\n// https://github.com/mrdoob/three.js/blob/dev/examples/js/loaders/STLLoader.js\n\nvar STLLoader = function STLLoader(manager) {\n\n        this.manager = manager !== undefined ? manager : DefaultLoadingManager;\n};\n\nSTLLoader.prototype = {\n\n        constructor: STLLoader,\n\n        load: function load(url, onLoad, onProgress, onError) {\n\n                var scope = this;\n\n                var loader = new FileLoader(scope.manager);\n                loader.setResponseType('arraybuffer');\n                loader.load(url, function (text) {\n\n                        onLoad(scope.parse(text));\n                }, onProgress, onError);\n        },\n\n        parse: function parse(data) {\n\n                var isBinary = function isBinary() {\n\n                        var expect, face_size, n_faces, reader;\n                        reader = new DataView(binData);\n                        face_size = 32 / 8 * 3 + 32 / 8 * 3 * 3 + 16 / 8;\n                        n_faces = reader.getUint32(80, true);\n                        expect = 80 + 32 / 8 + n_faces * face_size;\n\n                        if (expect === reader.byteLength) {\n\n                                return true;\n                        }\n\n                        // An ASCII STL data must begin with 'solid ' as the first six bytes.\n                        // However, ASCII STLs lacking the SPACE after the 'd' are known to be\n                        // plentiful.  So, check the first 5 bytes for 'solid'.\n\n                        // US-ASCII ordinal values for 's', 'o', 'l', 'i', 'd'\n                        var solid = [115, 111, 108, 105, 100];\n\n                        for (var i = 0; i < 5; i++) {\n\n                                // If solid[ i ] does not match the i-th byte, then it is not an\n                                // ASCII STL; hence, it is binary and return true.\n\n                                if (solid[i] != reader.getUint8(i, false)) return true;\n                        }\n\n                        // First 5 bytes read \"solid\"; declare it to be an ASCII STL\n                        return false;\n                };\n\n                var binData = this.ensureBinary(data);\n\n                return isBinary() ? this.parseBinary(binData) : this.parseASCII(this.ensureString(data));\n        },\n\n        parseBinary: function parseBinary(data) {\n\n                var reader = new DataView(data);\n                var faces = reader.getUint32(80, true);\n\n                var r,\n                    g,\n                    b,\n                    hasColors = false,\n                    colors;\n                var defaultR, defaultG, defaultB, alpha;\n\n                // process STL header\n                // check for default color in header (\"COLOR=rgba\" sequence).\n\n                for (var index = 0; index < 80 - 10; index++) {\n\n                        if (reader.getUint32(index, false) == 0x434F4C4F /* COLO*/ && reader.getUint8(index + 4) == 0x52 /* 'R'*/ && reader.getUint8(index + 5) == 0x3D /* '='*/) {\n\n                                hasColors = true;\n                                colors = [];\n\n                                defaultR = reader.getUint8(index + 6) / 255;\n                                defaultG = reader.getUint8(index + 7) / 255;\n                                defaultB = reader.getUint8(index + 8) / 255;\n                                alpha = reader.getUint8(index + 9) / 255;\n                        }\n                }\n\n                var dataOffset = 84;\n                var faceLength = 12 * 4 + 2;\n\n                var geometry = new BufferGeometry();\n\n                var vertices = [];\n                var normals = [];\n\n                for (var face = 0; face < faces; face++) {\n\n                        var start = dataOffset + face * faceLength;\n                        var normalX = reader.getFloat32(start, true);\n                        var normalY = reader.getFloat32(start + 4, true);\n                        var normalZ = reader.getFloat32(start + 8, true);\n\n                        if (hasColors) {\n\n                                var packedColor = reader.getUint16(start + 48, true);\n\n                                if ((packedColor & 0x8000) === 0) {\n\n                                        // facet has its own unique color\n\n                                        r = (packedColor & 0x1F) / 31;\n                                        g = (packedColor >> 5 & 0x1F) / 31;\n                                        b = (packedColor >> 10 & 0x1F) / 31;\n                                } else {\n\n                                        r = defaultR;\n                                        g = defaultG;\n                                        b = defaultB;\n                                }\n                        }\n\n                        for (var i = 1; i <= 3; i++) {\n\n                                var vertexstart = start + i * 12;\n\n                                vertices.push(reader.getFloat32(vertexstart, true));\n                                vertices.push(reader.getFloat32(vertexstart + 4, true));\n                                vertices.push(reader.getFloat32(vertexstart + 8, true));\n\n                                normals.push(normalX, normalY, normalZ);\n\n                                if (hasColors) {\n\n                                        colors.push(r, g, b);\n                                }\n                        }\n                }\n\n                geometry.addAttribute('position', new BufferAttribute(new Float32Array(vertices), 3));\n                geometry.addAttribute('normal', new BufferAttribute(new Float32Array(normals), 3));\n\n                if (hasColors) {\n\n                        geometry.addAttribute('color', new BufferAttribute(new Float32Array(colors), 3));\n                        geometry.hasColors = true;\n                        geometry.alpha = alpha;\n                }\n\n                return geometry;\n        },\n\n        parseASCII: function parseASCII(data) {\n\n                var geometry, patternFace, patternNormal, patternVertex, result, text;\n                geometry = new BufferGeometry();\n                patternFace = /facet([\\s\\S]*?)endfacet/g;\n\n                var vertices = [];\n                var normals = [];\n\n                var normal = new Vector3();\n\n                while ((result = patternFace.exec(data)) !== null) {\n\n                        text = result[0];\n                        patternNormal = /normal[\\s]+([\\-+]?[0-9]+\\.?[0-9]*([eE][\\-+]?[0-9]+)?)+[\\s]+([\\-+]?[0-9]*\\.?[0-9]+([eE][\\-+]?[0-9]+)?)+[\\s]+([\\-+]?[0-9]*\\.?[0-9]+([eE][\\-+]?[0-9]+)?)+/g;\n\n                        while ((result = patternNormal.exec(text)) !== null) {\n\n                                normal.x = parseFloat(result[1]);\n                                normal.y = parseFloat(result[3]);\n                                normal.z = parseFloat(result[5]);\n                        }\n\n                        patternVertex = /vertex[\\s]+([\\-+]?[0-9]+\\.?[0-9]*([eE][\\-+]?[0-9]+)?)+[\\s]+([\\-+]?[0-9]*\\.?[0-9]+([eE][\\-+]?[0-9]+)?)+[\\s]+([\\-+]?[0-9]*\\.?[0-9]+([eE][\\-+]?[0-9]+)?)+/g;\n\n                        while ((result = patternVertex.exec(text)) !== null) {\n\n                                vertices.push(parseFloat(result[1]), parseFloat(result[3]), parseFloat(result[5]));\n                                normals.push(normal.x, normal.y, normal.z);\n                        }\n                }\n\n                geometry.addAttribute('position', new BufferAttribute(new Float32Array(vertices), 3));\n                geometry.addAttribute('normal', new BufferAttribute(new Float32Array(normals), 3));\n\n                return geometry;\n        },\n\n        ensureString: function ensureString(buf) {\n\n                if (typeof buf !== 'string') {\n\n                        var array_buffer = new Uint8Array(buf);\n                        var strArray = [];\n                        for (var i = 0; i < buf.byteLength; i++) {\n\n                                strArray.push(String.fromCharCode(array_buffer[i])); // implicitly assumes little-endian\n                        }\n                        return strArray.join('');\n                } else {\n\n                        return buf;\n                }\n        },\n\n        ensureBinary: function ensureBinary(buf) {\n\n                if (typeof buf === 'string') {\n\n                        var array_buffer = new Uint8Array(buf.length);\n                        for (var i = 0; i < buf.length; i++) {\n\n                                array_buffer[i] = buf.charCodeAt(i) & 0xff; // implicitly assumes little-endian\n                        }\n                        return array_buffer.buffer || array_buffer;\n                } else {\n\n                        return buf;\n                }\n        }\n\n};\n\nvar ModelStl = {\n    name: 'model-stl',\n    mixins: [mixin],\n    props: {\n        lights: {\n            type: Array,\n            default: function _default() {\n                return [{\n                    type: 'HemisphereLight',\n                    position: { x: 0, y: 1, z: 0 },\n                    skyColor: 0xaaaaff,\n                    groundColor: 0x806060,\n                    intensity: 0.2\n                }, {\n                    type: 'DirectionalLight',\n                    position: { x: 1, y: 1, z: 1 },\n                    color: 0xffffff,\n                    intensity: 0.8\n                }];\n            }\n        }\n    },\n    data: function data() {\n        return {\n            loader: new STLLoader()\n        };\n    },\n\n    methods: {\n        getObject: function getObject(geometry) {\n\n            return new Mesh(geometry, new MeshPhongMaterial());\n        }\n    }\n};\n\nvar PLYLoader = function PLYLoader(manager) {\n\n            this.manager = manager !== undefined ? manager : DefaultLoadingManager;\n\n            this.propertyNameMapping = {};\n};\n\nPLYLoader.prototype = {\n\n            constructor: PLYLoader,\n\n            load: function load(url, onLoad, onProgress, onError) {\n\n                        var scope = this;\n\n                        var loader = new FileLoader(this.manager);\n                        loader.setResponseType('arraybuffer');\n                        loader.load(url, function (text) {\n\n                                    onLoad(scope.parse(text));\n                        }, onProgress, onError);\n            },\n\n            setPropertyNameMapping: function setPropertyNameMapping(mapping) {\n\n                        this.propertyNameMapping = mapping;\n            },\n\n            parse: function parse(data) {\n\n                        function bin2str(buf) {\n\n                                    var array_buffer = new Uint8Array(buf);\n\n                                    if (window.TextDecoder !== undefined) {\n\n                                                return new TextDecoder().decode(array_buffer);\n                                    }\n\n                                    var str = '';\n\n                                    for (var i = 0, il = buf.byteLength; i < il; i++) {\n\n                                                str += String.fromCharCode(array_buffer[i]); // implicitly assumes little-endian\n                                    }\n\n                                    return str;\n                        }\n\n                        function parseHeader(data) {\n\n                                    var patternHeader = /ply([\\s\\S]*)end_header\\s/;\n                                    var headerText = '';\n                                    var headerLength = 0;\n                                    var result = patternHeader.exec(data);\n\n                                    if (result !== null) {\n\n                                                headerText = result[1];\n                                                headerLength = result[0].length;\n                                    }\n\n                                    var header = {\n                                                comments: [],\n                                                elements: [],\n                                                headerLength: headerLength\n                                    };\n\n                                    var lines = headerText.split('\\n');\n                                    var currentElement;\n                                    var lineType, lineValues;\n\n                                    function make_ply_element_property(propertValues, propertyNameMapping) {\n\n                                                var property = { type: propertValues[0] };\n\n                                                if (property.type === 'list') {\n\n                                                            property.name = propertValues[3];\n                                                            property.countType = propertValues[1];\n                                                            property.itemType = propertValues[2];\n                                                } else {\n\n                                                            property.name = propertValues[1];\n                                                }\n\n                                                if (property.name in propertyNameMapping) {\n\n                                                            property.name = propertyNameMapping[property.name];\n                                                }\n\n                                                return property;\n                                    }\n\n                                    for (var i = 0; i < lines.length; i++) {\n\n                                                var line = lines[i];\n                                                line = line.trim();\n\n                                                if (line === '') continue;\n\n                                                lineValues = line.split(/\\s+/);\n                                                lineType = lineValues.shift();\n                                                line = lineValues.join(' ');\n\n                                                switch (lineType) {\n\n                                                            case 'format':\n\n                                                                        header.format = lineValues[0];\n                                                                        header.version = lineValues[1];\n\n                                                                        break;\n\n                                                            case 'comment':\n\n                                                                        header.comments.push(line);\n\n                                                                        break;\n\n                                                            case 'element':\n\n                                                                        if (currentElement !== undefined) {\n\n                                                                                    header.elements.push(currentElement);\n                                                                        }\n\n                                                                        currentElement = {};\n                                                                        currentElement.name = lineValues[0];\n                                                                        currentElement.count = parseInt(lineValues[1]);\n                                                                        currentElement.properties = [];\n\n                                                                        break;\n\n                                                            case 'property':\n\n                                                                        currentElement.properties.push(make_ply_element_property(lineValues, scope.propertyNameMapping));\n\n                                                                        break;\n\n                                                            default:\n\n                                                                        console.log('unhandled', lineType, lineValues);\n\n                                                }\n                                    }\n\n                                    if (currentElement !== undefined) {\n\n                                                header.elements.push(currentElement);\n                                    }\n\n                                    return header;\n                        }\n\n                        function parseASCIINumber(n, type) {\n\n                                    switch (type) {\n\n                                                case 'char':case 'uchar':case 'short':case 'ushort':case 'int':case 'uint':\n                                                case 'int8':case 'uint8':case 'int16':case 'uint16':case 'int32':case 'uint32':\n\n                                                            return parseInt(n);\n\n                                                case 'float':case 'double':case 'float32':case 'float64':\n\n                                                            return parseFloat(n);\n\n                                    }\n                        }\n\n                        function parseASCIIElement(properties, line) {\n\n                                    var values = line.split(/\\s+/);\n\n                                    var element = {};\n\n                                    for (var i = 0; i < properties.length; i++) {\n\n                                                if (properties[i].type === 'list') {\n\n                                                            var list = [];\n                                                            var n = parseASCIINumber(values.shift(), properties[i].countType);\n\n                                                            for (var j = 0; j < n; j++) {\n\n                                                                        list.push(parseASCIINumber(values.shift(), properties[i].itemType));\n                                                            }\n\n                                                            element[properties[i].name] = list;\n                                                } else {\n\n                                                            element[properties[i].name] = parseASCIINumber(values.shift(), properties[i].type);\n                                                }\n                                    }\n\n                                    return element;\n                        }\n\n                        function parseASCII(data, header) {\n\n                                    // PLY ascii format specification, as per http://en.wikipedia.org/wiki/PLY_(file_format)\n\n                                    var buffer = {\n                                                indices: [],\n                                                vertices: [],\n                                                normals: [],\n                                                uvs: [],\n                                                colors: []\n                                    };\n\n                                    var result;\n\n                                    var patternBody = /end_header\\s([\\s\\S]*)$/;\n                                    var body = '';\n                                    if ((result = patternBody.exec(data)) !== null) {\n\n                                                body = result[1];\n                                    }\n\n                                    var lines = body.split('\\n');\n                                    var currentElement = 0;\n                                    var currentElementCount = 0;\n\n                                    for (var i = 0; i < lines.length; i++) {\n\n                                                var line = lines[i];\n                                                line = line.trim();\n                                                if (line === '') {\n\n                                                            continue;\n                                                }\n\n                                                if (currentElementCount >= header.elements[currentElement].count) {\n\n                                                            currentElement++;\n                                                            currentElementCount = 0;\n                                                }\n\n                                                var element = parseASCIIElement(header.elements[currentElement].properties, line);\n\n                                                handleElement(buffer, header.elements[currentElement].name, element);\n\n                                                currentElementCount++;\n                                    }\n\n                                    return postProcess(buffer);\n                        }\n\n                        function postProcess(buffer) {\n\n                                    var geometry = new BufferGeometry();\n\n                                    // mandatory buffer data\n\n                                    if (buffer.indices.length > 0) {\n\n                                                geometry.setIndex(buffer.indices);\n                                    }\n\n                                    geometry.addAttribute('position', new Float32BufferAttribute(buffer.vertices, 3));\n\n                                    // optional buffer data\n\n                                    if (buffer.normals.length > 0) {\n\n                                                geometry.addAttribute('normal', new Float32BufferAttribute(buffer.normals, 3));\n                                    }\n\n                                    if (buffer.uvs.length > 0) {\n\n                                                geometry.addAttribute('uv', new Float32BufferAttribute(buffer.uvs, 2));\n                                    }\n\n                                    if (buffer.colors.length > 0) {\n\n                                                geometry.addAttribute('color', new Float32BufferAttribute(buffer.colors, 3));\n                                    }\n\n                                    geometry.computeBoundingSphere();\n\n                                    return geometry;\n                        }\n\n                        function handleElement(buffer, elementName, element) {\n\n                                    if (elementName === 'vertex') {\n\n                                                buffer.vertices.push(element.x, element.y, element.z);\n\n                                                if ('nx' in element && 'ny' in element && 'nz' in element) {\n\n                                                            buffer.normals.push(element.nx, element.ny, element.nz);\n                                                }\n\n                                                if ('s' in element && 't' in element) {\n\n                                                            buffer.uvs.push(element.s, element.t);\n                                                }\n\n                                                if ('red' in element && 'green' in element && 'blue' in element) {\n\n                                                            buffer.colors.push(element.red / 255.0, element.green / 255.0, element.blue / 255.0);\n                                                }\n                                    } else if (elementName === 'face') {\n\n                                                var vertex_indices = element.vertex_indices || element.vertex_index; // issue #9338\n\n                                                if (vertex_indices.length === 3) {\n\n                                                            buffer.indices.push(vertex_indices[0], vertex_indices[1], vertex_indices[2]);\n                                                } else if (vertex_indices.length === 4) {\n\n                                                            buffer.indices.push(vertex_indices[0], vertex_indices[1], vertex_indices[3]);\n                                                            buffer.indices.push(vertex_indices[1], vertex_indices[2], vertex_indices[3]);\n                                                }\n                                    }\n                        }\n\n                        function binaryRead(dataview, at, type, little_endian) {\n\n                                    switch (type) {\n\n                                                // corespondences for non-specific length types here match rply:\n                                                case 'int8':case 'char':\n                                                            return [dataview.getInt8(at), 1];\n                                                case 'uint8':case 'uchar':\n                                                            return [dataview.getUint8(at), 1];\n                                                case 'int16':case 'short':\n                                                            return [dataview.getInt16(at, little_endian), 2];\n                                                case 'uint16':case 'ushort':\n                                                            return [dataview.getUint16(at, little_endian), 2];\n                                                case 'int32':case 'int':\n                                                            return [dataview.getInt32(at, little_endian), 4];\n                                                case 'uint32':case 'uint':\n                                                            return [dataview.getUint32(at, little_endian), 4];\n                                                case 'float32':case 'float':\n                                                            return [dataview.getFloat32(at, little_endian), 4];\n                                                case 'float64':case 'double':\n                                                            return [dataview.getFloat64(at, little_endian), 8];\n\n                                    }\n                        }\n\n                        function binaryReadElement(dataview, at, properties, little_endian) {\n\n                                    var element = {};\n                                    var result,\n                                        read = 0;\n\n                                    for (var i = 0; i < properties.length; i++) {\n\n                                                if (properties[i].type === 'list') {\n\n                                                            var list = [];\n\n                                                            result = binaryRead(dataview, at + read, properties[i].countType, little_endian);\n                                                            var n = result[0];\n                                                            read += result[1];\n\n                                                            for (var j = 0; j < n; j++) {\n\n                                                                        result = binaryRead(dataview, at + read, properties[i].itemType, little_endian);\n                                                                        list.push(result[0]);\n                                                                        read += result[1];\n                                                            }\n\n                                                            element[properties[i].name] = list;\n                                                } else {\n\n                                                            result = binaryRead(dataview, at + read, properties[i].type, little_endian);\n                                                            element[properties[i].name] = result[0];\n                                                            read += result[1];\n                                                }\n                                    }\n\n                                    return [element, read];\n                        }\n\n                        function parseBinary(data, header) {\n\n                                    var buffer = {\n                                                indices: [],\n                                                vertices: [],\n                                                normals: [],\n                                                uvs: [],\n                                                colors: []\n                                    };\n\n                                    var little_endian = header.format === 'binary_little_endian';\n                                    var body = new DataView(data, header.headerLength);\n                                    var result,\n                                        loc = 0;\n\n                                    for (var currentElement = 0; currentElement < header.elements.length; currentElement++) {\n\n                                                for (var currentElementCount = 0; currentElementCount < header.elements[currentElement].count; currentElementCount++) {\n\n                                                            result = binaryReadElement(body, loc, header.elements[currentElement].properties, little_endian);\n                                                            loc += result[1];\n                                                            var element = result[0];\n\n                                                            handleElement(buffer, header.elements[currentElement].name, element);\n                                                }\n                                    }\n\n                                    return postProcess(buffer);\n                        }\n\n                        //\n\n                        var geometry;\n                        var scope = this;\n\n                        if (data instanceof ArrayBuffer) {\n\n                                    var text = bin2str(data);\n                                    var header = parseHeader(text);\n\n                                    geometry = header.format === 'ascii' ? parseASCII(text, header) : parseBinary(data, header);\n                        } else {\n\n                                    geometry = parseASCII(data, parseHeader(data));\n                        }\n\n                        return geometry;\n            }\n\n};\n\nvar ModelPly = {\n    name: 'model-ply',\n    mixins: [mixin],\n    props: {\n        lights: {\n            type: Array,\n            default: function _default() {\n                return [{\n                    type: 'HemisphereLight',\n                    position: { x: 0, y: 1, z: 0 },\n                    skyColor: 0xaaaaff,\n                    groundColor: 0x806060,\n                    intensity: 0.2\n                }, {\n                    type: 'DirectionalLight',\n                    position: { x: 1, y: 1, z: 1 },\n                    color: 0xffffff,\n                    intensity: 0.8\n                }];\n            }\n        }\n    },\n    data: function data() {\n        return {\n            loader: new PLYLoader()\n        };\n    },\n\n    methods: {\n        getObject: function getObject(geometry) {\n\n            geometry.computeVertexNormals();\n\n            return new Mesh(geometry, new MeshStandardMaterial());\n        }\n    }\n};\n\nvar ColladaLoader = function ColladaLoader(manager) {\n\n            this.manager = manager !== undefined ? manager : DefaultLoadingManager;\n};\n\nColladaLoader.prototype = {\n\n            constructor: ColladaLoader,\n\n            crossOrigin: 'Anonymous',\n\n            load: function load(url, onLoad, onProgress, onError) {\n\n                        var scope = this;\n\n                        var path = Loader.prototype.extractUrlBase(url);\n\n                        var loader = new FileLoader(scope.manager);\n                        loader.load(url, function (text) {\n\n                                    onLoad(scope.parse(text, path));\n                        }, onProgress, onError);\n            },\n\n            options: {\n\n                        set convertUpAxis(value) {\n\n                                    console.warn('ColladaLoader: options.convertUpAxis() has been removed. Up axis is converted automatically.');\n                        }\n\n            },\n\n            setCrossOrigin: function setCrossOrigin(value) {\n\n                        this.crossOrigin = value;\n            },\n\n            parse: function parse(text, path) {\n\n                        function getElementsByTagName(xml, name) {\n\n                                    // Non recursive xml.getElementsByTagName() ...\n\n                                    var array = [];\n                                    var childNodes = xml.childNodes;\n\n                                    for (var i = 0, l = childNodes.length; i < l; i++) {\n\n                                                var child = childNodes[i];\n\n                                                if (child.nodeName === name) {\n\n                                                            array.push(child);\n                                                }\n                                    }\n\n                                    return array;\n                        }\n\n                        function parseStrings(text) {\n\n                                    if (text.length === 0) return [];\n\n                                    var parts = text.trim().split(/\\s+/);\n                                    var array = new Array(parts.length);\n\n                                    for (var i = 0, l = parts.length; i < l; i++) {\n\n                                                array[i] = parts[i];\n                                    }\n\n                                    return array;\n                        }\n\n                        function parseFloats(text) {\n\n                                    if (text.length === 0) return [];\n\n                                    var parts = text.trim().split(/\\s+/);\n                                    var array = new Array(parts.length);\n\n                                    for (var i = 0, l = parts.length; i < l; i++) {\n\n                                                array[i] = parseFloat(parts[i]);\n                                    }\n\n                                    return array;\n                        }\n\n                        function parseInts(text) {\n\n                                    if (text.length === 0) return [];\n\n                                    var parts = text.trim().split(/\\s+/);\n                                    var array = new Array(parts.length);\n\n                                    for (var i = 0, l = parts.length; i < l; i++) {\n\n                                                array[i] = parseInt(parts[i]);\n                                    }\n\n                                    return array;\n                        }\n\n                        function parseId(text) {\n\n                                    return text.substring(1);\n                        }\n\n                        function isEmpty(object) {\n\n                                    return Object.keys(object).length === 0;\n                        }\n\n                        // asset\n\n                        function parseAsset(xml) {\n\n                                    return {\n                                                unit: parseAssetUnit(getElementsByTagName(xml, 'unit')[0]),\n                                                upAxis: parseAssetUpAxis(getElementsByTagName(xml, 'up_axis')[0])\n                                    };\n                        }\n\n                        function parseAssetUnit(xml) {\n\n                                    return xml !== undefined ? parseFloat(xml.getAttribute('meter')) : 1;\n                        }\n\n                        function parseAssetUpAxis(xml) {\n\n                                    return xml !== undefined ? xml.textContent : 'Y_UP';\n                        }\n\n                        // library\n\n                        function parseLibrary(xml, libraryName, nodeName, parser) {\n\n                                    var library = getElementsByTagName(xml, libraryName)[0];\n\n                                    if (library !== undefined) {\n\n                                                var elements = getElementsByTagName(library, nodeName);\n\n                                                for (var i = 0; i < elements.length; i++) {\n\n                                                            parser(elements[i]);\n                                                }\n                                    }\n                        }\n\n                        function buildLibrary(data, builder) {\n\n                                    for (var name in data) {\n\n                                                var object = data[name];\n                                                object.build = builder(data[name]);\n                                    }\n                        }\n\n                        // get\n\n                        function getBuild(data, builder) {\n\n                                    if (data.build !== undefined) return data.build;\n\n                                    data.build = builder(data);\n\n                                    return data.build;\n                        }\n\n                        // animation\n\n                        function parseAnimation(xml) {\n\n                                    var data = {\n                                                sources: {},\n                                                samplers: {},\n                                                channels: {}\n                                    };\n\n                                    for (var i = 0, l = xml.childNodes.length; i < l; i++) {\n\n                                                var child = xml.childNodes[i];\n\n                                                if (child.nodeType !== 1) continue;\n\n                                                var id;\n\n                                                switch (child.nodeName) {\n\n                                                            case 'source':\n                                                                        id = child.getAttribute('id');\n                                                                        data.sources[id] = parseSource(child);\n                                                                        break;\n\n                                                            case 'sampler':\n                                                                        id = child.getAttribute('id');\n                                                                        data.samplers[id] = parseAnimationSampler(child);\n                                                                        break;\n\n                                                            case 'channel':\n                                                                        id = child.getAttribute('target');\n                                                                        data.channels[id] = parseAnimationChannel(child);\n                                                                        break;\n\n                                                            default:\n                                                                        console.log(child);\n\n                                                }\n                                    }\n\n                                    library.animations[xml.getAttribute('id')] = data;\n                        }\n\n                        function parseAnimationSampler(xml) {\n\n                                    var data = {\n                                                inputs: {}\n                                    };\n\n                                    for (var i = 0, l = xml.childNodes.length; i < l; i++) {\n\n                                                var child = xml.childNodes[i];\n\n                                                if (child.nodeType !== 1) continue;\n\n                                                switch (child.nodeName) {\n\n                                                            case 'input':\n                                                                        var id = parseId(child.getAttribute('source'));\n                                                                        var semantic = child.getAttribute('semantic');\n                                                                        data.inputs[semantic] = id;\n                                                                        break;\n\n                                                }\n                                    }\n\n                                    return data;\n                        }\n\n                        function parseAnimationChannel(xml) {\n\n                                    var data = {};\n\n                                    var target = xml.getAttribute('target');\n\n                                    // parsing SID Addressing Syntax\n\n                                    var parts = target.split('/');\n\n                                    var id = parts.shift();\n                                    var sid = parts.shift();\n\n                                    // check selection syntax\n\n                                    var arraySyntax = sid.indexOf('(') !== -1;\n                                    var memberSyntax = sid.indexOf('.') !== -1;\n\n                                    if (memberSyntax) {\n\n                                                //  member selection access\n\n                                                parts = sid.split('.');\n                                                sid = parts.shift();\n                                                data.member = parts.shift();\n                                    } else if (arraySyntax) {\n\n                                                // array-access syntax. can be used to express fields in one-dimensional vectors or two-dimensional matrices.\n\n                                                var indices = sid.split('(');\n                                                sid = indices.shift();\n\n                                                for (var i = 0; i < indices.length; i++) {\n\n                                                            indices[i] = parseInt(indices[i].replace(/\\)/, ''));\n                                                }\n\n                                                data.indices = indices;\n                                    }\n\n                                    data.id = id;\n                                    data.sid = sid;\n\n                                    data.arraySyntax = arraySyntax;\n                                    data.memberSyntax = memberSyntax;\n\n                                    data.sampler = parseId(xml.getAttribute('source'));\n\n                                    return data;\n                        }\n\n                        function buildAnimation(data) {\n\n                                    var tracks = [];\n\n                                    var channels = data.channels;\n                                    var samplers = data.samplers;\n                                    var sources = data.sources;\n\n                                    for (var target in channels) {\n\n                                                if (channels.hasOwnProperty(target)) {\n\n                                                            var channel = channels[target];\n                                                            var sampler = samplers[channel.sampler];\n\n                                                            var inputId = sampler.inputs.INPUT;\n                                                            var outputId = sampler.inputs.OUTPUT;\n\n                                                            var inputSource = sources[inputId];\n                                                            var outputSource = sources[outputId];\n\n                                                            var animation = buildAnimationChannel(channel, inputSource, outputSource);\n\n                                                            createKeyframeTracks(animation, tracks);\n                                                }\n                                    }\n\n                                    return tracks;\n                        }\n\n                        function getAnimation(id) {\n\n                                    return getBuild(library.animations[id], buildAnimation);\n                        }\n\n                        function buildAnimationChannel(channel, inputSource, outputSource) {\n\n                                    var node = library.nodes[channel.id];\n                                    var object3D = getNode(node.id);\n\n                                    var transform = node.transforms[channel.sid];\n                                    var defaultMatrix = node.matrix.clone().transpose();\n\n                                    var time, stride;\n                                    var i, il, j, jl;\n\n                                    var data = {};\n\n                                    // the collada spec allows the animation of data in various ways.\n                                    // depending on the transform type (matrix, translate, rotate, scale), we execute different logic\n\n                                    switch (transform) {\n\n                                                case 'matrix':\n\n                                                            for (i = 0, il = inputSource.array.length; i < il; i++) {\n\n                                                                        time = inputSource.array[i];\n                                                                        stride = i * outputSource.stride;\n\n                                                                        if (data[time] === undefined) data[time] = {};\n\n                                                                        if (channel.arraySyntax === true) {\n\n                                                                                    var value = outputSource.array[stride];\n                                                                                    var index = channel.indices[0] + 4 * channel.indices[1];\n\n                                                                                    data[time][index] = value;\n                                                                        } else {\n\n                                                                                    for (j = 0, jl = outputSource.stride; j < jl; j++) {\n\n                                                                                                data[time][j] = outputSource.array[stride + j];\n                                                                                    }\n                                                                        }\n                                                            }\n\n                                                            break;\n\n                                                case 'translate':\n                                                            console.warn('ColladaLoader: Animation transform type \"%s\" not yet implemented.', transform);\n                                                            break;\n\n                                                case 'rotate':\n                                                            console.warn('ColladaLoader: Animation transform type \"%s\" not yet implemented.', transform);\n                                                            break;\n\n                                                case 'scale':\n                                                            console.warn('ColladaLoader: Animation transform type \"%s\" not yet implemented.', transform);\n                                                            break;\n\n                                    }\n\n                                    var keyframes = prepareAnimationData(data, defaultMatrix);\n\n                                    var animation = {\n                                                name: object3D.uuid,\n                                                keyframes: keyframes\n                                    };\n\n                                    return animation;\n                        }\n\n                        function prepareAnimationData(data, defaultMatrix) {\n\n                                    var keyframes = [];\n\n                                    // transfer data into a sortable array\n\n                                    for (var time in data) {\n\n                                                keyframes.push({ time: parseFloat(time), value: data[time] });\n                                    }\n\n                                    // ensure keyframes are sorted by time\n\n                                    keyframes.sort(ascending);\n\n                                    // now we clean up all animation data, so we can use them for keyframe tracks\n\n                                    for (var i = 0; i < 16; i++) {\n\n                                                transformAnimationData(keyframes, i, defaultMatrix.elements[i]);\n                                    }\n\n                                    return keyframes;\n\n                                    // array sort function\n\n                                    function ascending(a, b) {\n\n                                                return a.time - b.time;\n                                    }\n                        }\n\n                        var position = new Vector3();\n                        var scale = new Vector3();\n                        var quaternion = new Quaternion();\n\n                        function createKeyframeTracks(animation, tracks) {\n\n                                    var keyframes = animation.keyframes;\n                                    var name = animation.name;\n\n                                    var times = [];\n                                    var positionData = [];\n                                    var quaternionData = [];\n                                    var scaleData = [];\n\n                                    for (var i = 0, l = keyframes.length; i < l; i++) {\n\n                                                var keyframe = keyframes[i];\n\n                                                var time = keyframe.time;\n                                                var value = keyframe.value;\n\n                                                matrix.fromArray(value).transpose();\n                                                matrix.decompose(position, quaternion, scale);\n\n                                                times.push(time);\n                                                positionData.push(position.x, position.y, position.z);\n                                                quaternionData.push(quaternion.x, quaternion.y, quaternion.z, quaternion.w);\n                                                scaleData.push(scale.x, scale.y, scale.z);\n                                    }\n\n                                    if (positionData.length > 0) tracks.push(new VectorKeyframeTrack(name + '.position', times, positionData));\n                                    if (quaternionData.length > 0) tracks.push(new QuaternionKeyframeTrack(name + '.quaternion', times, quaternionData));\n                                    if (scaleData.length > 0) tracks.push(new VectorKeyframeTrack(name + '.scale', times, scaleData));\n\n                                    return tracks;\n                        }\n\n                        function transformAnimationData(keyframes, property, defaultValue) {\n\n                                    var keyframe;\n\n                                    var empty = true;\n                                    var i, l;\n\n                                    // check, if values of a property are missing in our keyframes\n\n                                    for (i = 0, l = keyframes.length; i < l; i++) {\n\n                                                keyframe = keyframes[i];\n\n                                                if (keyframe.value[property] === undefined) {\n\n                                                            keyframe.value[property] = null; // mark as missing\n                                                } else {\n\n                                                            empty = false;\n                                                }\n                                    }\n\n                                    if (empty === true) {\n\n                                                // no values at all, so we set a default value\n\n                                                for (i = 0, l = keyframes.length; i < l; i++) {\n\n                                                            keyframe = keyframes[i];\n\n                                                            keyframe.value[property] = defaultValue;\n                                                }\n                                    } else {\n\n                                                // filling gaps\n\n                                                createMissingKeyframes(keyframes, property);\n                                    }\n                        }\n\n                        function createMissingKeyframes(keyframes, property) {\n\n                                    var prev, next;\n\n                                    for (var i = 0, l = keyframes.length; i < l; i++) {\n\n                                                var keyframe = keyframes[i];\n\n                                                if (keyframe.value[property] === null) {\n\n                                                            prev = getPrev(keyframes, i, property);\n                                                            next = getNext(keyframes, i, property);\n\n                                                            if (prev === null) {\n\n                                                                        keyframe.value[property] = next.value[property];\n                                                                        continue;\n                                                            }\n\n                                                            if (next === null) {\n\n                                                                        keyframe.value[property] = prev.value[property];\n                                                                        continue;\n                                                            }\n\n                                                            interpolate(keyframe, prev, next, property);\n                                                }\n                                    }\n                        }\n\n                        function getPrev(keyframes, i, property) {\n\n                                    while (i >= 0) {\n\n                                                var keyframe = keyframes[i];\n\n                                                if (keyframe.value[property] !== null) return keyframe;\n\n                                                i--;\n                                    }\n\n                                    return null;\n                        }\n\n                        function getNext(keyframes, i, property) {\n\n                                    while (i < keyframes.length) {\n\n                                                var keyframe = keyframes[i];\n\n                                                if (keyframe.value[property] !== null) return keyframe;\n\n                                                i++;\n                                    }\n\n                                    return null;\n                        }\n\n                        function interpolate(key, prev, next, property) {\n\n                                    if (next.time - prev.time === 0) {\n\n                                                key.value[property] = prev.value[property];\n                                                return;\n                                    }\n\n                                    key.value[property] = (key.time - prev.time) * (next.value[property] - prev.value[property]) / (next.time - prev.time) + prev.value[property];\n                        }\n\n                        // animation clips\n\n                        function parseAnimationClip(xml) {\n\n                                    var data = {\n                                                name: xml.getAttribute('id') || 'default',\n                                                start: parseFloat(xml.getAttribute('start') || 0),\n                                                end: parseFloat(xml.getAttribute('end') || 0),\n                                                animations: []\n                                    };\n\n                                    for (var i = 0, l = xml.childNodes.length; i < l; i++) {\n\n                                                var child = xml.childNodes[i];\n\n                                                if (child.nodeType !== 1) continue;\n\n                                                switch (child.nodeName) {\n\n                                                            case 'instance_animation':\n                                                                        data.animations.push(parseId(child.getAttribute('url')));\n                                                                        break;\n\n                                                }\n                                    }\n\n                                    library.clips[xml.getAttribute('id')] = data;\n                        }\n\n                        function buildAnimationClip(data) {\n\n                                    var tracks = [];\n\n                                    var name = data.name;\n                                    var duration = data.end - data.start || -1;\n                                    var animations = data.animations;\n\n                                    for (var i = 0, il = animations.length; i < il; i++) {\n\n                                                var animationTracks = getAnimation(animations[i]);\n\n                                                for (var j = 0, jl = animationTracks.length; j < jl; j++) {\n\n                                                            tracks.push(animationTracks[j]);\n                                                }\n                                    }\n\n                                    return new AnimationClip(name, duration, tracks);\n                        }\n\n                        function getAnimationClip(id) {\n\n                                    return getBuild(library.clips[id], buildAnimationClip);\n                        }\n\n                        // controller\n\n                        function parseController(xml) {\n\n                                    var data = {};\n\n                                    for (var i = 0, l = xml.childNodes.length; i < l; i++) {\n\n                                                var child = xml.childNodes[i];\n\n                                                if (child.nodeType !== 1) continue;\n\n                                                switch (child.nodeName) {\n\n                                                            case 'skin':\n                                                                        // there is exactly one skin per controller\n                                                                        data.id = parseId(child.getAttribute('source'));\n                                                                        data.skin = parseSkin(child);\n                                                                        break;\n\n                                                            case 'morph':\n                                                                        data.id = parseId(child.getAttribute('source'));\n                                                                        console.warn('ColladaLoader: Morph target animation not supported yet.');\n                                                                        break;\n\n                                                }\n                                    }\n\n                                    library.controllers[xml.getAttribute('id')] = data;\n                        }\n\n                        function parseSkin(xml) {\n\n                                    var data = {\n                                                sources: {}\n                                    };\n\n                                    for (var i = 0, l = xml.childNodes.length; i < l; i++) {\n\n                                                var child = xml.childNodes[i];\n\n                                                if (child.nodeType !== 1) continue;\n\n                                                switch (child.nodeName) {\n\n                                                            case 'bind_shape_matrix':\n                                                                        data.bindShapeMatrix = parseFloats(child.textContent);\n                                                                        break;\n\n                                                            case 'source':\n                                                                        var id = child.getAttribute('id');\n                                                                        data.sources[id] = parseSource(child);\n                                                                        break;\n\n                                                            case 'joints':\n                                                                        data.joints = parseJoints(child);\n                                                                        break;\n\n                                                            case 'vertex_weights':\n                                                                        data.vertexWeights = parseVertexWeights(child);\n                                                                        break;\n\n                                                }\n                                    }\n\n                                    return data;\n                        }\n\n                        function parseJoints(xml) {\n\n                                    var data = {\n                                                inputs: {}\n                                    };\n\n                                    for (var i = 0, l = xml.childNodes.length; i < l; i++) {\n\n                                                var child = xml.childNodes[i];\n\n                                                if (child.nodeType !== 1) continue;\n\n                                                switch (child.nodeName) {\n\n                                                            case 'input':\n                                                                        var semantic = child.getAttribute('semantic');\n                                                                        var id = parseId(child.getAttribute('source'));\n                                                                        data.inputs[semantic] = id;\n                                                                        break;\n\n                                                }\n                                    }\n\n                                    return data;\n                        }\n\n                        function parseVertexWeights(xml) {\n\n                                    var data = {\n                                                inputs: {}\n                                    };\n\n                                    for (var i = 0, l = xml.childNodes.length; i < l; i++) {\n\n                                                var child = xml.childNodes[i];\n\n                                                if (child.nodeType !== 1) continue;\n\n                                                switch (child.nodeName) {\n\n                                                            case 'input':\n                                                                        var semantic = child.getAttribute('semantic');\n                                                                        var id = parseId(child.getAttribute('source'));\n                                                                        var offset = parseInt(child.getAttribute('offset'));\n                                                                        data.inputs[semantic] = { id: id, offset: offset };\n                                                                        break;\n\n                                                            case 'vcount':\n                                                                        data.vcount = parseInts(child.textContent);\n                                                                        break;\n\n                                                            case 'v':\n                                                                        data.v = parseInts(child.textContent);\n                                                                        break;\n\n                                                }\n                                    }\n\n                                    return data;\n                        }\n\n                        function buildController(data) {\n\n                                    var build = {\n                                                id: data.id\n                                    };\n\n                                    var geometry = library.geometries[build.id];\n\n                                    if (data.skin !== undefined) {\n\n                                                build.skin = buildSkin(data.skin);\n\n                                                // we enhance the 'sources' property of the corresponding geometry with our skin data\n\n                                                geometry.sources.skinIndices = build.skin.indices;\n                                                geometry.sources.skinWeights = build.skin.weights;\n                                    }\n\n                                    return build;\n                        }\n\n                        function buildSkin(data) {\n\n                                    var BONE_LIMIT = 4;\n\n                                    var build = {\n                                                joints: [], // this must be an array to preserve the joint order\n                                                indices: {\n                                                            array: [],\n                                                            stride: BONE_LIMIT\n                                                },\n                                                weights: {\n                                                            array: [],\n                                                            stride: BONE_LIMIT\n                                                }\n                                    };\n\n                                    var sources = data.sources;\n                                    var vertexWeights = data.vertexWeights;\n\n                                    var vcount = vertexWeights.vcount;\n                                    var v = vertexWeights.v;\n                                    var jointOffset = vertexWeights.inputs.JOINT.offset;\n                                    var weightOffset = vertexWeights.inputs.WEIGHT.offset;\n\n                                    var jointSource = data.sources[data.joints.inputs.JOINT];\n                                    var inverseSource = data.sources[data.joints.inputs.INV_BIND_MATRIX];\n\n                                    var weights = sources[vertexWeights.inputs.WEIGHT.id].array;\n                                    var stride = 0;\n\n                                    var i, j, l;\n\n                                    // procces skin data for each vertex\n\n                                    for (i = 0, l = vcount.length; i < l; i++) {\n\n                                                var jointCount = vcount[i]; // this is the amount of joints that affect a single vertex\n                                                var vertexSkinData = [];\n\n                                                for (j = 0; j < jointCount; j++) {\n\n                                                            var skinIndex = v[stride + jointOffset];\n                                                            var weightId = v[stride + weightOffset];\n                                                            var skinWeight = weights[weightId];\n\n                                                            vertexSkinData.push({ index: skinIndex, weight: skinWeight });\n\n                                                            stride += 2;\n                                                }\n\n                                                // we sort the joints in descending order based on the weights.\n                                                // this ensures, we only procced the most important joints of the vertex\n\n                                                vertexSkinData.sort(descending);\n\n                                                // now we provide for each vertex a set of four index and weight values.\n                                                // the order of the skin data matches the order of vertices\n\n                                                for (j = 0; j < BONE_LIMIT; j++) {\n\n                                                            var d = vertexSkinData[j];\n\n                                                            if (d !== undefined) {\n\n                                                                        build.indices.array.push(d.index);\n                                                                        build.weights.array.push(d.weight);\n                                                            } else {\n\n                                                                        build.indices.array.push(0);\n                                                                        build.weights.array.push(0);\n                                                            }\n                                                }\n                                    }\n\n                                    // setup bind matrix\n\n                                    build.bindMatrix = new Matrix4().fromArray(data.bindShapeMatrix).transpose();\n\n                                    // process bones and inverse bind matrix data\n\n                                    for (i = 0, l = jointSource.array.length; i < l; i++) {\n\n                                                var name = jointSource.array[i];\n                                                var boneInverse = new Matrix4().fromArray(inverseSource.array, i * inverseSource.stride).transpose();\n\n                                                build.joints.push({ name: name, boneInverse: boneInverse });\n                                    }\n\n                                    return build;\n\n                                    // array sort function\n\n                                    function descending(a, b) {\n\n                                                return b.weight - a.weight;\n                                    }\n                        }\n\n                        function getController(id) {\n\n                                    return getBuild(library.controllers[id], buildController);\n                        }\n\n                        // image\n\n                        function parseImage(xml) {\n\n                                    var data = {\n                                                init_from: getElementsByTagName(xml, 'init_from')[0].textContent\n                                    };\n\n                                    library.images[xml.getAttribute('id')] = data;\n                        }\n\n                        function buildImage(data) {\n\n                                    if (data.build !== undefined) return data.build;\n\n                                    return data.init_from;\n                        }\n\n                        function getImage(id) {\n\n                                    return getBuild(library.images[id], buildImage);\n                        }\n\n                        // effect\n\n                        function parseEffect(xml) {\n\n                                    var data = {};\n\n                                    for (var i = 0, l = xml.childNodes.length; i < l; i++) {\n\n                                                var child = xml.childNodes[i];\n\n                                                if (child.nodeType !== 1) continue;\n\n                                                switch (child.nodeName) {\n\n                                                            case 'profile_COMMON':\n                                                                        data.profile = parseEffectProfileCOMMON(child);\n                                                                        break;\n\n                                                }\n                                    }\n\n                                    library.effects[xml.getAttribute('id')] = data;\n                        }\n\n                        function parseEffectProfileCOMMON(xml) {\n\n                                    var data = {\n                                                surfaces: {},\n                                                samplers: {}\n                                    };\n\n                                    for (var i = 0, l = xml.childNodes.length; i < l; i++) {\n\n                                                var child = xml.childNodes[i];\n\n                                                if (child.nodeType !== 1) continue;\n\n                                                switch (child.nodeName) {\n\n                                                            case 'newparam':\n                                                                        parseEffectNewparam(child, data);\n                                                                        break;\n\n                                                            case 'technique':\n                                                                        data.technique = parseEffectTechnique(child);\n                                                                        break;\n\n                                                }\n                                    }\n\n                                    return data;\n                        }\n\n                        function parseEffectNewparam(xml, data) {\n\n                                    var sid = xml.getAttribute('sid');\n\n                                    for (var i = 0, l = xml.childNodes.length; i < l; i++) {\n\n                                                var child = xml.childNodes[i];\n\n                                                if (child.nodeType !== 1) continue;\n\n                                                switch (child.nodeName) {\n\n                                                            case 'surface':\n                                                                        data.surfaces[sid] = parseEffectSurface(child);\n                                                                        break;\n\n                                                            case 'sampler2D':\n                                                                        data.samplers[sid] = parseEffectSampler(child);\n                                                                        break;\n\n                                                }\n                                    }\n                        }\n\n                        function parseEffectSurface(xml) {\n\n                                    var data = {};\n\n                                    for (var i = 0, l = xml.childNodes.length; i < l; i++) {\n\n                                                var child = xml.childNodes[i];\n\n                                                if (child.nodeType !== 1) continue;\n\n                                                switch (child.nodeName) {\n\n                                                            case 'init_from':\n                                                                        data.init_from = child.textContent;\n                                                                        break;\n\n                                                }\n                                    }\n\n                                    return data;\n                        }\n\n                        function parseEffectSampler(xml) {\n\n                                    var data = {};\n\n                                    for (var i = 0, l = xml.childNodes.length; i < l; i++) {\n\n                                                var child = xml.childNodes[i];\n\n                                                if (child.nodeType !== 1) continue;\n\n                                                switch (child.nodeName) {\n\n                                                            case 'source':\n                                                                        data.source = child.textContent;\n                                                                        break;\n\n                                                }\n                                    }\n\n                                    return data;\n                        }\n\n                        function parseEffectTechnique(xml) {\n\n                                    var data = {};\n\n                                    for (var i = 0, l = xml.childNodes.length; i < l; i++) {\n\n                                                var child = xml.childNodes[i];\n\n                                                if (child.nodeType !== 1) continue;\n\n                                                switch (child.nodeName) {\n\n                                                            case 'constant':\n                                                            case 'lambert':\n                                                            case 'blinn':\n                                                            case 'phong':\n                                                                        data.type = child.nodeName;\n                                                                        data.parameters = parseEffectParameters(child);\n                                                                        break;\n\n                                                }\n                                    }\n\n                                    return data;\n                        }\n\n                        function parseEffectParameters(xml) {\n\n                                    var data = {};\n\n                                    for (var i = 0, l = xml.childNodes.length; i < l; i++) {\n\n                                                var child = xml.childNodes[i];\n\n                                                if (child.nodeType !== 1) continue;\n\n                                                switch (child.nodeName) {\n\n                                                            case 'emission':\n                                                            case 'diffuse':\n                                                            case 'specular':\n                                                            case 'shininess':\n                                                            case 'transparent':\n                                                            case 'transparency':\n                                                                        data[child.nodeName] = parseEffectParameter(child);\n                                                                        break;\n\n                                                }\n                                    }\n\n                                    return data;\n                        }\n\n                        function parseEffectParameter(xml) {\n\n                                    var data = {};\n\n                                    for (var i = 0, l = xml.childNodes.length; i < l; i++) {\n\n                                                var child = xml.childNodes[i];\n\n                                                if (child.nodeType !== 1) continue;\n\n                                                switch (child.nodeName) {\n\n                                                            case 'color':\n                                                                        data[child.nodeName] = parseFloats(child.textContent);\n                                                                        break;\n\n                                                            case 'float':\n                                                                        data[child.nodeName] = parseFloat(child.textContent);\n                                                                        break;\n\n                                                            case 'texture':\n                                                                        data[child.nodeName] = { id: child.getAttribute('texture'), extra: parseEffectParameterTexture(child) };\n                                                                        break;\n\n                                                }\n                                    }\n\n                                    return data;\n                        }\n\n                        function parseEffectParameterTexture(xml) {\n\n                                    var data = {\n                                                technique: {}\n                                    };\n\n                                    for (var i = 0, l = xml.childNodes.length; i < l; i++) {\n\n                                                var child = xml.childNodes[i];\n\n                                                if (child.nodeType !== 1) continue;\n\n                                                switch (child.nodeName) {\n\n                                                            case 'extra':\n                                                                        parseEffectParameterTextureExtra(child, data);\n                                                                        break;\n\n                                                }\n                                    }\n\n                                    return data;\n                        }\n\n                        function parseEffectParameterTextureExtra(xml, data) {\n\n                                    for (var i = 0, l = xml.childNodes.length; i < l; i++) {\n\n                                                var child = xml.childNodes[i];\n\n                                                if (child.nodeType !== 1) continue;\n\n                                                switch (child.nodeName) {\n\n                                                            case 'technique':\n                                                                        parseEffectParameterTextureExtraTechnique(child, data);\n                                                                        break;\n\n                                                }\n                                    }\n                        }\n\n                        function parseEffectParameterTextureExtraTechnique(xml, data) {\n\n                                    for (var i = 0, l = xml.childNodes.length; i < l; i++) {\n\n                                                var child = xml.childNodes[i];\n\n                                                if (child.nodeType !== 1) continue;\n\n                                                switch (child.nodeName) {\n\n                                                            case 'repeatU':\n                                                            case 'repeatV':\n                                                            case 'offsetU':\n                                                            case 'offsetV':\n                                                                        data.technique[child.nodeName] = parseFloat(child.textContent);\n                                                                        break;\n\n                                                            case 'wrapU':\n                                                            case 'wrapV':\n\n                                                                        // some files have values for wrapU/wrapV which become NaN via parseInt\n\n                                                                        if (child.textContent.toUpperCase() === 'TRUE') {\n\n                                                                                    data.technique[child.nodeName] = 1;\n                                                                        } else if (child.textContent.toUpperCase() === 'FALSE') {\n\n                                                                                    data.technique[child.nodeName] = 0;\n                                                                        } else {\n\n                                                                                    data.technique[child.nodeName] = parseInt(child.textContent);\n                                                                        }\n\n                                                                        break;\n\n                                                }\n                                    }\n                        }\n\n                        function buildEffect(data) {\n\n                                    return data;\n                        }\n\n                        function getEffect(id) {\n\n                                    return getBuild(library.effects[id], buildEffect);\n                        }\n\n                        // material\n\n                        function parseMaterial(xml) {\n\n                                    var data = {\n                                                name: xml.getAttribute('name')\n                                    };\n\n                                    for (var i = 0, l = xml.childNodes.length; i < l; i++) {\n\n                                                var child = xml.childNodes[i];\n\n                                                if (child.nodeType !== 1) continue;\n\n                                                switch (child.nodeName) {\n\n                                                            case 'instance_effect':\n                                                                        data.url = parseId(child.getAttribute('url'));\n                                                                        break;\n\n                                                }\n                                    }\n\n                                    library.materials[xml.getAttribute('id')] = data;\n                        }\n\n                        function buildMaterial(data) {\n\n                                    var effect = getEffect(data.url);\n                                    var technique = effect.profile.technique;\n\n                                    var material;\n\n                                    switch (technique.type) {\n\n                                                case 'phong':\n                                                case 'blinn':\n                                                            material = new MeshPhongMaterial();\n                                                            break;\n\n                                                case 'lambert':\n                                                            material = new MeshLambertMaterial();\n                                                            break;\n\n                                                default:\n                                                            material = new MeshBasicMaterial();\n                                                            break;\n\n                                    }\n\n                                    material.name = data.name;\n\n                                    function getTexture(textureObject) {\n\n                                                var sampler = effect.profile.samplers[textureObject.id];\n\n                                                if (sampler !== undefined) {\n\n                                                            var surface = effect.profile.surfaces[sampler.source];\n\n                                                            var texture = textureLoader.load(getImage(surface.init_from));\n\n                                                            var extra = textureObject.extra;\n\n                                                            if (extra !== undefined && extra.technique !== undefined && isEmpty(extra.technique) === false) {\n\n                                                                        var technique = extra.technique;\n\n                                                                        texture.wrapS = technique.wrapU ? RepeatWrapping : ClampToEdgeWrapping;\n                                                                        texture.wrapT = technique.wrapV ? RepeatWrapping : ClampToEdgeWrapping;\n\n                                                                        texture.offset.set(technique.offsetU || 0, technique.offsetV || 0);\n                                                                        texture.repeat.set(technique.repeatU || 1, technique.repeatV || 1);\n                                                            } else {\n\n                                                                        texture.wrapS = RepeatWrapping;\n                                                                        texture.wrapT = RepeatWrapping;\n                                                            }\n\n                                                            return texture;\n                                                }\n\n                                                console.error('ColladaLoader: Undefined sampler', textureObject.id);\n\n                                                return null;\n                                    }\n\n                                    var parameters = technique.parameters;\n\n                                    for (var key in parameters) {\n\n                                                var parameter = parameters[key];\n\n                                                switch (key) {\n\n                                                            case 'diffuse':\n                                                                        if (parameter.color) material.color.fromArray(parameter.color);\n                                                                        if (parameter.texture) material.map = getTexture(parameter.texture);\n                                                                        break;\n                                                            case 'specular':\n                                                                        if (parameter.color && material.specular) material.specular.fromArray(parameter.color);\n                                                                        if (parameter.texture) material.specularMap = getTexture(parameter.texture);\n                                                                        break;\n                                                            case 'shininess':\n                                                                        if (parameter.float && material.shininess) {\n                                                                                    material.shininess = parameter.float;\n                                                                        }\n                                                                        break;\n                                                            case 'emission':\n                                                                        if (parameter.color && material.emissive) {\n                                                                                    material.emissive.fromArray(parameter.color);\n                                                                        }\n                                                                        break;\n                                                            case 'transparent':\n                                                                        // if ( parameter.texture ) material.alphaMap = getTexture( parameter.texture );\n                                                                        material.transparent = true;\n                                                                        break;\n                                                            case 'transparency':\n                                                                        if (parameter.float !== undefined) material.opacity = parameter.float;\n                                                                        material.transparent = true;\n                                                                        break;\n\n                                                }\n                                    }\n\n                                    return material;\n                        }\n\n                        function getMaterial(id) {\n\n                                    return getBuild(library.materials[id], buildMaterial);\n                        }\n\n                        // camera\n\n                        function parseCamera(xml) {\n\n                                    var data = {\n                                                name: xml.getAttribute('name')\n                                    };\n\n                                    for (var i = 0, l = xml.childNodes.length; i < l; i++) {\n\n                                                var child = xml.childNodes[i];\n\n                                                if (child.nodeType !== 1) continue;\n\n                                                switch (child.nodeName) {\n\n                                                            case 'optics':\n                                                                        data.optics = parseCameraOptics(child);\n                                                                        break;\n\n                                                }\n                                    }\n\n                                    library.cameras[xml.getAttribute('id')] = data;\n                        }\n\n                        function parseCameraOptics(xml) {\n\n                                    for (var i = 0; i < xml.childNodes.length; i++) {\n\n                                                var child = xml.childNodes[i];\n\n                                                switch (child.nodeName) {\n\n                                                            case 'technique_common':\n                                                                        return parseCameraTechnique(child);\n\n                                                }\n                                    }\n\n                                    return {};\n                        }\n\n                        function parseCameraTechnique(xml) {\n\n                                    var data = {};\n\n                                    for (var i = 0; i < xml.childNodes.length; i++) {\n\n                                                var child = xml.childNodes[i];\n\n                                                switch (child.nodeName) {\n\n                                                            case 'perspective':\n                                                            case 'orthographic':\n\n                                                                        data.technique = child.nodeName;\n                                                                        data.parameters = parseCameraParameters(child);\n\n                                                                        break;\n\n                                                }\n                                    }\n\n                                    return data;\n                        }\n\n                        function parseCameraParameters(xml) {\n\n                                    var data = {};\n\n                                    for (var i = 0; i < xml.childNodes.length; i++) {\n\n                                                var child = xml.childNodes[i];\n\n                                                switch (child.nodeName) {\n\n                                                            case 'xfov':\n                                                            case 'yfov':\n                                                            case 'xmag':\n                                                            case 'ymag':\n                                                            case 'znear':\n                                                            case 'zfar':\n                                                            case 'aspect_ratio':\n                                                                        data[child.nodeName] = parseFloat(child.textContent);\n                                                                        break;\n\n                                                }\n                                    }\n\n                                    return data;\n                        }\n\n                        function buildCamera(data) {\n\n                                    var camera;\n\n                                    switch (data.optics.technique) {\n\n                                                case 'perspective':\n                                                            camera = new PerspectiveCamera(data.optics.parameters.yfov, data.optics.parameters.aspect_ratio, data.optics.parameters.znear, data.optics.parameters.zfar);\n                                                            break;\n\n                                                case 'orthographic':\n                                                            var ymag = data.optics.parameters.ymag;\n                                                            var xmag = data.optics.parameters.xmag;\n                                                            var aspectRatio = data.optics.parameters.aspect_ratio;\n\n                                                            xmag = xmag === undefined ? ymag * aspectRatio : xmag;\n                                                            ymag = ymag === undefined ? xmag / aspectRatio : ymag;\n\n                                                            xmag *= 0.5;\n                                                            ymag *= 0.5;\n\n                                                            camera = new OrthographicCamera(-xmag, xmag, ymag, -ymag, // left, right, top, bottom\n                                                            data.optics.parameters.znear, data.optics.parameters.zfar);\n                                                            break;\n\n                                                default:\n                                                            camera = new PerspectiveCamera();\n                                                            break;\n\n                                    }\n\n                                    camera.name = data.name;\n\n                                    return camera;\n                        }\n\n                        function getCamera(id) {\n\n                                    return getBuild(library.cameras[id], buildCamera);\n                        }\n\n                        // light\n\n                        function parseLight(xml) {\n\n                                    var data = {};\n\n                                    for (var i = 0, l = xml.childNodes.length; i < l; i++) {\n\n                                                var child = xml.childNodes[i];\n\n                                                if (child.nodeType !== 1) continue;\n\n                                                switch (child.nodeName) {\n\n                                                            case 'technique_common':\n                                                                        data = parseLightTechnique(child);\n                                                                        break;\n\n                                                }\n                                    }\n\n                                    library.lights[xml.getAttribute('id')] = data;\n                        }\n\n                        function parseLightTechnique(xml) {\n\n                                    var data = {};\n\n                                    for (var i = 0, l = xml.childNodes.length; i < l; i++) {\n\n                                                var child = xml.childNodes[i];\n\n                                                if (child.nodeType !== 1) continue;\n\n                                                switch (child.nodeName) {\n\n                                                            case 'directional':\n                                                            case 'point':\n                                                            case 'spot':\n                                                            case 'ambient':\n\n                                                                        data.technique = child.nodeName;\n                                                                        data.parameters = parseLightParameters(child);\n\n                                                }\n                                    }\n\n                                    return data;\n                        }\n\n                        function parseLightParameters(xml) {\n\n                                    var data = {};\n\n                                    for (var i = 0, l = xml.childNodes.length; i < l; i++) {\n\n                                                var child = xml.childNodes[i];\n\n                                                if (child.nodeType !== 1) continue;\n\n                                                switch (child.nodeName) {\n\n                                                            case 'color':\n                                                                        var array = parseFloats(child.textContent);\n                                                                        data.color = new Color().fromArray(array);\n                                                                        break;\n\n                                                            case 'falloff_angle':\n                                                                        data.falloffAngle = parseFloat(child.textContent);\n                                                                        break;\n\n                                                            case 'quadratic_attenuation':\n                                                                        var f = parseFloat(child.textContent);\n                                                                        data.distance = f ? Math.sqrt(1 / f) : 0;\n                                                                        break;\n\n                                                }\n                                    }\n\n                                    return data;\n                        }\n\n                        function buildLight(data) {\n\n                                    var light;\n\n                                    switch (data.technique) {\n\n                                                case 'directional':\n                                                            light = new DirectionalLight();\n                                                            break;\n\n                                                case 'point':\n                                                            light = new PointLight();\n                                                            break;\n\n                                                case 'spot':\n                                                            light = new SpotLight();\n                                                            break;\n\n                                                case 'ambient':\n                                                            light = new AmbientLight();\n                                                            break;\n\n                                    }\n\n                                    if (data.parameters.color) light.color.copy(data.parameters.color);\n                                    if (data.parameters.distance) light.distance = data.parameters.distance;\n\n                                    return light;\n                        }\n\n                        function getLight(id) {\n\n                                    return getBuild(library.lights[id], buildLight);\n                        }\n\n                        // geometry\n\n                        function parseGeometry(xml) {\n\n                                    var data = {\n                                                name: xml.getAttribute('name'),\n                                                sources: {},\n                                                vertices: {},\n                                                primitives: []\n                                    };\n\n                                    var mesh = getElementsByTagName(xml, 'mesh')[0];\n\n                                    for (var i = 0; i < mesh.childNodes.length; i++) {\n\n                                                var child = mesh.childNodes[i];\n\n                                                if (child.nodeType !== 1) continue;\n\n                                                var id = child.getAttribute('id');\n\n                                                switch (child.nodeName) {\n\n                                                            case 'source':\n                                                                        data.sources[id] = parseSource(child);\n                                                                        break;\n\n                                                            case 'vertices':\n                                                                        // data.sources[ id ] = data.sources[ parseId( getElementsByTagName( child, 'input' )[ 0 ].getAttribute( 'source' ) ) ];\n                                                                        data.vertices = parseGeometryVertices(child);\n                                                                        break;\n\n                                                            case 'polygons':\n                                                                        console.warn('ColladaLoader: Unsupported primitive type: ', child.nodeName);\n                                                                        break;\n\n                                                            case 'lines':\n                                                            case 'linestrips':\n                                                            case 'polylist':\n                                                            case 'triangles':\n                                                                        data.primitives.push(parseGeometryPrimitive(child));\n                                                                        break;\n\n                                                            default:\n                                                                        console.log(child);\n\n                                                }\n                                    }\n\n                                    library.geometries[xml.getAttribute('id')] = data;\n                        }\n\n                        function parseSource(xml) {\n\n                                    var data = {\n                                                array: [],\n                                                stride: 3\n                                    };\n\n                                    for (var i = 0; i < xml.childNodes.length; i++) {\n\n                                                var child = xml.childNodes[i];\n\n                                                if (child.nodeType !== 1) continue;\n\n                                                switch (child.nodeName) {\n\n                                                            case 'float_array':\n                                                                        data.array = parseFloats(child.textContent);\n                                                                        break;\n\n                                                            case 'Name_array':\n                                                                        data.array = parseStrings(child.textContent);\n                                                                        break;\n\n                                                            case 'technique_common':\n                                                                        var accessor = getElementsByTagName(child, 'accessor')[0];\n\n                                                                        if (accessor !== undefined) {\n\n                                                                                    data.stride = parseInt(accessor.getAttribute('stride'));\n                                                                        }\n                                                                        break;\n\n                                                }\n                                    }\n\n                                    return data;\n                        }\n\n                        function parseGeometryVertices(xml) {\n\n                                    var data = {};\n\n                                    for (var i = 0; i < xml.childNodes.length; i++) {\n\n                                                var child = xml.childNodes[i];\n\n                                                if (child.nodeType !== 1) continue;\n\n                                                data[child.getAttribute('semantic')] = parseId(child.getAttribute('source'));\n                                    }\n\n                                    return data;\n                        }\n\n                        function parseGeometryPrimitive(xml) {\n\n                                    var primitive = {\n                                                type: xml.nodeName,\n                                                material: xml.getAttribute('material'),\n                                                count: parseInt(xml.getAttribute('count')),\n                                                inputs: {},\n                                                stride: 0\n                                    };\n\n                                    for (var i = 0, l = xml.childNodes.length; i < l; i++) {\n\n                                                var child = xml.childNodes[i];\n\n                                                if (child.nodeType !== 1) continue;\n\n                                                switch (child.nodeName) {\n\n                                                            case 'input':\n                                                                        var id = parseId(child.getAttribute('source'));\n                                                                        var semantic = child.getAttribute('semantic');\n                                                                        var offset = parseInt(child.getAttribute('offset'));\n                                                                        primitive.inputs[semantic] = { id: id, offset: offset };\n                                                                        primitive.stride = Math.max(primitive.stride, offset + 1);\n                                                                        break;\n\n                                                            case 'vcount':\n                                                                        primitive.vcount = parseInts(child.textContent);\n                                                                        break;\n\n                                                            case 'p':\n                                                                        primitive.p = parseInts(child.textContent);\n                                                                        break;\n\n                                                }\n                                    }\n\n                                    return primitive;\n                        }\n\n                        function groupPrimitives(primitives) {\n\n                                    var build = {};\n\n                                    for (var i = 0; i < primitives.length; i++) {\n\n                                                var primitive = primitives[i];\n\n                                                if (build[primitive.type] === undefined) build[primitive.type] = [];\n\n                                                build[primitive.type].push(primitive);\n                                    }\n\n                                    return build;\n                        }\n\n                        function buildGeometry(data) {\n\n                                    var build = {};\n\n                                    var sources = data.sources;\n                                    var vertices = data.vertices;\n                                    var primitives = data.primitives;\n\n                                    if (primitives.length === 0) return {};\n\n                                    // our goal is to create one buffer geoemtry for a single type of primitives\n                                    // first, we group all primitives by their type\n\n                                    var groupedPrimitives = groupPrimitives(primitives);\n\n                                    for (var type in groupedPrimitives) {\n\n                                                // second, we create for each type of primitives (polylist,triangles or lines) a buffer geometry\n\n                                                build[type] = buildGeometryType(groupedPrimitives[type], sources, vertices);\n                                    }\n\n                                    return build;\n                        }\n\n                        function buildGeometryType(primitives, sources, vertices) {\n\n                                    var build = {};\n\n                                    var position = { array: [], stride: 0 };\n                                    var normal = { array: [], stride: 0 };\n                                    var uv = { array: [], stride: 0 };\n                                    var color = { array: [], stride: 0 };\n\n                                    var skinIndex = { array: [], stride: 4 };\n                                    var skinWeight = { array: [], stride: 4 };\n\n                                    var geometry = new BufferGeometry();\n\n                                    var materialKeys = [];\n\n                                    var start = 0,\n                                        count = 0;\n\n                                    for (var p = 0; p < primitives.length; p++) {\n\n                                                var primitive = primitives[p];\n                                                var inputs = primitive.inputs;\n                                                var triangleCount = 1;\n\n                                                if (primitive.vcount && primitive.vcount[0] === 4) {\n\n                                                            triangleCount = 2; // one quad -> two triangles\n                                                }\n\n                                                // groups\n\n                                                if (primitive.type === 'lines' || primitive.type === 'linestrips') {\n\n                                                            count = primitive.count * 2;\n                                                } else {\n\n                                                            count = primitive.count * 3 * triangleCount;\n                                                }\n\n                                                geometry.addGroup(start, count, p);\n                                                start += count;\n\n                                                // material\n\n                                                if (primitive.material) {\n\n                                                            materialKeys.push(primitive.material);\n                                                }\n\n                                                // geometry data\n\n                                                for (var name in inputs) {\n\n                                                            var input = inputs[name];\n\n                                                            switch (name) {\n\n                                                                        case 'VERTEX':\n                                                                                    for (var key in vertices) {\n\n                                                                                                var id = vertices[key];\n\n                                                                                                switch (key) {\n\n                                                                                                            case 'POSITION':\n                                                                                                                        buildGeometryData(primitive, sources[id], input.offset, position.array);\n                                                                                                                        position.stride = sources[id].stride;\n\n                                                                                                                        if (sources.skinWeights && sources.skinIndices) {\n\n                                                                                                                                    buildGeometryData(primitive, sources.skinIndices, input.offset, skinIndex.array);\n                                                                                                                                    buildGeometryData(primitive, sources.skinWeights, input.offset, skinWeight.array);\n                                                                                                                        }\n                                                                                                                        break;\n\n                                                                                                            case 'NORMAL':\n                                                                                                                        buildGeometryData(primitive, sources[id], input.offset, normal.array);\n                                                                                                                        normal.stride = sources[id].stride;\n                                                                                                                        break;\n\n                                                                                                            case 'COLOR':\n                                                                                                                        buildGeometryData(primitive, sources[id], input.offset, color.array);\n                                                                                                                        color.stride = sources[id].stride;\n                                                                                                                        break;\n\n                                                                                                            case 'TEXCOORD':\n                                                                                                                        buildGeometryData(primitive, sources[id], input.offset, uv.array);\n                                                                                                                        uv.stride = sources[id].stride;\n                                                                                                                        break;\n\n                                                                                                            default:\n                                                                                                                        console.warn('ColladaLoader: Semantic \"%s\" not handled in geometry build process.', key);\n\n                                                                                                }\n                                                                                    }\n                                                                                    break;\n\n                                                                        case 'NORMAL':\n                                                                                    buildGeometryData(primitive, sources[input.id], input.offset, normal.array);\n                                                                                    normal.stride = sources[input.id].stride;\n                                                                                    break;\n\n                                                                        case 'COLOR':\n                                                                                    buildGeometryData(primitive, sources[input.id], input.offset, color.array);\n                                                                                    color.stride = sources[input.id].stride;\n                                                                                    break;\n\n                                                                        case 'TEXCOORD':\n                                                                                    buildGeometryData(primitive, sources[input.id], input.offset, uv.array);\n                                                                                    uv.stride = sources[input.id].stride;\n                                                                                    break;\n\n                                                            }\n                                                }\n                                    }\n\n                                    // build geometry\n\n                                    if (position.array.length > 0) geometry.addAttribute('position', new Float32BufferAttribute(position.array, position.stride));\n                                    if (normal.array.length > 0) geometry.addAttribute('normal', new Float32BufferAttribute(normal.array, normal.stride));\n                                    if (color.array.length > 0) geometry.addAttribute('color', new Float32BufferAttribute(color.array, color.stride));\n                                    if (uv.array.length > 0) geometry.addAttribute('uv', new Float32BufferAttribute(uv.array, uv.stride));\n\n                                    if (skinIndex.array.length > 0) geometry.addAttribute('skinIndex', new Float32BufferAttribute(skinIndex.array, skinIndex.stride));\n                                    if (skinWeight.array.length > 0) geometry.addAttribute('skinWeight', new Float32BufferAttribute(skinWeight.array, skinWeight.stride));\n\n                                    build.data = geometry;\n                                    build.type = primitives[0].type;\n                                    build.materialKeys = materialKeys;\n\n                                    return build;\n                        }\n\n                        function buildGeometryData(primitive, source, offset, array) {\n\n                                    var indices = primitive.p;\n                                    var stride = primitive.stride;\n                                    var vcount = primitive.vcount;\n\n                                    function pushVector(i) {\n\n                                                var index = indices[i + offset] * sourceStride;\n                                                var length = index + sourceStride;\n\n                                                for (; index < length; index++) {\n\n                                                            array.push(sourceArray[index]);\n                                                }\n                                    }\n\n                                    var maxcount = 0;\n\n                                    var sourceArray = source.array;\n                                    var sourceStride = source.stride;\n\n                                    if (primitive.vcount !== undefined) {\n\n                                                var index = 0;\n\n                                                for (var i = 0, l = vcount.length; i < l; i++) {\n\n                                                            var count = vcount[i];\n\n                                                            if (count === 4) {\n\n                                                                        var a = index + stride * 0;\n                                                                        var b = index + stride * 1;\n                                                                        var c = index + stride * 2;\n                                                                        var d = index + stride * 3;\n\n                                                                        pushVector(a);pushVector(b);pushVector(d);\n                                                                        pushVector(b);pushVector(c);pushVector(d);\n                                                            } else if (count === 3) {\n\n                                                                        var a = index + stride * 0;\n                                                                        var b = index + stride * 1;\n                                                                        var c = index + stride * 2;\n\n                                                                        pushVector(a);pushVector(b);pushVector(c);\n                                                            } else {\n\n                                                                        maxcount = Math.max(maxcount, count);\n                                                            }\n\n                                                            index += stride * count;\n                                                }\n\n                                                if (maxcount > 0) {\n\n                                                            console.log('ColladaLoader: Geometry has faces with more than 4 vertices.');\n                                                }\n                                    } else {\n\n                                                for (var i = 0, l = indices.length; i < l; i += stride) {\n\n                                                            pushVector(i);\n                                                }\n                                    }\n                        }\n\n                        function getGeometry(id) {\n\n                                    return getBuild(library.geometries[id], buildGeometry);\n                        }\n\n                        // kinematics\n\n                        function parseKinematicsModel(xml) {\n\n                                    var data = {\n                                                name: xml.getAttribute('name') || '',\n                                                joints: {},\n                                                links: []\n                                    };\n\n                                    for (var i = 0; i < xml.childNodes.length; i++) {\n\n                                                var child = xml.childNodes[i];\n\n                                                if (child.nodeType !== 1) continue;\n\n                                                switch (child.nodeName) {\n\n                                                            case 'technique_common':\n                                                                        parseKinematicsTechniqueCommon(child, data);\n                                                                        break;\n\n                                                }\n                                    }\n\n                                    library.kinematicsModels[xml.getAttribute('id')] = data;\n                        }\n\n                        function buildKinematicsModel(data) {\n\n                                    if (data.build !== undefined) return data.build;\n\n                                    return data;\n                        }\n\n                        function getKinematicsModel(id) {\n\n                                    return getBuild(library.kinematicsModels[id], buildKinematicsModel);\n                        }\n\n                        function parseKinematicsTechniqueCommon(xml, data) {\n\n                                    for (var i = 0; i < xml.childNodes.length; i++) {\n\n                                                var child = xml.childNodes[i];\n\n                                                if (child.nodeType !== 1) continue;\n\n                                                switch (child.nodeName) {\n\n                                                            case 'joint':\n                                                                        data.joints[child.getAttribute('sid')] = parseKinematicsJoint(child);\n                                                                        break;\n\n                                                            case 'link':\n                                                                        data.links.push(parseKinematicsLink(child));\n                                                                        break;\n\n                                                }\n                                    }\n                        }\n\n                        function parseKinematicsJoint(xml) {\n\n                                    var data;\n\n                                    for (var i = 0; i < xml.childNodes.length; i++) {\n\n                                                var child = xml.childNodes[i];\n\n                                                if (child.nodeType !== 1) continue;\n\n                                                switch (child.nodeName) {\n\n                                                            case 'prismatic':\n                                                            case 'revolute':\n                                                                        data = parseKinematicsJointParameter(child);\n                                                                        break;\n\n                                                }\n                                    }\n\n                                    return data;\n                        }\n\n                        function parseKinematicsJointParameter(xml, data) {\n\n                                    var data = {\n                                                sid: xml.getAttribute('sid'),\n                                                name: xml.getAttribute('name') || '',\n                                                axis: new Vector3(),\n                                                limits: {\n                                                            min: 0,\n                                                            max: 0\n                                                },\n                                                type: xml.nodeName,\n                                                static: false,\n                                                zeroPosition: 0,\n                                                middlePosition: 0\n                                    };\n\n                                    for (var i = 0; i < xml.childNodes.length; i++) {\n\n                                                var child = xml.childNodes[i];\n\n                                                if (child.nodeType !== 1) continue;\n\n                                                switch (child.nodeName) {\n\n                                                            case 'axis':\n                                                                        var array = parseFloats(child.textContent);\n                                                                        data.axis.fromArray(array);\n                                                                        break;\n                                                            case 'limits':\n                                                                        var max = child.getElementsByTagName('max')[0];\n                                                                        var min = child.getElementsByTagName('min')[0];\n\n                                                                        data.limits.max = parseFloat(max.textContent);\n                                                                        data.limits.min = parseFloat(min.textContent);\n                                                                        break;\n\n                                                }\n                                    }\n\n                                    // if min is equal to or greater than max, consider the joint static\n\n                                    if (data.limits.min >= data.limits.max) {\n\n                                                data.static = true;\n                                    }\n\n                                    // calculate middle position\n\n                                    data.middlePosition = (data.limits.min + data.limits.max) / 2.0;\n\n                                    return data;\n                        }\n\n                        function parseKinematicsLink(xml) {\n\n                                    var data = {\n                                                sid: xml.getAttribute('sid'),\n                                                name: xml.getAttribute('name') || '',\n                                                attachments: [],\n                                                transforms: []\n                                    };\n\n                                    for (var i = 0; i < xml.childNodes.length; i++) {\n\n                                                var child = xml.childNodes[i];\n\n                                                if (child.nodeType !== 1) continue;\n\n                                                switch (child.nodeName) {\n\n                                                            case 'attachment_full':\n                                                                        data.attachments.push(parseKinematicsAttachment(child));\n                                                                        break;\n\n                                                            case 'matrix':\n                                                            case 'translate':\n                                                            case 'rotate':\n                                                                        data.transforms.push(parseKinematicsTransform(child));\n                                                                        break;\n\n                                                }\n                                    }\n\n                                    return data;\n                        }\n\n                        function parseKinematicsAttachment(xml) {\n\n                                    var data = {\n                                                joint: xml.getAttribute('joint').split('/').pop(),\n                                                transforms: [],\n                                                links: []\n                                    };\n\n                                    for (var i = 0; i < xml.childNodes.length; i++) {\n\n                                                var child = xml.childNodes[i];\n\n                                                if (child.nodeType !== 1) continue;\n\n                                                switch (child.nodeName) {\n\n                                                            case 'link':\n                                                                        data.links.push(parseKinematicsLink(child));\n                                                                        break;\n\n                                                            case 'matrix':\n                                                            case 'translate':\n                                                            case 'rotate':\n                                                                        data.transforms.push(parseKinematicsTransform(child));\n                                                                        break;\n\n                                                }\n                                    }\n\n                                    return data;\n                        }\n\n                        function parseKinematicsTransform(xml) {\n\n                                    var data = {\n                                                type: xml.nodeName\n                                    };\n\n                                    var array = parseFloats(xml.textContent);\n\n                                    switch (data.type) {\n\n                                                case 'matrix':\n                                                            data.obj = new Matrix4();\n                                                            data.obj.fromArray(array).transpose();\n                                                            break;\n\n                                                case 'translate':\n                                                            data.obj = new Vector3();\n                                                            data.obj.fromArray(array);\n                                                            break;\n\n                                                case 'rotate':\n                                                            data.obj = new Vector3();\n                                                            data.obj.fromArray(array);\n                                                            data.angle = _Math.degToRad(array[3]);\n                                                            break;\n\n                                    }\n\n                                    return data;\n                        }\n\n                        function parseKinematicsScene(xml) {\n\n                                    var data = {\n                                                bindJointAxis: []\n                                    };\n\n                                    for (var i = 0; i < xml.childNodes.length; i++) {\n\n                                                var child = xml.childNodes[i];\n\n                                                if (child.nodeType !== 1) continue;\n\n                                                switch (child.nodeName) {\n\n                                                            case 'bind_joint_axis':\n                                                                        data.bindJointAxis.push(parseKinematicsBindJointAxis(child));\n                                                                        break;\n\n                                                }\n                                    }\n\n                                    library.kinematicsScenes[parseId(xml.getAttribute('url'))] = data;\n                        }\n\n                        function parseKinematicsBindJointAxis(xml) {\n\n                                    var data = {\n                                                target: xml.getAttribute('target').split('/').pop()\n                                    };\n\n                                    for (var i = 0; i < xml.childNodes.length; i++) {\n\n                                                var child = xml.childNodes[i];\n\n                                                if (child.nodeType !== 1) continue;\n\n                                                switch (child.nodeName) {\n\n                                                            case 'axis':\n                                                                        var param = child.getElementsByTagName('param')[0];\n                                                                        data.axis = param.textContent;\n                                                                        var tmpJointIndex = data.axis.split('inst_').pop().split('axis')[0];\n                                                                        data.jointIndex = tmpJointIndex.substr(0, tmpJointIndex.length - 1);\n                                                                        break;\n\n                                                }\n                                    }\n\n                                    return data;\n                        }\n\n                        function buildKinematicsScene(data) {\n\n                                    if (data.build !== undefined) return data.build;\n\n                                    return data;\n                        }\n\n                        function getKinematicsScene(id) {\n\n                                    return getBuild(library.kinematicsScenes[id], buildKinematicsScene);\n                        }\n\n                        function setupKinematics() {\n\n                                    var kinematicsModelId = Object.keys(library.kinematicsModels)[0];\n                                    var kinematicsSceneId = Object.keys(library.kinematicsScenes)[0];\n                                    var visualSceneId = Object.keys(library.visualScenes)[0];\n\n                                    if (kinematicsModelId === undefined || kinematicsSceneId === undefined) return;\n\n                                    var kinematicsModel = getKinematicsModel(kinematicsModelId);\n                                    var kinematicsScene = getKinematicsScene(kinematicsSceneId);\n                                    var visualScene = getVisualScene(visualSceneId);\n\n                                    var bindJointAxis = kinematicsScene.bindJointAxis;\n                                    var jointMap = {};\n\n                                    for (var i = 0, l = bindJointAxis.length; i < l; i++) {\n\n                                                var axis = bindJointAxis[i];\n\n                                                // the result of the following query is an element of type 'translate', 'rotate','scale' or 'matrix'\n\n                                                var targetElement = collada.querySelector('[sid=\"' + axis.target + '\"]');\n\n                                                if (targetElement) {\n\n                                                            // get the parent of the transfrom element\n\n                                                            var parentVisualElement = targetElement.parentElement;\n\n                                                            // connect the joint of the kinematics model with the element in the visual scene\n\n                                                            connect(axis.jointIndex, parentVisualElement);\n                                                }\n                                    }\n\n                                    function connect(jointIndex, visualElement) {\n\n                                                var visualElementName = visualElement.getAttribute('name');\n                                                var joint = kinematicsModel.joints[jointIndex];\n\n                                                visualScene.traverse(function (object) {\n\n                                                            if (object.name === visualElementName) {\n\n                                                                        jointMap[jointIndex] = {\n                                                                                    object: object,\n                                                                                    transforms: buildTransformList(visualElement),\n                                                                                    joint: joint,\n                                                                                    position: joint.zeroPosition\n                                                                        };\n                                                            }\n                                                });\n                                    }\n\n                                    var m0 = new Matrix4();\n\n                                    kinematics = {\n\n                                                joints: kinematicsModel && kinematicsModel.joints,\n\n                                                getJointValue: function getJointValue(jointIndex) {\n\n                                                            var jointData = jointMap[jointIndex];\n\n                                                            if (jointData) {\n\n                                                                        return jointData.position;\n                                                            } else {\n\n                                                                        console.warn('ColladaLoader: Joint ' + jointIndex + ' doesn\\'t exist.');\n                                                            }\n                                                },\n\n                                                setJointValue: function setJointValue(jointIndex, value) {\n\n                                                            var jointData = jointMap[jointIndex];\n\n                                                            if (jointData) {\n\n                                                                        var joint = jointData.joint;\n\n                                                                        if (value > joint.limits.max || value < joint.limits.min) {\n\n                                                                                    console.warn('ColladaLoader: Joint ' + jointIndex + ' value ' + value + ' outside of limits (min: ' + joint.limits.min + ', max: ' + joint.limits.max + ').');\n                                                                        } else if (joint.static) {\n\n                                                                                    console.warn('ColladaLoader: Joint ' + jointIndex + ' is static.');\n                                                                        } else {\n\n                                                                                    var object = jointData.object;\n                                                                                    var axis = joint.axis;\n                                                                                    var transforms = jointData.transforms;\n\n                                                                                    matrix.identity();\n\n                                                                                    // each update, we have to apply all transforms in the correct order\n\n                                                                                    for (var i = 0; i < transforms.length; i++) {\n\n                                                                                                var transform = transforms[i];\n\n                                                                                                // if there is a connection of the transform node with a joint, apply the joint value\n\n                                                                                                if (transform.sid && transform.sid.indexOf(jointIndex) !== -1) {\n\n                                                                                                            switch (joint.type) {\n\n                                                                                                                        case 'revolute':\n                                                                                                                                    matrix.multiply(m0.makeRotationAxis(axis, _Math.degToRad(value)));\n                                                                                                                                    break;\n\n                                                                                                                        case 'prismatic':\n                                                                                                                                    matrix.multiply(m0.makeTranslation(axis.x * value, axis.y * value, axis.z * value));\n                                                                                                                                    break;\n\n                                                                                                                        default:\n                                                                                                                                    console.warn('ColladaLoader: Unknown joint type: ' + joint.type);\n                                                                                                                                    break;\n\n                                                                                                            }\n                                                                                                } else {\n\n                                                                                                            switch (transform.type) {\n\n                                                                                                                        case 'matrix':\n                                                                                                                                    matrix.multiply(transform.obj);\n                                                                                                                                    break;\n\n                                                                                                                        case 'translate':\n                                                                                                                                    matrix.multiply(m0.makeTranslation(transform.obj.x, transform.obj.y, transform.obj.z));\n                                                                                                                                    break;\n\n                                                                                                                        case 'scale':\n                                                                                                                                    matrix.scale(transform.obj);\n                                                                                                                                    break;\n\n                                                                                                                        case 'rotate':\n                                                                                                                                    matrix.multiply(m0.makeRotationAxis(transform.obj, transform.angle));\n                                                                                                                                    break;\n\n                                                                                                            }\n                                                                                                }\n                                                                                    }\n\n                                                                                    object.matrix.copy(matrix);\n                                                                                    object.matrix.decompose(object.position, object.quaternion, object.scale);\n\n                                                                                    jointMap[jointIndex].position = value;\n                                                                        }\n                                                            } else {\n\n                                                                        console.log('ColladaLoader: ' + jointIndex + ' does not exist.');\n                                                            }\n                                                }\n\n                                    };\n                        }\n\n                        function buildTransformList(node) {\n\n                                    var transforms = [];\n\n                                    var xml = collada.querySelector('[id=\"' + node.id + '\"]');\n\n                                    for (var i = 0; i < xml.childNodes.length; i++) {\n\n                                                var child = xml.childNodes[i];\n\n                                                if (child.nodeType !== 1) continue;\n\n                                                switch (child.nodeName) {\n\n                                                            case 'matrix':\n                                                                        var array = parseFloats(child.textContent);\n                                                                        var matrix = new Matrix4().fromArray(array).transpose();\n                                                                        transforms.push({\n                                                                                    sid: child.getAttribute('sid'),\n                                                                                    type: child.nodeName,\n                                                                                    obj: matrix\n                                                                        });\n                                                                        break;\n\n                                                            case 'translate':\n                                                            case 'scale':\n                                                                        var array = parseFloats(child.textContent);\n                                                                        var vector = new Vector3().fromArray(array);\n                                                                        transforms.push({\n                                                                                    sid: child.getAttribute('sid'),\n                                                                                    type: child.nodeName,\n                                                                                    obj: vector\n                                                                        });\n                                                                        break;\n\n                                                            case 'rotate':\n                                                                        var array = parseFloats(child.textContent);\n                                                                        var vector = new Vector3().fromArray(array);\n                                                                        var angle = _Math.degToRad(array[3]);\n                                                                        transforms.push({\n                                                                                    sid: child.getAttribute('sid'),\n                                                                                    type: child.nodeName,\n                                                                                    obj: vector,\n                                                                                    angle: angle\n                                                                        });\n                                                                        break;\n\n                                                }\n                                    }\n\n                                    return transforms;\n                        }\n\n                        // nodes\n\n                        var matrix = new Matrix4();\n                        var vector = new Vector3();\n\n                        function parseNode(xml) {\n\n                                    var data = {\n                                                name: xml.getAttribute('name'),\n                                                type: xml.getAttribute('type'),\n                                                id: xml.getAttribute('id'),\n                                                sid: xml.getAttribute('sid'),\n                                                matrix: new Matrix4(),\n                                                nodes: [],\n                                                instanceCameras: [],\n                                                instanceControllers: [],\n                                                instanceLights: [],\n                                                instanceGeometries: [],\n                                                instanceNodes: [],\n                                                transforms: {}\n                                    };\n\n                                    for (var i = 0; i < xml.childNodes.length; i++) {\n\n                                                var child = xml.childNodes[i];\n\n                                                if (child.nodeType !== 1) continue;\n\n                                                switch (child.nodeName) {\n\n                                                            case 'node':\n\n                                                                        if (child.hasAttribute('id')) {\n\n                                                                                    data.nodes.push(child.getAttribute('id'));\n                                                                                    parseNode(child);\n                                                                        }\n\n                                                                        break;\n\n                                                            case 'instance_camera':\n                                                                        data.instanceCameras.push(parseId(child.getAttribute('url')));\n                                                                        break;\n\n                                                            case 'instance_controller':\n                                                                        data.instanceControllers.push(parseNodeInstance(child));\n                                                                        break;\n\n                                                            case 'instance_light':\n                                                                        data.instanceLights.push(parseId(child.getAttribute('url')));\n                                                                        break;\n\n                                                            case 'instance_geometry':\n                                                                        data.instanceGeometries.push(parseNodeInstance(child));\n                                                                        break;\n\n                                                            case 'instance_node':\n                                                                        data.instanceNodes.push(parseId(child.getAttribute('url')));\n                                                                        break;\n\n                                                            case 'matrix':\n                                                                        var array = parseFloats(child.textContent);\n                                                                        data.matrix.multiply(matrix.fromArray(array).transpose());\n                                                                        data.transforms[child.getAttribute('sid')] = child.nodeName;\n                                                                        break;\n\n                                                            case 'translate':\n                                                                        var array = parseFloats(child.textContent);\n                                                                        vector.fromArray(array);\n                                                                        data.matrix.multiply(matrix.makeTranslation(vector.x, vector.y, vector.z));\n                                                                        data.transforms[child.getAttribute('sid')] = child.nodeName;\n                                                                        break;\n\n                                                            case 'rotate':\n                                                                        var array = parseFloats(child.textContent);\n                                                                        var angle = _Math.degToRad(array[3]);\n                                                                        data.matrix.multiply(matrix.makeRotationAxis(vector.fromArray(array), angle));\n                                                                        data.transforms[child.getAttribute('sid')] = child.nodeName;\n                                                                        break;\n\n                                                            case 'scale':\n                                                                        var array = parseFloats(child.textContent);\n                                                                        data.matrix.scale(vector.fromArray(array));\n                                                                        data.transforms[child.getAttribute('sid')] = child.nodeName;\n                                                                        break;\n\n                                                            case 'extra':\n                                                                        break;\n\n                                                            default:\n                                                                        console.log(child);\n\n                                                }\n                                    }\n\n                                    if (xml.hasAttribute('id')) {\n\n                                                library.nodes[xml.getAttribute('id')] = data;\n                                    }\n\n                                    return data;\n                        }\n\n                        function parseNodeInstance(xml) {\n\n                                    var data = {\n                                                id: parseId(xml.getAttribute('url')),\n                                                materials: {},\n                                                skeletons: []\n                                    };\n\n                                    for (var i = 0; i < xml.childNodes.length; i++) {\n\n                                                var child = xml.childNodes[i];\n\n                                                switch (child.nodeName) {\n\n                                                            case 'bind_material':\n                                                                        var instances = child.getElementsByTagName('instance_material');\n\n                                                                        for (var j = 0; j < instances.length; j++) {\n\n                                                                                    var instance = instances[j];\n                                                                                    var symbol = instance.getAttribute('symbol');\n                                                                                    var target = instance.getAttribute('target');\n\n                                                                                    data.materials[symbol] = parseId(target);\n                                                                        }\n\n                                                                        break;\n\n                                                            case 'skeleton':\n                                                                        data.skeletons.push(parseId(child.textContent));\n                                                                        break;\n\n                                                            default:\n                                                                        break;\n\n                                                }\n                                    }\n\n                                    return data;\n                        }\n\n                        function buildSkeleton(skeletons, joints) {\n\n                                    var boneData = [];\n                                    var sortedBoneData = [];\n\n                                    var i, j, data;\n\n                                    // a skeleton can have multiple root bones. collada expresses this\n                                    // situtation with multiple \"skeleton\" tags per controller instance\n\n                                    for (i = 0; i < skeletons.length; i++) {\n\n                                                var skeleton = skeletons[i];\n                                                var root = getNode(skeleton);\n\n                                                // setup bone data for a single bone hierarchy\n\n                                                buildBoneHierarchy(root, joints, boneData);\n                                    }\n\n                                    // sort bone data (the order is defined in the corresponding controller)\n\n                                    for (i = 0; i < joints.length; i++) {\n\n                                                for (j = 0; j < boneData.length; j++) {\n\n                                                            data = boneData[j];\n\n                                                            if (data.bone.name === joints[i].name) {\n\n                                                                        sortedBoneData[i] = data;\n                                                                        data.processed = true;\n                                                                        break;\n                                                            }\n                                                }\n                                    }\n\n                                    // add unprocessed bone data at the end of the list\n\n                                    for (i = 0; i < boneData.length; i++) {\n\n                                                data = boneData[i];\n\n                                                if (data.processed === false) {\n\n                                                            sortedBoneData.push(data);\n                                                            data.processed = true;\n                                                }\n                                    }\n\n                                    // setup arrays for skeleton creation\n\n                                    var bones = [];\n                                    var boneInverses = [];\n\n                                    for (i = 0; i < sortedBoneData.length; i++) {\n\n                                                data = sortedBoneData[i];\n\n                                                bones.push(data.bone);\n                                                boneInverses.push(data.boneInverse);\n                                    }\n\n                                    return new Skeleton(bones, boneInverses);\n                        }\n\n                        function buildBoneHierarchy(root, joints, boneData) {\n\n                                    // setup bone data from visual scene\n\n                                    root.traverse(function (object) {\n\n                                                if (object.isBone === true) {\n\n                                                            var boneInverse;\n\n                                                            // retrieve the boneInverse from the controller data\n\n                                                            for (var i = 0; i < joints.length; i++) {\n\n                                                                        var joint = joints[i];\n\n                                                                        if (joint.name === object.name) {\n\n                                                                                    boneInverse = joint.boneInverse;\n                                                                                    break;\n                                                                        }\n                                                            }\n\n                                                            if (boneInverse === undefined) {\n\n                                                                        // Unfortunately, there can be joints in the visual scene that are not part of the\n                                                                        // corresponding controller. In this case, we have to create a dummy boneInverse matrix\n                                                                        // for the respective bone. This bone won't affect any vertices, because there are no skin indices\n                                                                        // and weights defined for it. But we still have to add the bone to the sorted bone list in order to\n                                                                        // ensure a correct animation of the model.\n\n                                                                        boneInverse = new Matrix4();\n                                                            }\n\n                                                            boneData.push({ bone: object, boneInverse: boneInverse, processed: false });\n                                                }\n                                    });\n                        }\n\n                        function buildNode(data) {\n\n                                    var objects = [];\n\n                                    var matrix = data.matrix;\n                                    var nodes = data.nodes;\n                                    var type = data.type;\n                                    var instanceCameras = data.instanceCameras;\n                                    var instanceControllers = data.instanceControllers;\n                                    var instanceLights = data.instanceLights;\n                                    var instanceGeometries = data.instanceGeometries;\n                                    var instanceNodes = data.instanceNodes;\n\n                                    // nodes\n\n                                    for (var i = 0, l = nodes.length; i < l; i++) {\n\n                                                objects.push(getNode(nodes[i]));\n                                    }\n\n                                    // instance cameras\n\n                                    for (var i = 0, l = instanceCameras.length; i < l; i++) {\n\n                                                objects.push(getCamera(instanceCameras[i]).clone());\n                                    }\n\n                                    // instance controllers\n\n                                    for (var i = 0, l = instanceControllers.length; i < l; i++) {\n\n                                                var instance = instanceControllers[i];\n                                                var controller = getController(instance.id);\n                                                var geometries = getGeometry(controller.id);\n                                                var newObjects = buildObjects(geometries, instance.materials);\n\n                                                var skeletons = instance.skeletons;\n                                                var joints = controller.skin.joints;\n\n                                                var skeleton = buildSkeleton(skeletons, joints);\n\n                                                for (var j = 0, jl = newObjects.length; j < jl; j++) {\n\n                                                            var object = newObjects[j];\n\n                                                            if (object.isSkinnedMesh) {\n\n                                                                        object.bind(skeleton, controller.skin.bindMatrix);\n                                                                        object.normalizeSkinWeights();\n                                                            }\n\n                                                            objects.push(object);\n                                                }\n                                    }\n\n                                    // instance lights\n\n                                    for (var i = 0, l = instanceLights.length; i < l; i++) {\n\n                                                objects.push(getLight(instanceLights[i]).clone());\n                                    }\n\n                                    // instance geometries\n\n                                    for (var i = 0, l = instanceGeometries.length; i < l; i++) {\n\n                                                var instance = instanceGeometries[i];\n\n                                                // a single geometry instance in collada can lead to multiple object3Ds.\n                                                // this is the case when primitives are combined like triangles and lines\n\n                                                var geometries = getGeometry(instance.id);\n                                                var newObjects = buildObjects(geometries, instance.materials);\n\n                                                for (var j = 0, jl = newObjects.length; j < jl; j++) {\n\n                                                            objects.push(newObjects[j]);\n                                                }\n                                    }\n\n                                    // instance nodes\n\n                                    for (var i = 0, l = instanceNodes.length; i < l; i++) {\n\n                                                objects.push(getNode(instanceNodes[i]).clone());\n                                    }\n\n                                    var object;\n\n                                    if (nodes.length === 0 && objects.length === 1) {\n\n                                                object = objects[0];\n                                    } else {\n\n                                                object = type === 'JOINT' ? new Bone() : new Group();\n\n                                                for (var i = 0; i < objects.length; i++) {\n\n                                                            object.add(objects[i]);\n                                                }\n                                    }\n\n                                    object.name = type === 'JOINT' ? data.sid : data.name;\n                                    object.matrix.copy(matrix);\n                                    object.matrix.decompose(object.position, object.quaternion, object.scale);\n\n                                    return object;\n                        }\n\n                        function resolveMaterialBinding(keys, instanceMaterials) {\n\n                                    var materials = [];\n\n                                    for (var i = 0, l = keys.length; i < l; i++) {\n\n                                                var id = instanceMaterials[keys[i]];\n                                                materials.push(getMaterial(id));\n                                    }\n\n                                    return materials;\n                        }\n\n                        function buildObjects(geometries, instanceMaterials) {\n\n                                    var objects = [];\n\n                                    for (var type in geometries) {\n\n                                                var geometry = geometries[type];\n\n                                                var materials = resolveMaterialBinding(geometry.materialKeys, instanceMaterials);\n\n                                                // handle case if no materials are defined\n\n                                                if (materials.length === 0) {\n\n                                                            if (type === 'lines' || type === 'linestrips') {\n\n                                                                        materials.push(new LineBasicMaterial());\n                                                            } else {\n\n                                                                        materials.push(new MeshPhongMaterial());\n                                                            }\n                                                }\n\n                                                // regard skinning\n\n                                                var skinning = geometry.data.attributes.skinIndex !== undefined;\n\n                                                if (skinning) {\n\n                                                            for (var i = 0, l = materials.length; i < l; i++) {\n\n                                                                        materials[i].skinning = true;\n                                                            }\n                                                }\n\n                                                // choose between a single or multi materials (material array)\n\n                                                var material = materials.length === 1 ? materials[0] : materials;\n\n                                                // now create a specific 3D object\n\n                                                var object;\n\n                                                switch (type) {\n\n                                                            case 'lines':\n                                                                        object = new LineSegments(geometry.data, material);\n                                                                        break;\n\n                                                            case 'linestrips':\n                                                                        object = new Line(geometry.data, material);\n                                                                        break;\n\n                                                            case 'triangles':\n                                                            case 'polylist':\n                                                                        if (skinning) {\n\n                                                                                    object = new SkinnedMesh(geometry.data, material);\n                                                                        } else {\n\n                                                                                    object = new Mesh(geometry.data, material);\n                                                                        }\n                                                                        break;\n\n                                                }\n\n                                                objects.push(object);\n                                    }\n\n                                    return objects;\n                        }\n\n                        function getNode(id) {\n\n                                    return getBuild(library.nodes[id], buildNode);\n                        }\n\n                        // visual scenes\n\n                        function parseVisualScene(xml) {\n\n                                    var data = {\n                                                name: xml.getAttribute('name'),\n                                                children: []\n                                    };\n\n                                    var elements = getElementsByTagName(xml, 'node');\n\n                                    for (var i = 0; i < elements.length; i++) {\n\n                                                data.children.push(parseNode(elements[i]));\n                                    }\n\n                                    library.visualScenes[xml.getAttribute('id')] = data;\n                        }\n\n                        function buildVisualScene(data) {\n\n                                    var group = new Group();\n                                    group.name = data.name;\n\n                                    var children = data.children;\n\n                                    for (var i = 0; i < children.length; i++) {\n\n                                                var child = children[i];\n\n                                                if (child.id === null) {\n\n                                                            group.add(buildNode(child));\n                                                } else {\n\n                                                            // if there is an ID, let's try to get the finished build (e.g. joints are already build)\n\n                                                            group.add(getNode(child.id));\n                                                }\n                                    }\n\n                                    return group;\n                        }\n\n                        function getVisualScene(id) {\n\n                                    return getBuild(library.visualScenes[id], buildVisualScene);\n                        }\n\n                        // scenes\n\n                        function parseScene(xml) {\n\n                                    var instance = getElementsByTagName(xml, 'instance_visual_scene')[0];\n                                    return getVisualScene(parseId(instance.getAttribute('url')));\n                        }\n\n                        function setupAnimations() {\n\n                                    var clips = library.clips;\n\n                                    if (isEmpty(clips) === true) {\n\n                                                if (isEmpty(library.animations) === false) {\n\n                                                            // if there are animations but no clips, we create a default clip for playback\n\n                                                            var tracks = [];\n\n                                                            for (var id in library.animations) {\n\n                                                                        var animationTracks = getAnimation(id);\n\n                                                                        for (var i = 0, l = animationTracks.length; i < l; i++) {\n\n                                                                                    tracks.push(animationTracks[i]);\n                                                                        }\n                                                            }\n\n                                                            animations.push(new AnimationClip('default', -1, tracks));\n                                                }\n                                    } else {\n\n                                                for (var id in clips) {\n\n                                                            animations.push(getAnimationClip(id));\n                                                }\n                                    }\n                        }\n\n                        console.time('ColladaLoader');\n\n                        if (text.length === 0) {\n\n                                    return { scene: new Scene() };\n                        }\n\n                        console.time('ColladaLoader: DOMParser');\n\n                        var xml = new DOMParser().parseFromString(text, 'application/xml');\n\n                        console.timeEnd('ColladaLoader: DOMParser');\n\n                        var collada = getElementsByTagName(xml, 'COLLADA')[0];\n\n                        // metadata\n\n                        var version = collada.getAttribute('version');\n                        console.log('ColladaLoader: File version', version);\n\n                        var asset = parseAsset(getElementsByTagName(collada, 'asset')[0]);\n                        var textureLoader = new TextureLoader(this.manager);\n                        textureLoader.setPath(path).setCrossOrigin(this.crossOrigin);\n\n                        //\n\n                        var animations = [];\n                        var kinematics = {};\n\n                        //\n\n                        var library = {\n                                    animations: {},\n                                    clips: {},\n                                    controllers: {},\n                                    images: {},\n                                    effects: {},\n                                    materials: {},\n                                    cameras: {},\n                                    lights: {},\n                                    geometries: {},\n                                    nodes: {},\n                                    visualScenes: {},\n                                    kinematicsModels: {},\n                                    kinematicsScenes: {}\n                        };\n\n                        console.time('ColladaLoader: Parse');\n\n                        parseLibrary(collada, 'library_animations', 'animation', parseAnimation);\n                        parseLibrary(collada, 'library_animation_clips', 'animation_clip', parseAnimationClip);\n                        parseLibrary(collada, 'library_controllers', 'controller', parseController);\n                        parseLibrary(collada, 'library_images', 'image', parseImage);\n                        parseLibrary(collada, 'library_effects', 'effect', parseEffect);\n                        parseLibrary(collada, 'library_materials', 'material', parseMaterial);\n                        parseLibrary(collada, 'library_cameras', 'camera', parseCamera);\n                        parseLibrary(collada, 'library_lights', 'light', parseLight);\n                        parseLibrary(collada, 'library_geometries', 'geometry', parseGeometry);\n                        parseLibrary(collada, 'library_nodes', 'node', parseNode);\n                        parseLibrary(collada, 'library_visual_scenes', 'visual_scene', parseVisualScene);\n                        parseLibrary(collada, 'library_kinematics_models', 'kinematics_model', parseKinematicsModel);\n                        parseLibrary(collada, 'scene', 'instance_kinematics_scene', parseKinematicsScene);\n\n                        console.timeEnd('ColladaLoader: Parse');\n\n                        console.time('ColladaLoader: Build');\n\n                        buildLibrary(library.animations, buildAnimation);\n                        buildLibrary(library.clips, buildAnimationClip);\n                        buildLibrary(library.controllers, buildController);\n                        buildLibrary(library.images, buildImage);\n                        buildLibrary(library.effects, buildEffect);\n                        buildLibrary(library.materials, buildMaterial);\n                        buildLibrary(library.cameras, buildCamera);\n                        buildLibrary(library.lights, buildLight);\n                        buildLibrary(library.geometries, buildGeometry);\n                        buildLibrary(library.visualScenes, buildVisualScene);\n\n                        console.timeEnd('ColladaLoader: Build');\n\n                        setupAnimations();\n                        setupKinematics();\n\n                        var scene = parseScene(getElementsByTagName(collada, 'scene')[0]);\n\n                        if (asset.upAxis === 'Z_UP') {\n\n                                    scene.rotation.x = -Math.PI / 2;\n                        }\n\n                        scene.scale.multiplyScalar(asset.unit);\n\n                        console.timeEnd('ColladaLoader');\n\n                        return {\n                                    animations: animations,\n                                    kinematics: kinematics,\n                                    library: library,\n                                    scene: scene\n                        };\n            }\n\n};\n\nvar ModelCollada = {\n    name: 'model-collada',\n    mixins: [mixin],\n    props: {\n        lights: {\n            type: Array,\n            default: function _default() {\n                return [{\n                    type: 'HemisphereLight',\n                    position: { x: 0, y: 1, z: 0 },\n                    skyColor: 0xaaaaff,\n                    groundColor: 0x806060,\n                    intensity: 0.2\n                }, {\n                    type: 'DirectionalLight',\n                    position: { x: 1, y: 1, z: 1 },\n                    color: 0xffffff,\n                    intensity: 0.8\n                }];\n            }\n        },\n        smoothing: {\n            type: Boolean,\n            default: false\n        }\n    },\n    data: function data() {\n\n        var loader = new ColladaLoader();\n        loader.setCrossOrigin(this.crossOrigin);\n\n        return {\n            loader: loader\n        };\n    },\n\n    methods: {\n        getObject: function getObject(collada) {\n            return collada.scene;\n        }\n    }\n};\n\n/**\r\n * @author Don McCurdy / https://www.donmccurdy.com\r\n */\n\nvar LoaderUtils = {\n\n        decodeText: function decodeText(array) {\n\n                if (typeof TextDecoder !== 'undefined') {\n\n                        return new TextDecoder().decode(array);\n                }\n\n                // Avoid the String.fromCharCode.apply(null, array) shortcut, which\n                // throws a \"maximum call stack size exceeded\" error for large arrays.\n\n                var s = '';\n\n                for (var i = 0, il = array.length; i < il; i++) {\n\n                        // Implicitly assumes little-endian.\n                        s += String.fromCharCode(array[i]);\n                }\n\n                return s;\n        },\n\n        extractUrlBase: function extractUrlBase(url) {\n\n                var parts = url.split('/');\n\n                if (parts.length === 1) return './';\n\n                parts.pop();\n\n                return parts.join('/') + '/';\n        }\n\n};\n\n/**\r\n* @author Rich Tibbett / https://github.com/richtr\r\n* @author mrdoob / http://mrdoob.com/\r\n* @author Tony Parisi / http://www.tonyparisi.com/\r\n* @author Takahiro / https://github.com/takahirox\r\n* @author Don McCurdy / https://www.donmccurdy.com\r\n*/\n\nfunction GLTFLoader(manager) {\n\n    this.manager = manager !== undefined ? manager : DefaultLoadingManager;\n}\n\nGLTFLoader.prototype = {\n\n    constructor: GLTFLoader,\n\n    crossOrigin: 'Anonymous',\n\n    load: function load(url, onLoad, onProgress, onError) {\n\n        var scope = this;\n\n        var path = this.path !== undefined ? this.path : LoaderUtils.extractUrlBase(url);\n\n        var loader = new FileLoader(scope.manager);\n\n        loader.setResponseType('arraybuffer');\n\n        loader.load(url, function (data) {\n\n            try {\n\n                scope.parse(data, path, onLoad, onError);\n            } catch (e) {\n\n                if (onError !== undefined) {\n\n                    onError(e);\n                } else {\n\n                    throw e;\n                }\n            }\n        }, onProgress, onError);\n    },\n\n    setCrossOrigin: function setCrossOrigin(value) {\n\n        this.crossOrigin = value;\n        return this;\n    },\n\n    setPath: function setPath(value) {\n\n        this.path = value;\n        return this;\n    },\n\n    parse: function parse(data, path, onLoad, onError) {\n\n        var content;\n        var extensions = {};\n\n        if (typeof data === 'string') {\n\n            content = data;\n        } else {\n\n            var magic = LoaderUtils.decodeText(new Uint8Array(data, 0, 4));\n\n            if (magic === BINARY_EXTENSION_HEADER_MAGIC) {\n\n                try {\n\n                    extensions[EXTENSIONS.KHR_BINARY_GLTF] = new GLTFBinaryExtension(data);\n                } catch (error) {\n\n                    if (onError) onError(error);\n                    return;\n                }\n\n                content = extensions[EXTENSIONS.KHR_BINARY_GLTF].content;\n            } else {\n\n                content = LoaderUtils.decodeText(new Uint8Array(data));\n            }\n        }\n\n        var json = JSON.parse(content);\n\n        if (json.asset === undefined || json.asset.version[0] < 2) {\n\n            if (onError) onError(new Error('GLTFLoader: Unsupported asset. glTF versions >=2.0 are supported. Use LegacyGLTFLoader instead.'));\n            return;\n        }\n\n        if (json.extensionsUsed) {\n\n            if (json.extensionsUsed.indexOf(EXTENSIONS.KHR_LIGHTS) >= 0) {\n\n                extensions[EXTENSIONS.KHR_LIGHTS] = new GLTFLightsExtension(json);\n            }\n\n            if (json.extensionsUsed.indexOf(EXTENSIONS.KHR_MATERIALS_COMMON) >= 0) {\n\n                extensions[EXTENSIONS.KHR_MATERIALS_COMMON] = new GLTFMaterialsCommonExtension(json);\n            }\n\n            if (json.extensionsUsed.indexOf(EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS) >= 0) {\n\n                extensions[EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS] = new GLTFMaterialsPbrSpecularGlossinessExtension();\n            }\n        }\n\n        console.time('GLTFLoader');\n\n        var parser = new GLTFParser(json, extensions, {\n\n            path: path || this.path || '',\n            crossOrigin: this.crossOrigin,\n            manager: this.manager\n\n        });\n\n        parser.parse(function (scene, scenes, cameras, animations, asset) {\n\n            console.timeEnd('GLTFLoader');\n\n            var glTF = {\n                scene: scene,\n                scenes: scenes,\n                cameras: cameras,\n                animations: animations,\n                asset: asset\n            };\n\n            onLoad(glTF);\n        }, onError);\n    }\n\n};\n\n/* GLTFREGISTRY */\n\nfunction GLTFRegistry() {\n\n    var objects = {};\n\n    return {\n\n        get: function get(key) {\n\n            return objects[key];\n        },\n\n        add: function add(key, object) {\n\n            objects[key] = object;\n        },\n\n        remove: function remove(key) {\n\n            delete objects[key];\n        },\n\n        removeAll: function removeAll() {\n\n            objects = {};\n        }\n\n    };\n}\n\n/** *******************************/\n/** ******** EXTENSIONS ***********/\n/** *******************************/\n\nvar EXTENSIONS = {\n    KHR_BINARY_GLTF: 'KHR_binary_glTF',\n    KHR_LIGHTS: 'KHR_lights',\n    KHR_MATERIALS_COMMON: 'KHR_materials_common',\n    KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS: 'KHR_materials_pbrSpecularGlossiness'\n};\n\n/**\r\n * Lights Extension\r\n *\r\n * Specification: PENDING\r\n */\nfunction GLTFLightsExtension(json) {\n\n    this.name = EXTENSIONS.KHR_LIGHTS;\n\n    this.lights = {};\n\n    var extension = json.extensions && json.extensions[EXTENSIONS.KHR_LIGHTS] || {};\n    var lights = extension.lights || {};\n\n    for (var lightId in lights) {\n\n        var light = lights[lightId];\n        var lightNode;\n\n        var color = new Color().fromArray(light.color);\n\n        switch (light.type) {\n\n            case 'directional':\n                lightNode = new DirectionalLight(color);\n                lightNode.position.set(0, 0, 1);\n                break;\n\n            case 'point':\n                lightNode = new PointLight(color);\n                break;\n\n            case 'spot':\n                lightNode = new SpotLight(color);\n                lightNode.position.set(0, 0, 1);\n                break;\n\n            case 'ambient':\n                lightNode = new AmbientLight(color);\n                break;\n\n        }\n\n        if (lightNode) {\n\n            if (light.constantAttenuation !== undefined) {\n\n                lightNode.intensity = light.constantAttenuation;\n            }\n\n            if (light.linearAttenuation !== undefined) {\n\n                lightNode.distance = 1 / light.linearAttenuation;\n            }\n\n            if (light.quadraticAttenuation !== undefined) {\n\n                lightNode.decay = light.quadraticAttenuation;\n            }\n\n            if (light.fallOffAngle !== undefined) {\n\n                lightNode.angle = light.fallOffAngle;\n            }\n\n            if (light.fallOffExponent !== undefined) {\n\n                console.warn('GLTFLoader:: light.fallOffExponent not currently supported.');\n            }\n\n            lightNode.name = light.name || 'light_' + lightId;\n            this.lights[lightId] = lightNode;\n        }\n    }\n}\n\n/**\r\n * Common Materials Extension\r\n *\r\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/Khronos/KHR_materials_common\r\n */\nfunction GLTFMaterialsCommonExtension(json) {\n\n    this.name = EXTENSIONS.KHR_MATERIALS_COMMON;\n}\n\nGLTFMaterialsCommonExtension.prototype.getMaterialType = function (material) {\n\n    var khrMaterial = material.extensions[this.name];\n\n    switch (khrMaterial.type) {\n\n        case 'commonBlinn':\n        case 'commonPhong':\n            return MeshPhongMaterial;\n\n        case 'commonLambert':\n            return MeshLambertMaterial;\n\n        case 'commonConstant':\n        default:\n            return MeshBasicMaterial;\n\n    }\n};\n\nGLTFMaterialsCommonExtension.prototype.extendParams = function (materialParams, material, parser) {\n\n    var khrMaterial = material.extensions[this.name];\n\n    var pending = [];\n\n    var keys = [];\n\n    // TODO: Currently ignored: 'ambientFactor', 'ambientTexture'\n    switch (khrMaterial.type) {\n\n        case 'commonBlinn':\n        case 'commonPhong':\n            keys.push('diffuseFactor', 'diffuseTexture', 'specularFactor', 'specularTexture', 'shininessFactor');\n            break;\n\n        case 'commonLambert':\n            keys.push('diffuseFactor', 'diffuseTexture');\n            break;\n\n        case 'commonConstant':\n        default:\n            break;\n\n    }\n\n    var materialValues = {};\n\n    keys.forEach(function (v) {\n\n        if (khrMaterial[v] !== undefined) materialValues[v] = khrMaterial[v];\n    });\n\n    if (materialValues.diffuseFactor !== undefined) {\n\n        materialParams.color = new Color().fromArray(materialValues.diffuseFactor);\n        materialParams.opacity = materialValues.diffuseFactor[3];\n    }\n\n    if (materialValues.diffuseTexture !== undefined) {\n\n        pending.push(parser.assignTexture(materialParams, 'map', materialValues.diffuseTexture.index));\n    }\n\n    if (materialValues.specularFactor !== undefined) {\n\n        materialParams.specular = new Color().fromArray(materialValues.specularFactor);\n    }\n\n    if (materialValues.specularTexture !== undefined) {\n\n        pending.push(parser.assignTexture(materialParams, 'specularMap', materialValues.specularTexture.index));\n    }\n\n    if (materialValues.shininessFactor !== undefined) {\n\n        materialParams.shininess = materialValues.shininessFactor;\n    }\n\n    return Promise.all(pending);\n};\nvar BINARY_EXTENSION_HEADER_MAGIC = 'glTF';\nvar BINARY_EXTENSION_HEADER_LENGTH = 12;\nvar BINARY_EXTENSION_CHUNK_TYPES = { JSON: 0x4E4F534A, BIN: 0x004E4942 };\n\nfunction GLTFBinaryExtension(data) {\n\n    this.name = EXTENSIONS.KHR_BINARY_GLTF;\n    this.content = null;\n    this.body = null;\n\n    var headerView = new DataView(data, 0, BINARY_EXTENSION_HEADER_LENGTH);\n\n    this.header = {\n        magic: LoaderUtils.decodeText(new Uint8Array(data.slice(0, 4))),\n        version: headerView.getUint32(4, true),\n        length: headerView.getUint32(8, true)\n    };\n\n    if (this.header.magic !== BINARY_EXTENSION_HEADER_MAGIC) {\n\n        throw new Error('GLTFLoader: Unsupported glTF-Binary header.');\n    } else if (this.header.version < 2.0) {\n\n        throw new Error('GLTFLoader: Legacy binary file detected. Use LegacyGLTFLoader instead.');\n    }\n\n    var chunkView = new DataView(data, BINARY_EXTENSION_HEADER_LENGTH);\n    var chunkIndex = 0;\n\n    while (chunkIndex < chunkView.byteLength) {\n\n        var chunkLength = chunkView.getUint32(chunkIndex, true);\n        chunkIndex += 4;\n\n        var chunkType = chunkView.getUint32(chunkIndex, true);\n        chunkIndex += 4;\n\n        if (chunkType === BINARY_EXTENSION_CHUNK_TYPES.JSON) {\n\n            var contentArray = new Uint8Array(data, BINARY_EXTENSION_HEADER_LENGTH + chunkIndex, chunkLength);\n            this.content = LoaderUtils.decodeText(contentArray);\n        } else if (chunkType === BINARY_EXTENSION_CHUNK_TYPES.BIN) {\n\n            var byteOffset = BINARY_EXTENSION_HEADER_LENGTH + chunkIndex;\n            this.body = data.slice(byteOffset, byteOffset + chunkLength);\n        }\n\n        // Clients must ignore chunks with unknown types.\n\n        chunkIndex += chunkLength;\n    }\n\n    if (this.content === null) {\n\n        throw new Error('addEnvMap: false: JSON content not found.');\n    }\n}\n\n/**\r\n * Specular-Glossiness Extension\r\n *\r\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/Khronos/KHR_materials_pbrSpecularGlossiness\r\n */\nfunction GLTFMaterialsPbrSpecularGlossinessExtension() {\n\n    return {\n\n        name: EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS,\n\n        specularGlossinessParams: ['color', 'map', 'lightMap', 'lightMapIntensity', 'aoMap', 'aoMapIntensity', 'emissive', 'emissiveIntensity', 'emissiveMap', 'bumpMap', 'bumpScale', 'normalMap', 'displacementMap', 'displacementScale', 'displacementBias', 'specularMap', 'specular', 'glossinessMap', 'glossiness', 'alphaMap', 'envMap', 'envMapIntensity', 'refractionRatio'],\n\n        getMaterialType: function getMaterialType() {\n\n            return ShaderMaterial;\n        },\n\n        extendParams: function extendParams(params, material, parser) {\n\n            var pbrSpecularGlossiness = material.extensions[this.name];\n\n            var shader = ShaderLib['standard'];\n\n            var uniforms = UniformsUtils.clone(shader.uniforms);\n\n            var specularMapParsFragmentChunk = ['#ifdef USE_SPECULARMAP', '    uniform sampler2D specularMap;', '#endif'].join('\\n');\n\n            var glossinessMapParsFragmentChunk = ['#ifdef USE_GLOSSINESSMAP', '    uniform sampler2D glossinessMap;', '#endif'].join('\\n');\n\n            var specularMapFragmentChunk = ['vec3 specularFactor = specular;', '#ifdef USE_SPECULARMAP', '    vec4 texelSpecular = texture2D( specularMap, vUv );', '    texelSpecular = sRGBToLinear( texelSpecular );', '    // reads channel RGB, compatible with a glTF Specular-Glossiness (RGBA) texture', '    specularFactor *= texelSpecular.rgb;', '#endif'].join('\\n');\n\n            var glossinessMapFragmentChunk = ['float glossinessFactor = glossiness;', '#ifdef USE_GLOSSINESSMAP', '    vec4 texelGlossiness = texture2D( glossinessMap, vUv );', '    // reads channel A, compatible with a glTF Specular-Glossiness (RGBA) texture', '    glossinessFactor *= texelGlossiness.a;', '#endif'].join('\\n');\n\n            var lightPhysicalFragmentChunk = ['PhysicalMaterial material;', 'material.diffuseColor = diffuseColor.rgb;', 'material.specularRoughness = clamp( 1.0 - glossinessFactor, 0.04, 1.0 );', 'material.specularColor = specularFactor.rgb;'].join('\\n');\n\n            var fragmentShader = shader.fragmentShader.replace('#include <specularmap_fragment>', '').replace('uniform float roughness;', 'uniform vec3 specular;').replace('uniform float metalness;', 'uniform float glossiness;').replace('#include <roughnessmap_pars_fragment>', specularMapParsFragmentChunk).replace('#include <metalnessmap_pars_fragment>', glossinessMapParsFragmentChunk).replace('#include <roughnessmap_fragment>', specularMapFragmentChunk).replace('#include <metalnessmap_fragment>', glossinessMapFragmentChunk).replace('#include <lights_physical_fragment>', lightPhysicalFragmentChunk);\n\n            delete uniforms.roughness;\n            delete uniforms.metalness;\n            delete uniforms.roughnessMap;\n            delete uniforms.metalnessMap;\n\n            uniforms.specular = { value: new Color().setHex(0x111111) };\n            uniforms.glossiness = { value: 0.5 };\n            uniforms.specularMap = { value: null };\n            uniforms.glossinessMap = { value: null };\n\n            params.vertexShader = shader.vertexShader;\n            params.fragmentShader = fragmentShader;\n            params.uniforms = uniforms;\n            params.defines = { 'STANDARD': '' };\n\n            params.color = new Color(1.0, 1.0, 1.0);\n            params.opacity = 1.0;\n\n            var pending = [];\n\n            if (Array.isArray(pbrSpecularGlossiness.diffuseFactor)) {\n\n                var array = pbrSpecularGlossiness.diffuseFactor;\n\n                params.color.fromArray(array);\n                params.opacity = array[3];\n            }\n\n            if (pbrSpecularGlossiness.diffuseTexture !== undefined) {\n\n                pending.push(parser.assignTexture(params, 'map', pbrSpecularGlossiness.diffuseTexture.index));\n            }\n\n            params.emissive = new Color(0.0, 0.0, 0.0);\n            params.glossiness = pbrSpecularGlossiness.glossinessFactor !== undefined ? pbrSpecularGlossiness.glossinessFactor : 1.0;\n            params.specular = new Color(1.0, 1.0, 1.0);\n\n            if (Array.isArray(pbrSpecularGlossiness.specularFactor)) {\n\n                params.specular.fromArray(pbrSpecularGlossiness.specularFactor);\n            }\n\n            if (pbrSpecularGlossiness.specularGlossinessTexture !== undefined) {\n\n                var specGlossIndex = pbrSpecularGlossiness.specularGlossinessTexture.index;\n                pending.push(parser.assignTexture(params, 'glossinessMap', specGlossIndex));\n                pending.push(parser.assignTexture(params, 'specularMap', specGlossIndex));\n            }\n\n            return Promise.all(pending);\n        },\n\n        createMaterial: function createMaterial(params) {\n\n            // setup material properties based on MeshStandardMaterial for Specular-Glossiness\n\n            var material = new ShaderMaterial({\n                defines: params.defines,\n                vertexShader: params.vertexShader,\n                fragmentShader: params.fragmentShader,\n                uniforms: params.uniforms,\n                fog: true,\n                lights: true,\n                opacity: params.opacity,\n                transparent: params.transparent\n            });\n\n            material.isGLTFSpecularGlossinessMaterial = true;\n\n            material.color = params.color;\n\n            material.map = params.map === undefined ? null : params.map;\n\n            material.lightMap = null;\n            material.lightMapIntensity = 1.0;\n\n            material.aoMap = params.aoMap === undefined ? null : params.aoMap;\n            material.aoMapIntensity = 1.0;\n\n            material.emissive = params.emissive;\n            material.emissiveIntensity = 1.0;\n            material.emissiveMap = params.emissiveMap === undefined ? null : params.emissiveMap;\n\n            material.bumpMap = params.bumpMap === undefined ? null : params.bumpMap;\n            material.bumpScale = 1;\n\n            material.normalMap = params.normalMap === undefined ? null : params.normalMap;\n            if (params.normalScale) material.normalScale = params.normalScale;\n\n            material.displacementMap = null;\n            material.displacementScale = 1;\n            material.displacementBias = 0;\n\n            material.specularMap = params.specularMap === undefined ? null : params.specularMap;\n            material.specular = params.specular;\n\n            material.glossinessMap = params.glossinessMap === undefined ? null : params.glossinessMap;\n            material.glossiness = params.glossiness;\n\n            material.alphaMap = null;\n\n            material.envMap = params.envMap === undefined ? null : params.envMap;\n            material.envMapIntensity = 1.0;\n\n            material.refractionRatio = 0.98;\n\n            material.extensions.derivatives = true;\n\n            return material;\n        },\n\n        /**\r\n         * Clones a GLTFSpecularGlossinessMaterial instance. The ShaderMaterial.copy() method can\r\n         * copy only properties it knows about or inherits, and misses many properties that would\r\n         * normally be defined by MeshStandardMaterial.\r\n         *\r\n         * This method allows GLTFSpecularGlossinessMaterials to be cloned in the process of\r\n         * loading a glTF model, but cloning later (e.g. by the user) would require these changes\r\n         * AND also updating `.onBeforeRender` on the parent mesh.\r\n         *\r\n         * @param  {THREE.ShaderMaterial} source\r\n         * @return {THREE.ShaderMaterial}\r\n         */\n        cloneMaterial: function cloneMaterial(source) {\n\n            var target = source.clone();\n\n            target.isGLTFSpecularGlossinessMaterial = true;\n\n            var params = this.specularGlossinessParams;\n\n            for (var i = 0, il = params.length; i < il; i++) {\n\n                target[params[i]] = source[params[i]];\n            }\n\n            return target;\n        },\n\n        // Here's based on refreshUniformsCommon() and refreshUniformsStandard() in WebGLRenderer.\n        refreshUniforms: function refreshUniforms(renderer, scene, camera, geometry, material, group) {\n\n            var uniforms = material.uniforms;\n            var defines = material.defines;\n\n            uniforms.opacity.value = material.opacity;\n\n            uniforms.diffuse.value.copy(material.color);\n            uniforms.emissive.value.copy(material.emissive).multiplyScalar(material.emissiveIntensity);\n\n            uniforms.map.value = material.map;\n            uniforms.specularMap.value = material.specularMap;\n            uniforms.alphaMap.value = material.alphaMap;\n\n            uniforms.lightMap.value = material.lightMap;\n            uniforms.lightMapIntensity.value = material.lightMapIntensity;\n\n            uniforms.aoMap.value = material.aoMap;\n            uniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n            // uv repeat and offset setting priorities\n            // 1. color map\n            // 2. specular map\n            // 3. normal map\n            // 4. bump map\n            // 5. alpha map\n            // 6. emissive map\n\n            var uvScaleMap;\n\n            if (material.map) {\n\n                uvScaleMap = material.map;\n            } else if (material.specularMap) {\n\n                uvScaleMap = material.specularMap;\n            } else if (material.displacementMap) {\n\n                uvScaleMap = material.displacementMap;\n            } else if (material.normalMap) {\n\n                uvScaleMap = material.normalMap;\n            } else if (material.bumpMap) {\n\n                uvScaleMap = material.bumpMap;\n            } else if (material.glossinessMap) {\n\n                uvScaleMap = material.glossinessMap;\n            } else if (material.alphaMap) {\n\n                uvScaleMap = material.alphaMap;\n            } else if (material.emissiveMap) {\n\n                uvScaleMap = material.emissiveMap;\n            }\n\n            if (uvScaleMap !== undefined) {\n\n                // backwards compatibility\n                if (uvScaleMap.isWebGLRenderTarget) {\n\n                    uvScaleMap = uvScaleMap.texture;\n                }\n\n                var offset;\n                var repeat;\n\n                if (uvScaleMap.matrix !== undefined) {\n\n                    // > r88.\n\n                    if (uvScaleMap.matrixAutoUpdate === true) {\n\n                        offset = uvScaleMap.offset;\n                        repeat = uvScaleMap.repeat;\n                        var rotation = uvScaleMap.rotation;\n                        var center = uvScaleMap.center;\n\n                        uvScaleMap.matrix.setUvTransform(offset.x, offset.y, repeat.x, repeat.y, rotation, center.x, center.y);\n                    }\n\n                    uniforms.uvTransform.value.copy(uvScaleMap.matrix);\n                } else {\n\n                    // <= r87. Remove when reasonable.\n\n                    offset = uvScaleMap.offset;\n                    repeat = uvScaleMap.repeat;\n\n                    uniforms.offsetRepeat.value.set(offset.x, offset.y, repeat.x, repeat.y);\n                }\n            }\n\n            uniforms.envMap.value = material.envMap;\n            uniforms.envMapIntensity.value = material.envMapIntensity;\n            uniforms.flipEnvMap.value = material.envMap && material.envMap.isCubeTexture ? -1 : 1;\n\n            uniforms.refractionRatio.value = material.refractionRatio;\n\n            uniforms.specular.value.copy(material.specular);\n            uniforms.glossiness.value = material.glossiness;\n\n            uniforms.glossinessMap.value = material.glossinessMap;\n\n            uniforms.emissiveMap.value = material.emissiveMap;\n            uniforms.bumpMap.value = material.bumpMap;\n            uniforms.normalMap.value = material.normalMap;\n\n            uniforms.displacementMap.value = material.displacementMap;\n            uniforms.displacementScale.value = material.displacementScale;\n            uniforms.displacementBias.value = material.displacementBias;\n\n            if (uniforms.glossinessMap.value !== null && defines.USE_GLOSSINESSMAP === undefined) {\n\n                defines.USE_GLOSSINESSMAP = '';\n                // set USE_ROUGHNESSMAP to enable vUv\n                defines.USE_ROUGHNESSMAP = '';\n            }\n\n            if (uniforms.glossinessMap.value === null && defines.USE_GLOSSINESSMAP !== undefined) {\n\n                delete defines.USE_GLOSSINESSMAP;\n                delete defines.USE_ROUGHNESSMAP;\n            }\n        }\n\n    };\n}\n\n/** *******************************/\n/** ******** INTERNALS ************/\n/** *******************************/\n\n/* CONSTANTS */\n\nvar WEBGL_CONSTANTS = {\n    FLOAT: 5126,\n    // FLOAT_MAT2: 35674,\n    FLOAT_MAT3: 35675,\n    FLOAT_MAT4: 35676,\n    FLOAT_VEC2: 35664,\n    FLOAT_VEC3: 35665,\n    FLOAT_VEC4: 35666,\n    LINEAR: 9729,\n    REPEAT: 10497,\n    SAMPLER_2D: 35678,\n    POINTS: 0,\n    LINES: 1,\n    LINE_LOOP: 2,\n    LINE_STRIP: 3,\n    TRIANGLES: 4,\n    TRIANGLE_STRIP: 5,\n    TRIANGLE_FAN: 6,\n    UNSIGNED_BYTE: 5121,\n    UNSIGNED_SHORT: 5123\n};\n\nvar WEBGL_COMPONENT_TYPES = {\n    5120: Int8Array,\n    5121: Uint8Array,\n    5122: Int16Array,\n    5123: Uint16Array,\n    5125: Uint32Array,\n    5126: Float32Array\n};\n\nvar WEBGL_FILTERS = {\n    9728: NearestFilter,\n    9729: LinearFilter,\n    9984: NearestMipMapNearestFilter,\n    9985: LinearMipMapNearestFilter,\n    9986: NearestMipMapLinearFilter,\n    9987: LinearMipMapLinearFilter\n};\n\nvar WEBGL_WRAPPINGS = {\n    33071: ClampToEdgeWrapping,\n    33648: MirroredRepeatWrapping,\n    10497: RepeatWrapping\n};\n\nvar WEBGL_TEXTURE_FORMATS = {\n    6406: AlphaFormat,\n    6407: RGBFormat,\n    6408: RGBAFormat,\n    6409: LuminanceFormat,\n    6410: LuminanceAlphaFormat\n};\n\nvar WEBGL_TEXTURE_DATATYPES = {\n    5121: UnsignedByteType,\n    32819: UnsignedShort4444Type,\n    32820: UnsignedShort5551Type,\n    33635: UnsignedShort565Type\n};\n\nvar WEBGL_TYPE_SIZES = {\n    'SCALAR': 1,\n    'VEC2': 2,\n    'VEC3': 3,\n    'VEC4': 4,\n    'MAT2': 4,\n    'MAT3': 9,\n    'MAT4': 16\n};\n\nvar PATH_PROPERTIES = {\n    scale: 'scale',\n    translation: 'position',\n    rotation: 'quaternion',\n    weights: 'morphTargetInfluences'\n};\n\nvar INTERPOLATION = {\n    CUBICSPLINE: InterpolateSmooth,\n    LINEAR: InterpolateLinear,\n    STEP: InterpolateDiscrete\n};\n\nvar ALPHA_MODES = {\n    OPAQUE: 'OPAQUE',\n    MASK: 'MASK',\n    BLEND: 'BLEND'\n};\n\n/* UTILITY FUNCTIONS */\n\nfunction resolveURL(url, path) {\n\n    // Invalid URL\n    if (typeof url !== 'string' || url === '') return '';\n\n    // Absolute URL http://,https://,//\n    if (/^(https?:)?\\/\\//i.test(url)) return url;\n\n    // Data URI\n    if (/^data:.*,.*$/i.test(url)) return url;\n\n    // Blob URL\n    if (/^blob:.*$/i.test(url)) return url;\n\n    // Relative URL\n    return path + url;\n}\n\n/**\r\n * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#default-material\r\n */\nfunction createDefaultMaterial() {\n\n    return new MeshStandardMaterial({\n        color: 0xFFFFFF,\n        emissive: 0x000000,\n        metalness: 1,\n        roughness: 1,\n        transparent: false,\n        depthTest: true,\n        side: FrontSide\n    });\n}\n\n/**\r\n * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#morph-targets\r\n *\r\n * TODO: Implement support for morph targets on TANGENT attribute.\r\n *\r\n * @param {THREE.Mesh} mesh\r\n * @param {GLTF.Mesh} meshDef\r\n * @param {GLTF.Primitive} primitiveDef\r\n * @param {Array<THREE.BufferAttribute>} accessors\r\n */\nfunction addMorphTargets(mesh, meshDef, primitiveDef, accessors) {\n\n    var geometry = mesh.geometry;\n    var material = mesh.material;\n\n    var targets = primitiveDef.targets;\n    var morphAttributes = geometry.morphAttributes;\n\n    morphAttributes.position = [];\n    morphAttributes.normal = [];\n\n    material.morphTargets = true;\n\n    for (var i = 0, il = targets.length; i < il; i++) {\n\n        var target = targets[i];\n        var attributeName = 'morphTarget' + i;\n\n        var positionAttribute, normalAttribute;\n\n        if (target.POSITION !== undefined) {\n\n            // Three.js morph formula is\n            //   position\n            //     + weight0 * ( morphTarget0 - position )\n            //     + weight1 * ( morphTarget1 - position )\n            //     ...\n            // while the glTF one is\n            //   position\n            //     + weight0 * morphTarget0\n            //     + weight1 * morphTarget1\n            //     ...\n            // then adding position to morphTarget.\n            // So morphTarget value will depend on mesh's position, then cloning attribute\n            // for the case if attribute is shared among two or more meshes.\n\n            positionAttribute = accessors[target.POSITION].clone();\n            var position = geometry.attributes.position;\n\n            for (var j = 0, jl = positionAttribute.count; j < jl; j++) {\n\n                positionAttribute.setXYZ(j, positionAttribute.getX(j) + position.getX(j), positionAttribute.getY(j) + position.getY(j), positionAttribute.getZ(j) + position.getZ(j));\n            }\n        } else if (geometry.attributes.position) {\n\n            // Copying the original position not to affect the final position.\n            // See the formula above.\n            positionAttribute = geometry.attributes.position.clone();\n        }\n\n        if (positionAttribute !== undefined) {\n\n            positionAttribute.name = attributeName;\n            morphAttributes.position.push(positionAttribute);\n        }\n\n        if (target.NORMAL !== undefined) {\n\n            material.morphNormals = true;\n\n            // see target.POSITION's comment\n\n            normalAttribute = accessors[target.NORMAL].clone();\n            var normal = geometry.attributes.normal;\n\n            for (var j = 0, jl = normalAttribute.count; j < jl; j++) {\n\n                normalAttribute.setXYZ(j, normalAttribute.getX(j) + normal.getX(j), normalAttribute.getY(j) + normal.getY(j), normalAttribute.getZ(j) + normal.getZ(j));\n            }\n        } else if (geometry.attributes.normal !== undefined) {\n\n            normalAttribute = geometry.attributes.normal.clone();\n        }\n\n        if (normalAttribute !== undefined) {\n\n            normalAttribute.name = attributeName;\n            morphAttributes.normal.push(normalAttribute);\n        }\n    }\n\n    mesh.updateMorphTargets();\n\n    if (meshDef.weights !== undefined) {\n\n        for (var i = 0, il = meshDef.weights.length; i < il; i++) {\n\n            mesh.morphTargetInfluences[i] = meshDef.weights[i];\n        }\n    }\n}\n\nfunction isPrimitiveEqual(a, b) {\n\n    if (a.indices !== b.indices) {\n\n        return false;\n    }\n\n    var attribA = a.attributes || {};\n    var attribB = b.attributes || {};\n    var keysA = Object.keys(attribA);\n    var keysB = Object.keys(attribB);\n\n    if (keysA.length !== keysB.length) {\n\n        return false;\n    }\n\n    for (var i = 0, il = keysA.length; i < il; i++) {\n\n        var key = keysA[i];\n\n        if (attribA[key] !== attribB[key]) {\n\n            return false;\n        }\n    }\n\n    return true;\n}\n\nfunction getCachedGeometry(cache, newPrimitive) {\n\n    for (var i = 0, il = cache.length; i < il; i++) {\n\n        var cached = cache[i];\n\n        if (isPrimitiveEqual(cached.primitive, newPrimitive)) {\n\n            return cached.geometry;\n        }\n    }\n\n    return null;\n}\n\n/* GLTF PARSER */\n\nfunction GLTFParser(json, extensions, options) {\n\n    this.json = json || {};\n    this.extensions = extensions || {};\n    this.options = options || {};\n\n    // loader object cache\n    this.cache = new GLTFRegistry();\n\n    // BufferGeometry caching\n    this.primitiveCache = [];\n\n    this.textureLoader = new TextureLoader(this.options.manager);\n    this.textureLoader.setCrossOrigin(this.options.crossOrigin);\n\n    this.fileLoader = new FileLoader(this.options.manager);\n    this.fileLoader.setResponseType('arraybuffer');\n}\n\nGLTFParser.prototype.parse = function (onLoad, onError) {\n\n    var json = this.json;\n\n    // Clear the loader cache\n    this.cache.removeAll();\n\n    // Mark the special nodes/meshes in json for efficient parse\n    this.markDefs();\n\n    // Fire the callback on complete\n    this.getMultiDependencies(['scene', 'animation', 'camera']).then(function (dependencies) {\n\n        var scenes = dependencies.scenes || [];\n        var scene = scenes[json.scene || 0];\n        var animations = dependencies.animations || [];\n        var asset = json.asset;\n        var cameras = dependencies.cameras || [];\n\n        onLoad(scene, scenes, cameras, animations, asset);\n    }).catch(onError);\n};\n\n/**\r\n * Marks the special nodes/meshes in json for efficient parse.\r\n */\nGLTFParser.prototype.markDefs = function () {\n\n    var nodeDefs = this.json.nodes || [];\n    var skinDefs = this.json.skins || [];\n    var meshDefs = this.json.meshes || [];\n\n    var meshReferences = {};\n    var meshUses = {};\n\n    // Nothing in the node definition indicates whether it is a Bone or an\n    // Object3D. Use the skins' joint references to mark bones.\n    for (var skinIndex = 0, skinLength = skinDefs.length; skinIndex < skinLength; skinIndex++) {\n\n        var joints = skinDefs[skinIndex].joints;\n\n        for (var i = 0, il = joints.length; i < il; i++) {\n\n            nodeDefs[joints[i]].isBone = true;\n        }\n    }\n\n    // Meshes can (and should) be reused by multiple nodes in a glTF asset. To\n    // avoid having more than one THREE.Mesh with the same name, count\n    // references and rename instances below.\n    //\n    // Example: CesiumMilkTruck sample model reuses \"Wheel\" meshes.\n    for (var nodeIndex = 0, nodeLength = nodeDefs.length; nodeIndex < nodeLength; nodeIndex++) {\n\n        var nodeDef = nodeDefs[nodeIndex];\n\n        if (nodeDef.mesh !== undefined) {\n\n            if (meshReferences[nodeDef.mesh] === undefined) {\n\n                meshReferences[nodeDef.mesh] = meshUses[nodeDef.mesh] = 0;\n            }\n\n            meshReferences[nodeDef.mesh]++;\n\n            // Nothing in the mesh definition indicates whether it is\n            // a SkinnedMesh or Mesh. Use the node's mesh reference\n            // to mark SkinnedMesh if node has skin.\n            if (nodeDef.skin !== undefined) {\n\n                meshDefs[nodeDef.mesh].isSkinnedMesh = true;\n            }\n        }\n    }\n\n    this.json.meshReferences = meshReferences;\n    this.json.meshUses = meshUses;\n};\n\n/**\r\n * Requests the specified dependency asynchronously, with caching.\r\n * @param {string} type\r\n * @param {number} index\r\n * @return {Promise<Object>}\r\n */\nGLTFParser.prototype.getDependency = function (type, index) {\n\n    var cacheKey = type + ':' + index;\n    var dependency = this.cache.get(cacheKey);\n\n    if (!dependency) {\n\n        var fnName = 'load' + type.charAt(0).toUpperCase() + type.slice(1);\n        dependency = this[fnName](index);\n        this.cache.add(cacheKey, dependency);\n    }\n\n    return dependency;\n};\n\n/**\r\n * Requests all dependencies of the specified type asynchronously, with caching.\r\n * @param {string} type\r\n * @return {Promise<Array<Object>>}\r\n */\nGLTFParser.prototype.getDependencies = function (type) {\n\n    var dependencies = this.cache.get(type);\n\n    if (!dependencies) {\n\n        var parser = this;\n        var defs = this.json[type + (type === 'mesh' ? 'es' : 's')] || [];\n\n        dependencies = Promise.all(defs.map(function (def, index) {\n\n            return parser.getDependency(type, index);\n        }));\n\n        this.cache.add(type, dependencies);\n    }\n\n    return dependencies;\n};\n\n/**\r\n * Requests all multiple dependencies of the specified types asynchronously, with caching.\r\n * @param {Array<string>} types\r\n * @return {Promise<Object<Array<Object>>>}\r\n */\nGLTFParser.prototype.getMultiDependencies = function (types) {\n\n    var results = {};\n    var pendings = [];\n\n    for (var i = 0, il = types.length; i < il; i++) {\n\n        var type = types[i];\n        var value = this.getDependencies(type);\n\n        value = value.then(function (key, value) {\n\n            results[key] = value;\n        }.bind(this, type + (type === 'mesh' ? 'es' : 's')));\n\n        pendings.push(value);\n    }\n\n    return Promise.all(pendings).then(function () {\n\n        return results;\n    });\n};\n\n/**\r\n * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views\r\n * @param {number} bufferIndex\r\n * @return {Promise<ArrayBuffer>}\r\n */\nGLTFParser.prototype.loadBuffer = function (bufferIndex) {\n\n    var bufferDef = this.json.buffers[bufferIndex];\n    var loader = this.fileLoader;\n\n    if (bufferDef.type && bufferDef.type !== 'arraybuffer') {\n\n        throw new Error('GLTFLoader: ' + bufferDef.type + ' buffer type is not supported.');\n    }\n\n    // If present, GLB container is required to be the first buffer.\n    if (bufferDef.uri === undefined && bufferIndex === 0) {\n\n        return Promise.resolve(this.extensions[EXTENSIONS.KHR_BINARY_GLTF].body);\n    }\n\n    var options = this.options;\n\n    return new Promise(function (resolve, reject) {\n\n        loader.load(resolveURL(bufferDef.uri, options.path), resolve, undefined, function () {\n\n            reject(new Error('GLTFLoader: Failed to load buffer \"' + bufferDef.uri + '\".'));\n        });\n    });\n};\n\n/**\r\n * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views\r\n * @param {number} bufferViewIndex\r\n * @return {Promise<ArrayBuffer>}\r\n */\nGLTFParser.prototype.loadBufferView = function (bufferViewIndex) {\n\n    var bufferViewDef = this.json.bufferViews[bufferViewIndex];\n\n    return this.getDependency('buffer', bufferViewDef.buffer).then(function (buffer) {\n\n        var byteLength = bufferViewDef.byteLength || 0;\n        var byteOffset = bufferViewDef.byteOffset || 0;\n        return buffer.slice(byteOffset, byteOffset + byteLength);\n    });\n};\n\n/**\r\n * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#accessors\r\n * @param {number} accessorIndex\r\n * @return {Promise<THREE.BufferAttribute|THREE.InterleavedBufferAttribute>}\r\n */\nGLTFParser.prototype.loadAccessor = function (accessorIndex) {\n\n    var json = this.json;\n\n    var accessorDef = this.json.accessors[accessorIndex];\n\n    var pendingBufferViews = [];\n\n    if (accessorDef.bufferView !== undefined) {\n\n        pendingBufferViews.push(this.getDependency('bufferView', accessorDef.bufferView));\n    } else {\n\n        pendingBufferViews.push(null);\n    }\n\n    if (accessorDef.sparse !== undefined) {\n\n        pendingBufferViews.push(this.getDependency('bufferView', accessorDef.sparse.indices.bufferView));\n        pendingBufferViews.push(this.getDependency('bufferView', accessorDef.sparse.values.bufferView));\n    }\n\n    return Promise.all(pendingBufferViews).then(function (bufferViews) {\n\n        var bufferView = bufferViews[0];\n\n        var itemSize = WEBGL_TYPE_SIZES[accessorDef.type];\n        var TypedArray = WEBGL_COMPONENT_TYPES[accessorDef.componentType];\n\n        // For VEC3: itemSize is 3, elementBytes is 4, itemBytes is 12.\n        var elementBytes = TypedArray.BYTES_PER_ELEMENT;\n        var itemBytes = elementBytes * itemSize;\n        var byteStride = json.bufferViews[accessorDef.bufferView].byteStride;\n        var normalized = accessorDef.normalized === true;\n        var array, bufferAttribute;\n\n        // The buffer is not interleaved if the stride is the item size in bytes.\n        if (byteStride && byteStride !== itemBytes) {\n\n            // Use the full buffer if it's interleaved.\n            array = new TypedArray(bufferView);\n\n            // Integer parameters to IB/IBA are in array elements, not bytes.\n            var ib = new InterleavedBuffer(array, byteStride / elementBytes);\n\n            bufferAttribute = new InterleavedBufferAttribute(ib, itemSize, accessorDef.byteOffset / elementBytes, normalized);\n        } else {\n\n            if (bufferView === null) {\n\n                array = new TypedArray(accessorDef.count * itemSize);\n            } else {\n\n                array = new TypedArray(bufferView, accessorDef.byteOffset, accessorDef.count * itemSize);\n            }\n\n            bufferAttribute = new BufferAttribute(array, itemSize, normalized);\n        }\n\n        // https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#sparse-accessors\n        if (accessorDef.sparse !== undefined) {\n\n            var itemSizeIndices = WEBGL_TYPE_SIZES.SCALAR;\n            var TypedArrayIndices = WEBGL_COMPONENT_TYPES[accessorDef.sparse.indices.componentType];\n\n            var byteOffsetIndices = accessorDef.sparse.indices.byteOffset || 0;\n            var byteOffsetValues = accessorDef.sparse.values.byteOffset || 0;\n\n            var sparseIndices = new TypedArrayIndices(bufferViews[1], byteOffsetIndices, accessorDef.sparse.count * itemSizeIndices);\n            var sparseValues = new TypedArray(bufferViews[2], byteOffsetValues, accessorDef.sparse.count * itemSize);\n\n            if (bufferView !== null) {\n\n                // Avoid modifying the original ArrayBuffer, if the bufferView wasn't initialized with zeroes.\n                bufferAttribute.setArray(bufferAttribute.array.slice());\n            }\n\n            for (var i = 0, il = sparseIndices.length; i < il; i++) {\n\n                var index = sparseIndices[i];\n\n                bufferAttribute.setX(index, sparseValues[i * itemSize]);\n                if (itemSize >= 2) bufferAttribute.setY(index, sparseValues[i * itemSize + 1]);\n                if (itemSize >= 3) bufferAttribute.setZ(index, sparseValues[i * itemSize + 2]);\n                if (itemSize >= 4) bufferAttribute.setW(index, sparseValues[i * itemSize + 3]);\n                if (itemSize >= 5) throw new Error('GLTFLoader: Unsupported itemSize in sparse BufferAttribute.');\n            }\n        }\n\n        return bufferAttribute;\n    });\n};\n\n/**\r\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#textures\r\n * @param {number} textureIndex\r\n * @return {Promise<THREE.Texture>}\r\n */\nGLTFParser.prototype.loadTexture = function (textureIndex) {\n\n    var parser = this;\n    var json = this.json;\n    var options = this.options;\n    var textureLoader = this.textureLoader;\n\n    var URL = window.URL || window.webkitURL;\n\n    var textureDef = json.textures[textureIndex];\n    var source = json.images[textureDef.source];\n    var sourceURI = source.uri;\n    var isObjectURL = false;\n\n    if (source.bufferView !== undefined) {\n\n        // Load binary image data from bufferView, if provided.\n\n        sourceURI = parser.getDependency('bufferView', source.bufferView).then(function (bufferView) {\n\n            isObjectURL = true;\n            var blob = new Blob([bufferView], { type: source.mimeType });\n            sourceURI = URL.createObjectURL(blob);\n            return sourceURI;\n        });\n    }\n\n    return Promise.resolve(sourceURI).then(function (sourceURI) {\n\n        // Load Texture resource.\n\n        var loader = Loader.Handlers.get(sourceURI) || textureLoader;\n\n        return new Promise(function (resolve, reject) {\n\n            loader.load(resolveURL(sourceURI, options.path), resolve, undefined, reject);\n        });\n    }).then(function (texture) {\n\n        // Clean up resources and configure Texture.\n\n        if (isObjectURL === true) {\n\n            URL.revokeObjectURL(sourceURI);\n        }\n\n        texture.flipY = false;\n\n        if (textureDef.name !== undefined) texture.name = textureDef.name;\n\n        texture.format = textureDef.format !== undefined ? WEBGL_TEXTURE_FORMATS[textureDef.format] : RGBAFormat;\n\n        if (textureDef.internalFormat !== undefined && texture.format !== WEBGL_TEXTURE_FORMATS[textureDef.internalFormat]) {\n\n            console.warn('GLTFLoader: Three.js does not support texture internalFormat which is different from texture format. ' + 'internalFormat will be forced to be the same value as format.');\n        }\n\n        texture.type = textureDef.type !== undefined ? WEBGL_TEXTURE_DATATYPES[textureDef.type] : UnsignedByteType;\n\n        var samplers = json.samplers || {};\n        var sampler = samplers[textureDef.sampler] || {};\n\n        texture.magFilter = WEBGL_FILTERS[sampler.magFilter] || LinearFilter;\n        texture.minFilter = WEBGL_FILTERS[sampler.minFilter] || LinearMipMapLinearFilter;\n        texture.wrapS = WEBGL_WRAPPINGS[sampler.wrapS] || RepeatWrapping;\n        texture.wrapT = WEBGL_WRAPPINGS[sampler.wrapT] || RepeatWrapping;\n\n        return texture;\n    });\n};\n\n/**\r\n * Asynchronously assigns a texture to the given material parameters.\r\n * @param {Object} materialParams\r\n * @param {string} textureName\r\n * @param {number} textureIndex\r\n * @return {Promise}\r\n */\nGLTFParser.prototype.assignTexture = function (materialParams, textureName, textureIndex) {\n\n    return this.getDependency('texture', textureIndex).then(function (texture) {\n\n        materialParams[textureName] = texture;\n    });\n};\n\n/**\r\n * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#materials\r\n * @param {number} materialIndex\r\n * @return {Promise<THREE.Material>}\r\n */\nGLTFParser.prototype.loadMaterial = function (materialIndex) {\n\n    var parser = this;\n    var json = this.json;\n    var extensions = this.extensions;\n    var materialDef = this.json.materials[materialIndex];\n\n    var materialType;\n    var materialParams = {};\n    var materialExtensions = materialDef.extensions || {};\n\n    var pending = [];\n\n    if (materialExtensions[EXTENSIONS.KHR_MATERIALS_COMMON]) {\n\n        var khcExtension = extensions[EXTENSIONS.KHR_MATERIALS_COMMON];\n        materialType = khcExtension.getMaterialType(materialDef);\n        pending.push(khcExtension.extendParams(materialParams, materialDef, parser));\n    } else if (materialExtensions[EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS]) {\n\n        var sgExtension = extensions[EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS];\n        materialType = sgExtension.getMaterialType(materialDef);\n        pending.push(sgExtension.extendParams(materialParams, materialDef, parser));\n    } else if (materialDef.pbrMetallicRoughness !== undefined) {\n\n        // Specification:\n        // https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#metallic-roughness-material\n\n        materialType = MeshStandardMaterial;\n\n        var metallicRoughness = materialDef.pbrMetallicRoughness;\n\n        materialParams.color = new Color(1.0, 1.0, 1.0);\n        materialParams.opacity = 1.0;\n\n        if (Array.isArray(metallicRoughness.baseColorFactor)) {\n\n            var array = metallicRoughness.baseColorFactor;\n\n            materialParams.color.fromArray(array);\n            materialParams.opacity = array[3];\n        }\n\n        if (metallicRoughness.baseColorTexture !== undefined) {\n\n            pending.push(parser.assignTexture(materialParams, 'map', metallicRoughness.baseColorTexture.index));\n        }\n\n        materialParams.metalness = metallicRoughness.metallicFactor !== undefined ? metallicRoughness.metallicFactor : 1.0;\n        materialParams.roughness = metallicRoughness.roughnessFactor !== undefined ? metallicRoughness.roughnessFactor : 1.0;\n\n        if (metallicRoughness.metallicRoughnessTexture !== undefined) {\n\n            var textureIndex = metallicRoughness.metallicRoughnessTexture.index;\n            pending.push(parser.assignTexture(materialParams, 'metalnessMap', textureIndex));\n            pending.push(parser.assignTexture(materialParams, 'roughnessMap', textureIndex));\n        }\n    } else {\n\n        materialType = MeshPhongMaterial;\n    }\n\n    if (materialDef.doubleSided === true) {\n\n        materialParams.side = DoubleSide;\n    }\n\n    var alphaMode = materialDef.alphaMode || ALPHA_MODES.OPAQUE;\n\n    if (alphaMode === ALPHA_MODES.BLEND) {\n\n        materialParams.transparent = true;\n    } else {\n\n        materialParams.transparent = false;\n\n        if (alphaMode === ALPHA_MODES.MASK) {\n\n            materialParams.alphaTest = materialDef.alphaCutoff !== undefined ? materialDef.alphaCutoff : 0.5;\n        }\n    }\n\n    if (materialDef.normalTexture !== undefined) {\n\n        pending.push(parser.assignTexture(materialParams, 'normalMap', materialDef.normalTexture.index));\n\n        materialParams.normalScale = new Vector2(1, 1);\n\n        if (materialDef.normalTexture.scale !== undefined) {\n\n            materialParams.normalScale.set(materialDef.normalTexture.scale, materialDef.normalTexture.scale);\n        }\n    }\n\n    if (materialDef.occlusionTexture !== undefined) {\n\n        pending.push(parser.assignTexture(materialParams, 'aoMap', materialDef.occlusionTexture.index));\n\n        if (materialDef.occlusionTexture.strength !== undefined) {\n\n            materialParams.aoMapIntensity = materialDef.occlusionTexture.strength;\n        }\n    }\n\n    if (materialDef.emissiveFactor !== undefined) {\n\n        if (materialType === MeshBasicMaterial) {\n\n            materialParams.color = new Color().fromArray(materialDef.emissiveFactor);\n        } else {\n\n            materialParams.emissive = new Color().fromArray(materialDef.emissiveFactor);\n        }\n    }\n\n    if (materialDef.emissiveTexture !== undefined) {\n\n        if (materialType === MeshBasicMaterial) {\n\n            pending.push(parser.assignTexture(materialParams, 'map', materialDef.emissiveTexture.index));\n        } else {\n\n            pending.push(parser.assignTexture(materialParams, 'emissiveMap', materialDef.emissiveTexture.index));\n        }\n    }\n\n    return Promise.all(pending).then(function () {\n\n        var material;\n\n        if (materialType === ShaderMaterial) {\n\n            material = extensions[EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS].createMaterial(materialParams);\n        } else {\n\n            material = new materialType(materialParams);\n        }\n\n        if (materialDef.name !== undefined) material.name = materialDef.name;\n\n        // Normal map textures use OpenGL conventions:\n        // https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#materialnormaltexture\n        if (material.normalScale) {\n\n            material.normalScale.x = -material.normalScale.x;\n        }\n\n        // emissiveTexture and baseColorTexture use sRGB encoding.\n        if (material.map) material.map.encoding = sRGBEncoding;\n        if (material.emissiveMap) material.emissiveMap.encoding = sRGBEncoding;\n\n        if (materialDef.extras) material.userData = materialDef.extras;\n\n        return material;\n    });\n};\n\n/**\r\n * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#geometry\r\n * @param {Array<Object>} primitives\r\n * @return {Promise<Array<THREE.BufferGeometry>>}\r\n */\nGLTFParser.prototype.loadGeometries = function (primitives) {\n\n    var cache = this.primitiveCache;\n\n    return this.getDependencies('accessor').then(function (accessors) {\n\n        var geometries = [];\n\n        for (var i = 0, il = primitives.length; i < il; i++) {\n\n            var primitive = primitives[i];\n\n            // See if we've already created this geometry\n            var cached = getCachedGeometry(cache, primitive);\n\n            if (cached) {\n\n                // Use the cached geometry if it exists\n                geometries.push(cached);\n            } else {\n\n                // Otherwise create a new geometry\n                var geometry = new BufferGeometry();\n\n                var attributes = primitive.attributes;\n\n                for (var attributeId in attributes) {\n\n                    var attributeEntry = attributes[attributeId];\n\n                    var bufferAttribute = accessors[attributeEntry];\n\n                    switch (attributeId) {\n\n                        case 'POSITION':\n\n                            geometry.addAttribute('position', bufferAttribute);\n                            break;\n\n                        case 'NORMAL':\n\n                            geometry.addAttribute('normal', bufferAttribute);\n                            break;\n\n                        case 'TEXCOORD_0':\n                        case 'TEXCOORD0':\n                        case 'TEXCOORD':\n\n                            geometry.addAttribute('uv', bufferAttribute);\n                            break;\n\n                        case 'TEXCOORD_1':\n\n                            geometry.addAttribute('uv2', bufferAttribute);\n                            break;\n\n                        case 'COLOR_0':\n                        case 'COLOR0':\n                        case 'COLOR':\n\n                            geometry.addAttribute('color', bufferAttribute);\n                            break;\n\n                        case 'WEIGHTS_0':\n                        case 'WEIGHT':\n                            // WEIGHT semantic deprecated.\n\n                            geometry.addAttribute('skinWeight', bufferAttribute);\n                            break;\n\n                        case 'JOINTS_0':\n                        case 'JOINT':\n                            // JOINT semantic deprecated.\n\n                            geometry.addAttribute('skinIndex', bufferAttribute);\n                            break;\n\n                    }\n                }\n\n                if (primitive.indices !== undefined) {\n\n                    geometry.setIndex(accessors[primitive.indices]);\n                }\n\n                // Cache this geometry\n                cache.push({\n\n                    primitive: primitive,\n                    geometry: geometry\n\n                });\n\n                geometries.push(geometry);\n            }\n        }\n\n        return geometries;\n    });\n};\n\n/**\r\n * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#meshes\r\n * @param {number} meshIndex\r\n * @return {Promise<THREE.Group|THREE.Mesh|THREE.SkinnedMesh>}\r\n */\nGLTFParser.prototype.loadMesh = function (meshIndex) {\n\n    var scope = this;\n    var json = this.json;\n    var extensions = this.extensions;\n\n    var meshDef = this.json.meshes[meshIndex];\n\n    return this.getMultiDependencies(['accessor', 'material']).then(function (dependencies) {\n\n        var group = new Group();\n\n        var primitives = meshDef.primitives;\n\n        return scope.loadGeometries(primitives).then(function (geometries) {\n\n            for (var i = 0, il = primitives.length; i < il; i++) {\n\n                var primitive = primitives[i];\n                var geometry = geometries[i];\n\n                var material = primitive.material === undefined ? createDefaultMaterial() : dependencies.materials[primitive.material];\n\n                if (material.aoMap && geometry.attributes.uv2 === undefined && geometry.attributes.uv !== undefined) {\n\n                    console.log('GLTFLoader: Duplicating UVs to support aoMap.');\n                    geometry.addAttribute('uv2', new BufferAttribute(geometry.attributes.uv.array, 2));\n                }\n\n                // If the material will be modified later on, clone it now.\n                var useVertexColors = geometry.attributes.color !== undefined;\n                var useFlatShading = geometry.attributes.normal === undefined;\n                var useSkinning = meshDef.isSkinnedMesh === true;\n                var useMorphTargets = primitive.targets !== undefined;\n\n                if (useVertexColors || useFlatShading || useSkinning || useMorphTargets) {\n\n                    if (material.isGLTFSpecularGlossinessMaterial) {\n\n                        var specGlossExtension = extensions[EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS];\n                        material = specGlossExtension.cloneMaterial(material);\n                    } else {\n\n                        material = material.clone();\n                    }\n                }\n\n                if (useVertexColors) {\n\n                    material.vertexColors = VertexColors;\n                    material.needsUpdate = true;\n                }\n\n                if (useFlatShading) {\n\n                    material.flatShading = true;\n                }\n\n                var mesh;\n\n                if (primitive.mode === WEBGL_CONSTANTS.TRIANGLES || primitive.mode === WEBGL_CONSTANTS.TRIANGLE_STRIP || primitive.mode === WEBGL_CONSTANTS.TRIANGLE_FAN || primitive.mode === undefined) {\n\n                    if (useSkinning) {\n\n                        mesh = new SkinnedMesh(geometry, material);\n                        material.skinning = true;\n                    } else {\n\n                        mesh = new Mesh(geometry, material);\n                    }\n\n                    if (primitive.mode === WEBGL_CONSTANTS.TRIANGLE_STRIP) {\n\n                        mesh.drawMode = TriangleStripDrawMode;\n                    } else if (primitive.mode === WEBGL_CONSTANTS.TRIANGLE_FAN) {\n\n                        mesh.drawMode = TriangleFanDrawMode;\n                    }\n                } else if (primitive.mode === WEBGL_CONSTANTS.LINES) {\n\n                    mesh = new LineSegments(geometry, material);\n                } else if (primitive.mode === WEBGL_CONSTANTS.LINE_STRIP) {\n\n                    mesh = new Line(geometry, material);\n                } else if (primitive.mode === WEBGL_CONSTANTS.LINE_LOOP) {\n\n                    mesh = new LineLoop(geometry, material);\n                } else if (primitive.mode === WEBGL_CONSTANTS.POINTS) {\n\n                    mesh = new Points(geometry, material);\n                } else {\n\n                    throw new Error('GLTFLoader: Primitive mode unsupported: ' + primitive.mode);\n                }\n\n                mesh.name = meshDef.name || 'mesh_' + meshIndex;\n\n                if (useMorphTargets) {\n\n                    addMorphTargets(mesh, meshDef, primitive, dependencies.accessors);\n                }\n\n                if (meshDef.extras !== undefined) mesh.userData = meshDef.extras;\n                if (primitive.extras !== undefined) mesh.geometry.userData = primitive.extras;\n\n                // for Specular-Glossiness.\n                if (material.isGLTFSpecularGlossinessMaterial === true) {\n\n                    mesh.onBeforeRender = extensions[EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS].refreshUniforms;\n                }\n\n                if (primitives.length > 1) {\n\n                    mesh.name += '_' + i;\n\n                    group.add(mesh);\n                } else {\n\n                    return mesh;\n                }\n            }\n\n            return group;\n        });\n    });\n};\n\n/**\r\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#cameras\r\n * @param {number} cameraIndex\r\n * @return {Promise<THREE.Camera>}\r\n */\nGLTFParser.prototype.loadCamera = function (cameraIndex) {\n\n    var camera;\n    var cameraDef = this.json.cameras[cameraIndex];\n    var params = cameraDef[cameraDef.type];\n\n    if (!params) {\n\n        console.warn('GLTFLoader: Missing camera parameters.');\n        return;\n    }\n\n    if (cameraDef.type === 'perspective') {\n\n        var aspectRatio = params.aspectRatio || 1;\n        var xfov = params.yfov * aspectRatio;\n\n        camera = new PerspectiveCamera(_Math.radToDeg(xfov), aspectRatio, params.znear || 1, params.zfar || 2e6);\n    } else if (cameraDef.type === 'orthographic') {\n\n        camera = new OrthographicCamera(params.xmag / -2, params.xmag / 2, params.ymag / 2, params.ymag / -2, params.znear, params.zfar);\n    }\n\n    if (cameraDef.name !== undefined) camera.name = cameraDef.name;\n    if (cameraDef.extras) camera.userData = cameraDef.extras;\n\n    return Promise.resolve(camera);\n};\n\n/**\r\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#skins\r\n * @param {number} skinIndex\r\n * @return {Promise<Object>}\r\n */\nGLTFParser.prototype.loadSkin = function (skinIndex) {\n\n    var skinDef = this.json.skins[skinIndex];\n\n    var skinEntry = { joints: skinDef.joints };\n\n    if (skinDef.inverseBindMatrices === undefined) {\n\n        return Promise.resolve(skinEntry);\n    }\n\n    return this.getDependency('accessor', skinDef.inverseBindMatrices).then(function (accessor) {\n\n        skinEntry.inverseBindMatrices = accessor;\n\n        return skinEntry;\n    });\n};\n\n/**\r\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#animations\r\n * @param {number} animationIndex\r\n * @return {Promise<THREE.AnimationClip>}\r\n */\nGLTFParser.prototype.loadAnimation = function (animationIndex) {\n\n    var json = this.json;\n\n    var animationDef = this.json.animations[animationIndex];\n\n    return this.getMultiDependencies(['accessor', 'node']).then(function (dependencies) {\n\n        var tracks = [];\n\n        for (var i = 0, il = animationDef.channels.length; i < il; i++) {\n\n            var channel = animationDef.channels[i];\n            var sampler = animationDef.samplers[channel.sampler];\n\n            if (sampler) {\n\n                var target = channel.target;\n                var name = target.node !== undefined ? target.node : target.id; // NOTE: target.id is deprecated.\n                var input = animationDef.parameters !== undefined ? animationDef.parameters[sampler.input] : sampler.input;\n                var output = animationDef.parameters !== undefined ? animationDef.parameters[sampler.output] : sampler.output;\n\n                var inputAccessor = dependencies.accessors[input];\n                var outputAccessor = dependencies.accessors[output];\n\n                var node = dependencies.nodes[name];\n\n                if (node) {\n\n                    node.updateMatrix();\n                    node.matrixAutoUpdate = true;\n\n                    var TypedKeyframeTrack;\n\n                    switch (PATH_PROPERTIES[target.path]) {\n\n                        case PATH_PROPERTIES.weights:\n\n                            TypedKeyframeTrack = NumberKeyframeTrack;\n                            break;\n\n                        case PATH_PROPERTIES.rotation:\n\n                            TypedKeyframeTrack = QuaternionKeyframeTrack;\n                            break;\n\n                        case PATH_PROPERTIES.position:\n                        case PATH_PROPERTIES.scale:\n                        default:\n\n                            TypedKeyframeTrack = VectorKeyframeTrack;\n                            break;\n\n                    }\n\n                    var targetName = node.name ? node.name : node.uuid;\n\n                    if (sampler.interpolation === 'CUBICSPLINE') {\n\n                        var itemSize = outputAccessor.itemSize;\n                        var TypedArray = outputAccessor.array.constructor;\n                        var outputAccessorValues = new TypedArray(outputAccessor.count * itemSize / 3);\n\n                        // Layout of keyframe output values for CUBICSPLINE animations:\n                        //\n                        //   [ inTangent1, splineVertex1, outTangent1, inTangent2, splineVertex2, ... ]\n                        //\n                        // THREE.KeyframeTrack infers tangents from the spline vertices when interpolating:\n                        // those values are extracted below. This still guarantees smooth curves, but does\n                        // throw away more precise information in the tangents. In the future, consider\n                        // re-sampling at a higher framerate using the tangents provided.\n                        //\n                        // See: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#appendix-c-spline-interpolation\n\n                        for (var j = 0, jl = outputAccessor.count; j < jl; j += 3) {\n\n                            outputAccessorValues[j * itemSize / 3] = outputAccessor.getX(j + 1);\n                            if (itemSize > 1) outputAccessorValues[j * itemSize / 3 + 1] = outputAccessor.getY(j + 1);\n                            if (itemSize > 2) outputAccessorValues[j * itemSize / 3 + 2] = outputAccessor.getZ(j + 1);\n                            if (itemSize > 3) outputAccessorValues[j * itemSize / 3 + 3] = outputAccessor.getW(j + 1);\n                        }\n\n                        outputAccessor = new BufferAttribute(outputAccessorValues, itemSize / 3, outputAccessor.normalized);\n                    }\n\n                    var interpolation = sampler.interpolation !== undefined ? INTERPOLATION[sampler.interpolation] : InterpolateLinear;\n\n                    var targetNames = [];\n\n                    if (PATH_PROPERTIES[target.path] === PATH_PROPERTIES.weights) {\n\n                        // node should be THREE.Group here but\n                        // PATH_PROPERTIES.weights(morphTargetInfluences) should be\n                        // the property of a mesh object under node.\n                        // So finding targets here.\n\n                        node.traverse(function (object) {\n\n                            if (object.isMesh === true && object.material.morphTargets === true) {\n\n                                targetNames.push(object.name ? object.name : object.uuid);\n                            }\n                        });\n                    } else {\n\n                        targetNames.push(targetName);\n                    }\n\n                    // KeyframeTrack.optimize() will modify given 'times' and 'values'\n                    // buffers before creating a truncated copy to keep. Because buffers may\n                    // be reused by other tracks, make copies here.\n                    for (var j = 0, jl = targetNames.length; j < jl; j++) {\n\n                        tracks.push(new TypedKeyframeTrack(targetNames[j] + '.' + PATH_PROPERTIES[target.path], AnimationUtils.arraySlice(inputAccessor.array, 0), AnimationUtils.arraySlice(outputAccessor.array, 0), interpolation));\n                    }\n                }\n            }\n        }\n\n        var name = animationDef.name !== undefined ? animationDef.name : 'animation_' + animationIndex;\n\n        return new AnimationClip(name, undefined, tracks);\n    });\n};\n\n/**\r\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#nodes-and-hierarchy\r\n * @param {number} nodeIndex\r\n * @return {Promise<THREE.Object3D>}\r\n */\nGLTFParser.prototype.loadNode = function (nodeIndex) {\n\n    var json = this.json;\n    var extensions = this.extensions;\n\n    var meshReferences = this.json.meshReferences;\n    var meshUses = this.json.meshUses;\n\n    var nodeDef = this.json.nodes[nodeIndex];\n\n    return this.getMultiDependencies(['mesh', 'skin', 'camera']).then(function (dependencies) {\n\n        var node;\n\n        if (nodeDef.isBone === true) {\n\n            node = new Bone();\n        } else if (nodeDef.mesh !== undefined) {\n\n            var mesh = dependencies.meshes[nodeDef.mesh];\n\n            node = mesh.clone();\n\n            // for Specular-Glossiness\n            if (mesh.isGroup === true) {\n\n                for (var i = 0, il = mesh.children.length; i < il; i++) {\n\n                    var child = mesh.children[i];\n\n                    if (child.material && child.material.isGLTFSpecularGlossinessMaterial === true) {\n\n                        node.children[i].onBeforeRender = child.onBeforeRender;\n                    }\n                }\n            } else {\n\n                if (mesh.material && mesh.material.isGLTFSpecularGlossinessMaterial === true) {\n\n                    node.onBeforeRender = mesh.onBeforeRender;\n                }\n            }\n\n            if (meshReferences[nodeDef.mesh] > 1) {\n\n                node.name += '_instance_' + meshUses[nodeDef.mesh]++;\n            }\n        } else if (nodeDef.camera !== undefined) {\n\n            node = dependencies.cameras[nodeDef.camera];\n        } else if (nodeDef.extensions && nodeDef.extensions[EXTENSIONS.KHR_LIGHTS] && nodeDef.extensions[EXTENSIONS.KHR_LIGHTS].light !== undefined) {\n\n            var lights = extensions[EXTENSIONS.KHR_LIGHTS].lights;\n            node = lights[nodeDef.extensions[EXTENSIONS.KHR_LIGHTS].light];\n        } else {\n\n            node = new Object3D();\n        }\n\n        if (nodeDef.name !== undefined) {\n\n            node.name = PropertyBinding.sanitizeNodeName(nodeDef.name);\n        }\n\n        if (nodeDef.extras) node.userData = nodeDef.extras;\n\n        if (nodeDef.matrix !== undefined) {\n\n            var matrix = new Matrix4();\n            matrix.fromArray(nodeDef.matrix);\n            node.applyMatrix(matrix);\n        } else {\n\n            if (nodeDef.translation !== undefined) {\n\n                node.position.fromArray(nodeDef.translation);\n            }\n\n            if (nodeDef.rotation !== undefined) {\n\n                node.quaternion.fromArray(nodeDef.rotation);\n            }\n\n            if (nodeDef.scale !== undefined) {\n\n                node.scale.fromArray(nodeDef.scale);\n            }\n        }\n\n        return node;\n    });\n};\n\n/**\r\n * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#scenes\r\n * @param {number} sceneIndex\r\n * @return {Promise<THREE.Scene>}\r\n */\nGLTFParser.prototype.loadScene = function () {\n\n    // scene node hierachy builder\n\n    function buildNodeHierachy(nodeId, parentObject, json, allNodes, skins) {\n\n        var node = allNodes[nodeId];\n        var nodeDef = json.nodes[nodeId];\n\n        // build skeleton here as well\n\n        if (nodeDef.skin !== undefined) {\n\n            var meshes = node.isGroup === true ? node.children : [node];\n\n            for (var i = 0, il = meshes.length; i < il; i++) {\n\n                var mesh = meshes[i];\n                var skinEntry = skins[nodeDef.skin];\n\n                var bones = [];\n                var boneInverses = [];\n\n                for (var j = 0, jl = skinEntry.joints.length; j < jl; j++) {\n\n                    var jointId = skinEntry.joints[j];\n                    var jointNode = allNodes[jointId];\n\n                    if (jointNode) {\n\n                        bones.push(jointNode);\n\n                        var mat = new Matrix4();\n\n                        if (skinEntry.inverseBindMatrices !== undefined) {\n\n                            mat.fromArray(skinEntry.inverseBindMatrices.array, j * 16);\n                        }\n\n                        boneInverses.push(mat);\n                    } else {\n\n                        console.warn('GLTFLoader: Joint \"%s\" could not be found.', jointId);\n                    }\n                }\n\n                mesh.bind(new Skeleton(bones, boneInverses), mesh.matrixWorld);\n            }\n        }\n\n        // build node hierachy\n\n        parentObject.add(node);\n\n        if (nodeDef.children) {\n\n            var children = nodeDef.children;\n\n            for (var i = 0, il = children.length; i < il; i++) {\n\n                var child = children[i];\n                buildNodeHierachy(child, node, json, allNodes, skins);\n            }\n        }\n    }\n\n    return function loadScene(sceneIndex) {\n\n        var json = this.json;\n        var extensions = this.extensions;\n        var sceneDef = this.json.scenes[sceneIndex];\n\n        return this.getMultiDependencies(['node', 'skin']).then(function (dependencies) {\n\n            var scene = new Scene();\n            if (sceneDef.name !== undefined) scene.name = sceneDef.name;\n\n            if (sceneDef.extras) scene.userData = sceneDef.extras;\n\n            var nodeIds = sceneDef.nodes || [];\n\n            for (var i = 0, il = nodeIds.length; i < il; i++) {\n\n                buildNodeHierachy(nodeIds[i], scene, json, dependencies.nodes, dependencies.skins);\n            }\n\n            // Ambient lighting, if present, is always attached to the scene root.\n            if (sceneDef.extensions && sceneDef.extensions[EXTENSIONS.KHR_LIGHTS] && sceneDef.extensions[EXTENSIONS.KHR_LIGHTS].light !== undefined) {\n\n                var lights = extensions[EXTENSIONS.KHR_LIGHTS].lights;\n                scene.add(lights[sceneDef.extensions[EXTENSIONS.KHR_LIGHTS].light]);\n            }\n\n            return scene;\n        });\n    };\n}();\n\nvar ModelGltf = {\n    name: 'model-gltf',\n    mixins: [mixin],\n    props: {\n        lights: {\n            type: Array,\n            default: function _default() {\n                return [{\n                    type: 'AmbientLight',\n                    color: 0xaaaaaa\n                }, {\n                    type: 'DirectionalLight',\n                    position: { x: 1, y: 1, z: 1 },\n                    color: 0xffffff,\n                    intensity: 0.8\n                }];\n            }\n        }\n    },\n    data: function data() {\n\n        var loader = new GLTFLoader();\n        loader.setCrossOrigin(this.crossOrigin);\n\n        return {\n            loader: loader\n        };\n    },\n\n    methods: {\n        load: function load() {\n            var _this = this;\n\n            if (!this.src) return;\n\n            if (this.object) {\n                this.wrapper.remove(this.object);\n            }\n\n            this.loader.load(this.src, function (data) {\n\n                _this.addObject(data.scene);\n\n                _this.$emit('on-load');\n            }, function (xhr) {\n\n                _this.$emit('on-progress', xhr);\n            }, function (err) {\n\n                console.log(err);\n\n                _this.$emit('on-error', err);\n            });\n        }\n    }\n};\n\n// alias\nvar ModelJson = Vue.extend(ModelThree, {\n    name: 'model-json'\n});\n\nvar ModelDae = Vue.extend(ModelCollada, {\n    name: 'model-dae'\n});\n\nvar components = [ModelObj, ModelThree, ModelJson, ModelStl, ModelPly, ModelCollada, ModelDae, ModelGltf];\n\nvar install = function install(Vue$$1) {\n    components.map(function (component) {\n        Vue$$1.component(component.name, component);\n    });\n};\n\nif (typeof window !== 'undefined' && window.Vue) {\n    install(window.Vue);\n}\n\nvar index = {\n    install: install,\n    ModelObj: ModelObj,\n    ModelThree: ModelThree,\n    ModelJson: ModelJson,\n    ModelStl: ModelStl,\n    ModelPly: ModelPly,\n    ModelCollada: ModelCollada,\n    ModelDae: ModelDae,\n    ModelGltf: ModelGltf\n};\n\nexport default index;\nexport { install, ModelObj, ModelThree, ModelJson, ModelStl, ModelPly, ModelCollada, ModelDae, ModelGltf };\n//# sourceMappingURL=vue-3d-model.esm.js.map\n","// false -> Array#indexOf\n// true  -> Array#includes\nvar toIObject = require('./_to-iobject');\nvar toLength = require('./_to-length');\nvar toAbsoluteIndex = require('./_to-absolute-index');\nmodule.exports = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) if (IS_INCLUDES || index in O) {\n      if (O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n","module.exports = !require('./_descriptors') && !require('./_fails')(function () {\n  return Object.defineProperty(require('./_dom-create')('div'), 'a', { get: function () { return 7; } }).a != 7;\n});\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","var id = 0;\nvar px = Math.random();\nmodule.exports = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n","'use strict';\nvar addToUnscopables = require('./_add-to-unscopables');\nvar step = require('./_iter-step');\nvar Iterators = require('./_iterators');\nvar toIObject = require('./_to-iobject');\n\n// 22.1.3.4 Array.prototype.entries()\n// 22.1.3.13 Array.prototype.keys()\n// 22.1.3.29 Array.prototype.values()\n// 22.1.3.30 Array.prototype[@@iterator]()\nmodule.exports = require('./_iter-define')(Array, 'Array', function (iterated, kind) {\n  this._t = toIObject(iterated); // target\n  this._i = 0;                   // next index\n  this._k = kind;                // kind\n// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n}, function () {\n  var O = this._t;\n  var kind = this._k;\n  var index = this._i++;\n  if (!O || index >= O.length) {\n    this._t = undefined;\n    return step(1);\n  }\n  if (kind == 'keys') return step(0, index);\n  if (kind == 'values') return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\nIterators.Arguments = Iterators.Array;\n\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n","var isObject = require('./_is-object');\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n","var has = require('./_has');\nvar toIObject = require('./_to-iobject');\nvar arrayIndexOf = require('./_array-includes')(false);\nvar IE_PROTO = require('./_shared-key')('IE_PROTO');\n\nmodule.exports = function (object, names) {\n  var O = toIObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (has(O, key = names[i++])) {\n    ~arrayIndexOf(result, key) || result.push(key);\n  }\n  return result;\n};\n","module.exports = function (it) {\n  return typeof it === 'object' ? it !== null : typeof it === 'function';\n};\n","module.exports = function (done, value) {\n  return { value: value, done: !!done };\n};\n","module.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n","var redefine = require('./_redefine');\nmodule.exports = function (target, src, safe) {\n  for (var key in src) redefine(target, key, src[key], safe);\n  return target;\n};\n","// IE 8- don't enum bug keys\nmodule.exports = (\n  'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'\n).split(',');\n","// 7.3.20 SpeciesConstructor(O, defaultConstructor)\nvar anObject = require('./_an-object');\nvar aFunction = require('./_a-function');\nvar SPECIES = require('./_wks')('species');\nmodule.exports = function (O, D) {\n  var C = anObject(O).constructor;\n  var S;\n  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);\n};\n","module.exports = function (it, Constructor, name, forbiddenField) {\n  if (!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)) {\n    throw TypeError(name + ': incorrect invocation!');\n  } return it;\n};\n","/*!\n * Vue YouTube Embed version 2.2.1\n * under MIT License copyright 2018 kaorun343\n */\n// fork from https://github.com/brandly/angular-youtube-embed\n\nif (!String.prototype.includes) {\n  String.prototype.includes = function () {\n    return String.prototype.indexOf.apply(this, arguments) !== -1\n  };\n}\n\nvar youtubeRegexp = /https?:\\/\\/(?:[0-9A-Z-]+\\.)?(?:youtu\\.be\\/|youtube(?:-nocookie)?\\.com\\S*[^\\w\\s-])([\\w-]{11})(?=[^\\w-]|$)(?![?=&+%\\w.-]*(?:['\"][^<>]*>|<\\/a>))[?=&+%\\w.-]*/ig;\nvar timeRegexp = /t=(\\d+)[ms]?(\\d+)?s?/;\n\n/**\n * get id from url\n * @param  {string} url url\n * @return {string}     id\n */\nfunction getIdFromURL (url) {\n  var id = url.replace(youtubeRegexp, '$1');\n\n  if (id.includes(';')) {\n    var pieces = id.split(';');\n\n    if (pieces[1].includes('%')) {\n      var uriComponent = decodeURIComponent(pieces[1]);\n      id = (\"http://youtube.com\" + uriComponent).replace(youtubeRegexp, '$1');\n    } else {\n      id = pieces[0];\n    }\n  } else if (id.includes('#')) {\n    id = id.split('#')[0];\n  }\n\n  return id\n}\n\n/**\n * get time from url\n * @param  {string} url url\n * @return {number}     time\n */\nfunction getTimeFromURL (url) {\n  if ( url === void 0 ) url = '';\n\n  var times = url.match(timeRegexp);\n\n  if (!times) {\n    return 0\n  }\n\n  var full = times[0];\n  var minutes = times[1];\n  var seconds = times[2];\n\n  if (typeof seconds !== 'undefined') {\n    seconds = parseInt(seconds, 10);\n    minutes = parseInt(minutes, 10);\n  } else if (full.includes('m')) {\n    minutes = parseInt(minutes, 10);\n    seconds = 0;\n  } else {\n    seconds = parseInt(minutes, 10);\n    minutes = 0;\n  }\n\n  return seconds + (minutes * 60)\n}\n\nvar container = {\n  scripts: [],\n  events: {},\n\n  run: function run () {\n    var this$1 = this;\n\n    this.scripts.forEach(function (callback) {\n      callback(this$1.YT);\n    });\n    this.scripts = [];\n  },\n\n  register: function register (callback) {\n    var this$1 = this;\n\n    if (this.YT) {\n      this.Vue.nextTick(function () {\n        callback(this$1.YT);\n      });\n    } else {\n      this.scripts.push(callback);\n    }\n  }\n};\n\nvar pid = 0;\n\nvar YouTubePlayer = {\n  props: {\n    playerHeight: {\n      type: [String, Number],\n      default: '390'\n    },\n    playerWidth: {\n      type: [String, Number],\n      default: '640'\n    },\n    playerVars: {\n      type: Object,\n      default: function () { return ({ autoplay: 0, time: 0 }); }\n    },\n    videoId: {\n      type: String\n    },\n    mute: {\n      type: Boolean,\n      default: false\n    }\n  },\n  render: function render (h) {\n    return h('div', [\n      h('div', { attrs: { id: this.elementId }})\n    ])\n  },\n  template: '<div><div :id=\"elementId\"></div></div>',\n  watch: {\n    playerWidth: 'setSize',\n    playerHeight: 'setSize',\n    videoId: 'update',\n    mute: 'setMute'\n  },\n  data: function data () {\n    pid += 1;\n    return {\n      elementId: (\"youtube-player-\" + pid),\n      player: {}\n    }\n  },\n  methods: {\n    setSize: function setSize () {\n      this.player.setSize(this.playerWidth, this.playerHeight);\n    },\n    setMute: function setMute (value) {\n      if (value) {\n        this.player.mute();\n      } else {\n        this.player.unMute();\n      }\n    },\n    update: function update (videoId) {\n      var name = (this.playerVars.autoplay ? 'load' : 'cue') + \"VideoById\";\n      if (this.player.hasOwnProperty(name)) {\n        this.player[name](videoId);\n      } else {\n        setTimeout(function () {\n          this.update(videoId);\n        }.bind(this), 100);\n      }\n    }\n  },\n  mounted: function mounted () {\n    var this$1 = this;\n\n    container.register(function (YouTube) {\n      var ref = this$1;\n      var playerHeight = ref.playerHeight;\n      var playerWidth = ref.playerWidth;\n      var playerVars = ref.playerVars;\n      var videoId = ref.videoId;\n\n      this$1.player = new YouTube.Player(this$1.elementId, {\n        height: playerHeight,\n        width: playerWidth,\n        playerVars: playerVars,\n        videoId: videoId,\n        events: {\n          onReady: function (event) {\n            this$1.setMute(this$1.mute);\n            this$1.$emit('ready', event);\n          },\n          onStateChange: function (event) {\n            if (event.data !== -1) {\n              this$1.$emit(container.events[event.data], event);\n            }\n          },\n          onError: function (event) {\n            this$1.$emit('error', event);\n          }\n        }\n      });\n    });\n  },\n  beforeDestroy: function beforeDestroy () {\n    if (this.player !== null && this.player.destroy) {\n      this.player.destroy();\n    }\n    delete this.player;\n  }\n};\n\nvar index = {\n  install: function install (Vue, options) {\n    if ( options === void 0 ) options = {};\n\n    container.Vue = Vue;\n    YouTubePlayer.ready = YouTubePlayer.mounted;\n    var global = options.global; if ( global === void 0 ) global = true;\n    var componentId = options.componentId; if ( componentId === void 0 ) componentId = 'youtube';\n\n    if (global) {\n      // if there is a global component with \"youtube\" identifier already taken\n      // then we should let user to pass a new identifier.\n      Vue.component(componentId, YouTubePlayer);\n    }\n    Vue.prototype.$youtube = { getIdFromURL: getIdFromURL, getTimeFromURL: getTimeFromURL };\n\n    if (typeof window !== 'undefined' && typeof document !== 'undefined') {\n      var tag = document.createElement('script');\n      tag.src = 'https://www.youtube.com/player_api';\n      var firstScriptTag = document.getElementsByTagName('script')[0];\n      firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n\n      window.onYouTubeIframeAPIReady = function () {\n        container.YT = YT;\n        var PlayerState = YT.PlayerState;\n\n        container.events[PlayerState.ENDED] = 'ended';\n        container.events[PlayerState.PLAYING] = 'playing';\n        container.events[PlayerState.PAUSED] = 'paused';\n        container.events[PlayerState.BUFFERING] = 'buffering';\n        container.events[PlayerState.CUED] = 'cued';\n\n        container.Vue.nextTick(function () {\n          container.run();\n        });\n      };\n    }\n  }\n};\n\nexport default index;\nexport { YouTubePlayer, getIdFromURL, getTimeFromURL };\n","var document = require('./_global').document;\nmodule.exports = document && document.documentElement;\n"],"sourceRoot":""}